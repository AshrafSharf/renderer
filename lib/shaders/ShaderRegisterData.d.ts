import { ShaderRegisterElement } from "../shaders/ShaderRegisterElement";
/**
 * ShaderRegisterData contains the "named" registers, generated by the compiler and to be passed on to the methods.
 */
export declare class ShaderRegisterData {
    uvVarying: ShaderRegisterElement;
    secondaryUVVarying: ShaderRegisterElement;
    shadowTarget: ShaderRegisterElement;
    shadedTarget: ShaderRegisterElement;
    globalPositionVertex: ShaderRegisterElement;
    globalPositionVarying: ShaderRegisterElement;
    animatedPosition: ShaderRegisterElement;
    positionVarying: ShaderRegisterElement;
    curvesInput: ShaderRegisterElement;
    curvesVarying: ShaderRegisterElement;
    normalInput: ShaderRegisterElement;
    animatedNormal: ShaderRegisterElement;
    normalVarying: ShaderRegisterElement;
    normalFragment: ShaderRegisterElement;
    tangentInput: ShaderRegisterElement;
    animatedTangent: ShaderRegisterElement;
    tangentVarying: ShaderRegisterElement;
    bitangentVarying: ShaderRegisterElement;
    colorInput: ShaderRegisterElement;
    colorVarying: ShaderRegisterElement;
    commons: ShaderRegisterElement;
    projectionFragment: ShaderRegisterElement;
    viewDirVarying: ShaderRegisterElement;
    viewDirFragment: ShaderRegisterElement;
    bitangent: ShaderRegisterElement;
    textures: Array<ShaderRegisterElement>;
    animatableAttributes: Array<ShaderRegisterElement>;
    animationTargetRegisters: Array<ShaderRegisterElement>;
    uvSource: ShaderRegisterElement;
    uvTarget: ShaderRegisterElement;
    constructor();
}
