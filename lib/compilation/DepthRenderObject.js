var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var RenderObjectBase = require("awayjs-renderergl/lib/compilation/RenderObjectBase");
var DepthPass = require("awayjs-renderergl/lib/passes/DepthPass");
/**
 * DepthRenderObject forms an abstract base class for the default shaded materials provided by Stage,
 * using material methods to define their appearance.
 */
var DepthRenderObject = (function (_super) {
    __extends(DepthRenderObject, _super);
    function DepthRenderObject(pool, renderObjectOwner, renderableClass, stage) {
        _super.call(this, pool, renderObjectOwner, renderableClass, stage);
        this._pAddScreenPass(new DepthPass(this, renderObjectOwner, renderableClass, this._stage));
    }
    /**
     *
     */
    DepthRenderObject.id = "depth";
    return DepthRenderObject;
})(RenderObjectBase);
module.exports = DepthRenderObject;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9jb21waWxhdGlvbi9kZXB0aHJlbmRlcm9iamVjdC50cyJdLCJuYW1lcyI6WyJEZXB0aFJlbmRlck9iamVjdCIsIkRlcHRoUmVuZGVyT2JqZWN0LmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQSxJQUFPLGdCQUFnQixXQUFjLG9EQUFvRCxDQUFDLENBQUM7QUFHM0YsSUFBTyxTQUFTLFdBQWUsd0NBQXdDLENBQUMsQ0FBQztBQUV6RSxBQUlBOzs7R0FERztJQUNHLGlCQUFpQjtJQUFTQSxVQUExQkEsaUJBQWlCQSxVQUF5QkE7SUFPL0NBLFNBUEtBLGlCQUFpQkEsQ0FPVkEsSUFBcUJBLEVBQUVBLGlCQUFvQ0EsRUFBRUEsZUFBZ0NBLEVBQUVBLEtBQVdBO1FBRXJIQyxrQkFBTUEsSUFBSUEsRUFBRUEsaUJBQWlCQSxFQUFFQSxlQUFlQSxFQUFFQSxLQUFLQSxDQUFDQSxDQUFDQTtRQUV2REEsSUFBSUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsSUFBSUEsU0FBU0EsQ0FBQ0EsSUFBSUEsRUFBRUEsaUJBQWlCQSxFQUFFQSxlQUFlQSxFQUFFQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUM1RkEsQ0FBQ0E7SUFWREQ7O09BRUdBO0lBQ1dBLG9CQUFFQSxHQUFVQSxPQUFPQSxDQUFDQTtJQVFuQ0Esd0JBQUNBO0FBQURBLENBYkEsQUFhQ0EsRUFiK0IsZ0JBQWdCLEVBYS9DO0FBRUQsQUFBMkIsaUJBQWxCLGlCQUFpQixDQUFDIiwiZmlsZSI6ImNvbXBpbGF0aW9uL0RlcHRoUmVuZGVyT2JqZWN0LmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJUmVuZGVyT2JqZWN0T3duZXJcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYmFzZS9JUmVuZGVyT2JqZWN0T3duZXJcIik7XG5cbmltcG9ydCBTdGFnZVx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL1N0YWdlXCIpO1xuXG5pbXBvcnQgUmVuZGVyT2JqZWN0QmFzZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL2NvbXBpbGF0aW9uL1JlbmRlck9iamVjdEJhc2VcIik7XG5pbXBvcnQgUmVuZGVyT2JqZWN0UG9vbFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL2NvbXBpbGF0aW9uL1JlbmRlck9iamVjdFBvb2xcIik7XG5pbXBvcnQgSVJlbmRlcmFibGVDbGFzc1x0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL3Bvb2wvSVJlbmRlcmFibGVDbGFzc1wiKTtcbmltcG9ydCBEZXB0aFBhc3NcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL3Bhc3Nlcy9EZXB0aFBhc3NcIik7XG5cbi8qKlxuICogRGVwdGhSZW5kZXJPYmplY3QgZm9ybXMgYW4gYWJzdHJhY3QgYmFzZSBjbGFzcyBmb3IgdGhlIGRlZmF1bHQgc2hhZGVkIG1hdGVyaWFscyBwcm92aWRlZCBieSBTdGFnZSxcbiAqIHVzaW5nIG1hdGVyaWFsIG1ldGhvZHMgdG8gZGVmaW5lIHRoZWlyIGFwcGVhcmFuY2UuXG4gKi9cbmNsYXNzIERlcHRoUmVuZGVyT2JqZWN0IGV4dGVuZHMgUmVuZGVyT2JqZWN0QmFzZVxue1xuXHQvKipcblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgaWQ6c3RyaW5nID0gXCJkZXB0aFwiO1xuXG5cdGNvbnN0cnVjdG9yKHBvb2w6UmVuZGVyT2JqZWN0UG9vbCwgcmVuZGVyT2JqZWN0T3duZXI6SVJlbmRlck9iamVjdE93bmVyLCByZW5kZXJhYmxlQ2xhc3M6SVJlbmRlcmFibGVDbGFzcywgc3RhZ2U6U3RhZ2UpXG5cdHtcblx0XHRzdXBlcihwb29sLCByZW5kZXJPYmplY3RPd25lciwgcmVuZGVyYWJsZUNsYXNzLCBzdGFnZSk7XG5cblx0XHR0aGlzLl9wQWRkU2NyZWVuUGFzcyhuZXcgRGVwdGhQYXNzKHRoaXMsIHJlbmRlck9iamVjdE93bmVyLCByZW5kZXJhYmxlQ2xhc3MsIHRoaXMuX3N0YWdlKSk7XG5cdH1cbn1cblxuZXhwb3J0ID0gRGVwdGhSZW5kZXJPYmplY3Q7Il19