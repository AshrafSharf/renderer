var BitmapData = require("awayjs-core/lib/base/BitmapData");
var AssetType = require("awayjs-core/lib/library/AssetType");
var BitmapTexture = require("awayjs-core/lib/textures/BitmapTexture");
var BasicMaterial = require("awayjs-display/lib/materials/BasicMaterial");
var DefaultMaterialManager = (function () {
    function DefaultMaterialManager() {
    }
    DefaultMaterialManager.getDefaultMaterial = function (renderableOwner) {
        if (renderableOwner === void 0) { renderableOwner = null; }
        if (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {
            if (!DefaultMaterialManager._defaultLineMaterial)
                DefaultMaterialManager.createDefaultLineMaterial();
            return DefaultMaterialManager._defaultLineMaterial;
        }
        else {
            if (!DefaultMaterialManager._defaultTriangleMaterial)
                DefaultMaterialManager.createDefaultTriangleMaterial();
            return DefaultMaterialManager._defaultTriangleMaterial;
        }
    };
    DefaultMaterialManager.getDefaultTexture = function (renderableOwner) {
        if (renderableOwner === void 0) { renderableOwner = null; }
        if (!DefaultMaterialManager._defaultTexture)
            DefaultMaterialManager.createDefaultTexture();
        return DefaultMaterialManager._defaultTexture;
    };
    DefaultMaterialManager.createDefaultTexture = function () {
        DefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();
        DefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData, true);
        DefaultMaterialManager._defaultTexture.name = "defaultTexture";
    };
    DefaultMaterialManager.createCheckeredBitmapData = function () {
        var b = new BitmapData(8, 8, false, 0x000000);
        //create chekerboard
        var i, j;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if ((j & 1) ^ (i & 1)) {
                    b.setPixel(i, j, 0XFFFFFF);
                }
            }
        }
        return b;
    };
    DefaultMaterialManager.createDefaultTriangleMaterial = function () {
        if (!DefaultMaterialManager._defaultTexture)
            DefaultMaterialManager.createDefaultTexture();
        DefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);
        DefaultMaterialManager._defaultTriangleMaterial.mipmap = false;
        DefaultMaterialManager._defaultTriangleMaterial.smooth = false;
        DefaultMaterialManager._defaultTriangleMaterial.name = "defaultTriangleMaterial";
    };
    DefaultMaterialManager.createDefaultLineMaterial = function () {
        DefaultMaterialManager._defaultLineMaterial = new BasicMaterial();
        DefaultMaterialManager._defaultLineMaterial.name = "defaultLineMaterial";
    };
    return DefaultMaterialManager;
})();
module.exports = DefaultMaterialManager;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9tYW5hZ2Vycy9kZWZhdWx0bWF0ZXJpYWxtYW5hZ2VyLnRzIl0sIm5hbWVzIjpbIkRlZmF1bHRNYXRlcmlhbE1hbmFnZXIiLCJEZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLmNvbnN0cnVjdG9yIiwiRGVmYXVsdE1hdGVyaWFsTWFuYWdlci5nZXREZWZhdWx0TWF0ZXJpYWwiLCJEZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLmdldERlZmF1bHRUZXh0dXJlIiwiRGVmYXVsdE1hdGVyaWFsTWFuYWdlci5jcmVhdGVEZWZhdWx0VGV4dHVyZSIsIkRlZmF1bHRNYXRlcmlhbE1hbmFnZXIuY3JlYXRlQ2hlY2tlcmVkQml0bWFwRGF0YSIsIkRlZmF1bHRNYXRlcmlhbE1hbmFnZXIuY3JlYXRlRGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwiLCJEZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLmNyZWF0ZURlZmF1bHRMaW5lTWF0ZXJpYWwiXSwibWFwcGluZ3MiOiJBQUFBLElBQU8sVUFBVSxXQUFlLGlDQUFpQyxDQUFDLENBQUM7QUFDbkUsSUFBTyxTQUFTLFdBQWUsbUNBQW1DLENBQUMsQ0FBQztBQUNwRSxJQUFPLGFBQWEsV0FBYyx3Q0FBd0MsQ0FBQyxDQUFDO0FBRzVFLElBQU8sYUFBYSxXQUFjLDRDQUE0QyxDQUFDLENBQUM7QUFHaEYsSUFBTSxzQkFBc0I7SUFBNUJBLFNBQU1BLHNCQUFzQkE7SUFnRTVCQyxDQUFDQTtJQXpEY0QseUNBQWtCQSxHQUFoQ0EsVUFBaUNBLGVBQXVDQTtRQUF2Q0UsK0JBQXVDQSxHQUF2Q0Esc0JBQXVDQTtRQUV2RUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsZUFBZUEsSUFBSUEsSUFBSUEsSUFBSUEsZUFBZUEsQ0FBQ0EsU0FBU0EsSUFBSUEsU0FBU0EsQ0FBQ0EsYUFBYUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDckZBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLHNCQUFzQkEsQ0FBQ0Esb0JBQW9CQSxDQUFDQTtnQkFD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LGdEQUF5QkEsR0FBeENBO1FBRUNPLHNCQUFzQkEsQ0FBQ0Esb0JBQW9CQSxHQUFHQSxJQUFJQSxhQUFhQSxFQUFFQSxDQUFDQTtRQUNsRUEsc0JBQXNCQSxDQUFDQSxvQkFBb0JBLENBQUNBLElBQUlBLEdBQUdBLHFCQUFxQkEsQ0FBQ0E7SUFDMUVBLENBQUNBO0lBQ0ZQLDZCQUFDQTtBQUFEQSxDQWhFQSxBQWdFQ0EsSUFBQTtBQUVELEFBQWdDLGlCQUF2QixzQkFBc0IsQ0FBQyIsImZpbGUiOiJtYW5hZ2Vycy9EZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCaXRtYXBEYXRhXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9iYXNlL0JpdG1hcERhdGFcIik7XG5pbXBvcnQgQXNzZXRUeXBlXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9saWJyYXJ5L0Fzc2V0VHlwZVwiKTtcbmltcG9ydCBCaXRtYXBUZXh0dXJlXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdGV4dHVyZXMvQml0bWFwVGV4dHVyZVwiKTtcblxuaW1wb3J0IElSZW5kZXJhYmxlT3duZXJcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL0lSZW5kZXJhYmxlT3duZXJcIik7XG5pbXBvcnQgQmFzaWNNYXRlcmlhbFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL21hdGVyaWFscy9CYXNpY01hdGVyaWFsXCIpO1xuXG5cbmNsYXNzIERlZmF1bHRNYXRlcmlhbE1hbmFnZXJcbntcblx0cHJpdmF0ZSBzdGF0aWMgX2RlZmF1bHRCaXRtYXBEYXRhOkJpdG1hcERhdGE7XG5cdHByaXZhdGUgc3RhdGljIF9kZWZhdWx0VHJpYW5nbGVNYXRlcmlhbDpCYXNpY01hdGVyaWFsO1xuXHRwcml2YXRlIHN0YXRpYyBfZGVmYXVsdExpbmVNYXRlcmlhbDpCYXNpY01hdGVyaWFsO1xuXHRwcml2YXRlIHN0YXRpYyBfZGVmYXVsdFRleHR1cmU6Qml0bWFwVGV4dHVyZTtcblxuXHRwdWJsaWMgc3RhdGljIGdldERlZmF1bHRNYXRlcmlhbChyZW5kZXJhYmxlT3duZXI6SVJlbmRlcmFibGVPd25lciA9IG51bGwpOkJhc2ljTWF0ZXJpYWxcblx0e1xuXHRcdGlmIChyZW5kZXJhYmxlT3duZXIgIT0gbnVsbCAmJiByZW5kZXJhYmxlT3duZXIuYXNzZXRUeXBlID09IEFzc2V0VHlwZS5MSU5FX1NVQl9NRVNIKSB7XG5cdFx0XHRpZiAoIURlZmF1bHRNYXRlcmlhbE1hbmFnZXIuX2RlZmF1bHRMaW5lTWF0ZXJpYWwpXG5cdFx0XHRcdERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuY3JlYXRlRGVmYXVsdExpbmVNYXRlcmlhbCgpO1xuXHRcdFx0cmV0dXJuIERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuX2RlZmF1bHRMaW5lTWF0ZXJpYWw7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICghRGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwpXG5cdFx0XHRcdERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuY3JlYXRlRGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwoKTtcblx0XHRcdHJldHVybiBEZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLl9kZWZhdWx0VHJpYW5nbGVNYXRlcmlhbDtcblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIGdldERlZmF1bHRUZXh0dXJlKHJlbmRlcmFibGVPd25lcjpJUmVuZGVyYWJsZU93bmVyID0gbnVsbCk6Qml0bWFwVGV4dHVyZVxuXHR7XG5cdFx0aWYgKCFEZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLl9kZWZhdWx0VGV4dHVyZSlcblx0XHRcdERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuY3JlYXRlRGVmYXVsdFRleHR1cmUoKTtcblx0XHRyZXR1cm4gRGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRleHR1cmU7XG5cdH1cblxuXHRwcml2YXRlIHN0YXRpYyBjcmVhdGVEZWZhdWx0VGV4dHVyZSgpXG5cdHtcblx0XHREZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLl9kZWZhdWx0Qml0bWFwRGF0YSA9IERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuY3JlYXRlQ2hlY2tlcmVkQml0bWFwRGF0YSgpO1xuXHRcdERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuX2RlZmF1bHRUZXh0dXJlID0gbmV3IEJpdG1hcFRleHR1cmUoRGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdEJpdG1hcERhdGEsIHRydWUpO1xuXHRcdERlZmF1bHRNYXRlcmlhbE1hbmFnZXIuX2RlZmF1bHRUZXh0dXJlLm5hbWUgPSBcImRlZmF1bHRUZXh0dXJlXCI7XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIGNyZWF0ZUNoZWNrZXJlZEJpdG1hcERhdGEoKTpCaXRtYXBEYXRhXG5cdHtcblx0XHR2YXIgYjpCaXRtYXBEYXRhID0gbmV3IEJpdG1hcERhdGEoOCwgOCwgZmFsc2UsIDB4MDAwMDAwKTtcblx0XHQvL2NyZWF0ZSBjaGVrZXJib2FyZFxuXHRcdHZhciBpOm51bWJlciwgajpudW1iZXI7XG5cdFx0Zm9yIChpID0gMDsgaSA8IDg7IGkrKykge1xuXHRcdFx0Zm9yIChqID0gMDsgaiA8IDg7IGorKykge1xuXHRcdFx0XHRpZiAoKGogJiAxKSBeIChpICYgMSkpIHtcblx0XHRcdFx0XHRiLnNldFBpeGVsKGksIGosIDBYRkZGRkZGKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gYjtcblx0fVxuXG5cdHByaXZhdGUgc3RhdGljIGNyZWF0ZURlZmF1bHRUcmlhbmdsZU1hdGVyaWFsKClcblx0e1xuXHRcdGlmICghRGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRleHR1cmUpXG5cdFx0XHREZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLmNyZWF0ZURlZmF1bHRUZXh0dXJlKCk7XG5cdFx0RGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwgPSBuZXcgQmFzaWNNYXRlcmlhbChEZWZhdWx0TWF0ZXJpYWxNYW5hZ2VyLl9kZWZhdWx0VGV4dHVyZSk7XG5cdFx0RGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwubWlwbWFwID0gZmFsc2U7XG5cdFx0RGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwuc21vb3RoID0gZmFsc2U7XG5cdFx0RGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWwubmFtZSA9IFwiZGVmYXVsdFRyaWFuZ2xlTWF0ZXJpYWxcIjtcblx0fVxuXG5cdHByaXZhdGUgc3RhdGljIGNyZWF0ZURlZmF1bHRMaW5lTWF0ZXJpYWwoKVxuXHR7XG5cdFx0RGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdExpbmVNYXRlcmlhbCA9IG5ldyBCYXNpY01hdGVyaWFsKCk7XG5cdFx0RGVmYXVsdE1hdGVyaWFsTWFuYWdlci5fZGVmYXVsdExpbmVNYXRlcmlhbC5uYW1lID0gXCJkZWZhdWx0TGluZU1hdGVyaWFsXCI7XG5cdH1cbn1cblxuZXhwb3J0ID0gRGVmYXVsdE1hdGVyaWFsTWFuYWdlcjsiXX0=