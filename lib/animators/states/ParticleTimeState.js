var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var ContextGLVertexBufferFormat = require("awayjs-stagegl/lib/base/ContextGLVertexBufferFormat");
var ParticleStateBase = require("awayjs-renderergl/lib/animators/states/ParticleStateBase");
/**
 * ...
 */
var ParticleTimeState = (function (_super) {
    __extends(ParticleTimeState, _super);
    function ParticleTimeState(animator, particleTimeNode) {
        _super.call(this, animator, particleTimeNode, true);
        this._particleTimeNode = particleTimeNode;
    }
    ParticleTimeState.prototype.setRenderState = function (stage, renderable, animationSubGeometry, animationRegisterCache, camera) {
        animationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);
        var particleTime = this._pTime / 1000;
        animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);
    };
    /** @private */
    ParticleTimeState.TIME_STREAM_INDEX = 0;
    /** @private */
    ParticleTimeState.TIME_CONSTANT_INDEX = 1;
    return ParticleTimeState;
})(ParticleStateBase);
module.exports = ParticleTimeState;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvc3RhdGVzL1BhcnRpY2xlVGltZVN0YXRlLnRzIl0sIm5hbWVzIjpbIlBhcnRpY2xlVGltZVN0YXRlIiwiUGFydGljbGVUaW1lU3RhdGUuY29uc3RydWN0b3IiLCJQYXJ0aWNsZVRpbWVTdGF0ZS5zZXRSZW5kZXJTdGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0EsSUFBTywyQkFBMkIsV0FBWSxxREFBcUQsQ0FBQyxDQUFDO0FBT3JHLElBQU8saUJBQWlCLFdBQWMsMERBQTBELENBQUMsQ0FBQztBQUdsRyxBQUdBOztHQURHO0lBQ0csaUJBQWlCO0lBQVNBLFVBQTFCQSxpQkFBaUJBLFVBQTBCQTtJQVVoREEsU0FWS0EsaUJBQWlCQSxDQVVWQSxRQUF5QkEsRUFBRUEsZ0JBQWlDQTtRQUV2RUMsa0JBQU1BLFFBQVFBLEVBQUVBLGdCQUFnQkEsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7UUFFeENBLElBQUlBLENBQUNBLGlCQUFpQkEsR0FBR0EsZ0JBQWdCQSxDQUFDQTtJQUMzQ0EsQ0FBQ0E7SUFFTUQsMENBQWNBLEdBQXJCQSxVQUFzQkEsS0FBV0EsRUFBRUEsVUFBeUJBLEVBQUVBLG9CQUF5Q0EsRUFBRUEsc0JBQTZDQSxFQUFFQSxNQUFhQTtRQUVwS0Usb0JBQW9CQSxDQUFDQSxvQkFBb0JBLENBQUNBLHNCQUFzQkEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxlQUFlQSxFQUFFQSxpQkFBaUJBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsRUFBRUEsSUFBSUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxZQUFZQSxFQUFFQSxLQUFLQSxFQUFFQSwyQkFBMkJBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO1FBRS9OQSxJQUFJQSxZQUFZQSxHQUFVQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFDQSxJQUFJQSxDQUFDQTtRQUMzQ0Esc0JBQXNCQSxDQUFDQSxjQUFjQSxDQUFDQSxzQkFBc0JBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZUFBZUEsRUFBRUEsaUJBQWlCQSxDQUFDQSxtQkFBbUJBLENBQUNBLEVBQUVBLFlBQVlBLEVBQUVBLFlBQVlBLEVBQUVBLFlBQVlBLEVBQUVBLFlBQVlBLENBQUNBLENBQUNBO0lBQ3JNQSxDQUFDQTtJQXJCREYsZUFBZUE7SUFDREEsbUNBQWlCQSxHQUFtQkEsQ0FBQ0EsQ0FBQ0E7SUFFcERBLGVBQWVBO0lBQ0RBLHFDQUFtQkEsR0FBbUJBLENBQUNBLENBQUNBO0lBbUJ2REEsd0JBQUNBO0FBQURBLENBekJBLEFBeUJDQSxFQXpCK0IsaUJBQWlCLEVBeUJoRDtBQUVELEFBQTJCLGlCQUFsQixpQkFBaUIsQ0FBQyIsImZpbGUiOiJhbmltYXRvcnMvc3RhdGVzL1BhcnRpY2xlVGltZVN0YXRlLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDYW1lcmFcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9DYW1lcmFcIik7XHJcblxyXG5pbXBvcnQgU3RhZ2VcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL1N0YWdlXCIpO1xyXG5pbXBvcnQgQ29udGV4dEdMVmVydGV4QnVmZmVyRm9ybWF0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL0NvbnRleHRHTFZlcnRleEJ1ZmZlckZvcm1hdFwiKTtcclxuXHJcbmltcG9ydCBQYXJ0aWNsZUFuaW1hdG9yXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvUGFydGljbGVBbmltYXRvclwiKTtcclxuaW1wb3J0IEFuaW1hdGlvblJlZ2lzdGVyQ2FjaGVcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcmVuZGVyZXJnbC9saWIvYW5pbWF0b3JzL2RhdGEvQW5pbWF0aW9uUmVnaXN0ZXJDYWNoZVwiKTtcclxuaW1wb3J0IEFuaW1hdGlvblN1Ykdlb21ldHJ5XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcmVuZGVyZXJnbC9saWIvYW5pbWF0b3JzL2RhdGEvQW5pbWF0aW9uU3ViR2VvbWV0cnlcIik7XHJcbmltcG9ydCBQYXJ0aWNsZVByb3BlcnRpZXNNb2RlXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL2FuaW1hdG9ycy9kYXRhL1BhcnRpY2xlUHJvcGVydGllc01vZGVcIik7XHJcbmltcG9ydCBQYXJ0aWNsZVRpbWVOb2RlXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvbm9kZXMvUGFydGljbGVUaW1lTm9kZVwiKTtcclxuaW1wb3J0IFBhcnRpY2xlU3RhdGVCYXNlXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcmVuZGVyZXJnbC9saWIvYW5pbWF0b3JzL3N0YXRlcy9QYXJ0aWNsZVN0YXRlQmFzZVwiKTtcclxuaW1wb3J0IFJlbmRlcmFibGVCYXNlXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9wb29sL1JlbmRlcmFibGVCYXNlXCIpO1xyXG5cclxuLyoqXHJcbiAqIC4uLlxyXG4gKi9cclxuY2xhc3MgUGFydGljbGVUaW1lU3RhdGUgZXh0ZW5kcyBQYXJ0aWNsZVN0YXRlQmFzZVxyXG57XHJcblx0LyoqIEBwcml2YXRlICovXHJcblx0cHVibGljIHN0YXRpYyBUSU1FX1NUUkVBTV9JTkRFWDpudW1iZXIgLyp1aW50Ki8gPSAwO1xyXG5cclxuXHQvKiogQHByaXZhdGUgKi9cclxuXHRwdWJsaWMgc3RhdGljIFRJTUVfQ09OU1RBTlRfSU5ERVg6bnVtYmVyIC8qdWludCovID0gMTtcclxuXHJcblx0cHJpdmF0ZSBfcGFydGljbGVUaW1lTm9kZTpQYXJ0aWNsZVRpbWVOb2RlO1xyXG5cclxuXHRjb25zdHJ1Y3RvcihhbmltYXRvcjpQYXJ0aWNsZUFuaW1hdG9yLCBwYXJ0aWNsZVRpbWVOb2RlOlBhcnRpY2xlVGltZU5vZGUpXHJcblx0e1xyXG5cdFx0c3VwZXIoYW5pbWF0b3IsIHBhcnRpY2xlVGltZU5vZGUsIHRydWUpO1xyXG5cclxuXHRcdHRoaXMuX3BhcnRpY2xlVGltZU5vZGUgPSBwYXJ0aWNsZVRpbWVOb2RlO1xyXG5cdH1cclxuXHJcblx0cHVibGljIHNldFJlbmRlclN0YXRlKHN0YWdlOlN0YWdlLCByZW5kZXJhYmxlOlJlbmRlcmFibGVCYXNlLCBhbmltYXRpb25TdWJHZW9tZXRyeTpBbmltYXRpb25TdWJHZW9tZXRyeSwgYW5pbWF0aW9uUmVnaXN0ZXJDYWNoZTpBbmltYXRpb25SZWdpc3RlckNhY2hlLCBjYW1lcmE6Q2FtZXJhKVxyXG5cdHtcclxuXHRcdGFuaW1hdGlvblN1Ykdlb21ldHJ5LmFjdGl2YXRlVmVydGV4QnVmZmVyKGFuaW1hdGlvblJlZ2lzdGVyQ2FjaGUuZ2V0UmVnaXN0ZXJJbmRleCh0aGlzLl9wQW5pbWF0aW9uTm9kZSwgUGFydGljbGVUaW1lU3RhdGUuVElNRV9TVFJFQU1fSU5ERVgpLCB0aGlzLl9wYXJ0aWNsZVRpbWVOb2RlLl9pRGF0YU9mZnNldCwgc3RhZ2UsIENvbnRleHRHTFZlcnRleEJ1ZmZlckZvcm1hdC5GTE9BVF80KTtcclxuXHJcblx0XHR2YXIgcGFydGljbGVUaW1lOm51bWJlciA9IHRoaXMuX3BUaW1lLzEwMDA7XHJcblx0XHRhbmltYXRpb25SZWdpc3RlckNhY2hlLnNldFZlcnRleENvbnN0KGFuaW1hdGlvblJlZ2lzdGVyQ2FjaGUuZ2V0UmVnaXN0ZXJJbmRleCh0aGlzLl9wQW5pbWF0aW9uTm9kZSwgUGFydGljbGVUaW1lU3RhdGUuVElNRV9DT05TVEFOVF9JTkRFWCksIHBhcnRpY2xlVGltZSwgcGFydGljbGVUaW1lLCBwYXJ0aWNsZVRpbWUsIHBhcnRpY2xlVGltZSk7XHJcblx0fVxyXG5cclxufVxyXG5cclxuZXhwb3J0ID0gUGFydGljbGVUaW1lU3RhdGU7Il19