var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AnimationNodeBase = require("awayjs-display/lib/animators/nodes/AnimationNodeBase");
var SkeletonDifferenceState = require("awayjs-renderergl/lib/animators/states/SkeletonDifferenceState");
/**
 * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.
 */
var SkeletonDifferenceNode = (function (_super) {
    __extends(SkeletonDifferenceNode, _super);
    /**
     * Creates a new <code>SkeletonAdditiveNode</code> object.
     */
    function SkeletonDifferenceNode() {
        _super.call(this);
        this._pStateClass = SkeletonDifferenceState;
    }
    /**
     * @inheritDoc
     */
    SkeletonDifferenceNode.prototype.getAnimationState = function (animator) {
        return animator.getAnimationState(this);
    };
    return SkeletonDifferenceNode;
})(AnimationNodeBase);
module.exports = SkeletonDifferenceNode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvbm9kZXMvU2tlbGV0b25EaWZmZXJlbmNlTm9kZS50cyJdLCJuYW1lcyI6WyJTa2VsZXRvbkRpZmZlcmVuY2VOb2RlIiwiU2tlbGV0b25EaWZmZXJlbmNlTm9kZS5jb25zdHJ1Y3RvciIsIlNrZWxldG9uRGlmZmVyZW5jZU5vZGUuZ2V0QW5pbWF0aW9uU3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU8saUJBQWlCLFdBQWMsc0RBQXNELENBQUMsQ0FBQztBQUk5RixJQUFPLHVCQUF1QixXQUFhLGdFQUFnRSxDQUFDLENBQUM7QUFFN0csQUFHQTs7R0FERztJQUNHLHNCQUFzQjtJQUFTQSxVQUEvQkEsc0JBQXNCQSxVQUEwQkE7SUFZckRBOztPQUVHQTtJQUNIQSxTQWZLQSxzQkFBc0JBO1FBaUIxQkMsaUJBQU9BLENBQUNBO1FBRVJBLElBQUlBLENBQUNBLFlBQVlBLEdBQUdBLHVCQUF1QkEsQ0FBQ0E7SUFDN0NBLENBQUNBO0lBRUREOztPQUVHQTtJQUNJQSxrREFBaUJBLEdBQXhCQSxVQUF5QkEsUUFBcUJBO1FBRTdDRSxNQUFNQSxDQUEyQkEsUUFBUUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtJQUNuRUEsQ0FBQ0E7SUFDRkYsNkJBQUNBO0FBQURBLENBN0JBLEFBNkJDQSxFQTdCb0MsaUJBQWlCLEVBNkJyRDtBQUVELEFBQStCLGlCQUF0QixzQkFBc0IsQ0FBQSIsImZpbGUiOiJhbmltYXRvcnMvbm9kZXMvU2tlbGV0b25EaWZmZXJlbmNlTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQW5pbWF0aW9uTm9kZUJhc2VcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9hbmltYXRvcnMvbm9kZXMvQW5pbWF0aW9uTm9kZUJhc2VcIik7XHJcblxyXG5pbXBvcnQgQW5pbWF0b3JCYXNlXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL2FuaW1hdG9ycy9BbmltYXRvckJhc2VcIik7XHJcblxyXG5pbXBvcnQgU2tlbGV0b25EaWZmZXJlbmNlU3RhdGVcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcmVuZGVyZXJnbC9saWIvYW5pbWF0b3JzL3N0YXRlcy9Ta2VsZXRvbkRpZmZlcmVuY2VTdGF0ZVwiKTtcclxuXHJcbi8qKlxyXG4gKiBBIHNrZWxldG9uIGFuaW1hdGlvbiBub2RlIHRoYXQgdXNlcyBhIGRpZmZlcmVuY2UgaW5wdXQgcG9zZSB3aXRoIGEgYmFzZSBpbnB1dCBwb3NlIHRvIGJsZW5kIGEgbGluZWFybHkgaW50ZXJwb2xhdGVkIG91dHB1dCBvZiBhIHNrZWxldG9uIHBvc2UuXHJcbiAqL1xyXG5jbGFzcyBTa2VsZXRvbkRpZmZlcmVuY2VOb2RlIGV4dGVuZHMgQW5pbWF0aW9uTm9kZUJhc2Vcclxue1xyXG5cdC8qKlxyXG5cdCAqIERlZmluZXMgYSBiYXNlIGlucHV0IG5vZGUgdG8gdXNlIGZvciB0aGUgYmxlbmRlZCBvdXRwdXQuXHJcblx0ICovXHJcblx0cHVibGljIGJhc2VJbnB1dDpBbmltYXRpb25Ob2RlQmFzZTtcclxuXHJcblx0LyoqXHJcblx0ICogRGVmaW5lcyBhIGRpZmZlcmVuY2UgaW5wdXQgbm9kZSB0byB1c2UgZm9yIHRoZSBibGVuZGVkIG91dHB1dC5cclxuXHQgKi9cclxuXHRwdWJsaWMgZGlmZmVyZW5jZUlucHV0OkFuaW1hdGlvbk5vZGVCYXNlO1xyXG5cclxuXHQvKipcclxuXHQgKiBDcmVhdGVzIGEgbmV3IDxjb2RlPlNrZWxldG9uQWRkaXRpdmVOb2RlPC9jb2RlPiBvYmplY3QuXHJcblx0ICovXHJcblx0Y29uc3RydWN0b3IoKVxyXG5cdHtcclxuXHRcdHN1cGVyKCk7XHJcblxyXG5cdFx0dGhpcy5fcFN0YXRlQ2xhc3MgPSBTa2VsZXRvbkRpZmZlcmVuY2VTdGF0ZTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBpbmhlcml0RG9jXHJcblx0ICovXHJcblx0cHVibGljIGdldEFuaW1hdGlvblN0YXRlKGFuaW1hdG9yOkFuaW1hdG9yQmFzZSk6U2tlbGV0b25EaWZmZXJlbmNlU3RhdGVcclxuXHR7XHJcblx0XHRyZXR1cm4gPFNrZWxldG9uRGlmZmVyZW5jZVN0YXRlPiBhbmltYXRvci5nZXRBbmltYXRpb25TdGF0ZSh0aGlzKTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCA9IFNrZWxldG9uRGlmZmVyZW5jZU5vZGUiXX0=