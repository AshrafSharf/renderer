var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AnimationNodeBase = require("awayjs-display/lib/animators/nodes/AnimationNodeBase");
var SkeletonBinaryLERPState = require("awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState");
/**
 * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.
 */
var SkeletonBinaryLERPNode = (function (_super) {
    __extends(SkeletonBinaryLERPNode, _super);
    /**
     * Creates a new <code>SkeletonBinaryLERPNode</code> object.
     */
    function SkeletonBinaryLERPNode() {
        _super.call(this);
        this._pStateClass = SkeletonBinaryLERPState;
    }
    /**
     * @inheritDoc
     */
    SkeletonBinaryLERPNode.prototype.getAnimationState = function (animator) {
        return animator.getAnimationState(this);
    };
    return SkeletonBinaryLERPNode;
})(AnimationNodeBase);
module.exports = SkeletonBinaryLERPNode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvbm9kZXMvU2tlbGV0b25CaW5hcnlMRVJQTm9kZS50cyJdLCJuYW1lcyI6WyJTa2VsZXRvbkJpbmFyeUxFUlBOb2RlIiwiU2tlbGV0b25CaW5hcnlMRVJQTm9kZS5jb25zdHJ1Y3RvciIsIlNrZWxldG9uQmluYXJ5TEVSUE5vZGUuZ2V0QW5pbWF0aW9uU3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQU8saUJBQWlCLFdBQWMsc0RBQXNELENBQUMsQ0FBQztBQUk5RixJQUFPLHVCQUF1QixXQUFhLGdFQUFnRSxDQUFDLENBQUM7QUFFN0csQUFHQTs7R0FERztJQUNHLHNCQUFzQjtJQUFTQSxVQUEvQkEsc0JBQXNCQSxVQUEwQkE7SUFZckRBOztPQUVHQTtJQUNIQSxTQWZLQSxzQkFBc0JBO1FBaUIxQkMsaUJBQU9BLENBQUNBO1FBRVJBLElBQUlBLENBQUNBLFlBQVlBLEdBQUdBLHVCQUF1QkEsQ0FBQ0E7SUFDN0NBLENBQUNBO0lBRUREOztPQUVHQTtJQUNJQSxrREFBaUJBLEdBQXhCQSxVQUF5QkEsUUFBcUJBO1FBRTdDRSxNQUFNQSxDQUEyQkEsUUFBUUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtJQUNuRUEsQ0FBQ0E7SUFDRkYsNkJBQUNBO0FBQURBLENBN0JBLEFBNkJDQSxFQTdCb0MsaUJBQWlCLEVBNkJyRDtBQUVELEFBQWdDLGlCQUF2QixzQkFBc0IsQ0FBQyIsImZpbGUiOiJhbmltYXRvcnMvbm9kZXMvU2tlbGV0b25CaW5hcnlMRVJQTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmVjdG9yM0RcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9nZW9tL1ZlY3RvcjNEXCIpO1xyXG5cclxuaW1wb3J0IEFuaW1hdGlvbk5vZGVCYXNlXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYW5pbWF0b3JzL25vZGVzL0FuaW1hdGlvbk5vZGVCYXNlXCIpO1xyXG5cclxuaW1wb3J0IEFuaW1hdG9yQmFzZVx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvQW5pbWF0b3JCYXNlXCIpO1xyXG5cclxuaW1wb3J0IFNrZWxldG9uQmluYXJ5TEVSUFN0YXRlXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL2FuaW1hdG9ycy9zdGF0ZXMvU2tlbGV0b25CaW5hcnlMRVJQU3RhdGVcIik7XHJcblxyXG4vKipcclxuICogQSBza2VsZXRvbiBhbmltYXRpb24gbm9kZSB0aGF0IHVzZXMgdHdvIGFuaW1hdGlvbiBub2RlIGlucHV0cyB0byBibGVuZCBhIGxpbmVyYWx5IGludGVycG9sYXRlZCBvdXRwdXQgb2YgYSBza2VsZXRvbiBwb3NlLlxyXG4gKi9cclxuY2xhc3MgU2tlbGV0b25CaW5hcnlMRVJQTm9kZSBleHRlbmRzIEFuaW1hdGlvbk5vZGVCYXNlXHJcbntcclxuXHQvKipcclxuXHQgKiBEZWZpbmVzIGlucHV0IG5vZGUgQSB0byB1c2UgZm9yIHRoZSBibGVuZGVkIG91dHB1dC5cclxuXHQgKi9cclxuXHRwdWJsaWMgaW5wdXRBOkFuaW1hdGlvbk5vZGVCYXNlO1xyXG5cclxuXHQvKipcclxuXHQgKiBEZWZpbmVzIGlucHV0IG5vZGUgQiB0byB1c2UgZm9yIHRoZSBibGVuZGVkIG91dHB1dC5cclxuXHQgKi9cclxuXHRwdWJsaWMgaW5wdXRCOkFuaW1hdGlvbk5vZGVCYXNlO1xyXG5cclxuXHQvKipcclxuXHQgKiBDcmVhdGVzIGEgbmV3IDxjb2RlPlNrZWxldG9uQmluYXJ5TEVSUE5vZGU8L2NvZGU+IG9iamVjdC5cclxuXHQgKi9cclxuXHRjb25zdHJ1Y3RvcigpXHJcblx0e1xyXG5cdFx0c3VwZXIoKTtcclxuXHJcblx0XHR0aGlzLl9wU3RhdGVDbGFzcyA9IFNrZWxldG9uQmluYXJ5TEVSUFN0YXRlO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogQGluaGVyaXREb2NcclxuXHQgKi9cclxuXHRwdWJsaWMgZ2V0QW5pbWF0aW9uU3RhdGUoYW5pbWF0b3I6QW5pbWF0b3JCYXNlKTpTa2VsZXRvbkJpbmFyeUxFUlBTdGF0ZVxyXG5cdHtcclxuXHRcdHJldHVybiA8U2tlbGV0b25CaW5hcnlMRVJQU3RhdGU+IGFuaW1hdG9yLmdldEFuaW1hdGlvblN0YXRlKHRoaXMpO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0ID0gU2tlbGV0b25CaW5hcnlMRVJQTm9kZTsiXX0=