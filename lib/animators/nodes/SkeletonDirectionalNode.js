var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AnimationNodeBase = require("awayjs-display/lib/animators/nodes/AnimationNodeBase");
var SkeletonDirectionalState = require("awayjs-renderergl/lib/animators/states/SkeletonDirectionalState");
/**
 * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.
 */
var SkeletonDirectionalNode = (function (_super) {
    __extends(SkeletonDirectionalNode, _super);
    function SkeletonDirectionalNode() {
        _super.call(this);
        this._pStateClass = SkeletonDirectionalState;
    }
    /**
     * @inheritDoc
     */
    SkeletonDirectionalNode.prototype.getAnimationState = function (animator) {
        return animator.getAnimationState(this);
    };
    return SkeletonDirectionalNode;
})(AnimationNodeBase);
module.exports = SkeletonDirectionalNode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvbm9kZXMvc2tlbGV0b25kaXJlY3Rpb25hbG5vZGUudHMiXSwibmFtZXMiOlsiU2tlbGV0b25EaXJlY3Rpb25hbE5vZGUiLCJTa2VsZXRvbkRpcmVjdGlvbmFsTm9kZS5jb25zdHJ1Y3RvciIsIlNrZWxldG9uRGlyZWN0aW9uYWxOb2RlLmdldEFuaW1hdGlvblN0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFPLGlCQUFpQixXQUFjLHNEQUFzRCxDQUFDLENBQUM7QUFJOUYsSUFBTyx3QkFBd0IsV0FBYSxpRUFBaUUsQ0FBQyxDQUFDO0FBRS9HLEFBR0E7O0dBREc7SUFDRyx1QkFBdUI7SUFBU0EsVUFBaENBLHVCQUF1QkEsVUFBMEJBO0lBc0J0REEsU0F0QktBLHVCQUF1QkE7UUF3QjNCQyxpQkFBT0EsQ0FBQ0E7UUFFUkEsSUFBSUEsQ0FBQ0EsWUFBWUEsR0FBR0Esd0JBQXdCQSxDQUFDQTtJQUM5Q0EsQ0FBQ0E7SUFFREQ7O09BRUdBO0lBQ0lBLG1EQUFpQkEsR0FBeEJBLFVBQXlCQSxRQUFxQkE7UUFFN0NFLE1BQU1BLENBQTRCQSxRQUFRQSxDQUFDQSxpQkFBaUJBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO0lBQ3BFQSxDQUFDQTtJQUVGRiw4QkFBQ0E7QUFBREEsQ0FyQ0EsQUFxQ0NBLEVBckNxQyxpQkFBaUIsRUFxQ3REO0FBRUQsQUFBaUMsaUJBQXhCLHVCQUF1QixDQUFDIiwiZmlsZSI6ImFuaW1hdG9ycy9ub2Rlcy9Ta2VsZXRvbkRpcmVjdGlvbmFsTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQW5pbWF0aW9uTm9kZUJhc2VcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9hbmltYXRvcnMvbm9kZXMvQW5pbWF0aW9uTm9kZUJhc2VcIik7XG5cbmltcG9ydCBBbmltYXRvckJhc2VcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvYW5pbWF0b3JzL0FuaW1hdG9yQmFzZVwiKTtcblxuaW1wb3J0IFNrZWxldG9uRGlyZWN0aW9uYWxTdGF0ZVx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9hbmltYXRvcnMvc3RhdGVzL1NrZWxldG9uRGlyZWN0aW9uYWxTdGF0ZVwiKTtcblxuLyoqXG4gKiBBIHNrZWxldG9uIGFuaW1hdGlvbiBub2RlIHRoYXQgdXNlcyBmb3VyIGRpcmVjdGlvbmFsIGlucHV0IHBvc2VzIHdpdGggYW4gaW5wdXQgZGlyZWN0aW9uIHRvIGJsZW5kIGEgbGluZWFybHkgaW50ZXJwb2xhdGVkIG91dHB1dCBvZiBhIHNrZWxldG9uIHBvc2UuXG4gKi9cbmNsYXNzIFNrZWxldG9uRGlyZWN0aW9uYWxOb2RlIGV4dGVuZHMgQW5pbWF0aW9uTm9kZUJhc2Vcbntcblx0LyoqXG5cdCAqIERlZmluZXMgdGhlIGZvcndhcmQgY29uZmlndXJlZCBpbnB1dCBub2RlIHRvIHVzZSBmb3IgdGhlIGJsZW5kZWQgb3V0cHV0LlxuXHQgKi9cblx0cHVibGljIGZvcndhcmQ6QW5pbWF0aW9uTm9kZUJhc2U7XG5cblx0LyoqXG5cdCAqIERlZmluZXMgdGhlIGJhY2t3YXJkcyBjb25maWd1cmVkIGlucHV0IG5vZGUgdG8gdXNlIGZvciB0aGUgYmxlbmRlZCBvdXRwdXQuXG5cdCAqL1xuXHRwdWJsaWMgYmFja3dhcmQ6QW5pbWF0aW9uTm9kZUJhc2U7XG5cblx0LyoqXG5cdCAqIERlZmluZXMgdGhlIGxlZnQgY29uZmlndXJlZCBpbnB1dCBub2RlIHRvIHVzZSBmb3IgdGhlIGJsZW5kZWQgb3V0cHV0LlxuXHQgKi9cblx0cHVibGljIGxlZnQ6QW5pbWF0aW9uTm9kZUJhc2U7XG5cblx0LyoqXG5cdCAqIERlZmluZXMgdGhlIHJpZ2h0IGNvbmZpZ3VyZWQgaW5wdXQgbm9kZSB0byB1c2UgZm9yIHRoZSBibGVuZGVkIG91dHB1dC5cblx0ICovXG5cdHB1YmxpYyByaWdodDpBbmltYXRpb25Ob2RlQmFzZTtcblxuXHRjb25zdHJ1Y3RvcigpXG5cdHtcblx0XHRzdXBlcigpO1xuXG5cdFx0dGhpcy5fcFN0YXRlQ2xhc3MgPSBTa2VsZXRvbkRpcmVjdGlvbmFsU3RhdGU7XG5cdH1cblxuXHQvKipcblx0ICogQGluaGVyaXREb2Ncblx0ICovXG5cdHB1YmxpYyBnZXRBbmltYXRpb25TdGF0ZShhbmltYXRvcjpBbmltYXRvckJhc2UpOlNrZWxldG9uRGlyZWN0aW9uYWxTdGF0ZVxuXHR7XG5cdFx0cmV0dXJuIDxTa2VsZXRvbkRpcmVjdGlvbmFsU3RhdGU+IGFuaW1hdG9yLmdldEFuaW1hdGlvblN0YXRlKHRoaXMpO1xuXHR9XG5cbn1cblxuZXhwb3J0ID0gU2tlbGV0b25EaXJlY3Rpb25hbE5vZGU7Il19