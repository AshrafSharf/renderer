var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var Matrix3D = require("awayjs-core/lib/geom/Matrix3D");
/**
 *
 */
var PerspectiveMatrix3D = (function (_super) {
    __extends(PerspectiveMatrix3D, _super);
    function PerspectiveMatrix3D(v) {
        if (v === void 0) { v = null; }
        _super.call(this, v);
    }
    PerspectiveMatrix3D.prototype.perspectiveFieldOfViewLH = function (fieldOfViewY, aspectRatio, zNear, zFar) {
        var yScale = 1 / Math.tan(fieldOfViewY / 2);
        var xScale = yScale / aspectRatio;
        this.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar / (zFar - zNear), 1.0, 0.0, 0.0, (zNear * zFar) / (zNear - zFar), 0.0]);
    };
    return PerspectiveMatrix3D;
})(Matrix3D);
module.exports = PerspectiveMatrix3D;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi91dGlscy9wZXJzcGVjdGl2ZW1hdHJpeDNkLnRzIl0sIm5hbWVzIjpbIlBlcnNwZWN0aXZlTWF0cml4M0QiLCJQZXJzcGVjdGl2ZU1hdHJpeDNELmNvbnN0cnVjdG9yIiwiUGVyc3BlY3RpdmVNYXRyaXgzRC5wZXJzcGVjdGl2ZUZpZWxkT2ZWaWV3TEgiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU8sUUFBUSxXQUFpQiwrQkFBK0IsQ0FBQyxDQUFDO0FBRWpFLEFBR0E7O0dBREc7SUFDRyxtQkFBbUI7SUFBU0EsVUFBNUJBLG1CQUFtQkEsVUFBaUJBO0lBRXpDQSxTQUZLQSxtQkFBbUJBLENBRVpBLENBQXNCQTtRQUF0QkMsaUJBQXNCQSxHQUF0QkEsUUFBc0JBO1FBRWpDQSxrQkFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDVkEsQ0FBQ0E7SUFFTUQsc0RBQXdCQSxHQUEvQkEsVUFBZ0NBLFlBQW1CQSxFQUFFQSxXQUFrQkEsRUFBRUEsS0FBWUEsRUFBRUEsSUFBV0E7UUFFakdFLElBQUlBLE1BQU1BLEdBQVVBLENBQUNBLEdBQUNBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLFlBQVlBLEdBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQy9DQSxJQUFJQSxNQUFNQSxHQUFVQSxNQUFNQSxHQUFDQSxXQUFXQSxDQUFDQTtRQUV2Q0EsSUFBSUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsTUFBTUEsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsSUFBSUEsR0FBQ0EsQ0FBQ0EsSUFBSUEsR0FBR0EsS0FBS0EsQ0FBQ0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsQ0FBQ0EsS0FBS0EsR0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBQ0EsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsQ0FBQ0EsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDdEpBLENBQUNBO0lBQ0ZGLDBCQUFDQTtBQUFEQSxDQWRBLEFBY0NBLEVBZGlDLFFBQVEsRUFjekM7QUFFRCxBQUE2QixpQkFBcEIsbUJBQW1CLENBQUMiLCJmaWxlIjoidXRpbHMvUGVyc3BlY3RpdmVNYXRyaXgzRC5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWF0cml4M0RcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9nZW9tL01hdHJpeDNEXCIpO1xuXG4vKipcbiAqXG4gKi9cbmNsYXNzIFBlcnNwZWN0aXZlTWF0cml4M0QgZXh0ZW5kcyBNYXRyaXgzRFxue1xuXHRjb25zdHJ1Y3Rvcih2OkFycmF5PG51bWJlcj4gPSBudWxsKVxuXHR7XG5cdFx0c3VwZXIodik7XG5cdH1cblxuXHRwdWJsaWMgcGVyc3BlY3RpdmVGaWVsZE9mVmlld0xIKGZpZWxkT2ZWaWV3WTpudW1iZXIsIGFzcGVjdFJhdGlvOm51bWJlciwgek5lYXI6bnVtYmVyLCB6RmFyOm51bWJlcilcblx0e1xuXHRcdHZhciB5U2NhbGU6bnVtYmVyID0gMS9NYXRoLnRhbihmaWVsZE9mVmlld1kvMik7XG5cdFx0dmFyIHhTY2FsZTpudW1iZXIgPSB5U2NhbGUvYXNwZWN0UmF0aW87XG5cblx0XHR0aGlzLmNvcHlSYXdEYXRhRnJvbShbeFNjYWxlLCAwLjAsIDAuMCwgMC4wLCAwLjAsIHlTY2FsZSwgMC4wLCAwLjAsIDAuMCwgMC4wLCB6RmFyLyh6RmFyIC0gek5lYXIpLCAxLjAsIDAuMCwgMC4wLCAoek5lYXIqekZhcikvKHpOZWFyIC0gekZhciksIDAuMF0pO1xuXHR9XG59XG5cbmV4cG9ydCA9IFBlcnNwZWN0aXZlTWF0cml4M0Q7Il19