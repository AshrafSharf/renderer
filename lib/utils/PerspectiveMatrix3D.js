var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var Matrix3D = require("awayjs-core/lib/core/geom/Matrix3D");
/**
 *
 */
var PerspectiveMatrix3D = (function (_super) {
    __extends(PerspectiveMatrix3D, _super);
    function PerspectiveMatrix3D(v) {
        if (v === void 0) { v = null; }
        _super.call(this, v);
    }
    PerspectiveMatrix3D.prototype.perspectiveFieldOfViewLH = function (fieldOfViewY, aspectRatio, zNear, zFar) {
        var yScale = 1 / Math.tan(fieldOfViewY / 2);
        var xScale = yScale / aspectRatio;
        this.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar / (zFar - zNear), 1.0, 0.0, 0.0, (zNear * zFar) / (zNear - zFar), 0.0]);
    };
    return PerspectiveMatrix3D;
})(Matrix3D);
module.exports = PerspectiveMatrix3D;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL3BlcnNwZWN0aXZlbWF0cml4M2QudHMiXSwibmFtZXMiOlsiUGVyc3BlY3RpdmVNYXRyaXgzRCIsIlBlcnNwZWN0aXZlTWF0cml4M0QuY29uc3RydWN0b3IiLCJQZXJzcGVjdGl2ZU1hdHJpeDNELnBlcnNwZWN0aXZlRmllbGRPZlZpZXdMSCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTyxRQUFRLFdBQWlCLG9DQUFvQyxDQUFDLENBQUM7QUFFdEUsQUFHQTs7R0FERztJQUNHLG1CQUFtQjtJQUFTQSxVQUE1QkEsbUJBQW1CQSxVQUFpQkE7SUFFekNBLFNBRktBLG1CQUFtQkEsQ0FFWkEsQ0FBc0JBO1FBQXRCQyxpQkFBc0JBLEdBQXRCQSxRQUFzQkE7UUFFakNBLGtCQUFNQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUNWQSxDQUFDQTtJQUVNRCxzREFBd0JBLEdBQS9CQSxVQUFnQ0EsWUFBbUJBLEVBQUVBLFdBQWtCQSxFQUFFQSxLQUFZQSxFQUFFQSxJQUFXQTtRQUVqR0UsSUFBSUEsTUFBTUEsR0FBVUEsQ0FBQ0EsR0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsWUFBWUEsR0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDL0NBLElBQUlBLE1BQU1BLEdBQVVBLE1BQU1BLEdBQUNBLFdBQVdBLENBQUNBO1FBRXZDQSxJQUFJQSxDQUFDQSxlQUFlQSxDQUFDQSxDQUFDQSxNQUFNQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxNQUFNQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxJQUFJQSxHQUFDQSxDQUFDQSxJQUFJQSxHQUFHQSxLQUFLQSxDQUFDQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxHQUFHQSxFQUFFQSxDQUFDQSxLQUFLQSxHQUFDQSxJQUFJQSxDQUFDQSxHQUFDQSxDQUFDQSxLQUFLQSxHQUFHQSxJQUFJQSxDQUFDQSxFQUFFQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUN0SkEsQ0FBQ0E7SUFDRkYsMEJBQUNBO0FBQURBLENBZEEsQUFjQ0EsRUFkaUMsUUFBUSxFQWN6QztBQUVELEFBQTZCLGlCQUFwQixtQkFBbUIsQ0FBQyIsImZpbGUiOiJ1dGlscy9QZXJzcGVjdGl2ZU1hdHJpeDNELmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yb2JiYXRlbWFuL1dlYnN0b3JtUHJvamVjdHMvYXdheWpzLXJlbmRlcmVyZ2wvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hdHJpeDNEXHRcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvY29yZS9nZW9tL01hdHJpeDNEXCIpO1xuXG4vKipcbiAqXG4gKi9cbmNsYXNzIFBlcnNwZWN0aXZlTWF0cml4M0QgZXh0ZW5kcyBNYXRyaXgzRFxue1xuXHRjb25zdHJ1Y3Rvcih2OkFycmF5PG51bWJlcj4gPSBudWxsKVxuXHR7XG5cdFx0c3VwZXIodik7XG5cdH1cblxuXHRwdWJsaWMgcGVyc3BlY3RpdmVGaWVsZE9mVmlld0xIKGZpZWxkT2ZWaWV3WTpudW1iZXIsIGFzcGVjdFJhdGlvOm51bWJlciwgek5lYXI6bnVtYmVyLCB6RmFyOm51bWJlcilcblx0e1xuXHRcdHZhciB5U2NhbGU6bnVtYmVyID0gMS9NYXRoLnRhbihmaWVsZE9mVmlld1kvMik7XG5cdFx0dmFyIHhTY2FsZTpudW1iZXIgPSB5U2NhbGUvYXNwZWN0UmF0aW87XG5cblx0XHR0aGlzLmNvcHlSYXdEYXRhRnJvbShbeFNjYWxlLCAwLjAsIDAuMCwgMC4wLCAwLjAsIHlTY2FsZSwgMC4wLCAwLjAsIDAuMCwgMC4wLCB6RmFyLyh6RmFyIC0gek5lYXIpLCAxLjAsIDAuMCwgMC4wLCAoek5lYXIqekZhcikvKHpOZWFyIC0gekZhciksIDAuMF0pO1xuXHR9XG59XG5cbmV4cG9ydCA9IFBlcnNwZWN0aXZlTWF0cml4M0Q7Il19