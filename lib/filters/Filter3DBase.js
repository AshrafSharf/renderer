var Filter3DBase = (function () {
    function Filter3DBase() {
        this._tasks = new Array();
    }
    Object.defineProperty(Filter3DBase.prototype, "requireDepthRender", {
        get: function () {
            return this._requireDepthRender;
        },
        enumerable: true,
        configurable: true
    });
    Filter3DBase.prototype.pAddTask = function (filter) {
        this._tasks.push(filter);
        if (this._requireDepthRender == null)
            this._requireDepthRender = filter.requireDepthRender;
    };
    Object.defineProperty(Filter3DBase.prototype, "tasks", {
        get: function () {
            return this._tasks;
        },
        enumerable: true,
        configurable: true
    });
    Filter3DBase.prototype.getMainInputTexture = function (stage) {
        return this._tasks[0].getMainInputTexture(stage);
    };
    Object.defineProperty(Filter3DBase.prototype, "textureWidth", {
        get: function () {
            return this._textureWidth;
        },
        set: function (value) {
            this._textureWidth = value;
            for (var i = 0; i < this._tasks.length; ++i)
                this._tasks[i].textureWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Filter3DBase.prototype, "textureHeight", {
        get: function () {
            return this._textureHeight;
        },
        set: function (value) {
            this._textureHeight = value;
            for (var i = 0; i < this._tasks.length; ++i)
                this._tasks[i].textureHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    // link up the filters correctly with the next filter
    Filter3DBase.prototype.setRenderTargets = function (mainTarget, stage) {
        this._tasks[this._tasks.length - 1].target = mainTarget;
    };
    Filter3DBase.prototype.dispose = function () {
        for (var i = 0; i < this._tasks.length; ++i)
            this._tasks[i].dispose();
    };
    Filter3DBase.prototype.update = function (stage, camera) {
    };
    return Filter3DBase;
})();
module.exports = Filter3DBase;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9maWx0ZXJzL0ZpbHRlcjNEQmFzZS50cyJdLCJuYW1lcyI6WyJGaWx0ZXIzREJhc2UiLCJGaWx0ZXIzREJhc2UuY29uc3RydWN0b3IiLCJGaWx0ZXIzREJhc2UucmVxdWlyZURlcHRoUmVuZGVyIiwiRmlsdGVyM0RCYXNlLnBBZGRUYXNrIiwiRmlsdGVyM0RCYXNlLnRhc2tzIiwiRmlsdGVyM0RCYXNlLmdldE1haW5JbnB1dFRleHR1cmUiLCJGaWx0ZXIzREJhc2UudGV4dHVyZVdpZHRoIiwiRmlsdGVyM0RCYXNlLnRleHR1cmVIZWlnaHQiLCJGaWx0ZXIzREJhc2Uuc2V0UmVuZGVyVGFyZ2V0cyIsIkZpbHRlcjNEQmFzZS5kaXNwb3NlIiwiRmlsdGVyM0RCYXNlLnVwZGF0ZSJdLCJtYXBwaW5ncyI6IkFBT0EsSUFBTSxZQUFZO0lBT2pCQSxTQVBLQSxZQUFZQTtRQVNoQkMsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsSUFBSUEsS0FBS0EsRUFBb0JBLENBQUNBO0lBQzdDQSxDQUFDQTtJQUVERCxzQkFBV0EsNENBQWtCQTthQUE3QkE7WUFFQ0UsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsbUJBQW1CQSxDQUFDQTtRQUNqQ0EsQ0FBQ0E7OztPQUFBRjtJQUVNQSwrQkFBUUEsR0FBZkEsVUFBZ0JBLE1BQXVCQTtRQUV0Q0csSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFFekJBLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLG1CQUFtQkEsSUFBSUEsSUFBSUEsQ0FBQ0E7WUFDcENBLElBQUlBLENBQUNBLG1CQUFtQkEsR0FBR0EsTUFBTUEsQ0FBQ0Esa0JBQWtCQSxDQUFDQTtJQUN2REEsQ0FBQ0E7SUFFREgsc0JBQVdBLCtCQUFLQTthQUFoQkE7WUFFQ0ksTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0E7UUFDcEJBLENBQUNBOzs7T0FBQUo7SUFFTUEsMENBQW1CQSxHQUExQkEsVUFBMkJBLEtBQVdBO1FBRXJDSyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxtQkFBbUJBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO0lBQ2xEQSxDQUFDQTtJQUVETCxzQkFBV0Esc0NBQVlBO2FBQXZCQTtZQUVDTSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQTtRQUMzQkEsQ0FBQ0E7YUFFRE4sVUFBd0JBLEtBQVlBO1lBRW5DTSxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUUzQkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsRUFBRUEsRUFBRUEsQ0FBQ0E7Z0JBQ2pEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxZQUFZQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUN0Q0EsQ0FBQ0E7OztPQVJBTjtJQVVEQSxzQkFBV0EsdUNBQWFBO2FBQXhCQTtZQUVDTyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQTtRQUM1QkEsQ0FBQ0E7YUFFRFAsVUFBeUJBLEtBQVlBO1lBRXBDTyxJQUFJQSxDQUFDQSxjQUFjQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUU1QkEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsTUFBTUEsRUFBRUEsRUFBRUEsQ0FBQ0E7Z0JBQ2pEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxhQUFhQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUN2Q0EsQ0FBQ0E7OztPQVJBUDtJQVVEQSxxREFBcURBO0lBQzlDQSx1Q0FBZ0JBLEdBQXZCQSxVQUF3QkEsVUFBbUJBLEVBQUVBLEtBQVdBO1FBRXZEUSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQSxNQUFNQSxHQUFHQSxVQUFVQSxDQUFDQTtJQUN6REEsQ0FBQ0E7SUFFTVIsOEJBQU9BLEdBQWRBO1FBRUNTLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQVVBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLE1BQU1BLEVBQUVBLEVBQUVBLENBQUNBO1lBQ2pEQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxPQUFPQSxFQUFFQSxDQUFDQTtJQUMzQkEsQ0FBQ0E7SUFFTVQsNkJBQU1BLEdBQWJBLFVBQWNBLEtBQVdBLEVBQUVBLE1BQWFBO0lBR3hDVSxDQUFDQTtJQUNGVixtQkFBQ0E7QUFBREEsQ0E3RUEsQUE2RUNBLElBQUE7QUFFRCxBQUFzQixpQkFBYixZQUFZLENBQUMiLCJmaWxlIjoiZmlsdGVycy9GaWx0ZXIzREJhc2UuanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhbWVyYVx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9DYW1lcmFcIik7XHJcblxyXG5pbXBvcnQgU3RhZ2VcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvYmFzZS9TdGFnZVwiKTtcclxuaW1wb3J0IElUZXh0dXJlXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL2Jhc2UvSVRleHR1cmVcIik7XHJcblxyXG5pbXBvcnQgRmlsdGVyM0RUYXNrQmFzZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL2ZpbHRlcnMvdGFza3MvRmlsdGVyM0RUYXNrQmFzZVwiKTtcclxuXHJcbmNsYXNzIEZpbHRlcjNEQmFzZVxyXG57XHJcblx0cHJpdmF0ZSBfdGFza3M6QXJyYXk8RmlsdGVyM0RUYXNrQmFzZT47XHJcblx0cHJpdmF0ZSBfcmVxdWlyZURlcHRoUmVuZGVyOmJvb2xlYW47XHJcblx0cHJpdmF0ZSBfdGV4dHVyZVdpZHRoOm51bWJlcjtcclxuXHRwcml2YXRlIF90ZXh0dXJlSGVpZ2h0Om51bWJlcjtcclxuXHJcblx0Y29uc3RydWN0b3IoKVxyXG5cdHtcclxuXHRcdHRoaXMuX3Rhc2tzID0gbmV3IEFycmF5PEZpbHRlcjNEVGFza0Jhc2U+KCk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgZ2V0IHJlcXVpcmVEZXB0aFJlbmRlcigpOmJvb2xlYW5cclxuXHR7XHJcblx0XHRyZXR1cm4gdGhpcy5fcmVxdWlyZURlcHRoUmVuZGVyO1xyXG5cdH1cclxuXHJcblx0cHVibGljIHBBZGRUYXNrKGZpbHRlcjpGaWx0ZXIzRFRhc2tCYXNlKVxyXG5cdHtcclxuXHRcdHRoaXMuX3Rhc2tzLnB1c2goZmlsdGVyKTtcclxuXHJcblx0XHRpZiAodGhpcy5fcmVxdWlyZURlcHRoUmVuZGVyID09IG51bGwpXHJcblx0XHRcdHRoaXMuX3JlcXVpcmVEZXB0aFJlbmRlciA9IGZpbHRlci5yZXF1aXJlRGVwdGhSZW5kZXI7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgZ2V0IHRhc2tzKCk6RmlsdGVyM0RUYXNrQmFzZVtdXHJcblx0e1xyXG5cdFx0cmV0dXJuIHRoaXMuX3Rhc2tzO1xyXG5cdH1cclxuXHJcblx0cHVibGljIGdldE1haW5JbnB1dFRleHR1cmUoc3RhZ2U6U3RhZ2UpOklUZXh0dXJlXHJcblx0e1xyXG5cdFx0cmV0dXJuIHRoaXMuX3Rhc2tzWzBdLmdldE1haW5JbnB1dFRleHR1cmUoc3RhZ2UpO1xyXG5cdH1cclxuXHJcblx0cHVibGljIGdldCB0ZXh0dXJlV2lkdGgoKTpudW1iZXJcclxuXHR7XHJcblx0XHRyZXR1cm4gdGhpcy5fdGV4dHVyZVdpZHRoO1xyXG5cdH1cclxuXHJcblx0cHVibGljIHNldCB0ZXh0dXJlV2lkdGgodmFsdWU6bnVtYmVyKVxyXG5cdHtcclxuXHRcdHRoaXMuX3RleHR1cmVXaWR0aCA9IHZhbHVlO1xyXG5cclxuXHRcdGZvciAodmFyIGk6bnVtYmVyID0gMDsgaSA8IHRoaXMuX3Rhc2tzLmxlbmd0aDsgKytpKVxyXG5cdFx0XHR0aGlzLl90YXNrc1tpXS50ZXh0dXJlV2lkdGggPSB2YWx1ZTtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBnZXQgdGV4dHVyZUhlaWdodCgpOm51bWJlclxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLl90ZXh0dXJlSGVpZ2h0O1xyXG5cdH1cclxuXHJcblx0cHVibGljIHNldCB0ZXh0dXJlSGVpZ2h0KHZhbHVlOm51bWJlcilcclxuXHR7XHJcblx0XHR0aGlzLl90ZXh0dXJlSGVpZ2h0ID0gdmFsdWU7XHJcblxyXG5cdFx0Zm9yICh2YXIgaTpudW1iZXIgPSAwOyBpIDwgdGhpcy5fdGFza3MubGVuZ3RoOyArK2kpXHJcblx0XHRcdHRoaXMuX3Rhc2tzW2ldLnRleHR1cmVIZWlnaHQgPSB2YWx1ZTtcclxuXHR9XHJcblxyXG5cdC8vIGxpbmsgdXAgdGhlIGZpbHRlcnMgY29ycmVjdGx5IHdpdGggdGhlIG5leHQgZmlsdGVyXHJcblx0cHVibGljIHNldFJlbmRlclRhcmdldHMobWFpblRhcmdldDpJVGV4dHVyZSwgc3RhZ2U6U3RhZ2UpXHJcblx0e1xyXG5cdFx0dGhpcy5fdGFza3NbdGhpcy5fdGFza3MubGVuZ3RoIC0gMV0udGFyZ2V0ID0gbWFpblRhcmdldDtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBkaXNwb3NlKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBpOm51bWJlciA9IDA7IGkgPCB0aGlzLl90YXNrcy5sZW5ndGg7ICsraSlcclxuXHRcdFx0dGhpcy5fdGFza3NbaV0uZGlzcG9zZSgpO1xyXG5cdH1cclxuXHJcblx0cHVibGljIHVwZGF0ZShzdGFnZTpTdGFnZSwgY2FtZXJhOkNhbWVyYSlcclxuXHR7XHJcblxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0ID0gRmlsdGVyM0RCYXNlOyJdfQ==