var MaterialPassData = require("awayjs-renderergl/lib/pool/MaterialPassData");
/**
 * @class away.pool.MaterialPassDataPool
 */
var MaterialPassDataPool = (function () {
    /**
     * //TODO
     *
     * @param textureDataClass
     */
    function MaterialPassDataPool(material) {
        this._pool = new Object();
        this._material = material;
    }
    /**
     * //TODO
     *
     * @param materialOwner
     * @returns ITexture
     */
    MaterialPassDataPool.prototype.getItem = function (materialPass) {
        return (this._pool[materialPass.id] || (this._pool[materialPass.id] = this._material._iAddMaterialPassData(materialPass._iAddMaterialPassData(new MaterialPassData(this, this._material, materialPass)))));
    };
    /**
     * //TODO
     *
     * @param materialOwner
     */
    MaterialPassDataPool.prototype.disposeItem = function (materialPass) {
        materialPass._iRemoveMaterialPassData(this._pool[materialPass.id]);
        delete this._pool[materialPass.id];
    };
    MaterialPassDataPool.prototype.disposePool = function () {
        for (var id in this._pool)
            this._pool[id].materialPass._iRemoveMaterialPassData(this._pool[id]);
        delete this._pool;
    };
    return MaterialPassDataPool;
})();
module.exports = MaterialPassDataPool;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9wb29sL21hdGVyaWFscGFzc2RhdGFwb29sLnRzIl0sIm5hbWVzIjpbIk1hdGVyaWFsUGFzc0RhdGFQb29sIiwiTWF0ZXJpYWxQYXNzRGF0YVBvb2wuY29uc3RydWN0b3IiLCJNYXRlcmlhbFBhc3NEYXRhUG9vbC5nZXRJdGVtIiwiTWF0ZXJpYWxQYXNzRGF0YVBvb2wuZGlzcG9zZUl0ZW0iLCJNYXRlcmlhbFBhc3NEYXRhUG9vbC5kaXNwb3NlUG9vbCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTyxnQkFBZ0IsV0FBYyw2Q0FBNkMsQ0FBQyxDQUFDO0FBSXBGLEFBR0E7O0dBREc7SUFDRyxvQkFBb0I7SUFLekJBOzs7O09BSUdBO0lBQ0hBLFNBVktBLG9CQUFvQkEsQ0FVYkEsUUFBdUJBO1FBUjNCQyxVQUFLQSxHQUFVQSxJQUFJQSxNQUFNQSxFQUFFQSxDQUFDQTtRQVVuQ0EsSUFBSUEsQ0FBQ0EsU0FBU0EsR0FBR0EsUUFBUUEsQ0FBQ0E7SUFDM0JBLENBQUNBO0lBRUREOzs7OztPQUtHQTtJQUNJQSxzQ0FBT0EsR0FBZEEsVUFBZUEsWUFBK0JBO1FBRTdDRSxNQUFNQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFFQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxxQkFBcUJBLENBQUNBLFlBQVlBLENBQUNBLHFCQUFxQkEsQ0FBQ0EsSUFBSUEsZ0JBQWdCQSxDQUFDQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQSxTQUFTQSxFQUFFQSxZQUFZQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUM1TUEsQ0FBQ0E7SUFFREY7Ozs7T0FJR0E7SUFDSUEsMENBQVdBLEdBQWxCQSxVQUFtQkEsWUFBK0JBO1FBRWpERyxZQUFZQSxDQUFDQSx3QkFBd0JBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLFlBQVlBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBRW5FQSxPQUFPQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtJQUNwQ0EsQ0FBQ0E7SUFFTUgsMENBQVdBLEdBQWxCQTtRQUVDSSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxJQUFJQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQTtZQUNMQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxFQUFFQSxDQUFFQSxDQUFDQSxZQUFZQSxDQUFDQSx3QkFBd0JBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBRTNGQSxPQUFPQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQTtJQUNuQkEsQ0FBQ0E7SUFDRkosMkJBQUNBO0FBQURBLENBN0NBLEFBNkNDQSxJQUFBO0FBRUQsQUFBOEIsaUJBQXJCLG9CQUFvQixDQUFDIiwiZmlsZSI6InBvb2wvTWF0ZXJpYWxQYXNzRGF0YVBvb2wuanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hdGVyaWFsUGFzc0RhdGFcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9wb29sL01hdGVyaWFsUGFzc0RhdGFcIik7XG5pbXBvcnQgTWF0ZXJpYWxHTEJhc2VcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9tYXRlcmlhbHMvTWF0ZXJpYWxHTEJhc2VcIik7XG5pbXBvcnQgTWF0ZXJpYWxQYXNzR0xCYXNlXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL3Bhc3Nlcy9NYXRlcmlhbFBhc3NHTEJhc2VcIik7XG5cbi8qKlxuICogQGNsYXNzIGF3YXkucG9vbC5NYXRlcmlhbFBhc3NEYXRhUG9vbFxuICovXG5jbGFzcyBNYXRlcmlhbFBhc3NEYXRhUG9vbFxue1xuXHRwcml2YXRlIF9wb29sOk9iamVjdCA9IG5ldyBPYmplY3QoKTtcblx0cHJpdmF0ZSBfbWF0ZXJpYWw6TWF0ZXJpYWxHTEJhc2U7XG5cblx0LyoqXG5cdCAqIC8vVE9ET1xuXHQgKlxuXHQgKiBAcGFyYW0gdGV4dHVyZURhdGFDbGFzc1xuXHQgKi9cblx0Y29uc3RydWN0b3IobWF0ZXJpYWw6TWF0ZXJpYWxHTEJhc2UpXG5cdHtcblx0XHR0aGlzLl9tYXRlcmlhbCA9IG1hdGVyaWFsO1xuXHR9XG5cblx0LyoqXG5cdCAqIC8vVE9ET1xuXHQgKlxuXHQgKiBAcGFyYW0gbWF0ZXJpYWxPd25lclxuXHQgKiBAcmV0dXJucyBJVGV4dHVyZVxuXHQgKi9cblx0cHVibGljIGdldEl0ZW0obWF0ZXJpYWxQYXNzOk1hdGVyaWFsUGFzc0dMQmFzZSk6TWF0ZXJpYWxQYXNzRGF0YVxuXHR7XG5cdFx0cmV0dXJuICh0aGlzLl9wb29sW21hdGVyaWFsUGFzcy5pZF0gfHwgKHRoaXMuX3Bvb2xbbWF0ZXJpYWxQYXNzLmlkXSA9IHRoaXMuX21hdGVyaWFsLl9pQWRkTWF0ZXJpYWxQYXNzRGF0YShtYXRlcmlhbFBhc3MuX2lBZGRNYXRlcmlhbFBhc3NEYXRhKG5ldyBNYXRlcmlhbFBhc3NEYXRhKHRoaXMsIHRoaXMuX21hdGVyaWFsLCBtYXRlcmlhbFBhc3MpKSkpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiAvL1RPRE9cblx0ICpcblx0ICogQHBhcmFtIG1hdGVyaWFsT3duZXJcblx0ICovXG5cdHB1YmxpYyBkaXNwb3NlSXRlbShtYXRlcmlhbFBhc3M6TWF0ZXJpYWxQYXNzR0xCYXNlKVxuXHR7XG5cdFx0bWF0ZXJpYWxQYXNzLl9pUmVtb3ZlTWF0ZXJpYWxQYXNzRGF0YSh0aGlzLl9wb29sW21hdGVyaWFsUGFzcy5pZF0pO1xuXG5cdFx0ZGVsZXRlIHRoaXMuX3Bvb2xbbWF0ZXJpYWxQYXNzLmlkXTtcblx0fVxuXG5cdHB1YmxpYyBkaXNwb3NlUG9vbCgpXG5cdHtcblx0XHRmb3IgKHZhciBpZCBpbiB0aGlzLl9wb29sKVxuXHRcdFx0KDxNYXRlcmlhbFBhc3NEYXRhPiB0aGlzLl9wb29sW2lkXSkubWF0ZXJpYWxQYXNzLl9pUmVtb3ZlTWF0ZXJpYWxQYXNzRGF0YSh0aGlzLl9wb29sW2lkXSk7XG5cblx0XHRkZWxldGUgdGhpcy5fcG9vbDtcblx0fVxufVxuXG5leHBvcnQgPSBNYXRlcmlhbFBhc3NEYXRhUG9vbDsiXX0=