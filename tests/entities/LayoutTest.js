var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var CoordinateSystem = require("awayjs-core/lib/projections/CoordinateSystem");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/View");
var HoverController = require("awayjs-display/lib/controllers/HoverController");
var Billboard = require("awayjs-display/lib/display/Billboard");
var AwayMouseEvent = require("awayjs-display/lib/events/MouseEvent");
var BasicMaterial = require("awayjs-display/lib/materials/BasicMaterial");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var LayoutTest = (function () {
    function LayoutTest() {
        var _this = this;
        this._move = false;
        this._billboards = new Array();
        //listen for a resource complete event
        AssetLibrary.addEventListener(LoaderEvent.LOAD_COMPLETE, function (event) { return _this.onLoadComplete(event); });
        //load an image
        AssetLibrary.load(new URLRequest('assets/256x256.png'));
    }
    /**
     * Listener for load complete event
     *
     * @param event
     */
    LayoutTest.prototype.onLoadComplete = function (event) {
        var _this = this;
        //create the view
        this._view = new View(new DefaultRenderer());
        this._projection = this._view.camera.projection;
        this._projection.coordinateSystem = CoordinateSystem.RIGHT_HANDED;
        this._projection.focalLength = 1000;
        this._projection.preserveFocalLength = true;
        this._projection.originX = 0;
        this._projection.originY = 0;
        //create a bitmap material
        this._bitmapMaterial = new BasicMaterial(event.assets[0]);
        var billboard;
        var numHBillboards = 2;
        var numVBillboards = 2;
        for (var i = 0; i < numHBillboards; i++) {
            for (var j = 0; j < numVBillboards; j++) {
                billboard = new Billboard(this._bitmapMaterial);
                //billboard.width = 50;
                //billboard.height = 50;
                //billboard.pivot = new Vector3D(billboard.billboardWidth/2, billboard.billboardHeight/2, 0);
                billboard.x = j * 300;
                billboard.y = i * 300;
                billboard.z = 0;
                billboard.addEventListener(AwayMouseEvent.MOUSE_MOVE, this.onMouseEvent);
                //billboard.orientationMode = away.base.OrientationMode.CAMERA_PLANE;
                //billboard.alignmentMode = away.base.AlignmentMode.PIVOT_POINT;
                this._billboards.push(billboard);
                //add billboard to the scene
                this._view.scene.addChild(billboard);
            }
        }
        this._hoverControl = new HoverController(this._view.camera, null, 180, 0, 1000);
        document.onmousedown = function (event) { return _this.onMouseDownHandler(event); };
        document.onmouseup = function (event) { return _this.onMouseUpHandler(event); };
        document.onmousemove = function (event) { return _this.onMouseMove(event); };
        window.onresize = function (event) { return _this.onResize(event); };
        //trigger an initial resize for the view
        this.onResize(null);
        //setup the RAF for a render listener
        this._timer = new RequestAnimationFrame(this.render, this);
        this._timer.start();
    };
    LayoutTest.prototype.onMouseEvent = function (event) {
        console.log(event);
    };
    LayoutTest.prototype.onResize = function (event) {
        this._view.x = 0;
        this._view.y = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    LayoutTest.prototype.render = function (dt) {
        for (var i = 0; i < this._billboards.length; i++) {
        }
        this._view.render();
    };
    LayoutTest.prototype.onMouseUpHandler = function (event) {
        this._move = false;
    };
    LayoutTest.prototype.onMouseMove = function (event) {
        if (this._move) {
            this._hoverControl.panAngle = 0.3 * (event.clientX - this._lastMouseX) + this._lastPanAngle;
            this._hoverControl.tiltAngle = -0.3 * (event.clientY - this._lastMouseY) + this._lastTiltAngle;
        }
    };
    LayoutTest.prototype.onMouseDownHandler = function (event) {
        this._lastPanAngle = this._hoverControl.panAngle;
        this._lastTiltAngle = this._hoverControl.tiltAngle;
        this._lastMouseX = event.clientX;
        this._lastMouseY = event.clientY;
        this._move = true;
    };
    return LayoutTest;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0aWVzL0xheW91dFRlc3QudHMiXSwibmFtZXMiOlsiTGF5b3V0VGVzdCIsIkxheW91dFRlc3QuY29uc3RydWN0b3IiLCJMYXlvdXRUZXN0Lm9uTG9hZENvbXBsZXRlIiwiTGF5b3V0VGVzdC5vbk1vdXNlRXZlbnQiLCJMYXlvdXRUZXN0Lm9uUmVzaXplIiwiTGF5b3V0VGVzdC5yZW5kZXIiLCJMYXlvdXRUZXN0Lm9uTW91c2VVcEhhbmRsZXIiLCJMYXlvdXRUZXN0Lm9uTW91c2VNb3ZlIiwiTGF5b3V0VGVzdC5vbk1vdXNlRG93bkhhbmRsZXIiXSwibWFwcGluZ3MiOiJBQUVBLElBQU8sWUFBWSxXQUFlLHNDQUFzQyxDQUFDLENBQUM7QUFFMUUsSUFBTyxVQUFVLFdBQWUsZ0NBQWdDLENBQUMsQ0FBQztBQUNsRSxJQUFPLFdBQVcsV0FBZSxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3ZFLElBQU8sZ0JBQWdCLFdBQWMsOENBQThDLENBQUMsQ0FBQztBQUVyRixJQUFPLHFCQUFxQixXQUFZLDZDQUE2QyxDQUFDLENBQUM7QUFFdkYsSUFBTyxJQUFJLFdBQWlCLHlCQUF5QixDQUFDLENBQUM7QUFDdkQsSUFBTyxlQUFlLFdBQWMsZ0RBQWdELENBQUMsQ0FBQztBQUN0RixJQUFPLFNBQVMsV0FBZSxzQ0FBc0MsQ0FBQyxDQUFDO0FBRXZFLElBQU8sY0FBYyxXQUFjLHNDQUFzQyxDQUFDLENBQUM7QUFDM0UsSUFBTyxhQUFhLFdBQWMsNENBQTRDLENBQUMsQ0FBQztBQUdoRixJQUFPLGVBQWUsV0FBYyx1Q0FBdUMsQ0FBQyxDQUFDO0FBRTdFLElBQU0sVUFBVTtJQWlCZkEsU0FqQktBLFVBQVVBO1FBQWhCQyxpQkFpSUNBO1FBMUhRQSxVQUFLQSxHQUFXQSxLQUFLQSxDQUFDQTtRQVF0QkEsZ0JBQVdBLEdBQW9CQSxJQUFJQSxLQUFLQSxFQUFhQSxDQUFDQTtRQUk3REEsQUFDQUEsc0NBRHNDQTtRQUN0Q0EsWUFBWUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxXQUFX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LENBQUNBLEdBQUdBLEdBQUNBLENBQUNBLEtBQUtBLENBQUNBLE9BQU9BLEdBQUdBLElBQUlBLENBQUNBLFdBQVdBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBO1FBQzlGQSxDQUFDQTtJQUNGQSxDQUFDQTtJQUVPUCx1Q0FBa0JBLEdBQTFCQSxVQUEyQkEsS0FBZ0JBO1FBRTFDUSxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxRQUFRQSxDQUFDQTtRQUNqREEsSUFBSUEsQ0FBQ0EsY0FBY0EsR0FBR0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsU0FBU0EsQ0FBQ0E7UUFDbkRBLElBQUlBLENBQUNBLFdBQVdBLEdBQUdBLEtBQUtBLENBQUNBLE9BQU9BLENBQUNBO1FBQ2pDQSxJQUFJQSxDQUFDQSxXQUFXQSxHQUFHQSxLQUFLQSxDQUFDQSxPQUFPQSxDQUFDQTtRQUNqQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDbkJBLENBQUNBO0lBQ0ZSLGlCQUFDQTtBQUFEQSxDQWpJQSxBQWlJQ0EsSUFBQSIsImZpbGUiOiJlbnRpdGllcy9MYXlvdXRUZXN0LmpzIiwic291cmNlUm9vdCI6Ii4vdGVzdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQml0bWFwSW1hZ2UyRFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2ltYWdlL0JpdG1hcEltYWdlMkRcIik7XG5pbXBvcnQgVmVjdG9yM0RcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZ2VvbS9WZWN0b3IzRFwiKTtcbmltcG9ydCBBc3NldExpYnJhcnlcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2xpYnJhcnkvQXNzZXRMaWJyYXJ5XCIpO1xuaW1wb3J0IFVSTExvYWRlclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvbmV0L1VSTExvYWRlclwiKTtcbmltcG9ydCBVUkxSZXF1ZXN0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9uZXQvVVJMUmVxdWVzdFwiKTtcbmltcG9ydCBMb2FkZXJFdmVudFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZXZlbnRzL0xvYWRlckV2ZW50XCIpO1xuaW1wb3J0IENvb3JkaW5hdGVTeXN0ZW1cdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9wcm9qZWN0aW9ucy9Db29yZGluYXRlU3lzdGVtXCIpO1xuaW1wb3J0IFBlcnNwZWN0aXZlUHJvamVjdGlvblx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvcHJvamVjdGlvbnMvUGVyc3BlY3RpdmVQcm9qZWN0aW9uXCIpO1xuaW1wb3J0IFJlcXVlc3RBbmltYXRpb25GcmFtZVx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIpO1xuXG5pbXBvcnQgVmlld1x0XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL1ZpZXdcIik7XG5pbXBvcnQgSG92ZXJDb250cm9sbGVyXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udHJvbGxlcnMvSG92ZXJDb250cm9sbGVyXCIpO1xuaW1wb3J0IEJpbGxib2FyZFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZGlzcGxheS9CaWxsYm9hcmRcIik7XG5pbXBvcnQgU3ByaXRlXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2Rpc3BsYXkvU3ByaXRlXCIpO1xuaW1wb3J0IEF3YXlNb3VzZUV2ZW50XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZXZlbnRzL01vdXNlRXZlbnRcIik7XG5pbXBvcnQgQmFzaWNNYXRlcmlhbFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL21hdGVyaWFscy9CYXNpY01hdGVyaWFsXCIpO1xuaW1wb3J0IFNpbmdsZTJEVGV4dHVyZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL3RleHR1cmVzL1NpbmdsZTJEVGV4dHVyZVwiKTtcblxuaW1wb3J0IERlZmF1bHRSZW5kZXJlclx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL0RlZmF1bHRSZW5kZXJlclwiKTtcblxuY2xhc3MgTGF5b3V0VGVzdFxue1xuXHRwcml2YXRlIF92aWV3OlZpZXc7XG5cdHByaXZhdGUgX3Byb2plY3Rpb246UGVyc3BlY3RpdmVQcm9qZWN0aW9uO1xuXHRwcml2YXRlIF90aW1lcjpSZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XG5cdHByaXZhdGUgX2hvdmVyQ29udHJvbDpIb3ZlckNvbnRyb2xsZXI7XG5cblx0cHJpdmF0ZSBfbW92ZTpib29sZWFuID0gZmFsc2U7XG5cdHByaXZhdGUgX2xhc3RQYW5BbmdsZTpudW1iZXI7XG5cdHByaXZhdGUgX2xhc3RUaWx0QW5nbGU6bnVtYmVyO1xuXHRwcml2YXRlIF9sYXN0TW91c2VYOm51bWJlcjtcblx0cHJpdmF0ZSBfbGFzdE1vdXNlWTpudW1iZXI7XG5cblx0cHJpdmF0ZSBfdGV4dHVyZTpTaW5nbGUyRFRleHR1cmU7XG5cdHByaXZhdGUgX2JpdG1hcE1hdGVyaWFsOkJhc2ljTWF0ZXJpYWw7XG5cdHByaXZhdGUgX2JpbGxib2FyZHM6QXJyYXk8QmlsbGJvYXJkPiA9IG5ldyBBcnJheTxCaWxsYm9hcmQ+KCk7XG5cblx0Y29uc3RydWN0b3IoKVxuXHR7XG5cdFx0Ly9saXN0ZW4gZm9yIGEgcmVzb3VyY2UgY29tcGxldGUgZXZlbnRcblx0XHRBc3NldExpYnJhcnkuYWRkRXZlbnRMaXN0ZW5lcihMb2FkZXJFdmVudC5MT0FEX0NPTVBMRVRFICwgKGV2ZW50OkxvYWRlckV2ZW50KSA9PiB0aGlzLm9uTG9hZENvbXBsZXRlKGV2ZW50KSk7XG5cblx0XHQvL2xvYWQgYW4gaW1hZ2Vcblx0XHRBc3NldExpYnJhcnkubG9hZChuZXcgVVJMUmVxdWVzdCgnYXNzZXRzLzI1NngyNTYucG5nJykgKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBMaXN0ZW5lciBmb3IgbG9hZCBjb21wbGV0ZSBldmVudFxuXHQgKlxuXHQgKiBAcGFyYW0gZXZlbnRcblx0ICovXG5cdHByaXZhdGUgb25Mb2FkQ29tcGxldGUoZXZlbnQ6TG9hZGVyRXZlbnQpXG5cdHtcblx0XHQvL2NyZWF0ZSB0aGUgdmlld1xuXHRcdHRoaXMuX3ZpZXcgPSBuZXcgVmlldyhuZXcgRGVmYXVsdFJlbmRlcmVyKCkpO1xuXG5cdFx0dGhpcy5fcHJvamVjdGlvbiA9IDxQZXJzcGVjdGl2ZVByb2plY3Rpb24+IHRoaXMuX3ZpZXcuY2FtZXJhLnByb2plY3Rpb247XG5cblxuXHRcdHRoaXMuX3Byb2plY3Rpb24uY29vcmRpbmF0ZVN5c3RlbSA9IENvb3JkaW5hdGVTeXN0ZW0uUklHSFRfSEFOREVEO1xuXHRcdHRoaXMuX3Byb2plY3Rpb24uZm9jYWxMZW5ndGggPSAxMDAwO1xuXHRcdHRoaXMuX3Byb2plY3Rpb24ucHJlc2VydmVGb2NhbExlbmd0aCA9IHRydWU7XG5cdFx0dGhpcy5fcHJvamVjdGlvbi5vcmlnaW5YID0gMDtcblx0XHR0aGlzLl9wcm9qZWN0aW9uLm9yaWdpblkgPSAwO1xuXG5cdFx0Ly9jcmVhdGUgYSBiaXRtYXAgbWF0ZXJpYWxcblx0XHR0aGlzLl9iaXRtYXBNYXRlcmlhbCA9IG5ldyBCYXNpY01hdGVyaWFsKDxCaXRtYXBJbWFnZTJEPiBldmVudC5hc3NldHNbMF0pO1xuXG5cdFx0dmFyIGJpbGxib2FyZDpCaWxsYm9hcmQ7XG5cdFx0dmFyIG51bUhCaWxsYm9hcmRzOm51bWJlciA9IDI7XG5cdFx0dmFyIG51bVZCaWxsYm9hcmRzOm51bWJlciA9IDI7XG5cdFx0Zm9yICh2YXIgaTpudW1iZXIgPSAwOyBpIDwgbnVtSEJpbGxib2FyZHM7IGkrKykge1xuXHRcdFx0Zm9yICh2YXIgajpudW1iZXIgPSAwOyBqIDwgbnVtVkJpbGxib2FyZHM7IGorKykge1xuXHRcdFx0XHRiaWxsYm9hcmQgPSBuZXcgQmlsbGJvYXJkKHRoaXMuX2JpdG1hcE1hdGVyaWFsKTtcblx0XHRcdFx0Ly9iaWxsYm9hcmQud2lkdGggPSA1MDtcblx0XHRcdFx0Ly9iaWxsYm9hcmQuaGVpZ2h0ID0gNTA7XG5cdFx0XHRcdC8vYmlsbGJvYXJkLnBpdm90ID0gbmV3IFZlY3RvcjNEKGJpbGxib2FyZC5iaWxsYm9hcmRXaWR0aC8yLCBiaWxsYm9hcmQuYmlsbGJvYXJkSGVpZ2h0LzIsIDApO1xuXHRcdFx0XHRiaWxsYm9hcmQueCA9IGoqMzAwO1xuXHRcdFx0XHRiaWxsYm9hcmQueSA9IGkqMzAwO1xuXHRcdFx0XHRiaWxsYm9hcmQueiA9IDA7XG5cdFx0XHRcdGJpbGxib2FyZC5hZGRFdmVudExpc3RlbmVyKEF3YXlNb3VzZUV2ZW50Lk1PVVNFX01PVkUsIHRoaXMub25Nb3VzZUV2ZW50KTtcblx0XHRcdFx0Ly9iaWxsYm9hcmQub3JpZW50YXRpb25Nb2RlID0gYXdheS5iYXNlLk9yaWVudGF0aW9uTW9kZS5DQU1FUkFfUExBTkU7XG5cdFx0XHRcdC8vYmlsbGJvYXJkLmFsaWdubWVudE1vZGUgPSBhd2F5LmJhc2UuQWxpZ25tZW50TW9kZS5QSVZPVF9QT0lOVDtcblx0XHRcdFx0dGhpcy5fYmlsbGJvYXJkcy5wdXNoKGJpbGxib2FyZCk7XG5cdFx0XHRcdC8vYWRkIGJpbGxib2FyZCB0byB0aGUgc2NlbmVcblx0XHRcdFx0dGhpcy5fdmlldy5zY2VuZS5hZGRDaGlsZChiaWxsYm9hcmQpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoaXMuX2hvdmVyQ29udHJvbCA9IG5ldyBIb3ZlckNvbnRyb2xsZXIodGhpcy5fdmlldy5jYW1lcmEsIG51bGwsIDE4MCwgMCwgMTAwMCk7XG5cblx0XHRkb2N1bWVudC5vbm1vdXNlZG93biA9IChldmVudDpNb3VzZUV2ZW50KSA9PiB0aGlzLm9uTW91c2VEb3duSGFuZGxlcihldmVudCk7XG5cdFx0ZG9jdW1lbnQub25tb3VzZXVwID0gKGV2ZW50Ok1vdXNlRXZlbnQpID0+IHRoaXMub25Nb3VzZVVwSGFuZGxlcihldmVudCk7XG5cdFx0ZG9jdW1lbnQub25tb3VzZW1vdmUgPSAoZXZlbnQ6TW91c2VFdmVudCkgPT4gdGhpcy5vbk1vdXNlTW92ZShldmVudCk7XG5cblx0XHR3aW5kb3cub25yZXNpemUgID0gKGV2ZW50OlVJRXZlbnQpID0+IHRoaXMub25SZXNpemUoZXZlbnQpO1xuXG5cdFx0Ly90cmlnZ2VyIGFuIGluaXRpYWwgcmVzaXplIGZvciB0aGUgdmlld1xuXHRcdHRoaXMub25SZXNpemUobnVsbCk7XG5cblx0XHQvL3NldHVwIHRoZSBSQUYgZm9yIGEgcmVuZGVyIGxpc3RlbmVyXG5cdFx0dGhpcy5fdGltZXIgPSBuZXcgUmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMucmVuZGVyLCB0aGlzKTtcblx0XHR0aGlzLl90aW1lci5zdGFydCgpO1xuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlRXZlbnQoZXZlbnQ6QXdheU1vdXNlRXZlbnQpXG5cdHtcblx0XHRjb25zb2xlLmxvZyhldmVudCk7XG5cdH1cblxuXHRwcml2YXRlIG9uUmVzaXplKGV2ZW50OlVJRXZlbnQpXG5cdHtcblx0XHR0aGlzLl92aWV3LnggPSAwO1xuXHRcdHRoaXMuX3ZpZXcueSA9IDA7XG5cdFx0dGhpcy5fdmlldy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXHRcdHRoaXMuX3ZpZXcuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuXHR9XG5cblx0cHJpdmF0ZSByZW5kZXIoZHQ6bnVtYmVyKVxuXHR7XG5cdFx0Zm9yICh2YXIgaTpudW1iZXIgPSAwOyBpIDwgdGhpcy5fYmlsbGJvYXJkcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0Ly90aGlzLl9iaWxsYm9hcmRzW2ldLnJvdGF0aW9uWiArPTI7XG5cdFx0fVxuXG5cdFx0dGhpcy5fdmlldy5yZW5kZXIoKTtcblxuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlVXBIYW5kbGVyKGV2ZW50Ok1vdXNlRXZlbnQpXG5cdHtcblx0XHR0aGlzLl9tb3ZlID0gZmFsc2U7XG5cdH1cblxuXHRwcml2YXRlIG9uTW91c2VNb3ZlKGV2ZW50Ok1vdXNlRXZlbnQpXG5cdHtcblx0XHRpZiAodGhpcy5fbW92ZSkge1xuXHRcdFx0dGhpcy5faG92ZXJDb250cm9sLnBhbkFuZ2xlID0gMC4zKihldmVudC5jbGllbnRYIC0gdGhpcy5fbGFzdE1vdXNlWCkgKyB0aGlzLl9sYXN0UGFuQW5nbGU7XG5cdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wudGlsdEFuZ2xlID0gLTAuMyooZXZlbnQuY2xpZW50WSAtIHRoaXMuX2xhc3RNb3VzZVkpICsgdGhpcy5fbGFzdFRpbHRBbmdsZTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIG9uTW91c2VEb3duSGFuZGxlcihldmVudDpNb3VzZUV2ZW50KVxuXHR7XG5cdFx0dGhpcy5fbGFzdFBhbkFuZ2xlID0gdGhpcy5faG92ZXJDb250cm9sLnBhbkFuZ2xlO1xuXHRcdHRoaXMuX2xhc3RUaWx0QW5nbGUgPSB0aGlzLl9ob3ZlckNvbnRyb2wudGlsdEFuZ2xlO1xuXHRcdHRoaXMuX2xhc3RNb3VzZVggPSBldmVudC5jbGllbnRYO1xuXHRcdHRoaXMuX2xhc3RNb3VzZVkgPSBldmVudC5jbGllbnRZO1xuXHRcdHRoaXMuX21vdmUgPSB0cnVlO1xuXHR9XG59Il19