var BitmapImage2D = require("awayjs-core/lib/image/BitmapImage2D");
var Sampler2D = require("awayjs-core/lib/image/Sampler2D");
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var HoverController = require("awayjs-display/lib/controllers/HoverController");
var AlignmentMode = require("awayjs-display/lib/base/AlignmentMode");
var OrientationMode = require("awayjs-display/lib/base/OrientationMode");
var Billboard = require("awayjs-display/lib/entities/Billboard");
var BasicMaterial = require("awayjs-display/lib/materials/BasicMaterial");
var Style = require("awayjs-display/lib/base/Style");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var AtlasTest = (function () {
    /**
     * Constructor
     */
    function AtlasTest() {
        this._samplers = new Array();
        this._time = 0;
        this._move = false;
        this.init();
    }
    /**
     * Global initialise function
     */
    AtlasTest.prototype.init = function () {
        this.initEngine();
        this.initListeners();
        this.loadTexture();
    };
    /**
     * Initialise the engine
     */
    AtlasTest.prototype.initEngine = function () {
        this._view = new View(new DefaultRenderer());
        //setup the camera for optimal shadow rendering
        this._view.camera.projection.far = 2100;
        //setup controller to be used on the camera
        this._cameraController = new HoverController(this._view.camera, null, 45, 20, 1000, 10);
    };
    /**
     * Initialise the listeners
     */
    AtlasTest.prototype.initListeners = function () {
        var _this = this;
        document.onmousedown = function (event) { return _this.onMouseDown(event); };
        document.onmouseup = function (event) { return _this.onMouseUp(event); };
        document.onmousemove = function (event) { return _this.onMouseMove(event); };
        window.onresize = function (event) { return _this.onResize(event); };
        this.onResize();
        this._timer = new RequestAnimationFrame(this.onEnterFrame, this);
        this._timer.start();
    };
    /**
     * start loading our texture
     */
    AtlasTest.prototype.loadTexture = function () {
        var _this = this;
        AssetLibrary.addEventListener(LoaderEvent.LOAD_COMPLETE, function (event) { return _this.onLoadComplete(event); });
        AssetLibrary.load(new URLRequest("assets/atlas.xml"));
    };
    /**
     * Navigation and render loop
     */
    AtlasTest.prototype.onEnterFrame = function (dt) {
        this._time += dt;
        this._view.render();
    };
    /**
     * Listener function for load complete event on asset library
     */
    AtlasTest.prototype.onLoadComplete = function (event) {
        var assets = event.assets;
        var length = assets.length;
        for (var c = 0; c < length; c++) {
            var asset = assets[c];
            switch (event.url) {
                case "assets/atlas.xml":
                    if (asset.isAsset(BitmapImage2D)) {
                        this._material = new BasicMaterial(asset);
                        this._material.alphaBlending = true;
                        this._material.imageRect = true;
                    }
                    else if (asset.isAsset(Sampler2D)) {
                        this._samplers.push(asset);
                    }
            }
        }
        var len = this._samplers.length;
        for (var i = 0; i < len; i++) {
            //var size:number = this.getRandom(50 , 500);
            var s = new Billboard(this._material);
            var style = new Style();
            style.addSamplerAt(this._samplers[i], this._material.texture);
            s.style = style;
            s.pivot = new Vector3D(s.width / 2, s.height / 2, 0);
            //s.width = size;
            //s.height = size;
            s.orientationMode = OrientationMode.CAMERA_PLANE;
            s.alignmentMode = AlignmentMode.PIVOT_POINT;
            s.x = this.getRandom(-400, 400);
            s.y = this.getRandom(-400, 400);
            s.z = this.getRandom(-400, 400);
            this._view.scene.addChild(s);
        }
        this._timer.start();
    };
    /**
     * Mouse down listener for navigation
     */
    AtlasTest.prototype.onMouseDown = function (event) {
        this._lastPanAngle = this._cameraController.panAngle;
        this._lastTiltAngle = this._cameraController.tiltAngle;
        this._lastMouseX = event.clientX;
        this._lastMouseY = event.clientY;
        this._move = true;
    };
    /**
     * Mouse up listener for navigation
     */
    AtlasTest.prototype.onMouseUp = function (event) {
        this._move = false;
    };
    /**
     *
     * @param event
     */
    AtlasTest.prototype.onMouseMove = function (event) {
        if (this._move) {
            this._cameraController.panAngle = 0.3 * (event.clientX - this._lastMouseX) + this._lastPanAngle;
            this._cameraController.tiltAngle = 0.3 * (event.clientY - this._lastMouseY) + this._lastTiltAngle;
        }
    };
    /**
     * stage listener for resize events
     */
    AtlasTest.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    /**
     * Util function - getRandom Number
     */
    AtlasTest.prototype.getRandom = function (min, max) {
        return Math.random() * (max - min) + min;
    };
    return AtlasTest;
})();

//# sourceMappingURL=data:application/json;base64,