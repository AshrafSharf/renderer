{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "../index.ts",
    "lib/DefaultRenderer.ts",
    "lib/DepthRenderer.ts",
    "lib/DistanceRenderer.ts",
    "lib/Filter3DRenderer.ts",
    "lib/RendererBase.ts",
    "lib/lib/animators/AnimationSetBase.ts",
    "lib/lib/animators/AnimatorBase.ts",
    "lib/lib/animators/ParticleAnimationSet.ts",
    "lib/lib/animators/ParticleAnimator.ts",
    "lib/lib/animators/SkeletonAnimationSet.ts",
    "lib/lib/animators/SkeletonAnimator.ts",
    "lib/lib/animators/VertexAnimationSet.ts",
    "lib/lib/animators/VertexAnimator.ts",
    "lib/animators/lib/animators/data/AnimationElements.ts",
    "lib/animators/lib/animators/data/AnimationRegisterCache.ts",
    "lib/animators/lib/animators/data/ColorSegmentPoint.ts",
    "lib/animators/lib/animators/data/JointPose.ts",
    "lib/animators/lib/animators/data/ParticleAnimationData.ts",
    "lib/animators/lib/animators/data/ParticlePropertiesMode.ts",
    "lib/animators/lib/animators/data/ParticleProperties.ts",
    "lib/animators/lib/animators/data/SkeletonJoint.ts",
    "lib/animators/lib/animators/data/SkeletonPose.ts",
    "lib/animators/lib/animators/data/Skeleton.ts",
    "lib/animators/lib/animators/data/VertexAnimationMode.ts",
    "lib/animators/lib/animators/nodes/AnimationClipNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleAccelerationNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBillboardNode.ts",
    "lib/animators/lib/animators/nodes/ParticleColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleFollowNode.ts",
    "lib/animators/lib/animators/nodes/ParticleInitialColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleOrbitNode.ts",
    "lib/animators/lib/animators/nodes/ParticleOscillatorNode.ts",
    "lib/animators/lib/animators/nodes/ParticlePositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "lib/animators/lib/animators/nodes/ParticleScaleNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "lib/animators/lib/animators/nodes/ParticleTimeNode.ts",
    "lib/animators/lib/animators/nodes/ParticleUVNode.ts",
    "lib/animators/lib/animators/nodes/ParticleVelocityNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonClipNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/VertexClipNode.ts",
    "lib/animators/lib/animators/states/AnimationClipState.ts",
    "lib/animators/lib/animators/states/AnimationStateBase.ts",
    "lib/animators/lib/animators/states/ParticleAccelerationState.ts",
    "lib/animators/lib/animators/states/ParticleBezierCurveState.ts",
    "lib/animators/lib/animators/states/ParticleBillboardState.ts",
    "lib/animators/lib/animators/states/ParticleColorState.ts",
    "lib/animators/lib/animators/states/ParticleFollowState.ts",
    "lib/animators/lib/animators/states/ParticleInitialColorState.ts",
    "lib/animators/lib/animators/states/ParticleOrbitState.ts",
    "lib/animators/lib/animators/states/ParticleOscillatorState.ts",
    "lib/animators/lib/animators/states/ParticlePositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToHeadingState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToPositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotationalVelocityState.ts",
    "lib/animators/lib/animators/states/ParticleScaleState.ts",
    "lib/animators/lib/animators/states/ParticleSegmentedColorState.ts",
    "lib/animators/lib/animators/states/ParticleSpriteSheetState.ts",
    "lib/animators/lib/animators/states/ParticleStateBase.ts",
    "lib/animators/lib/animators/states/ParticleTimeState.ts",
    "lib/animators/lib/animators/states/ParticleUVState.ts",
    "lib/animators/lib/animators/states/ParticleVelocityState.ts",
    "lib/animators/lib/animators/states/SkeletonBinaryLERPState.ts",
    "lib/animators/lib/animators/states/SkeletonClipState.ts",
    "lib/animators/lib/animators/states/SkeletonDifferenceState.ts",
    "lib/animators/lib/animators/states/SkeletonDirectionalState.ts",
    "lib/animators/lib/animators/states/SkeletonNaryLERPState.ts",
    "lib/animators/lib/animators/states/VertexClipState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransition.ts",
    "lib/animators.ts",
    "lib/lib/elements/ElementsPool.ts",
    "lib/lib/elements/GL_ElementsBase.ts",
    "lib/lib/elements/GL_LineElements.ts",
    "lib/lib/elements/GL_SkyboxElements.ts",
    "lib/lib/elements/GL_TriangleElements.ts",
    "lib/elements.ts",
    "lib/lib/errors/AnimationSetError.ts",
    "lib/errors.ts",
    "lib/lib/events/AnimationStateEvent.ts",
    "lib/lib/events/AnimatorEvent.ts",
    "lib/lib/events/PassEvent.ts",
    "lib/lib/events/RTTEvent.ts",
    "lib/lib/events/ShadingMethodEvent.ts",
    "lib/events.ts",
    "lib/lib/filters/BlurFilter3D.ts",
    "lib/lib/filters/CompositeFilter3D.ts",
    "lib/lib/filters/FXAAFilter3D.ts",
    "lib/lib/filters/Filter3DBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DCompositeTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DFXAATask.ts",
    "lib/filters/lib/filters/tasks/Filter3DHBlurTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DTaskBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DVBlurTask.ts",
    "lib/filters.ts",
    "lib/lib/managers/RTTBufferManager.ts",
    "lib/managers.ts",
    "lib/lib/renderables/GL_BillboardRenderable.ts",
    "lib/lib/renderables/GL_GraphicRenderable.ts",
    "lib/lib/renderables/GL_LineSegmentRenderable.ts",
    "lib/lib/renderables/GL_RenderableBase.ts",
    "lib/lib/renderables/GL_SkyboxRenderable.ts",
    "lib/renderables.ts",
    "lib/lib/shaders/LightingShader.ts",
    "lib/lib/shaders/RegisterPool.ts",
    "lib/lib/shaders/ShaderBase.ts",
    "lib/lib/shaders/ShaderRegisterCache.ts",
    "lib/lib/shaders/ShaderRegisterData.ts",
    "lib/lib/shaders/ShaderRegisterElement.ts",
    "lib/shaders/lib/shaders/compilers/CompilerBase.ts",
    "lib/shaders/lib/shaders/compilers/LightingCompiler.ts",
    "lib/shaders.ts",
    "lib/lib/sort/RenderableMergeSort.ts",
    "lib/lib/sort/RenderableNullSort.ts",
    "lib/sort.ts",
    "lib/lib/surfaces/GL_BasicMaterialSurface.ts",
    "lib/lib/surfaces/GL_DepthSurface.ts",
    "lib/lib/surfaces/GL_DistanceSurface.ts",
    "lib/lib/surfaces/GL_SkyboxSurface.ts",
    "lib/lib/surfaces/GL_SurfaceBase.ts",
    "lib/lib/surfaces/GL_SurfacePassBase.ts",
    "lib/lib/surfaces/SurfacePool.ts",
    "lib/surfaces/lib/surfaces/passes/BasicMaterialPass.ts",
    "lib/surfaces/lib/surfaces/passes/PassBase.ts",
    "lib/surfaces.ts",
    "lib/lib/textures/GL_Single2DTexture.ts",
    "lib/lib/textures/GL_SingleCubeTexture.ts",
    "lib/lib/textures/GL_TextureBase.ts",
    "lib/textures.ts",
    "lib/tools/lib/tools/commands/Merge.ts",
    "lib/tools/lib/tools/data/ParticleGraphicsTransform.ts",
    "lib/tools.ts",
    "lib/lib/utils/ParticleGraphicsHelper.ts",
    "lib/lib/utils/PerspectiveMatrix3D.ts",
    "lib/utils.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import * as animators\t\t\t\tfrom \"./lib/animators\";\nimport * as elements\t\t\t\tfrom \"./lib/elements\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as filters\t\t\t\t\tfrom \"./lib/filters\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as renderables\t\t\t\tfrom \"./lib/renderables\";\nimport * as shaders\t\t\t\t\tfrom \"./lib/shaders\";\nimport * as sort\t\t\t\t\tfrom \"./lib/sort\";\nimport * as surfaces\t\t\t\tfrom \"./lib/surfaces\";\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\nimport * as tools\t\t\t\t\tfrom \"./lib/tools\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\nimport DefaultRenderer\t\t\t\tfrom \"./lib/DefaultRenderer\";\nimport DepthRenderer\t\t\t\tfrom \"./lib/DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./lib/DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./lib/Filter3DRenderer\";\nimport RendererBase\t\t\t\t\tfrom \"./lib/RendererBase\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\n\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox);\n\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements);\n\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(renderables.GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(renderables.GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox);\n\nexport {\n\tanimators,\n\telements,\n\terrors,\n\tevents,\n\tfilters,\n\tmanagers,\n\trenderables,\n\tshaders,\n\tsort,\n\tsurfaces,\n\ttextures,\n\ttools,\n\tutils,\n\tDefaultRenderer,\n\tDepthRenderer,\n\tDistanceRenderer,\n\tFilter3DRenderer,\n\tRendererBase\n}",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLClearMask\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLClearMask\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport DepthRenderer\t\t\t\tfrom \"./DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./Filter3DRenderer\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport GL_SkyboxElements\t\t\tfrom \"./elements/GL_SkyboxElements\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _skybox:Skybox;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis.shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = super.enterNode(node);\n\n\t\tif (enter && node.debugVisible)\n\t\t\tthis.applyEntity(node.bounds.boundsPrimitive);\n\n\t\treturn enter;\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this.shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this.shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this.shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tif (this._skybox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(camera);\n\t\t}\n\n\t\tsuper.pDraw(camera);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t **/\n\tprivate drawSkybox(camera:Camera)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(this._skybox);\n\n\t\trenderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar pass:IPass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._skybox = <Skybox> entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this.shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this.shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport default DefaultRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DepthSurface\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DepthRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DistanceSurface\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DistanceRenderer;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLVertexBufferFormat\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport RTTEvent\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport Filter3DTaskBase\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(0, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport default Filter3DRenderer;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport RendererEvent\t\t\t\tfrom \"awayjs-display/lib/events/RendererEvent\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport StageEvent\t\t\t\t\tfrom \"awayjs-stagegl/lib/events/StageEvent\";\nimport StageManager\t\t\t\t\tfrom \"awayjs-stagegl/lib/managers/StageManager\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport ISurfaceClassGL\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"./elements/ElementsPool\";\nimport IEntitySorter\t\t\t\tfrom \"./sort/IEntitySorter\";\nimport RenderableMergeSort\t\t\tfrom \"./sort/RenderableMergeSort\";\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tprivate _cameraPosition:Vector3D;\n\tpublic _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tprivate _sourceEntity:IEntity;\n\tprivate _zIndex:number;\n\tprivate _renderSceneTransform:Matrix3D;\n\n\t\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic shareContext:boolean;\n\t\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this.shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this.shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._sourceEntity = entity;\n\n\t\t// project onto camera's z-axis\n\t\tthis._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n\n\t\t//save sceneTransform\n\t\tthis._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n\n\t\t//collect renderables\n\t\tentity._acceptTraverser(this);\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\trenderableGL.sourceEntity = this._sourceEntity;\n\t\trenderableGL.zIndex = this._zIndex;\n\t\trenderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = this._renderSceneTransform;\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default RendererBase;",
    "import IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetError\t\t\tfrom \"../errors/AnimationSetError\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport default AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport RequestAnimationFrame\t\tfrom \"awayjs-core/lib/utils/RequestAnimationFrame\";\nimport getTimer\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IAnimationSet\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport IAnimationState\t\t\t\tfrom \"../animators/states/IAnimationState\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport AnimatorEvent\t\t\t\tfrom \"../events/AnimatorEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../animators/data/ParticleAnimationData\";\nimport ParticleProperties\t\t\t\tfrom \"../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../animators/nodes/ParticleTimeNode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic)\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport default ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../animators/ParticleAnimationSet\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../animators/states/ParticleStateBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport default ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport default SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport SkeletonAnimationSet\t\t\t\tfrom \"../animators/SkeletonAnimationSet\";\nimport JointPose\t\t\t\t\t\tfrom \"../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../animators/data/Skeleton\";\nimport SkeletonJoint\t\t\t\t\tfrom \"../animators/data/SkeletonJoint\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../animators/data/SkeletonPose\";\nimport ISkeletonAnimationState\t\t\tfrom \"../animators/states/ISkeletonAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport AnimationStateEvent\t\t\t\tfrom \"../events/AnimationStateEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar i0:number /*uint*/ = 0;\n\t\tvar i1:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport default VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport VertexAnimationSet\t\t\t\tfrom \"../animators/VertexAnimationSet\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport IVertexAnimationState\t\t\tfrom \"../animators/states/IVertexAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_ElementsBase\t\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate sprites\n\t\t\tvar sprite:Sprite;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsprite = this._pOwners[i];\n\t\t\t\tsprite.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default VertexAnimator;",
    "import Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IVertexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport default AnimationElements;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ShaderRegisterCache\t\t\tfrom \"../../animators/../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../../animators/../shaders/ShaderRegisterElement\";\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport default AnimationRegisterCache;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport default ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport default JointPose;",
    "import ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport default ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport default ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport default ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport default SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\tfrom \"../../animators/data/SkeletonJoint\";\n\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport default Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport default VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport default AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleAccelerationState\t\tfrom \"../../animators/states/ParticleAccelerationState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport default ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBezierCurveState\t\t\tfrom \"../../animators/states/ParticleBezierCurveState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport default ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBillboardState\t\t\tfrom \"../../animators/states/ParticleBillboardState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport default ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleColorState\t\t\t\tfrom \"../../animators/states/ParticleColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport default ParticleColorNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleFollowState\t\t\t\tfrom \"../../animators/states/ParticleFollowState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport default ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleInitialColorState\t\tfrom \"../../animators/states/ParticleInitialColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport default ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport default ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOrbitState\t\t\t\tfrom \"../../animators/states/ParticleOrbitState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport default ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOscillatorState\t\t\tfrom \"../../animators/states/ParticleOscillatorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport default ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticlePositionState\t\t\tfrom \"../../animators/states/ParticlePositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticlePositionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToHeadingState\t\tfrom \"../../animators/states/ParticleRotateToHeadingState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport default ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToPositionState\tfrom \"../../animators/states/ParticleRotateToPositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotationalVelocityState\tfrom \"../../animators/states/ParticleRotationalVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport default ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleScaleState\t\t\t\tfrom \"../../animators/states/ParticleScaleState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport default ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSegmentedColorState\t\tfrom \"../../animators/states/ParticleSegmentedColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport default ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSpriteSheetState\t\t\tfrom \"../../animators/states/ParticleSpriteSheetState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeState\t\t\t\tfrom \"../../animators/states/ParticleTimeState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t\t\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport default ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleUVState\t\t\t\t\tfrom \"../../animators/states/ParticleUVState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport default ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleVelocityState\t\t\tfrom \"../../animators/states/ParticleVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport default ParticleVelocityNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport SkeletonClipState\t\t\t\tfrom \"../../animators/states/SkeletonClipState\";\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDifferenceState\t\t\tfrom \"../../animators/states/SkeletonDifferenceState\";\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDirectionalState\t\t\tfrom \"../../animators/states/SkeletonDirectionalState\";\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport default SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonNaryLERPState\t\t\tfrom \"../../animators/states/SkeletonNaryLERPState\";\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport VertexClipState\t\t\t\t\tfrom \"../../animators/states/VertexClipState\";\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport default AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../../animators/states/IAnimationState\";\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport default AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleAccelerationNode\t\t\tfrom \"../../animators/nodes/ParticleAccelerationNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport default ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleBezierCurveNode\t\t\tfrom \"../../animators/nodes/ParticleBezierCurveNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport default ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Orientation3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleBillboardNode\t\t\tfrom \"../../animators/nodes/ParticleBillboardNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport default ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleColorNode\t\t\t\tfrom \"../../animators/nodes/ParticleColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleColorState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleFollowNode\t\t\t\tfrom \"../../animators/nodes/ParticleFollowNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleFollowState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleInitialColorNode\t\t\tfrom \"../../animators/nodes/ParticleInitialColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport default ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOrbitNode\t\t\t\tfrom \"../../animators/nodes/ParticleOrbitNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport default ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOscillatorNode\t\t\tfrom \"../../animators/nodes/ParticleOscillatorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport default ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticlePositionNode\t\t\t\tfrom \"../../animators/nodes/ParticlePositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport default ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotateToPositionNode\t\tfrom \"../../animators/nodes/ParticleRotateToPositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport default ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotationalVelocityNode\tfrom \"../../animators/nodes/ParticleRotationalVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport default ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleScaleNode\t\t\t\tfrom \"../../animators/nodes/ParticleScaleNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport default ParticleScaleState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSegmentedColorNode\t\tfrom \"../../animators/nodes/ParticleSegmentedColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport default ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSpriteSheetNode\t\t\tfrom \"../../animators/nodes/ParticleSpriteSheetNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleTimeNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport default ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleUVNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleUVNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport default ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleVelocityNode\t\t\t\tfrom \"../../animators/nodes/ParticleVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport default SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonAnimator\t\t\t\t\tfrom \"../../animators/SkeletonAnimator\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonClipNode\t\t\t\t\tfrom \"../../animators/nodes/SkeletonClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport default SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDifferenceNode\t\t\tfrom \"../../animators/nodes/SkeletonDifferenceNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDirectionalNode\t\t\tfrom \"../../animators/nodes/SkeletonDirectionalNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport default SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonNaryLERPNode\t\t\t\tfrom \"../../animators/nodes/SkeletonNaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport default SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport VertexAnimator\t\t\t\t\tfrom \"../../animators/VertexAnimator\";\nimport VertexClipNode\t\t\t\t\tfrom \"../../animators/nodes/VertexClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport IVertexAnimationState\t\t\tfrom \"../../animators/states/IVertexAnimationState\";\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport default VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport CrossfadeTransitionState\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport default CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../animators/../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport default CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport IAnimationTransition\t\t\t\tfrom \"../../animators/transitions/IAnimationTransition\";\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport default CrossfadeTransition;",
    "export {default as AnimationElements}\t\t\t\tfrom \"./animators/data/AnimationElements\";\nexport {default as AnimationRegisterCache}\t\t\tfrom \"./animators/data/AnimationRegisterCache\";\nexport {default as ColorSegmentPoint}\t\t\t\tfrom \"./animators/data/ColorSegmentPoint\";\nexport {default as JointPose}\t\t\t\t\t\tfrom \"./animators/data/JointPose\";\nexport {default as ParticleAnimationData}\t\t\tfrom \"./animators/data/ParticleAnimationData\";\nexport {default as ParticleProperties}\t\t\t\tfrom \"./animators/data/ParticleProperties\";\nexport {default as ParticlePropertiesMode}\t\t\tfrom \"./animators/data/ParticlePropertiesMode\";\nexport {default as Skeleton}\t\t\t\t\t\tfrom \"./animators/data/Skeleton\";\nexport {default as SkeletonJoint}\t\t\t\t\tfrom \"./animators/data/SkeletonJoint\";\nexport {default as SkeletonPose}\t\t\t\t\tfrom \"./animators/data/SkeletonPose\";\nexport {default as VertexAnimationMode}\t\t\t\tfrom \"./animators/data/VertexAnimationMode\";\nexport {default as AnimationClipNodeBase}\t\t\tfrom \"./animators/nodes/AnimationClipNodeBase\";\nexport {default as ParticleAccelerationNode}\t\tfrom \"./animators/nodes/ParticleAccelerationNode\";\nexport {default as ParticleBezierCurveNode}\t\t\tfrom \"./animators/nodes/ParticleBezierCurveNode\";\nexport {default as ParticleBillboardNode}\t\t\tfrom \"./animators/nodes/ParticleBillboardNode\";\nexport {default as ParticleColorNode}\t\t\t\tfrom \"./animators/nodes/ParticleColorNode\";\nexport {default as ParticleFollowNode}\t\t\t\tfrom \"./animators/nodes/ParticleFollowNode\";\nexport {default as ParticleInitialColorNode}\t\tfrom \"./animators/nodes/ParticleInitialColorNode\";\nexport {default as ParticleNodeBase}\t\t\t\tfrom \"./animators/nodes/ParticleNodeBase\";\nexport {default as ParticleOrbitNode}\t\t\t\tfrom \"./animators/nodes/ParticleOrbitNode\";\nexport {default as ParticleOscillatorNode}\t\t\tfrom \"./animators/nodes/ParticleOscillatorNode\";\nexport {default as ParticlePositionNode}\t\t\tfrom \"./animators/nodes/ParticlePositionNode\";\nexport {default as ParticleRotateToHeadingNode}\t\tfrom \"./animators/nodes/ParticleRotateToHeadingNode\";\nexport {default as ParticleRotateToPositionNode}\tfrom \"./animators/nodes/ParticleRotateToPositionNode\";\nexport {default as ParticleRotationalVelocityNode}\tfrom \"./animators/nodes/ParticleRotationalVelocityNode\";\nexport {default as ParticleScaleNode}\t\t\t\tfrom \"./animators/nodes/ParticleScaleNode\";\nexport {default as ParticleSegmentedColorNode}\t\tfrom \"./animators/nodes/ParticleSegmentedColorNode\";\nexport {default as ParticleSpriteSheetNode}\t\t\tfrom \"./animators/nodes/ParticleSpriteSheetNode\";\nexport {default as ParticleTimeNode}\t\t\t\tfrom \"./animators/nodes/ParticleTimeNode\";\nexport {default as ParticleUVNode}\t\t\t\t\tfrom \"./animators/nodes/ParticleUVNode\";\nexport {default as ParticleVelocityNode}\t\t\tfrom \"./animators/nodes/ParticleVelocityNode\";\nexport {default as SkeletonBinaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonBinaryLERPNode\";\nexport {default as SkeletonClipNode}\t\t\t\tfrom \"./animators/nodes/SkeletonClipNode\";\nexport {default as SkeletonDifferenceNode}\t\t\tfrom \"./animators/nodes/SkeletonDifferenceNode\";\nexport {default as SkeletonDirectionalNode}\t\t\tfrom \"./animators/nodes/SkeletonDirectionalNode\";\nexport {default as SkeletonNaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonNaryLERPNode\";\nexport {default as VertexClipNode}\t\t\t\t\tfrom \"./animators/nodes/VertexClipNode\";\nexport {default as AnimationClipState}\t\t\t\tfrom \"./animators/states/AnimationClipState\";\nexport {default as AnimationStateBase}\t\t\t\tfrom \"./animators/states/AnimationStateBase\";\nexport {default as IAnimationState}\t\t\t\t\tfrom \"./animators/states/IAnimationState\";\nexport {default as ISkeletonAnimationState}\t\t\tfrom \"./animators/states/ISkeletonAnimationState\";\nexport {default as IVertexAnimationState}\t\t\tfrom \"./animators/states/IVertexAnimationState\";\nexport {default as ParticleAccelerationState}\t\tfrom \"./animators/states/ParticleAccelerationState\";\nexport {default as ParticleBezierCurveState}\t\tfrom \"./animators/states/ParticleBezierCurveState\";\nexport {default as ParticleBillboardState}\t\t\tfrom \"./animators/states/ParticleBillboardState\";\nexport {default as ParticleColorState}\t\t\t\tfrom \"./animators/states/ParticleColorState\";\nexport {default as ParticleFollowState}\t\t\t\tfrom \"./animators/states/ParticleFollowState\";\nexport {default as ParticleInitialColorState}\t\tfrom \"./animators/states/ParticleInitialColorState\";\nexport {default as ParticleStateBase}\t\t\t\tfrom \"./animators/states/ParticleStateBase\";\nexport {default as ParticleOrbitState}\t\t\t\tfrom \"./animators/states/ParticleOrbitState\";\nexport {default as ParticleOscillatorState}\t\t\tfrom \"./animators/states/ParticleOscillatorState\";\nexport {default as ParticlePositionState}\t\t\tfrom \"./animators/states/ParticlePositionState\";\nexport {default as ParticleRotateToHeadingState}\tfrom \"./animators/states/ParticleRotateToHeadingState\";\nexport {default as ParticleRotateToPositionState}\tfrom \"./animators/states/ParticleRotateToPositionState\";\nexport {default as ParticleRotationalVelocityState}\tfrom \"./animators/states/ParticleRotationalVelocityState\";\nexport {default as ParticleScaleState}\t\t\t\tfrom \"./animators/states/ParticleScaleState\";\nexport {default as ParticleSegmentedColorState}\t\tfrom \"./animators/states/ParticleSegmentedColorState\";\nexport {default as ParticleSpriteSheetState}\t\tfrom \"./animators/states/ParticleSpriteSheetState\";\nexport {default as ParticleTimeState}\t\t\t\tfrom \"./animators/states/ParticleTimeState\";\nexport {default as ParticleUVState}\t\t\t\t\tfrom \"./animators/states/ParticleUVState\";\nexport {default as ParticleVelocityState}\t\t\tfrom \"./animators/states/ParticleVelocityState\";\nexport {default as SkeletonBinaryLERPState}\t\t\tfrom \"./animators/states/SkeletonBinaryLERPState\";\nexport {default as SkeletonClipState}\t\t\t\tfrom \"./animators/states/SkeletonClipState\";\nexport {default as SkeletonDifferenceState}\t\t\tfrom \"./animators/states/SkeletonDifferenceState\";\nexport {default as SkeletonDirectionalState}\t\tfrom \"./animators/states/SkeletonDirectionalState\";\nexport {default as SkeletonNaryLERPState}\t\t\tfrom \"./animators/states/SkeletonNaryLERPState\";\nexport {default as VertexClipState}\t\t\t\t\tfrom \"./animators/states/VertexClipState\";\nexport {default as CrossfadeTransition}\t\t\t\tfrom \"./animators/transitions/CrossfadeTransition\";\nexport {default as CrossfadeTransitionNode}\t\t\tfrom \"./animators/transitions/CrossfadeTransitionNode\";\nexport {default as CrossfadeTransitionState}\t\tfrom \"./animators/transitions/CrossfadeTransitionState\";\nexport {default as IAnimationTransition}\t\t\tfrom \"./animators/transitions/IAnimationTransition\";\nexport {default as AnimationSetBase}\t\t\t\tfrom \"./animators/AnimationSetBase\";\nexport {default as AnimatorBase}\t\t\t\t\tfrom \"./animators/AnimatorBase\";\nexport {default as ParticleAnimationSet}\t\t\tfrom \"./animators/ParticleAnimationSet\";\nexport {default as ParticleAnimator}\t\t\t\tfrom \"./animators/ParticleAnimator\";\nexport {default as SkeletonAnimationSet}\t\t\tfrom \"./animators/SkeletonAnimationSet\";\nexport {default as SkeletonAnimator}\t\t\t\tfrom \"./animators/SkeletonAnimator\";\nexport {default as VertexAnimationSet}\t\t\t\tfrom \"./animators/VertexAnimationSet\";\nexport {default as VertexAnimator}\t\t\t\t\tfrom \"./animators/VertexAnimator\";",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport default ElementsPool;",
    "import Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nimport IAbstractionPool \t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_AttributesBuffer\t\t\tfrom \"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\n\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tpublic _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\t\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferGL():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferGL(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\t//TODO replace overflow system with something sensible\n\t\t//this._render(renderable, camera, viewProjection);\n\t\t//\n\t\t// if (this._overflow)\n\t\t// \tthis._overflow._iRender(renderable, camera, viewProjection);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = this._elements.numVertices;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_ElementsBase;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\t\t\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.thickness);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\t\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\t\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t\t\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_LineElements;",
    "import ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TriangleElements\t\t\tfrom \"../elements/GL_TriangleElements\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SkyboxElements;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextWebGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextWebGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.renderSceneTransform);\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_TriangleElements;",
    "export {default as ElementsPool}\t\t\t\t\tfrom \"./elements/ElementsPool\";\nexport {default as GL_ElementsBase}\t\t\t\t\tfrom \"./elements/GL_ElementsBase\";\nexport {default as GL_LineElements}\t\t\t\t\tfrom \"./elements/GL_LineElements\";\nexport {default as GL_SkyboxElements}\t\t\t\tfrom \"./elements/GL_SkyboxElements\";\nexport {default as GL_TriangleElements}\t\t\t\tfrom \"./elements/GL_TriangleElements\";\nexport {default as IElementsClassGL}\t\t\t\tfrom \"./elements/IElementsClassGL\";",
    "import ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default AnimationSetError;",
    "export {default as AnimationSetError}\t\t\t\tfrom \"./errors/AnimationSetError\";",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport EventBase\t\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../animators/states/IAnimationState\";\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport default AnimationStateEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport default AnimatorEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IPass\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport default PassEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport RTTBufferManager\t\t\tfrom \"../managers/RTTBufferManager\";\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport default RTTEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport default ShadingMethodEvent;",
    "export {default as AnimationStateEvent}\t\t\t\tfrom \"./events/AnimationStateEvent\";\nexport {default as AnimatorEvent}\t\t\t\t\tfrom \"./events/AnimatorEvent\";\nexport {default as PassEvent}\t\t\t\t\t\tfrom \"./events/PassEvent\";\nexport {default as RTTEvent}\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nexport {default as ShadingMethodEvent}\t\t\t\tfrom \"./events/ShadingMethodEvent\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DHBlurTask\t\t\tfrom \"../filters/tasks/Filter3DHBlurTask\";\nimport Filter3DVBlurTask\t\t\tfrom \"../filters/tasks/Filter3DVBlurTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport default BlurFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DCompositeTask\t\tfrom \"../filters/tasks/Filter3DCompositeTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport default CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DFXAATask\t\t\t\tfrom \"../filters/tasks/Filter3DFXAATask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport default FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../filters/tasks/Filter3DTaskBase\";\nimport RTTBufferManager from \"../managers/RTTBufferManager\";\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport default Filter3DBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\n\t\tvar code:string;\n\t\tvar op:string;\n\t\tcode = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, v0, fc1.zw\\n\" +\n\t\t\t\"add ft1, ft1, fc1.xy\\n\" +\n\t\t\t\"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, ft1, fc0.xxx\\n\" +\n\t\t\t\"add ft1, ft1, fc0.xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, ft1, ft2\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, ft0\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 2);\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(1, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport default Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 6);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport IProgram\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IProgram\";\n\nimport RTTBufferManager\t\t\t\tfrom \"../../managers/RTTBufferManager\";\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport default Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DVBlurTask;",
    "export {default as Filter3DCompositeTask}\t\t\tfrom \"./filters/tasks/Filter3DCompositeTask\";\nexport {default as Filter3DFXAATask}\t\t\t\tfrom \"./filters/tasks/Filter3DFXAATask\";\nexport {default as Filter3DHBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DHBlurTask\";\nexport {default as Filter3DTaskBase}\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\nexport {default as Filter3DVBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DVBlurTask\";\nexport {default as BlurFilter3D}\t\t\t\t\tfrom \"./filters/BlurFilter3D\";\nexport {default as CompositeFilter3D}\t\t\t\tfrom \"./filters/CompositeFilter3D\";\nexport {default as Filter3DBase}\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nexport {default as FXAAFilter3D}\t\t\t\t\tfrom \"./filters/FXAAFilter3D\";",
    "import Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ImageUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\nimport RTTEvent\t\t\t\t\t\tfrom \"../events/RTTEvent\";\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport default RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "export {default as RTTBufferManager}\t\t\t\tfrom \"./managers/RTTBufferManager\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport default GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthis._offset = this.graphic.offset;\n\t\tthis._count = this.graphic.count;\n\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport default GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport default GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport RenderableEvent\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onSurfaceUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _count:number = 0;\n\tpublic _offset:number = 0;\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onSurfaceUpdatedDelegate = (event:RenderableEvent) => this._onSurfaceUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onSurfaceUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tvar elements:GL_ElementsBase = pass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements);\n\n\t\tif (elements != pass.shader.activeElements)\n\t\t\telements._setRenderState(this, camera, viewProjection);\n\n\t\telements.draw(this, camera, viewProjection, this._count, this._offset)\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surface:ISurface = this._pGetSurface() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport default GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport default GL_SkyboxRenderable;",
    "export {default as GL_BillboardRenderable}\t\t\tfrom \"./renderables/GL_BillboardRenderable\";\nexport {default as GL_GraphicRenderable}\t\t\tfrom \"./renderables/GL_GraphicRenderable\";\nexport {default as GL_LineSegmentRenderable}\t\tfrom \"./renderables/GL_LineSegmentRenderable\";\nexport {default as GL_RenderableBase}\t\t\t\tfrom \"./renderables/GL_RenderableBase\";\nexport {default as GL_SkyboxRenderable}\t\t\t\tfrom \"./renderables/GL_SkyboxRenderable\";",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport LightSources\t\t\t\t\tfrom \"awayjs-display/lib/materials/LightSources\";\n\nimport ContextGLProfile\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProfile\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport ILightingPass\t\t\t\tfrom \"../surfaces/passes/ILightingPass\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport LightingCompiler\t\t\t\tfrom \"../shaders/compilers/LightingCompiler\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport default LightingShader;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport default RegisterPool;\n",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLTriangleFace\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTriangleFace\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\tfrom \"../animators/data/AnimationRegisterCache\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic numLights:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * \n\t */\n\tpublic activeElements:GL_ElementsBase;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\tthis.activeElements = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.activeElements = null;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._elementsClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport default ShaderBase;",
    "import RegisterPool\t\t\t\t\tfrom \"../shaders/RegisterPool\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport default ShaderRegisterCache;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = Array<ShaderRegisterElement>();\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport default ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport default ShaderRegisterElement;",
    "import ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string> = new Array<string>();\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string> = new Array<string>();\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp()\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pAnimatableAttributes.push(\"va0\");\n\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport default CompilerBase;",
    "import LightingShader\t\t\t\tfrom \"../../shaders/LightingShader\";\nimport CompilerBase\t\t\t\t\tfrom \"../../shaders/compilers/CompilerBase\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport ILightingPass\t\t\t\tfrom \"../../surfaces/passes/ILightingPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport default LightingCompiler;",
    "export {default as CompilerBase}\t\t\t\t\tfrom \"./shaders/compilers/CompilerBase\";\nexport {default as LightingCompiler}\t\t\t\tfrom \"./shaders/compilers/LightingCompiler\";\nexport {default as LightingShader}\t\t\t\t\tfrom \"./shaders/LightingShader\";\nexport {default as RegisterPool}\t\t\t\t\tfrom \"./shaders/RegisterPool\";\nexport {default as ShaderBase}\t\t\t\t\t\tfrom \"./shaders/ShaderBase\";\nexport {default as ShaderRegisterCache}\t\t\t\tfrom \"./shaders/ShaderRegisterCache\";\nexport {default as ShaderRegisterData}\t\t\t\tfrom \"./shaders/ShaderRegisterData\";\nexport {default as ShaderRegisterElement}\t\t\tfrom \"./shaders/ShaderRegisterElement\";",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport default RenderableMergeSort;",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport default RenderableNullSort;",
    "export {default as IEntitySorter}\t\t\t\t\tfrom \"./sort/IEntitySorter\";\nexport {default as RenderableMergeSort}\t\t\t\tfrom \"./sort/RenderableMergeSort\";\nexport {default as RenderableNullSort}\t\t\t\tfrom \"./sort/RenderableNullSort\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\n\nimport BasicMaterialPass\t\t\tfrom \"../surfaces/passes/BasicMaterialPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport default GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default DistanceRender;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\n\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport default GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ISurfaceClassGL\t\t\t\tfrom \"../surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport default SurfacePool;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport PassBase\t\t\t\t\t\tfrom \"../../surfaces/passes/PassBase\";\nimport GL_TextureBase\t\t\t\tfrom \"../../textures/GL_TextureBase\";\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport default BasicMaterialPass;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default PassBase;",
    "export {default as BasicMaterialPass}\t\t\t\tfrom \"./surfaces/passes/BasicMaterialPass\";\nexport {default as ILightingPass}\t\t\t\t\tfrom \"./surfaces/passes/ILightingPass\";\nexport {default as IPass}\t\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nexport {default as PassBase}\t\t\t\t\t\tfrom \"./surfaces/passes/PassBase\";\nexport {default as GL_BasicMaterialSurface}\t\t\tfrom \"./surfaces/GL_BasicMaterialSurface\";\nexport {default as GL_DepthSurface}\t\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\nexport {default as GL_DistanceSurface}\t\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\nexport {default as GL_SkyboxSurface}\t\t\t\tfrom \"./surfaces/GL_SkyboxSurface\";\nexport {default as GL_SurfaceBase}\t\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nexport {default as GL_SurfacePassBase}\t\t\t\tfrom \"./surfaces/GL_SurfacePassBase\";\nexport {default as ISurfaceClassGL}\t\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nexport {default as SurfacePool}\t\t\t\t\t\tfrom \"./surfaces/SurfacePool\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport GL_Image2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Image2D\";\nimport GL_Sampler2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Sampler2D\";\n\nimport MappingMode\t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport GL_SamplerCube\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerCube\";\n\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport default GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ContextGLTextureFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTextureFormat\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport default GL_TextureBase;",
    "export {default as GL_Single2DTexture}\t\t\t\tfrom \"./textures/GL_Single2DTexture\";\nexport {default as GL_SingleCubeTexture}\t\t\tfrom \"./textures/GL_SingleCubeTexture\";\nexport {default as GL_TextureBase}\t\t\t\t\tfrom \"./textures/GL_TextureBase\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix3DUtils\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\n\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport default Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport default ParticleGraphicsTransform;",
    "export {default as Merge}\t\t\t\t\t\t\tfrom \"./tools/commands/Merge\";\nexport {default as ParticleGraphicsTransform}\t\tfrom \"./tools/data/ParticleGraphicsTransform\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport ParticleGraphicsTransform\t\tfrom \"../tools/data/ParticleGraphicsTransform\";\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport default ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport default PerspectiveMatrix3D;",
    "export {default as ParticleGraphicsHelper}\t\t\tfrom \"./utils/ParticleGraphicsHelper\";\nexport {default as PerspectiveMatrix3D}\t\t\t\tfrom \"./utils/PerspectiveMatrix3D\";"
  ]
}