{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "../index.ts",
    "lib/DefaultRenderer.ts",
    "lib/DepthRenderer.ts",
    "lib/DistanceRenderer.ts",
    "lib/Filter3DRenderer.ts",
    "lib/RendererBase.ts",
    "lib/lib/animators/AnimationSetBase.ts",
    "lib/lib/animators/AnimatorBase.ts",
    "lib/lib/animators/ParticleAnimationSet.ts",
    "lib/lib/animators/ParticleAnimator.ts",
    "lib/lib/animators/SkeletonAnimationSet.ts",
    "lib/lib/animators/SkeletonAnimator.ts",
    "lib/lib/animators/VertexAnimationSet.ts",
    "lib/lib/animators/VertexAnimator.ts",
    "lib/animators/lib/animators/data/AnimationElements.ts",
    "lib/animators/lib/animators/data/AnimationRegisterData.ts",
    "lib/animators/lib/animators/data/ColorSegmentPoint.ts",
    "lib/animators/lib/animators/data/JointPose.ts",
    "lib/animators/lib/animators/data/ParticleAnimationData.ts",
    "lib/animators/lib/animators/data/ParticlePropertiesMode.ts",
    "lib/animators/lib/animators/data/ParticleProperties.ts",
    "lib/animators/lib/animators/data/SkeletonJoint.ts",
    "lib/animators/lib/animators/data/SkeletonPose.ts",
    "lib/animators/lib/animators/data/Skeleton.ts",
    "lib/animators/lib/animators/data/VertexAnimationMode.ts",
    "lib/animators/lib/animators/nodes/AnimationClipNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleAccelerationNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBillboardNode.ts",
    "lib/animators/lib/animators/nodes/ParticleColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleFollowNode.ts",
    "lib/animators/lib/animators/nodes/ParticleInitialColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleOrbitNode.ts",
    "lib/animators/lib/animators/nodes/ParticleOscillatorNode.ts",
    "lib/animators/lib/animators/nodes/ParticlePositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "lib/animators/lib/animators/nodes/ParticleScaleNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "lib/animators/lib/animators/nodes/ParticleTimeNode.ts",
    "lib/animators/lib/animators/nodes/ParticleUVNode.ts",
    "lib/animators/lib/animators/nodes/ParticleVelocityNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonClipNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/VertexClipNode.ts",
    "lib/animators/lib/animators/states/AnimationClipState.ts",
    "lib/animators/lib/animators/states/AnimationStateBase.ts",
    "lib/animators/lib/animators/states/ParticleAccelerationState.ts",
    "lib/animators/lib/animators/states/ParticleBezierCurveState.ts",
    "lib/animators/lib/animators/states/ParticleBillboardState.ts",
    "lib/animators/lib/animators/states/ParticleColorState.ts",
    "lib/animators/lib/animators/states/ParticleFollowState.ts",
    "lib/animators/lib/animators/states/ParticleInitialColorState.ts",
    "lib/animators/lib/animators/states/ParticleOrbitState.ts",
    "lib/animators/lib/animators/states/ParticleOscillatorState.ts",
    "lib/animators/lib/animators/states/ParticlePositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToHeadingState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToPositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotationalVelocityState.ts",
    "lib/animators/lib/animators/states/ParticleScaleState.ts",
    "lib/animators/lib/animators/states/ParticleSegmentedColorState.ts",
    "lib/animators/lib/animators/states/ParticleSpriteSheetState.ts",
    "lib/animators/lib/animators/states/ParticleStateBase.ts",
    "lib/animators/lib/animators/states/ParticleTimeState.ts",
    "lib/animators/lib/animators/states/ParticleUVState.ts",
    "lib/animators/lib/animators/states/ParticleVelocityState.ts",
    "lib/animators/lib/animators/states/SkeletonBinaryLERPState.ts",
    "lib/animators/lib/animators/states/SkeletonClipState.ts",
    "lib/animators/lib/animators/states/SkeletonDifferenceState.ts",
    "lib/animators/lib/animators/states/SkeletonDirectionalState.ts",
    "lib/animators/lib/animators/states/SkeletonNaryLERPState.ts",
    "lib/animators/lib/animators/states/VertexClipState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransition.ts",
    "lib/animators.ts",
    "lib/lib/elements/ElementsPool.ts",
    "lib/lib/elements/GL_ElementsBase.ts",
    "lib/lib/elements/GL_LineElements.ts",
    "lib/lib/elements/GL_SkyboxElements.ts",
    "lib/lib/elements/GL_TriangleElements.ts",
    "lib/elements.ts",
    "lib/lib/errors/AnimationSetError.ts",
    "lib/errors.ts",
    "lib/lib/events/AnimationStateEvent.ts",
    "lib/lib/events/AnimatorEvent.ts",
    "lib/lib/events/PassEvent.ts",
    "lib/lib/events/RTTEvent.ts",
    "lib/lib/events/ShadingMethodEvent.ts",
    "lib/events.ts",
    "lib/lib/filters/BlurFilter3D.ts",
    "lib/lib/filters/CompositeFilter3D.ts",
    "lib/lib/filters/FXAAFilter3D.ts",
    "lib/lib/filters/Filter3DBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DCompositeTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DFXAATask.ts",
    "lib/filters/lib/filters/tasks/Filter3DHBlurTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DTaskBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DVBlurTask.ts",
    "lib/filters.ts",
    "lib/lib/managers/RTTBufferManager.ts",
    "lib/managers.ts",
    "lib/lib/renderables/GL_BillboardRenderable.ts",
    "lib/lib/renderables/GL_GraphicRenderable.ts",
    "lib/lib/renderables/GL_LineSegmentRenderable.ts",
    "lib/lib/renderables/GL_RenderableBase.ts",
    "lib/lib/renderables/GL_SkyboxRenderable.ts",
    "lib/renderables.ts",
    "lib/lib/shaders/LightingShader.ts",
    "lib/lib/shaders/RegisterPool.ts",
    "lib/lib/shaders/ShaderBase.ts",
    "lib/lib/shaders/ShaderRegisterCache.ts",
    "lib/lib/shaders/ShaderRegisterData.ts",
    "lib/lib/shaders/ShaderRegisterElement.ts",
    "lib/shaders/lib/shaders/compilers/CompilerBase.ts",
    "lib/shaders/lib/shaders/compilers/LightingCompiler.ts",
    "lib/shaders.ts",
    "lib/lib/sort/RenderableMergeSort.ts",
    "lib/lib/sort/RenderableNullSort.ts",
    "lib/sort.ts",
    "lib/lib/surfaces/GL_BasicMaterialSurface.ts",
    "lib/lib/surfaces/GL_DepthSurface.ts",
    "lib/lib/surfaces/GL_DistanceSurface.ts",
    "lib/lib/surfaces/GL_SkyboxSurface.ts",
    "lib/lib/surfaces/GL_SurfaceBase.ts",
    "lib/lib/surfaces/GL_SurfacePassBase.ts",
    "lib/lib/surfaces/SurfacePool.ts",
    "lib/surfaces/lib/surfaces/passes/BasicMaterialPass.ts",
    "lib/surfaces/lib/surfaces/passes/PassBase.ts",
    "lib/surfaces.ts",
    "lib/lib/textures/GL_Single2DTexture.ts",
    "lib/lib/textures/GL_SingleCubeTexture.ts",
    "lib/lib/textures/GL_TextureBase.ts",
    "lib/textures.ts",
    "lib/tools/lib/tools/commands/Merge.ts",
    "lib/tools/lib/tools/data/ParticleGraphicsTransform.ts",
    "lib/tools.ts",
    "lib/lib/utils/ParticleGraphicsHelper.ts",
    "lib/lib/utils/PerspectiveMatrix3D.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "animators",
    "elements",
    "errors",
    "events",
    "filters",
    "managers",
    "renderables",
    "shaders",
    "sort",
    "surfaces",
    "textures",
    "tools",
    "utils",
    "DefaultRenderer_1",
    "DefaultRenderer",
    "default",
    "DepthRenderer_1",
    "DepthRenderer",
    "DistanceRenderer_1",
    "DistanceRenderer",
    "Filter3DRenderer_1",
    "Filter3DRenderer",
    "RendererBase_1",
    "RendererBase",
    "BasicMaterial_1",
    "Skybox_1",
    "Billboard_1",
    "LineSegment_1",
    "LineElements_1",
    "TriangleElements_1",
    "Graphic_1",
    "Single2DTexture_1",
    "SingleCubeTexture_1",
    "SurfacePool",
    "registerAbstraction",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "ElementsPool",
    "GL_LineElements",
    "GL_TriangleElements",
    "ShaderBase",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "./lib/DefaultRenderer",
    "./lib/DepthRenderer",
    "./lib/DistanceRenderer",
    "./lib/Filter3DRenderer",
    "./lib/RendererBase",
    "./lib/animators",
    "./lib/elements",
    "./lib/errors",
    "./lib/events",
    "./lib/filters",
    "./lib/managers",
    "./lib/renderables",
    "./lib/shaders",
    "./lib/sort",
    "./lib/surfaces",
    "./lib/textures",
    "./lib/tools",
    "./lib/utils",
    "awayjs-display/lib/display/Billboard",
    "undefined",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-renderergl/lib/DefaultRenderer",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "BitmapImage2D_1",
    "Matrix3D_1",
    "Vector3D_1",
    "ContextGLCompareMode_1",
    "ContextGLClearMask_1",
    "GL_SkyboxElements_1",
    "RTTBufferManager_1",
    "SurfacePool_1",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_antiAlias",
    "_directionalLights",
    "Array",
    "_pointLights",
    "_lightProbes",
    "shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "_skyBoxSurfacePool",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "enterNode",
    "node",
    "enter",
    "debugVisible",
    "applyEntity",
    "bounds",
    "boundsPrimitive",
    "render",
    "camera",
    "scene",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "len",
    "light",
    "shadowMapper",
    "shadowsEnabled",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "_skybox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getAbstraction",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "_cameraTransform",
    "updateSkyboxProjection",
    "pass",
    "surfaceGL",
    "surface",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "applyDirectionalLight",
    "entity",
    "push",
    "applyLightProbe",
    "applyPointLight",
    "applySkybox",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "./DepthRenderer",
    "./DistanceRenderer",
    "./Filter3DRenderer",
    "./RendererBase",
    "./elements/GL_SkyboxElements",
    "./managers/RTTBufferManager",
    "./surfaces/SurfacePool",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "awayjs-renderergl/lib/DepthRenderer",
    "GL_DepthSurface_1",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iCollectionMark",
    "isCastingShadow",
    "./surfaces/GL_DepthSurface",
    "awayjs-renderergl/lib/DistanceRenderer",
    "GL_DistanceSurface_1",
    "./surfaces/GL_DistanceSurface",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "ContextGLDrawMode_1",
    "ContextGLBlendFactor_1",
    "ContextGLVertexBufferFormat_1",
    "RTTEvent_1",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "_positionIndex",
    "FLOAT_2",
    "_uvIndex",
    "setRenderTarget",
    "activate",
    "_inputTextureIndex",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "./events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "awayjs-renderergl/lib/RendererBase",
    "Matrix3DUtils_1",
    "Point_1",
    "Rectangle_1",
    "EventDispatcher_1",
    "RendererEvent_1",
    "AGALMiniAssembler_1",
    "StageEvent_1",
    "StageManager_1",
    "ElementsPool_1",
    "RenderableMergeSort_1",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_cameraForward",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_numCullPlanes",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_abstractionClassPool",
    "_customCullPlanes",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "id",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "renderableClass",
    "assetClass",
    "renderableGL",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_viewportDirty",
    "_scissorDirty",
    "_pBlendedRenderableHead",
    "_pOpaqueRenderableHead",
    "_cullPlanes",
    "frustumPlanes",
    "_cameraPosition",
    "sceneTransform",
    "getForward",
    "traversePartitions",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "LESS",
    "head",
    "first",
    "LESS_EQUAL",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "next",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "isRenderable",
    "isInFrustum",
    "_sourceEntity",
    "_zIndex",
    "zOffset",
    "subtract",
    "dotProduct",
    "_renderSceneTransform",
    "_acceptTraverser",
    "applyRenderable",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "zIndex",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "requiresBlending",
    "numElements",
    "obj",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "./elements/ElementsPool",
    "./sort/RenderableMergeSort",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase_1",
    "AbstractMethodError_1",
    "AnimationSetError_1",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "registerCache",
    "sharedRegisters",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "../errors/AnimationSetError",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame_1",
    "getTimer_1",
    "AnimatorEvent_1",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "sprite",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "transform",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "../events/AnimatorEvent",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationSetBase_1",
    "AnimationRegisterData_1",
    "AnimationElements_1",
    "ParticleAnimationData_1",
    "ParticleProperties_1",
    "ParticlePropertiesMode_1",
    "ParticleTimeNode_1",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterData",
    "animationRegisterData",
    "needVelocity",
    "animatableAttributes",
    "animationTargetRegisters",
    "positionTarget",
    "vertexZeroConst",
    "velocityTarget",
    "POST_PRIORITY",
    "scaleAndRotateTarget",
    "COLOR_PRIORITY",
    "hasColorMulNode",
    "colorMulTarget",
    "getFreeVertexVectorTemp",
    "addVertexTempUsages",
    "colorMulVary",
    "getFreeVarying",
    "vertexOneConst",
    "hasColorAddNode",
    "colorAddTarget",
    "colorAddVary",
    "usesFragmentAnimation",
    "hasUVNode",
    "setUVSourceAndTarget",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "uvSource",
    "setVertexConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "animationElements",
    "_iGenerateAnimationElements",
    "parent",
    "graphics",
    "initParticleFunc",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "../animators/AnimationSetBase",
    "../animators/data/AnimationElements",
    "../animators/data/AnimationRegisterData",
    "../animators/data/ParticleAnimationData",
    "../animators/data/ParticleProperties",
    "../animators/data/ParticlePropertiesMode",
    "../animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "AnimatorBase_1",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "resetTime",
    "../animators/AnimatorBase",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "_matricesIndex",
    "numUsedVertexConstants",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "getFreeVertexAttribute",
    "jointIndexIndex",
    "weightStream",
    "jointWeightIndex",
    "indices",
    "weights",
    "temp1",
    "dot",
    "source",
    "getFreeVertexConstant",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent_1",
    "JointPose_1",
    "SkeletonPose_1",
    "AnimationStateEvent_1",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeletonAnimationSet",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "setVertexConstFromArray",
    "matricesIndex",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetElements",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "../animators/data/JointPose",
    "../animators/data/SkeletonPose",
    "../events/AnimationStateEvent",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode_1",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "temp2",
    "regs",
    "constantReg",
    "weightsIndex",
    "poseIndices",
    "poseInput",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "../animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "invalidateElements",
    "setNullPose",
    "elementsGL",
    "_iIndex",
    "_elementsPool",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "AnimationElements",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterData",
    "ShaderRegisterElement_1",
    "AnimationRegisterData",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "regName",
    "vertexTwoConst",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "../../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "Quaternion_1",
    "JointPose",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "ParticleAnimationData",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "ParticlePropertiesMode",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "ParticleProperties",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "SkeletonPose",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "../../animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "VertexAnimationMode",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase_1",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase_1",
    "ParticleAccelerationState_1",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "accelerationValue",
    "_pMode",
    "ACCELERATION_INDEX",
    "temp",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "../../animators/data/ParticlePropertiesMode",
    "../../animators/nodes/ParticleNodeBase",
    "../../animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState_1",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "../../animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState_1",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "hasBillboard",
    "../../animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform_1",
    "ParticleAnimationSet_1",
    "ParticleColorState_1",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "../../animators/ParticleAnimationSet",
    "../../animators/states/ParticleColorState",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState_1",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "../../animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState_1",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "../../animators/states/ParticleInitialColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "ParticleNodeBase",
    "_pDataLength",
    "MODES",
    "_priority",
    0,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState_1",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "../../animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState_1",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "../../animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState_1",
    "ParticlePositionNode",
    "position",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "../../animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState_1",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "../../animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState_1",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "../../animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState_1",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "../../animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState_1",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "../../animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState_1",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "../../animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState_1",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "../../animators/states/ParticleSpriteSheetState",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "ParticleTimeState_1",
    "ParticleTimeNode",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "../../animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState_1",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "../../animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState_1",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "../../animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState_1",
    "SkeletonBinaryLERPNode",
    "../../animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "AnimationClipNodeBase_1",
    "SkeletonClipState_1",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "../../animators/nodes/AnimationClipNodeBase",
    "../../animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState_1",
    "SkeletonDifferenceNode",
    "../../animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState_1",
    "SkeletonDirectionalNode",
    "../../animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState_1",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "../../animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState_1",
    "VertexClipNode",
    "_translations",
    "geometry",
    "../../animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase_1",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "../../animators/states/AnimationStateBase",
    "../../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "ParticleStateBase_1",
    "ParticleAccelerationState",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "../../animators/states/ParticleStateBase",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "ParticleBezierCurveState",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "MathConsts_1",
    "Orientation3D_1",
    "ParticleBillboardState",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "setVertexConstFromMatrix",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "ParticleColorState",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "vertexConstantData",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "ParticleFollowState",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "ParticleInitialColorState",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "ParticleOrbitState",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "ParticleOscillatorState",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "ParticlePositionState",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "ParticleRotateToHeadingState",
    "_pParticleAnimator",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "ParticleRotateToPositionState",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "ParticleRotationalVelocityState",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "ParticleScaleState",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "ParticleSegmentedColorState",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleSpriteSheetState",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "usesUVTransform",
    "_spriteSheetData",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "ParticleStateBase",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "ParticleTimeState",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "ParticleUVState",
    "particleUVNode",
    "_particleUVNode",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "ParticleVelocityState",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "SkeletonBinaryLERPState",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "../../animators/data/SkeletonPose",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "AnimationClipState_1",
    "SkeletonClipState",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "../../animators/states/AnimationClipState",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "SkeletonDifferenceState",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "SkeletonDirectionalState",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "SkeletonNaryLERPState",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "VertexClipState",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "SkeletonBinaryLERPNode_1",
    "CrossfadeTransitionState_1",
    "CrossfadeTransitionNode",
    "../../animators/nodes/SkeletonBinaryLERPNode",
    "../../animators/transitions/CrossfadeTransitionState",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "../../animators/../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransitionNode_1",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "../../animators/transitions/CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/animators",
    "ColorSegmentPoint_1",
    "Skeleton_1",
    "SkeletonJoint_1",
    "ParticleAccelerationNode_1",
    "ParticleBezierCurveNode_1",
    "ParticleBillboardNode_1",
    "ParticleColorNode_1",
    "ParticleFollowNode_1",
    "ParticleInitialColorNode_1",
    "ParticleOrbitNode_1",
    "ParticleOscillatorNode_1",
    "ParticlePositionNode_1",
    "ParticleRotateToHeadingNode_1",
    "ParticleRotateToPositionNode_1",
    "ParticleRotationalVelocityNode_1",
    "ParticleScaleNode_1",
    "ParticleSegmentedColorNode_1",
    "ParticleSpriteSheetNode_1",
    "ParticleUVNode_1",
    "ParticleVelocityNode_1",
    "SkeletonClipNode_1",
    "SkeletonDifferenceNode_1",
    "SkeletonDirectionalNode_1",
    "SkeletonNaryLERPNode_1",
    "VertexClipNode_1",
    "CrossfadeTransition_1",
    "ParticleAnimator_1",
    "SkeletonAnimationSet_1",
    "SkeletonAnimator_1",
    "VertexAnimationSet_1",
    "VertexAnimator_1",
    "./animators/AnimationSetBase",
    "./animators/AnimatorBase",
    "./animators/ParticleAnimationSet",
    "./animators/ParticleAnimator",
    "./animators/SkeletonAnimationSet",
    "./animators/SkeletonAnimator",
    "./animators/VertexAnimationSet",
    "./animators/VertexAnimator",
    "./animators/data/AnimationElements",
    "./animators/data/AnimationRegisterData",
    "./animators/data/ColorSegmentPoint",
    "./animators/data/JointPose",
    "./animators/data/ParticleAnimationData",
    "./animators/data/ParticleProperties",
    "./animators/data/ParticlePropertiesMode",
    "./animators/data/Skeleton",
    "./animators/data/SkeletonJoint",
    "./animators/data/SkeletonPose",
    "./animators/data/VertexAnimationMode",
    "./animators/nodes/AnimationClipNodeBase",
    "./animators/nodes/ParticleAccelerationNode",
    "./animators/nodes/ParticleBezierCurveNode",
    "./animators/nodes/ParticleBillboardNode",
    "./animators/nodes/ParticleColorNode",
    "./animators/nodes/ParticleFollowNode",
    "./animators/nodes/ParticleInitialColorNode",
    "./animators/nodes/ParticleNodeBase",
    "./animators/nodes/ParticleOrbitNode",
    "./animators/nodes/ParticleOscillatorNode",
    "./animators/nodes/ParticlePositionNode",
    "./animators/nodes/ParticleRotateToHeadingNode",
    "./animators/nodes/ParticleRotateToPositionNode",
    "./animators/nodes/ParticleRotationalVelocityNode",
    "./animators/nodes/ParticleScaleNode",
    "./animators/nodes/ParticleSegmentedColorNode",
    "./animators/nodes/ParticleSpriteSheetNode",
    "./animators/nodes/ParticleTimeNode",
    "./animators/nodes/ParticleUVNode",
    "./animators/nodes/ParticleVelocityNode",
    "./animators/nodes/SkeletonBinaryLERPNode",
    "./animators/nodes/SkeletonClipNode",
    "./animators/nodes/SkeletonDifferenceNode",
    "./animators/nodes/SkeletonDirectionalNode",
    "./animators/nodes/SkeletonNaryLERPNode",
    "./animators/nodes/VertexClipNode",
    "./animators/states/AnimationClipState",
    "./animators/states/AnimationStateBase",
    "./animators/states/ParticleAccelerationState",
    "./animators/states/ParticleBezierCurveState",
    "./animators/states/ParticleBillboardState",
    "./animators/states/ParticleColorState",
    "./animators/states/ParticleFollowState",
    "./animators/states/ParticleInitialColorState",
    "./animators/states/ParticleOrbitState",
    "./animators/states/ParticleOscillatorState",
    "./animators/states/ParticlePositionState",
    "./animators/states/ParticleRotateToHeadingState",
    "./animators/states/ParticleRotateToPositionState",
    "./animators/states/ParticleRotationalVelocityState",
    "./animators/states/ParticleScaleState",
    "./animators/states/ParticleSegmentedColorState",
    "./animators/states/ParticleSpriteSheetState",
    "./animators/states/ParticleStateBase",
    "./animators/states/ParticleTimeState",
    "./animators/states/ParticleUVState",
    "./animators/states/ParticleVelocityState",
    "./animators/states/SkeletonBinaryLERPState",
    "./animators/states/SkeletonClipState",
    "./animators/states/SkeletonDifferenceState",
    "./animators/states/SkeletonDirectionalState",
    "./animators/states/SkeletonNaryLERPState",
    "./animators/states/VertexClipState",
    "./animators/transitions/CrossfadeTransition",
    "./animators/transitions/CrossfadeTransitionNode",
    "./animators/transitions/CrossfadeTransitionState",
    "awayjs-renderergl/lib/elements/ElementsPool",
    "elementsClass",
    "_shader",
    "_elementsClass",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase_1",
    "AssetEvent_1",
    "ElementsUtils_1",
    "GL_ElementsBase",
    "pool",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferGL",
    "_indices",
    "getVertexBufferGL",
    "bufferId",
    "_updateVertices",
    "size",
    "unsigned",
    "onClear",
    "_overflow",
    "_setRenderState",
    "draw",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "ContextGLProgramType_1",
    "GL_ElementsBase_1",
    "lineElements",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "position0",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "position1",
    "thickness",
    "viewMatrixReg",
    "viewMatrixIndex",
    "constOne",
    "constNegOne",
    "misc",
    "sceneMatrixReg",
    "sceneMatrixIndex",
    "q0",
    "q1",
    "behind",
    "qclipped",
    "_iGetFragmentCode",
    "colorBufferIndex",
    "colors",
    "projection",
    "matrix",
    "copyRawDataTo",
    "setProgramConstantsFromArray",
    "VERTEX",
    "numIndices",
    "drawVertices",
    "_pool",
    "../elements/GL_ElementsBase",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "GL_TriangleElements_1",
    "GL_SkyboxElements",
    "apply",
    "arguments",
    "../elements/GL_TriangleElements",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "triangleElements",
    "_triangleElements",
    "projectionDependencies",
    "projectionFragment",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "matrix3D",
    "CALCULATION_MATRIX",
    "FRAGMENT",
    "fragmentConstantData",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "awayjs-renderergl/lib/elements",
    "GL_LineElements_1",
    "./elements/GL_ElementsBase",
    "./elements/GL_LineElements",
    "./elements/GL_TriangleElements",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "ErrorBase_1",
    "AnimationSetError",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-renderergl/lib/errors",
    "./errors/AnimationSetError",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "EventBase_1",
    "AnimationStateEvent",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "AnimatorEvent",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "awayjs-renderergl/lib/events/RTTEvent",
    "RTTEvent",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/events",
    "PassEvent_1",
    "ShadingMethodEvent_1",
    "./events/AnimationStateEvent",
    "./events/AnimatorEvent",
    "./events/PassEvent",
    "./events/ShadingMethodEvent",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask_1",
    "Filter3DVBlurTask_1",
    "Filter3DBase_1",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "../filters/Filter3DBase",
    "../filters/tasks/Filter3DHBlurTask",
    "../filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask_1",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "../filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask_1",
    "FXAAFilter3D",
    "_fxaaTask",
    "../filters/tasks/Filter3DFXAATask",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "_textureWidth",
    "_textureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "Filter3DTaskBase_1",
    "Filter3DCompositeTask",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "_registerCache",
    "getFreeFragmentVectorTemp",
    "addFragmentTempUsages",
    "inputTexture",
    "getFreeTextureReg",
    "_overlayTextureIndex",
    "getFreeFragmentConstant",
    "_exposureIndex",
    "scaling",
    "_scalingIndex",
    "_uvVarying",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "../../filters/tasks/Filter3DTaskBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "Filter3DFXAATask",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "Filter3DHBlurTask",
    "numSamples",
    "invW",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "Image2D_1",
    "ShaderRegisterCache_1",
    "Filter3DTaskBase",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "../../shaders/ShaderRegisterCache",
    "awayjs-core/lib/image/Image2D",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "Filter3DVBlurTask",
    "invH",
    "awayjs-renderergl/lib/filters",
    "BlurFilter3D_1",
    "CompositeFilter3D_1",
    "FXAAFilter3D_1",
    "./filters/BlurFilter3D",
    "./filters/CompositeFilter3D",
    "./filters/FXAAFilter3D",
    "./filters/Filter3DBase",
    "./filters/tasks/Filter3DCompositeTask",
    "./filters/tasks/Filter3DFXAATask",
    "./filters/tasks/Filter3DHBlurTask",
    "./filters/tasks/Filter3DTaskBase",
    "./filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "ImageUtils_1",
    "RTTBufferManager",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "../events/RTTEvent",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/managers",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "AttributesBuffer_1",
    "DefaultMaterialManager_1",
    "GL_RenderableBase_1",
    "GL_Billboard",
    "billboard",
    "renderer",
    "_billboard",
    "_pGetElements",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_id",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetSurface",
    "../renderables/GL_RenderableBase",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "_count",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "_renderer",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "RenderableEvent_1",
    "GL_RenderableBase",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onSurfaceUpdatedDelegate",
    "_onSurfaceUpdated",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_RENDER_OWNER",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_updateSurface",
    "_surfaceGL",
    "activeElements",
    "getDefaultMaterial",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "skybox",
    "_vertexArray",
    "_geometry",
    "far",
    "awayjs-renderergl/lib/renderables",
    "GL_BillboardRenderable_1",
    "GL_GraphicRenderable_1",
    "GL_LineSegmentRenderable_1",
    "GL_SkyboxRenderable_1",
    "./renderables/GL_BillboardRenderable",
    "./renderables/GL_GraphicRenderable",
    "./renderables/GL_LineSegmentRenderable",
    "./renderables/GL_RenderableBase",
    "./renderables/GL_SkyboxRenderable",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources_1",
    "ContextGLProfile_1",
    "ShaderBase_1",
    "LightingCompiler_1",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "dirLights",
    "directionalLights",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLights",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "../shaders/ShaderBase",
    "../shaders/compilers/LightingCompiler",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "BlendMode_1",
    "ArgumentError_1",
    "ContextGLTriangleFace_1",
    "CompilerBase_1",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "BACK",
    "usesPositionFragment",
    "imageIndices",
    "_updateProgram",
    "_programData",
    "_usesAnimation",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "numUsedFragmentConstants",
    "_iInitConstantData",
    "usesAnimation",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "setCulling",
    "useBothSides",
    "NONE",
    "coordinateSystem",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "_pRegisterCache",
    "_pSharedRegisters",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "rawData",
    "setFragmentConst",
    "../elements/ElementsPool",
    "../shaders/compilers/CompilerBase",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "RegisterPool_1",
    "ShaderRegisterCache",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "removeFragmentTempUsage",
    "getFreeFragmentSingleTemp",
    "../shaders/RegisterPool",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "ShaderRegisterElement",
    "component",
    "_index",
    "_toStr",
    "COMPONENTS",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "ShaderRegisterData_1",
    "CompilerBase",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "../../shaders/ShaderRegisterData",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "LightingCompiler",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "../../shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/shaders",
    "LightingShader_1",
    "./shaders/LightingShader",
    "./shaders/RegisterPool",
    "./shaders/ShaderBase",
    "./shaders/ShaderRegisterCache",
    "./shaders/ShaderRegisterData",
    "./shaders/ShaderRegisterElement",
    "./shaders/compilers/CompilerBase",
    "./shaders/compilers/LightingCompiler",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-renderergl/lib/sort",
    "RenderableNullSort_1",
    "./sort/RenderableNullSort",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "BasicMaterialPass_1",
    "GL_SurfaceBase_1",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "../surfaces/GL_SurfaceBase",
    "../surfaces/passes/BasicMaterialPass",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_SurfacePassBase_1",
    "GL_DepthSurface",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "../surfaces/GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "DistanceRender",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "_texture",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "SurfaceEvent_1",
    "MaterialBase_1",
    "GL_SurfaceBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "bothSides",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "iOwners",
    "numOwners",
    "../events/PassEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "_surfaceClassGL",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "PassBase_1",
    "BasicMaterialPass",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "_render",
    "../../shaders/ShaderBase",
    "../../surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "PassBase",
    "_preserveAlpha",
    "../../events/PassEvent",
    "awayjs-renderergl/lib/surfaces",
    "GL_BasicMaterialSurface_1",
    "GL_DistanceSurface",
    "GL_SkyboxSurface_1",
    "./surfaces/GL_BasicMaterialSurface",
    "./surfaces/GL_SkyboxSurface",
    "./surfaces/GL_SurfaceBase",
    "./surfaces/GL_SurfacePassBase",
    "./surfaces/passes/BasicMaterialPass",
    "./surfaces/passes/PassBase",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "MappingMode_1",
    "GL_TextureBase_1",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "../textures/GL_TextureBase",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "ContextGLTextureFormat_1",
    "GL_TextureBase",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "awayjs-renderergl/lib/textures",
    "GL_Single2DTexture_1",
    "GL_SingleCubeTexture_1",
    "./textures/GL_Single2DTexture",
    "./textures/GL_SingleCubeTexture",
    "./textures/GL_TextureBase",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Sprite_1",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToSpritees",
    "sprites",
    "_toDispose",
    "_graphicVOs",
    "destSprite",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Sprite",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/tools",
    "Merge_1",
    "ParticleGraphicsTransform_1",
    "./tools/commands/Merge",
    "./tools/data/ParticleGraphicsTransform",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData_1",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "awayjs-renderergl/lib/utils",
    "ParticleGraphicsHelper_1",
    "PerspectiveMatrix3D_1",
    "./utils/ParticleGraphicsHelper",
    "./utils/PerspectiveMatrix3D"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar animators = require(\"./lib/animators\");\nexports.animators = animators;\nvar elements = require(\"./lib/elements\");\nexports.elements = elements;\nvar errors = require(\"./lib/errors\");\nexports.errors = errors;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar filters = require(\"./lib/filters\");\nexports.filters = filters;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar renderables = require(\"./lib/renderables\");\nexports.renderables = renderables;\nvar shaders = require(\"./lib/shaders\");\nexports.shaders = shaders;\nvar sort = require(\"./lib/sort\");\nexports.sort = sort;\nvar surfaces = require(\"./lib/surfaces\");\nexports.surfaces = surfaces;\nvar textures = require(\"./lib/textures\");\nexports.textures = textures;\nvar tools = require(\"./lib/tools\");\nexports.tools = tools;\nvar utils = require(\"./lib/utils\");\nexports.utils = utils;\nvar DefaultRenderer_1 = require(\"./lib/DefaultRenderer\");\nexports.DefaultRenderer = DefaultRenderer_1.default;\nvar DepthRenderer_1 = require(\"./lib/DepthRenderer\");\nexports.DepthRenderer = DepthRenderer_1.default;\nvar DistanceRenderer_1 = require(\"./lib/DistanceRenderer\");\nexports.DistanceRenderer = DistanceRenderer_1.default;\nvar Filter3DRenderer_1 = require(\"./lib/Filter3DRenderer\");\nexports.Filter3DRenderer = Filter3DRenderer_1.default;\nvar RendererBase_1 = require(\"./lib/RendererBase\");\nexports.RendererBase = RendererBase_1.default;\nvar BasicMaterial_1 = require(\"awayjs-display/lib/materials/BasicMaterial\");\nvar Skybox_1 = require(\"awayjs-display/lib/display/Skybox\");\nvar Billboard_1 = require(\"awayjs-display/lib/display/Billboard\");\nvar LineSegment_1 = require(\"awayjs-display/lib/display/LineSegment\");\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial_1.default);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox_1.default);\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements_1.default);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_BillboardRenderable, Billboard_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_GraphicRenderable, Graphic_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox_1.default);\n\n},{\"./lib/DefaultRenderer\":\"awayjs-renderergl/lib/DefaultRenderer\",\"./lib/DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"./lib/DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"./lib/Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"./lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./lib/animators\":\"awayjs-renderergl/lib/animators\",\"./lib/elements\":\"awayjs-renderergl/lib/elements\",\"./lib/errors\":\"awayjs-renderergl/lib/errors\",\"./lib/events\":\"awayjs-renderergl/lib/events\",\"./lib/filters\":\"awayjs-renderergl/lib/filters\",\"./lib/managers\":\"awayjs-renderergl/lib/managers\",\"./lib/renderables\":\"awayjs-renderergl/lib/renderables\",\"./lib/shaders\":\"awayjs-renderergl/lib/shaders\",\"./lib/sort\":\"awayjs-renderergl/lib/sort\",\"./lib/surfaces\":\"awayjs-renderergl/lib/surfaces\",\"./lib/textures\":\"awayjs-renderergl/lib/textures\",\"./lib/tools\":\"awayjs-renderergl/lib/tools\",\"./lib/utils\":\"awayjs-renderergl/lib/utils\",\"awayjs-display/lib/display/Billboard\":undefined,\"awayjs-display/lib/display/LineSegment\":undefined,\"awayjs-display/lib/display/Skybox\":undefined,\"awayjs-display/lib/graphics/Graphic\":undefined,\"awayjs-display/lib/graphics/LineElements\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/materials/BasicMaterial\":undefined,\"awayjs-display/lib/textures/Single2DTexture\":undefined,\"awayjs-display/lib/textures/SingleCubeTexture\":undefined}],\"awayjs-renderergl/lib/DefaultRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLClearMask_1 = require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nvar RendererBase_1 = require(\"./RendererBase\");\nvar DepthRenderer_1 = require(\"./DepthRenderer\");\nvar DistanceRenderer_1 = require(\"./DistanceRenderer\");\nvar Filter3DRenderer_1 = require(\"./Filter3DRenderer\");\nvar GL_SkyboxElements_1 = require(\"./elements/GL_SkyboxElements\");\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nvar DefaultRenderer = (function (_super) {\n    __extends(DefaultRenderer, _super);\n    /**\n     * Creates a new DefaultRenderer object.\n     *\n     * @param antiAlias The amount of anti-aliasing to use.\n     * @param renderMode The render mode to use.\n     */\n    function DefaultRenderer(stage, forceSoftware, profile, mode) {\n        if (stage === void 0) { stage = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this, stage, null, forceSoftware, profile, mode);\n        this._skyboxProjection = new Matrix3D_1.default();\n        this._antiAlias = 0;\n        this._directionalLights = new Array();\n        this._pointLights = new Array();\n        this._lightProbes = new Array();\n        if (stage)\n            this.shareContext = true;\n        this._pRttBufferManager = RTTBufferManager_1.default.getInstance(this._pStage);\n        this._pDepthRenderer = new DepthRenderer_1.default(this._pStage);\n        this._pDistanceRenderer = new DistanceRenderer_1.default(this._pStage);\n        if (this._width == 0)\n            this.width = window.innerWidth;\n        else\n            this._pRttBufferManager.viewWidth = this._width;\n        if (this._height == 0)\n            this.height = window.innerHeight;\n        else\n            this._pRttBufferManager.viewHeight = this._height;\n        this._skyBoxSurfacePool = new SurfacePool_1.default(GL_SkyboxElements_1.default, this._pStage);\n    }\n    Object.defineProperty(DefaultRenderer.prototype, \"antiAlias\", {\n        get: function () {\n            return this._antiAlias;\n        },\n        set: function (value) {\n            if (this._antiAlias == value)\n                return;\n            this._antiAlias = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"depthPrepass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._depthPrepass;\n        },\n        set: function (value) {\n            this._depthPrepass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"filters3d\", {\n        /**\n         *\n         * @returns {*}\n         */\n        get: function () {\n            return this._pFilter3DRenderer ? this._pFilter3DRenderer.filters : null;\n        },\n        set: function (value) {\n            if (value && value.length == 0)\n                value = null;\n            if (this._pFilter3DRenderer && !value) {\n                this._pFilter3DRenderer.dispose();\n                this._pFilter3DRenderer = null;\n            }\n            else if (!this._pFilter3DRenderer && value) {\n                this._pFilter3DRenderer = new Filter3DRenderer_1.default(this._pStage);\n                this._pFilter3DRenderer.filters = value;\n            }\n            if (this._pFilter3DRenderer) {\n                this._pFilter3DRenderer.filters = value;\n                this._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n            }\n            else {\n                this._pRequireDepthRender = false;\n                if (this._pDepthRender) {\n                    this._pDepthRender.dispose();\n                    this._pDepthRender = null;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DefaultRenderer.prototype.enterNode = function (node) {\n        var enter = _super.prototype.enterNode.call(this, node);\n        if (enter && node.debugVisible)\n            this.applyEntity(node.bounds.boundsPrimitive);\n        return enter;\n    };\n    DefaultRenderer.prototype.render = function (camera, scene) {\n        _super.prototype.render.call(this, camera, scene);\n        if (!this._pStage.recoverFromDisposal()) {\n            this._pBackBufferInvalid = true;\n            return;\n        }\n        if (this._pBackBufferInvalid)\n            this.pUpdateBackBuffer();\n        if (this.shareContext && this._pContext)\n            this._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask_1.default.DEPTH);\n        if (this._pFilter3DRenderer) {\n            this.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this.textureRatioY = this._pRttBufferManager.textureRatioY;\n        }\n        else {\n            this.textureRatioX = 1;\n            this.textureRatioY = 1;\n        }\n        if (this._pRequireDepthRender)\n            this.pRenderSceneDepthToTexture(camera, scene);\n        if (this._depthPrepass)\n            this.pRenderDepthPrepass(camera, scene);\n        //reset lights\n        this._directionalLights.length = 0;\n        this._pointLights.length = 0;\n        this._lightProbes.length = 0;\n        if (this._pFilter3DRenderer && this._pContext) {\n            this._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n            this._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n        }\n        else {\n            if (this.shareContext)\n                this._iRender(camera, scene, null, this._pScissorRect);\n            else\n                this._iRender(camera, scene);\n        }\n        if (!this.shareContext && this._pContext)\n            this._pContext.present();\n        // register that a view has been rendered\n        this._pStage.bufferClear = false;\n    };\n    DefaultRenderer.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this.updateLights(camera);\n        _super.prototype.pExecuteRender.call(this, camera, target, scissorRect, surfaceSelector);\n    };\n    DefaultRenderer.prototype.updateLights = function (camera) {\n        var len, i;\n        var light;\n        var shadowMapper;\n        len = this._directionalLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._directionalLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n        }\n        len = this._pointLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._pointLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DefaultRenderer.prototype.pDraw = function (camera) {\n        if (this._skybox) {\n            this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.ALWAYS);\n            this.drawSkybox(camera);\n        }\n        _super.prototype.pDraw.call(this, camera);\n    };\n    /**\n     * Draw the skybox if present.\n     **/\n    DefaultRenderer.prototype.drawSkybox = function (camera) {\n        var renderable = this.getAbstraction(this._skybox);\n        renderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n        this.updateSkyboxProjection(camera);\n        var pass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n        this.activatePass(renderable, pass, camera);\n        renderable._iRender(pass, camera, this._skyboxProjection);\n        this.deactivatePass(renderable, pass);\n    };\n    DefaultRenderer.prototype.updateSkyboxProjection = function (camera) {\n        var near = new Vector3D_1.default();\n        this._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n        this._skyboxProjection.copyRowTo(2, near);\n        var camPos = camera.scenePosition;\n        var cx = near.x;\n        var cy = near.y;\n        var cz = near.z;\n        var cw = -(near.x * camPos.x + near.y * camPos.y + near.z * camPos.z + Math.sqrt(cx * cx + cy * cy + cz * cz));\n        var signX = cx >= 0 ? 1 : -1;\n        var signY = cy >= 0 ? 1 : -1;\n        var p = new Vector3D_1.default(signX, signY, 1, 1);\n        var inverse = this._skyboxProjection.clone();\n        inverse.invert();\n        var q = inverse.transformVector(p);\n        this._skyboxProjection.copyRowTo(3, p);\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\n        this._skyboxProjection.copyRowFrom(2, new Vector3D_1.default(cx * a, cy * a, cz * a, cw * a));\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyDirectionalLight = function (entity) {\n        this._directionalLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyLightProbe = function (entity) {\n        this._lightProbes.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyPointLight = function (entity) {\n        this._pointLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applySkybox = function (entity) {\n        this._skybox = entity;\n    };\n    DefaultRenderer.prototype.dispose = function () {\n        if (!this.shareContext)\n            this._pStage.dispose();\n        this._pRttBufferManager.dispose();\n        this._pRttBufferManager = null;\n        this._pDepthRenderer.dispose();\n        this._pDistanceRenderer.dispose();\n        this._pDepthRenderer = null;\n        this._pDistanceRenderer = null;\n        this._pDepthRender = null;\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderDepthPrepass = function (camera, scene) {\n        this._pDepthRenderer.disableColor = true;\n        if (this._pFilter3DRenderer) {\n            this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n            this._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n        }\n        else {\n            this._pDepthRenderer.textureRatioX = 1;\n            this._pDepthRenderer.textureRatioY = 1;\n            this._pDepthRenderer._iRender(camera, scene);\n        }\n        this._pDepthRenderer.disableColor = false;\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderSceneDepthToTexture = function (camera, scene) {\n        if (this._pDepthTextureInvalid || !this._pDepthRender)\n            this.initDepthTexture(this._pStage.context);\n        this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n        this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n        this._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n    };\n    /**\n     * Updates the backbuffer dimensions.\n     */\n    DefaultRenderer.prototype.pUpdateBackBuffer = function () {\n        // No reason trying to configure back buffer if there is no context available.\n        // Doing this anyway (and relying on _stage to cache width/height for\n        // context does get available) means usesSoftwareRendering won't be reliable.\n        if (this._pStage.context && !this.shareContext) {\n            if (this._width && this._height) {\n                this._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n                this._pBackBufferInvalid = false;\n            }\n        }\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.initDepthTexture = function (context) {\n        this._pDepthTextureInvalid = false;\n        if (this._pDepthRender)\n            this._pDepthRender.dispose();\n        this._pDepthRender = new BitmapImage2D_1.default(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n    };\n    return DefaultRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DefaultRenderer;\n\n},{\"./DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"./DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"./Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-stagegl/lib/base/ContextGLClearMask\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/DepthRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"./RendererBase\");\nvar GL_DepthSurface_1 = require(\"./surfaces/GL_DepthSurface\");\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nvar DepthRenderer = (function (_super) {\n    __extends(DepthRenderer, _super);\n    /**\n     * Creates a new DepthRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DepthRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DepthSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DepthRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DepthRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DepthRenderer;\n\n},{\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\"}],\"awayjs-renderergl/lib/DistanceRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"./RendererBase\");\nvar GL_DistanceSurface_1 = require(\"./surfaces/GL_DistanceSurface\");\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nvar DistanceRenderer = (function (_super) {\n    __extends(DistanceRenderer, _super);\n    /**\n     * Creates a new DistanceRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DistanceRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DistanceSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DistanceRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DistanceRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRenderer;\n\n},{\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\"}],\"awayjs-renderergl/lib/Filter3DRenderer\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar RTTEvent_1 = require(\"./events/RTTEvent\");\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\n/**\n * @class away.render.Filter3DRenderer\n */\nvar Filter3DRenderer = (function () {\n    function Filter3DRenderer(stage) {\n        var _this = this;\n        this._filterSizesInvalid = true;\n        this._onRTTResizeDelegate = function (event) { return _this.onRTTResize(event); };\n        this._stage = stage;\n        this._rttManager = RTTBufferManager_1.default.getInstance(stage);\n        this._rttManager.addEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n    }\n    Filter3DRenderer.prototype.onRTTResize = function (event) {\n        this._filterSizesInvalid = true;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.getMainInputTexture = function (stage) {\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        return this._mainInputTexture;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"filters\", {\n        get: function () {\n            return this._filters;\n        },\n        set: function (value) {\n            this._filters = value;\n            this._filterTasksInvalid = true;\n            this._requireDepthRender = false;\n            if (!this._filters)\n                return;\n            for (var i = 0; i < this._filters.length; ++i)\n                if (this._filters[i].requireDepthRender)\n                    this._requireDepthRender = true;\n            this._filterSizesInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.updateFilterTasks = function (stage) {\n        var len;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (!this._filters) {\n            this._tasks = null;\n            return;\n        }\n        this._tasks = new Array();\n        len = this._filters.length - 1;\n        var filter;\n        for (var i = 0; i <= len; ++i) {\n            // make sure all internal tasks are linked together\n            filter = this._filters[i];\n            filter.setRenderTargets(i == len ? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n            this._tasks = this._tasks.concat(filter.tasks);\n        }\n        this._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n    };\n    Filter3DRenderer.prototype.render = function (stage, camera, depthTexture) {\n        var len;\n        var i;\n        var task;\n        var context = stage.context;\n        var indexBuffer = this._rttManager.indexBuffer;\n        var vertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n        if (!this._filters)\n            return;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        len = this._filters.length;\n        for (i = 0; i < len; ++i)\n            this._filters[i].update(stage, camera);\n        len = this._tasks.length;\n        if (len > 1) {\n            context.setProgram(this._tasks[0].getProgram(stage));\n            context.setVertexBufferAt(this._tasks[0]._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            context.setVertexBufferAt(this._tasks[0]._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        for (i = 0; i < len; ++i) {\n            task = this._tasks[i];\n            stage.setRenderTarget(task.target);\n            context.setProgram(task.getProgram(stage));\n            stage.getAbstraction(task.getMainInputTexture(stage)).activate(task._inputTextureIndex, false);\n            if (!task.target) {\n                stage.scissorRect = null;\n                vertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n                context.setVertexBufferAt(task._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                context.setVertexBufferAt(task._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            }\n            context.clear(0.0, 0.0, 0.0, 0.0);\n            task.activate(stage, camera, depthTexture);\n            context.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n            context.drawIndices(ContextGLDrawMode_1.default.TRIANGLES, indexBuffer, 0, 6);\n            task.deactivate(stage);\n        }\n        context.setTextureAt(0, null);\n        context.setVertexBufferAt(0, null);\n        context.setVertexBufferAt(1, null);\n    };\n    Filter3DRenderer.prototype.updateFilterSizes = function () {\n        for (var i = 0; i < this._filters.length; ++i) {\n            this._filters[i].textureWidth = this._rttManager.textureWidth;\n            this._filters[i].textureHeight = this._rttManager.textureHeight;\n            this._filters[i].rttManager = this._rttManager;\n        }\n        this._filterSizesInvalid = true;\n    };\n    Filter3DRenderer.prototype.dispose = function () {\n        this._rttManager.removeEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n        this._rttManager = null;\n        this._stage = null;\n    };\n    return Filter3DRenderer;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DRenderer;\n\n},{\"./events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/RendererBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar RendererEvent_1 = require(\"awayjs-display/lib/events/RendererEvent\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar StageEvent_1 = require(\"awayjs-stagegl/lib/events/StageEvent\");\nvar StageManager_1 = require(\"awayjs-stagegl/lib/managers/StageManager\");\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\nvar ElementsPool_1 = require(\"./elements/ElementsPool\");\nvar RenderableMergeSort_1 = require(\"./sort/RenderableMergeSort\");\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nvar RendererBase = (function (_super) {\n    __extends(RendererBase, _super);\n    /**\n     * Creates a new RendererBase object.\n     */\n    function RendererBase(stage, surfaceClassGL, forceSoftware, profile, mode) {\n        var _this = this;\n        if (stage === void 0) { stage = null; }\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this);\n        this._objectPools = new Object();\n        this._abstractionPool = new Object();\n        this._activeMasksConfig = new Array();\n        this._registeredMasks = new Array();\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._cameraForward = new Vector3D_1.default();\n        this._viewPort = new Rectangle_1.default();\n        this._pBackBufferInvalid = true;\n        this._pDepthTextureInvalid = true;\n        this._depthPrepass = false;\n        this._backgroundR = 0;\n        this._backgroundG = 0;\n        this._backgroundB = 0;\n        this._backgroundAlpha = 1;\n        this.textureRatioX = 1;\n        this.textureRatioY = 1;\n        this._pRttViewProjectionMatrix = new Matrix3D_1.default();\n        this._localPos = new Point_1.default();\n        this._globalPos = new Point_1.default();\n        this._pScissorRect = new Rectangle_1.default();\n        this._pNumElements = 0;\n        this._disableColor = false;\n        this._renderBlended = true;\n        this._numCullPlanes = 0;\n        this._onViewportUpdatedDelegate = function (event) { return _this.onViewportUpdated(event); };\n        this._onContextUpdateDelegate = function (event) { return _this.onContextUpdate(event); };\n        //default sorting algorithm\n        this.renderableSorter = new RenderableMergeSort_1.default();\n        //set stage\n        this._pStage = stage || StageManager_1.default.getInstance().getFreeStage(forceSoftware, profile, mode);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.stage = value;\n         */\n        if (this._pStage.context)\n            this._pContext = this._pStage.context;\n        for (var i in ElementsPool_1.default._abstractionClassPool)\n            this._objectPools[i] = new SurfacePool_1.default(ElementsPool_1.default._abstractionClassPool[i], this._pStage, surfaceClassGL);\n    }\n    Object.defineProperty(RendererBase.prototype, \"cullPlanes\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._customCullPlanes;\n        },\n        set: function (value) {\n            this._customCullPlanes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"renderBlended\", {\n        get: function () {\n            return this._renderBlended;\n        },\n        set: function (value) {\n            this._renderBlended = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"disableColor\", {\n        get: function () {\n            return this._disableColor;\n        },\n        set: function (value) {\n            this._disableColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"numElements\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pNumElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"viewPort\", {\n        /**\n         * A viewPort rectangle equivalent of the Stage size and position.\n         */\n        get: function () {\n            return this._viewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"scissorRect\", {\n        /**\n         * A scissor rectangle equivalent of the view size and position.\n         */\n        get: function () {\n            return this._pScissorRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.x;\n        },\n        set: function (value) {\n            if (this.x == value)\n                return;\n            this._globalPos.x = this._localPos.x = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.y;\n        },\n        set: function (value) {\n            if (this.y == value)\n                return;\n            this._globalPos.y = this._localPos.y = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._pScissorRect.width = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewWidth = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._pScissorRect.height = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewHeight = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RendererBase.prototype.getAbstraction = function (renderable) {\n        return this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new RendererBase._abstractionClassPool[renderable.assetType](renderable, this));\n    };\n    /**\n     *\n     * @param image\n     */\n    RendererBase.prototype.clearAbstraction = function (renderable) {\n        this._abstractionPool[renderable.id] = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsClass\n     * @returns SurfacePool\n     */\n    RendererBase.prototype.getSurfacePool = function (elements) {\n        return this._objectPools[elements.assetType];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    RendererBase.registerAbstraction = function (renderableClass, assetClass) {\n        RendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n    };\n    RendererBase.prototype.activatePass = function (renderableGL, pass, camera) {\n        //clear unused vertex streams\n        var i;\n        for (i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n            this._pContext.setVertexBufferAt(i, null);\n        //clear unused texture streams\n        for (i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n            this._pContext.setTextureAt(i, null);\n        //check program data is uploaded\n        var programData = pass.shader.programData;\n        if (!programData.program) {\n            programData.program = this._pContext.createProgram();\n            var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n            var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n            programData.program.upload(vertexByteCode, fragmentByteCode);\n        }\n        //set program data\n        this._pContext.setProgram(programData.program);\n        //activate shader object through renderableGL\n        renderableGL._iActivate(pass, camera);\n    };\n    RendererBase.prototype.deactivatePass = function (renderableGL, pass) {\n        //deactivate shader object\n        renderableGL._iDeactivate(pass);\n        this._numUsedStreams = pass.shader.numUsedStreams;\n        this._numUsedTextures = pass.shader.numUsedTextures;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundR\", {\n        /**\n         * The background color's red component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundR;\n        },\n        set: function (value) {\n            if (this._backgroundR == value)\n                return;\n            this._backgroundR = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundG\", {\n        /**\n         * The background color's green component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundG;\n        },\n        set: function (value) {\n            if (this._backgroundG == value)\n                return;\n            this._backgroundG = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundB\", {\n        /**\n         * The background color's blue component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundB;\n        },\n        set: function (value) {\n            if (this._backgroundB == value)\n                return;\n            this._backgroundB = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"context\", {\n        get: function () {\n            return this._pContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"stage\", {\n        /**\n         * The Stage that will provide the ContextGL used for rendering.\n         */\n        get: function () {\n            return this._pStage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Disposes the resources used by the RendererBase.\n     */\n    RendererBase.prototype.dispose = function () {\n        for (var id in this._abstractionPool)\n            this._abstractionPool[id].clear();\n        this._abstractionPool = null;\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        this._pStage = null;\n        this._pContext = null;\n        /*\n         if (_backgroundImageRenderer) {\n         _backgroundImageRenderer.dispose();\n         _backgroundImageRenderer = null;\n         }\n         */\n    };\n    RendererBase.prototype.render = function (camera, scene) {\n        this._viewportDirty = false;\n        this._scissorDirty = false;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture.\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype._iRender = function (camera, scene, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        //TODO refactor setTarget so that rendertextures are created before this check\n        if (!this._pStage || !this._pContext)\n            return;\n        //reset head values\n        this._pBlendedRenderableHead = null;\n        this._pOpaqueRenderableHead = null;\n        this._pNumElements = 0;\n        this._cullPlanes = this._customCullPlanes ? this._customCullPlanes : camera.frustumPlanes;\n        this._numCullPlanes = this._cullPlanes ? this._cullPlanes.length : 0;\n        this._cameraPosition = camera.scenePosition;\n        this._cameraTransform = camera.sceneTransform;\n        this._cameraForward = Matrix3DUtils_1.default.getForward(camera.sceneTransform, this._cameraForward);\n        RendererBase._iCollectionMark++;\n        scene.traversePartitions(this);\n        //sort the resulting renderables\n        if (this.renderableSorter) {\n            this._pOpaqueRenderableHead = this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n            this._pBlendedRenderableHead = this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n        }\n        this._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n        this._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n        this.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n        // generate mip maps on target (if target exists) //TODO\n        //if (target)\n        //\t(<Texture>target).generateMipmaps();\n        // clear buffers\n        for (var i = 0; i < 8; ++i) {\n            this._pContext.setVertexBufferAt(i, null);\n            this._pContext.setTextureAt(i, null);\n        }\n    };\n    RendererBase.prototype._iRenderCascades = function (camera, scene, target, numCascades, scissorRects, cameras) {\n        this._pStage.setRenderTarget(target, true, 0);\n        this._pContext.clear(1, 1, 1, 1, 1, 0);\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS);\n        var head = this._pOpaqueRenderableHead;\n        var first = true;\n        //TODO cascades must have separate collectors, rather than separate draw commands\n        for (var i = numCascades - 1; i >= 0; --i) {\n            this._pStage.scissorRect = scissorRects[i];\n            //this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n            first = false;\n        }\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this._pStage.scissorRect = null;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n     *\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this._pStage.setRenderTarget(target, true, surfaceSelector);\n        if ((target || !this.shareContext) && !this._depthPrepass)\n            this._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n        this._pStage.scissorRect = scissorRect;\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.render();\n         */\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this.pDraw(camera);\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        //this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n        if (!this.shareContext) {\n            if (this._snapshotRequired && this._snapshotBitmapImage2D) {\n                this._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n                this._snapshotRequired = false;\n            }\n        }\n        this._pStage.scissorRect = null;\n    };\n    /*\n     * Will draw the renderer's output on next render to the provided bitmap data.\n     * */\n    RendererBase.prototype.queueSnapshot = function (bmd) {\n        this._snapshotRequired = true;\n        this._snapshotBitmapImage2D = bmd;\n    };\n    /**\n     * Performs the actual drawing of geometry to the target.\n     */\n    RendererBase.prototype.pDraw = function (camera) {\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        if (this._disableColor)\n            this._pContext.setColorMask(false, false, false, false);\n        this.drawRenderables(camera, this._pOpaqueRenderableHead);\n        if (this._renderBlended)\n            this.drawRenderables(camera, this._pBlendedRenderableHead);\n        if (this._disableColor)\n            this._pContext.setColorMask(true, true, true, true);\n    };\n    //private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n    //{\n    //\tvar renderableGL2:GL_RenderableBase;\n    //\tvar render:GL_SurfaceBase;\n    //\tvar pass:IPass;\n    //\n    //\twhile (renderableGL) {\n    //\t\trenderableGL2 = renderableGL;\n    //\t\trender = renderableGL.render;\n    //\t\tpass = render.passes[0] //assuming only one pass per material\n    //\n    //\t\tthis.activatePass(renderableGL, pass, camera);\n    //\n    //\t\tdo {\n    //\t\t\t// if completely in front, it will fall in a different cascade\n    //\t\t\t// do not use near and far planes\n    //\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n    //\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n    //\t\t\t} else {\n    //\t\t\t\trenderableGL2.cascaded = true;\n    //\t\t\t}\n    //\n    //\t\t\trenderableGL2 = renderableGL2.next;\n    //\n    //\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n    //\n    //\t\tthis.deactivatePass(renderableGL, pass);\n    //\n    //\t\trenderableGL = renderableGL2;\n    //\t}\n    //}\n    /**\n     * Draw a list of renderables.\n     *\n     * @param renderables The renderables to draw.\n     */\n    RendererBase.prototype.drawRenderables = function (camera, renderableGL) {\n        var i;\n        var len;\n        var renderableGL2;\n        var surfaceGL;\n        var passes;\n        var pass;\n        this._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n        this._registeredMasks.length = 0;\n        var gl = this._pContext[\"_gl\"];\n        if (gl) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        this._maskConfig = 0;\n        while (renderableGL) {\n            surfaceGL = renderableGL.surfaceGL;\n            passes = surfaceGL.passes;\n            // otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n            if (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n                renderableGL2 = renderableGL;\n                // fast forward\n                do {\n                    renderableGL2 = renderableGL2.next;\n                } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n            }\n            else {\n                if (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n                    this._activeMasksConfig = renderableGL.masksConfig;\n                    if (!this._activeMasksConfig.length) {\n                        // disable stencil\n                        if (gl) {\n                            gl.disable(gl.STENCIL_TEST);\n                            gl.stencilFunc(gl.ALWAYS, 0, 0xff);\n                            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n                        }\n                    }\n                    else {\n                        this._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n                    }\n                    this._activeMasksDirty = false;\n                }\n                //iterate through each shader object\n                len = passes.length;\n                for (i = 0; i < len; i++) {\n                    renderableGL2 = renderableGL;\n                    pass = passes[i];\n                    this.activatePass(renderableGL, pass, camera);\n                    do {\n                        if (renderableGL2.maskId !== -1) {\n                            if (i == 0)\n                                this._registerMask(renderableGL2);\n                        }\n                        else {\n                            renderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n                        }\n                        renderableGL2 = renderableGL2.next;\n                    } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n                    this.deactivatePass(renderableGL, pass);\n                }\n            }\n            renderableGL = renderableGL2;\n        }\n    };\n    /**\n     * Assign the context once retrieved\n     */\n    RendererBase.prototype.onContextUpdate = function (event) {\n        this._pContext = this._pStage.context;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundAlpha\", {\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        set: function (value) {\n            if (this._backgroundAlpha == value)\n                return;\n            this._backgroundAlpha = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /*\n     public get iBackground():Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*\n     public set iBackground(value:Texture2DBase)\n     {\n     if (this._backgroundImageRenderer && !value) {\n     this._backgroundImageRenderer.dispose();\n     this._backgroundImageRenderer = null;\n     }\n\n     if (!this._backgroundImageRenderer && value)\n     {\n\n     this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n     }\n\n\n     this._background = value;\n\n     if (this._backgroundImageRenderer)\n     this._backgroundImageRenderer.texture = value;\n     }\n     */\n    /*\n     public get backgroundImageRenderer():BackgroundImageRenderer\n     {\n     return _backgroundImageRenderer;\n     }\n     */\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyScissorUpdate = function () {\n        if (this._scissorDirty)\n            return;\n        this._scissorDirty = true;\n        if (!this._scissorUpdated)\n            this._scissorUpdated = new RendererEvent_1.default(RendererEvent_1.default.SCISSOR_UPDATED);\n        this.dispatchEvent(this._scissorUpdated);\n    };\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyViewportUpdate = function () {\n        if (this._viewportDirty)\n            return;\n        this._viewportDirty = true;\n        if (!this._viewPortUpdated)\n            this._viewPortUpdated = new RendererEvent_1.default(RendererEvent_1.default.VIEWPORT_UPDATED);\n        this.dispatchEvent(this._viewPortUpdated);\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.onViewportUpdated = function (event) {\n        this._viewPort = this._pStage.viewPort;\n        //TODO stop firing viewport updated for every stagegl viewport change\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._pStage.x;\n            this._pScissorRect.y = this._globalPos.y - this._pStage.y;\n            this.notifyScissorUpdate();\n        }\n        this.notifyViewportUpdate();\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.updateGlobalPos = function () {\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n            this._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n        }\n        else {\n            this._pScissorRect.x = 0;\n            this._pScissorRect.y = 0;\n            this._viewPort.x = this._globalPos.x;\n            this._viewPort.y = this._globalPos.y;\n        }\n        this.notifyScissorUpdate();\n    };\n    /**\n     *\n     * @param node\n     * @returns {boolean}\n     */\n    RendererBase.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase._iCollectionMark && node.isRenderable() && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n        node._iCollectionMark = RendererBase._iCollectionMark;\n        return enter;\n    };\n    RendererBase.prototype.applyEntity = function (entity) {\n        this._sourceEntity = entity;\n        // project onto camera's z-axis\n        this._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n        //save sceneTransform\n        this._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n        //collect renderables\n        entity._acceptTraverser(this);\n    };\n    RendererBase.prototype.applyRenderable = function (renderable) {\n        var renderableGL = this.getAbstraction(renderable);\n        var surfaceGL = renderableGL.surfaceGL;\n        //set local vars for faster referencing\n        renderableGL.surfaceID = surfaceGL.surfaceID;\n        renderableGL.renderOrderId = surfaceGL.renderOrderId;\n        renderableGL.cascaded = false;\n        renderableGL.sourceEntity = this._sourceEntity;\n        renderableGL.zIndex = this._zIndex;\n        renderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n        renderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n        //store reference to scene transform\n        renderableGL.renderSceneTransform = this._renderSceneTransform;\n        if (surfaceGL.requiresBlending) {\n            renderableGL.next = this._pBlendedRenderableHead;\n            this._pBlendedRenderableHead = renderableGL;\n        }\n        else {\n            renderableGL.next = this._pOpaqueRenderableHead;\n            this._pOpaqueRenderableHead = renderableGL;\n        }\n        this._pNumElements += renderableGL.elements.numElements;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    RendererBase.prototype._registerMask = function (obj) {\n        //console.log(\"registerMask\");\n        this._registeredMasks.push(obj);\n    };\n    RendererBase.prototype._renderMasks = function (camera, masks) {\n        var gl = this._pContext[\"_gl\"];\n        //var oldRenderTarget = this._stage.renderTarget;\n        //this._stage.setRenderTarget(this._image);\n        //this._stage.clear();\n        this._pContext.setColorMask(false, false, false, false);\n        // TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n        //context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n        gl.enable(gl.STENCIL_TEST);\n        this._maskConfig++;\n        gl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n        gl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n        var numLayers = masks.length;\n        var numRenderables = this._registeredMasks.length;\n        var renderableGL;\n        var children;\n        var numChildren;\n        var mask;\n        for (var i = 0; i < numLayers; ++i) {\n            if (i != 0) {\n                gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n                gl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n                this._maskConfig++;\n            }\n            children = masks[i];\n            numChildren = children.length;\n            for (var j = 0; j < numChildren; ++j) {\n                mask = children[j];\n                for (var k = 0; k < numRenderables; ++k) {\n                    renderableGL = this._registeredMasks[k];\n                    //console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n                    if (renderableGL.maskId == mask.id) {\n                        //console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n                        this._drawMask(camera, renderableGL);\n                    }\n                }\n            }\n        }\n        gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        this._pContext.setColorMask(true, true, true, true);\n        //this._stage.setRenderTarget(oldRenderTarget);\n    };\n    RendererBase.prototype._drawMask = function (camera, renderableGL) {\n        var surfaceGL = renderableGL.surfaceGL;\n        var passes = surfaceGL.passes;\n        var len = passes.length;\n        var pass = passes[len - 1];\n        this.activatePass(renderableGL, pass, camera);\n        // only render last pass for now\n        renderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n        this.deactivatePass(renderableGL, pass);\n    };\n    RendererBase.prototype._checkMasksConfig = function (masksConfig) {\n        if (this._activeMasksConfig.length != masksConfig.length)\n            return true;\n        var numLayers = masksConfig.length;\n        var numChildren;\n        var childConfig;\n        var activeNumChildren;\n        var activeChildConfig;\n        for (var i = 0; i < numLayers; i++) {\n            childConfig = masksConfig[i];\n            numChildren = childConfig.length;\n            activeChildConfig = this._activeMasksConfig[i];\n            activeNumChildren = activeChildConfig.length;\n            if (activeNumChildren != numChildren)\n                return true;\n            for (var j = 0; j < numChildren; j++) {\n                if (activeChildConfig[j] != childConfig[j])\n                    return true;\n            }\n        }\n        return false;\n    };\n    RendererBase._iCollectionMark = 0;\n    RendererBase._abstractionClassPool = new Object();\n    return RendererBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RendererBase;\n\n},{\"./elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"./sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/events/RendererEvent\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/events/StageEvent\":undefined,\"awayjs-stagegl/lib/managers/StageManager\":undefined}],\"awayjs-renderergl/lib/animators/AnimationSetBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AnimationSetError_1 = require(\"../errors/AnimationSetError\");\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nvar AnimationSetBase = (function (_super) {\n    __extends(AnimationSetBase, _super);\n    function AnimationSetBase() {\n        _super.call(this);\n        this._animations = new Array();\n        this._animationNames = new Array();\n        this._animationDictionary = new Object();\n    }\n    /**\n     * Retrieves a temporary GPU register that's still free.\n     *\n     * @param exclude An array of non-free temporary registers.\n     * @param excludeAnother An additional register that's not free.\n     * @return A temporary register that can be used.\n     */\n    AnimationSetBase.prototype._pFindTempReg = function (exclude, excludeAnother) {\n        if (excludeAnother === void 0) { excludeAnother = null; }\n        var i = 0;\n        var reg;\n        while (true) {\n            reg = \"vt\" + i;\n            if (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n                return reg;\n            ++i;\n        }\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"usesCPU\", {\n        /**\n         * Indicates whether the properties of the animation data contained within the set combined with\n         * the vertex registers already in use on shading materials allows the animation data to utilise\n         * GPU calls.\n         */\n        get: function () {\n            return this._usesCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called by the material to reset the GPU indicator before testing whether register space in the shader\n     * is available for running GPU-based animation code.\n     *\n     * @private\n     */\n    AnimationSetBase.prototype.resetGPUCompatibility = function () {\n        this._usesCPU = false;\n    };\n    AnimationSetBase.prototype.cancelGPUCompatibility = function () {\n        this._usesCPU = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.doneAGALCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationSetBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animations\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animationNames\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animationNames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check to determine whether a state is registered in the animation set under the given name.\n     *\n     * @param stateName The name of the animation state object to be checked.\n     */\n    AnimationSetBase.prototype.hasAnimation = function (name) {\n        return this._animationDictionary[name] != null;\n    };\n    /**\n     * Retrieves the animation state object registered in the animation data set under the given name.\n     *\n     * @param stateName The name of the animation state object to be retrieved.\n     */\n    AnimationSetBase.prototype.getAnimation = function (name) {\n        return this._animationDictionary[name];\n    };\n    /**\n     * Adds an animation state object to the aniamtion data set under the given name.\n     *\n     * @param stateName The name under which the animation state object will be stored.\n     * @param animationState The animation state object to be staored in the set.\n     */\n    AnimationSetBase.prototype.addAnimation = function (node) {\n        if (this._animationDictionary[node.name])\n            throw new AnimationSetError_1.default(\"root node name '\" + node.name + \"' already exists in the set\");\n        this._animationDictionary[node.name] = node;\n        this._animations.push(node);\n        this._animationNames.push(node.name);\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     */\n    AnimationSetBase.prototype.dispose = function () {\n    };\n    AnimationSetBase.assetType = \"[asset AnimationSet]\";\n    return AnimationSetBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetBase;\n\n},{\"../errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/AnimatorBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar RequestAnimationFrame_1 = require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar AnimatorEvent_1 = require(\"../events/AnimatorEvent\");\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nvar AnimatorBase = (function (_super) {\n    __extends(AnimatorBase, _super);\n    /**\n     * Creates a new <code>AnimatorBase</code> object.\n     *\n     * @param animationSet The animation data set to be used by the animator object.\n     */\n    function AnimatorBase(animationSet) {\n        _super.call(this);\n        this._autoUpdate = true;\n        this._time = 0;\n        this._playbackSpeed = 1;\n        this._pOwners = new Array();\n        this._pAbsoluteTime = 0;\n        this._animationStates = new Object();\n        /**\n         * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n         *\n         * @see away.animators.IAnimationState#positionDelta\n         */\n        this.updatePosition = true;\n        this._pAnimationSet = animationSet;\n        this._broadcaster = new RequestAnimationFrame_1.default(this.onEnterFrame, this);\n    }\n    AnimatorBase.prototype.getAnimationState = function (node) {\n        var className = node.stateClass;\n        var uID = node.id;\n        if (this._animationStates[uID] == null)\n            this._animationStates[uID] = new className(this, node);\n        return this._animationStates[uID];\n    };\n    AnimatorBase.prototype.getAnimationStateByName = function (name) {\n        return this.getAnimationState(this._pAnimationSet.getAnimation(name));\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"absoluteTime\", {\n        /**\n         * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n         *\n         * @see #time\n         * @see #playbackSpeed\n         */\n        get: function () {\n            return this._pAbsoluteTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"animationSet\", {\n        /**\n         * Returns the animation data set in use by the animator.\n         */\n        get: function () {\n            return this._pAnimationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeState\", {\n        /**\n         * Returns the current active animation state.\n         */\n        get: function () {\n            return this._pActiveState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimation\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimationName\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pActiveAnimationName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"autoUpdate\", {\n        /**\n         * Determines whether the animators internal update mechanisms are active. Used in cases\n         * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n         * Defaults to true.\n         *\n         * @see #time\n         * @see #update()\n         */\n        get: function () {\n            return this._autoUpdate;\n        },\n        set: function (value) {\n            if (this._autoUpdate == value)\n                return;\n            this._autoUpdate = value;\n            if (this._autoUpdate)\n                this.start();\n            else\n                this.stop();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"time\", {\n        /**\n         * Gets and sets the internal time clock of the animator.\n         */\n        get: function () {\n            return this._time;\n        },\n        set: function (value) {\n            if (this._time == value)\n                return;\n            this.update(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the animation phase of the current active state's animation clip(s).\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimatorBase.prototype.phase = function (value) {\n        this._pActiveState.phase(value);\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"playbackSpeed\", {\n        /**\n         * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n         */\n        get: function () {\n            return this._playbackSpeed;\n        },\n        set: function (value) {\n            this._playbackSpeed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Resumes the automatic playback clock controling the active state of the animator.\n     */\n    AnimatorBase.prototype.start = function () {\n        if (this._isPlaying || !this._autoUpdate)\n            return;\n        this._time = this._pAbsoluteTime = getTimer_1.default();\n        this._isPlaying = true;\n        this._broadcaster.start();\n        if (!this.hasEventListener(AnimatorEvent_1.default.START))\n            return;\n        if (this._startEvent == null)\n            this._startEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.START, this);\n        this.dispatchEvent(this._startEvent);\n    };\n    /**\n     * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n     * <code>time</code> property or <code>update()</code> method.\n     *\n     * @see #time\n     * @see #update()\n     */\n    AnimatorBase.prototype.stop = function () {\n        if (!this._isPlaying)\n            return;\n        this._isPlaying = false;\n        this._broadcaster.stop();\n        if (!this.hasEventListener(AnimatorEvent_1.default.STOP))\n            return;\n        if (this._stopEvent == null)\n            this._stopEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.STOP, this);\n        this.dispatchEvent(this._stopEvent);\n    };\n    /**\n     * Provides a way to manually update the active state of the animator when automatic\n     * updates are disabled.\n     *\n     * @see #stop()\n     * @see #autoUpdate\n     */\n    AnimatorBase.prototype.update = function (time) {\n        var dt = (time - this._time) * this.playbackSpeed;\n        this._pUpdateDeltaTime(dt);\n        this._time = time;\n    };\n    AnimatorBase.prototype.reset = function (name, offset) {\n        if (offset === void 0) { offset = 0; }\n        this.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n    };\n    /**\n     * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.addOwner = function (sprite) {\n        this._pOwners.push(sprite);\n    };\n    /**\n     * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.removeOwner = function (sprite) {\n        this._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n    };\n    /**\n     * Internal abstract method called when the time delta property of the animator's contents requires updating.\n     *\n     * @private\n     */\n    AnimatorBase.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        this._pActiveState.update(this._pAbsoluteTime);\n        if (this.updatePosition)\n            this.applyPositionDelta();\n    };\n    /**\n     * Enter frame event handler for automatically updating the active state of the animator.\n     */\n    AnimatorBase.prototype.onEnterFrame = function (event) {\n        if (event === void 0) { event = null; }\n        this.update(getTimer_1.default());\n    };\n    AnimatorBase.prototype.applyPositionDelta = function () {\n        var delta = this._pActiveState.positionDelta;\n        var dist = delta.length;\n        var len;\n        if (dist > 0) {\n            len = this._pOwners.length;\n            for (var i = 0; i < len; ++i)\n                this._pOwners[i].transform.translateLocal(delta, dist);\n        }\n    };\n    /**\n     *  for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.dispatchCycleEvent = function () {\n        if (this.hasEventListener(AnimatorEvent_1.default.CYCLE_COMPLETE)) {\n            if (this._cycleEvent == null)\n                this._cycleEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.CYCLE_COMPLETE, this);\n            this.dispatchEvent(this._cycleEvent);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.dispose = function () {\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.testGPUCompatibility = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimatorBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.getRenderableElements = function (renderable, sourceElements) {\n        //nothing to do here\n        return sourceElements;\n    };\n    AnimatorBase.assetType = \"[asset Animator]\";\n    return AnimatorBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorBase;\n\n},{\"../events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-core/lib/utils/RequestAnimationFrame\":undefined,\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\nvar AnimationRegisterData_1 = require(\"../animators/data/AnimationRegisterData\");\nvar AnimationElements_1 = require(\"../animators/data/AnimationElements\");\nvar ParticleAnimationData_1 = require(\"../animators/data/ParticleAnimationData\");\nvar ParticleProperties_1 = require(\"../animators/data/ParticleProperties\");\nvar ParticlePropertiesMode_1 = require(\"../animators/data/ParticlePropertiesMode\");\nvar ParticleTimeNode_1 = require(\"../animators/nodes/ParticleTimeNode\");\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nvar ParticleAnimationSet = (function (_super) {\n    __extends(ParticleAnimationSet, _super);\n    /**\n     * Creates a new <code>ParticleAnimationSet</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleAnimationSet(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this);\n        this._animationElements = new Object();\n        this._particleNodes = new Array();\n        this._localDynamicNodes = new Array();\n        this._localStaticNodes = new Array();\n        this._totalLenOfOneVertex = 0;\n        /**\n         *\n         */\n        this.shareAnimationGraphics = true;\n        //automatically add a particle time node to the set\n        this.addAnimation(this._timeNode = new ParticleTimeNode_1.default(usesDuration, usesLooping, usesDelay));\n    }\n    Object.defineProperty(ParticleAnimationSet.prototype, \"particleNodes\", {\n        /**\n         * Returns a vector of the particle animation nodes contained within the set.\n         */\n        get: function () {\n            return this._particleNodes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.addAnimation = function (node) {\n        var i;\n        var n = node;\n        n._iProcessAnimationSetting(this);\n        if (n.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            n._iDataOffset = this._totalLenOfOneVertex;\n            this._totalLenOfOneVertex += n.dataLength;\n            this._localStaticNodes.push(n);\n        }\n        else if (n.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC)\n            this._localDynamicNodes.push(n);\n        for (i = this._particleNodes.length - 1; i >= 0; i--) {\n            if (this._particleNodes[i].priority <= n.priority)\n                break;\n        }\n        this._particleNodes.splice(i + 1, 0, n);\n        _super.prototype.addAnimation.call(this, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        //grab animationRegisterData from the materialpassbase or create a new one if the first time\n        this._iAnimationRegisterData = shader.animationRegisterData;\n        if (this._iAnimationRegisterData == null)\n            this._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData_1.default();\n        //reset animationRegisterData\n        this._iAnimationRegisterData.reset(registerCache, sharedRegisters, this.needVelocity);\n        var code = \"\";\n        var len = sharedRegisters.animatableAttributes.length;\n        for (var i = 0; i < len; i++)\n            code += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \",\" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n        code += \"mov \" + this._iAnimationRegisterData.positionTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n        if (this.needVelocity)\n            code += \"mov \" + this._iAnimationRegisterData.velocityTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n        var node;\n        var i;\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority < ParticleAnimationSet.POST_PRIORITY)\n                code += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n        }\n        code += \"add \" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.positionTarget + \".xyz\\n\";\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n        }\n        if (this.hasColorMulNode) {\n            this._iAnimationRegisterData.colorMulTarget = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(this._iAnimationRegisterData.colorMulTarget, 1);\n            this._iAnimationRegisterData.colorMulVary = registerCache.getFreeVarying();\n            code += \"mov \" + this._iAnimationRegisterData.colorMulTarget + \",\" + this._iAnimationRegisterData.vertexOneConst + \"\\n\";\n        }\n        if (this.hasColorAddNode) {\n            this._iAnimationRegisterData.colorAddTarget = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(this._iAnimationRegisterData.colorAddTarget, 1);\n            this._iAnimationRegisterData.colorAddVary = registerCache.getFreeVarying();\n            code += \"mov \" + this._iAnimationRegisterData.colorAddTarget + \",\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n        }\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n        }\n        if (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            if (this.hasColorMulNode)\n                code += \"mov \" + this._iAnimationRegisterData.colorMulVary + \",\" + this._iAnimationRegisterData.colorMulTarget + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"mov \" + this._iAnimationRegisterData.colorAddVary + \",\" + this._iAnimationRegisterData.colorAddTarget + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        if (this.hasUVNode) {\n            this._iAnimationRegisterData.setUVSourceAndTarget(sharedRegisters);\n            code += \"mov \" + this._iAnimationRegisterData.uvTarget + \".xy,\" + this._iAnimationRegisterData.uvAttribute.toString() + \"\\n\";\n            var node;\n            for (var i = 0; i < this._particleNodes.length; i++)\n                node = this._particleNodes[i];\n            code += node.getAGALUVCode(shader, this, registerCache, this._iAnimationRegisterData);\n            code += \"mov \" + this._iAnimationRegisterData.uvVar + \",\" + this._iAnimationRegisterData.uvTarget + \".xy\\n\";\n        }\n        else\n            code += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            if (this.hasColorMulNode)\n                code += \"mul \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorMulVary + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"add \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorAddVary + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.doneAGALCode = function (shader) {\n        //set vertexZeroConst,vertexOneConst,vertexTwoConst\n        shader.setVertexConst(this._iAnimationRegisterData.vertexZeroConst.index, 0, 1, 2, 0);\n    };\n    Object.defineProperty(ParticleAnimationSet.prototype, \"usesCPU\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.cancelGPUCompatibility = function () {\n    };\n    ParticleAnimationSet.prototype.dispose = function () {\n        for (var key in this._animationElements)\n            this._animationElements[key].dispose();\n        _super.prototype.dispose.call(this);\n    };\n    ParticleAnimationSet.prototype.getAnimationElements = function (graphic) {\n        var animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n        if (animationElements)\n            return animationElements;\n        this._iGenerateAnimationElements(graphic.parent);\n        return (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n    };\n    /** @private */\n    ParticleAnimationSet.prototype._iGenerateAnimationElements = function (graphics) {\n        if (this.initParticleFunc == null)\n            throw (new Error(\"no initParticleFunc set\"));\n        var i, j, k;\n        var animationElements;\n        var newAnimationElements = false;\n        var elements;\n        var graphic;\n        var localNode;\n        for (i = 0; i < graphics.count; i++) {\n            graphic = graphics.getGraphicAt(i);\n            elements = graphic.elements;\n            if (this.shareAnimationGraphics) {\n                animationElements = this._animationElements[elements.id];\n                if (animationElements)\n                    continue;\n            }\n            animationElements = new AnimationElements_1.default();\n            if (this.shareAnimationGraphics)\n                this._animationElements[elements.id] = animationElements;\n            else\n                this._animationElements[graphic.id] = animationElements;\n            newAnimationElements = true;\n            //create the vertexData vector that will be used for local node data\n            animationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        }\n        if (!newAnimationElements)\n            return;\n        var particles = graphics.particles;\n        var particlesLength = particles.length;\n        var numParticles = graphics.numParticles;\n        var particleProperties = new ParticleProperties_1.default();\n        var particle;\n        var oneDataLen;\n        var oneDataOffset;\n        var counterForVertex;\n        var counterForOneData;\n        var oneData;\n        var numVertices;\n        var vertexData;\n        var vertexLength;\n        var startingOffset;\n        var vertexOffset;\n        //default values for particle param\n        particleProperties.total = numParticles;\n        particleProperties.startTime = 0;\n        particleProperties.duration = 1000;\n        particleProperties.delay = 0.1;\n        i = 0;\n        j = 0;\n        while (i < numParticles) {\n            particleProperties.index = i;\n            //call the init on the particle parameters\n            this.initParticleFunc.call(this.initParticleScope, particleProperties);\n            //create the next set of node properties for the particle\n            for (k = 0; k < this._localStaticNodes.length; k++)\n                this._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n            //loop through all particle data for the curent particle\n            while (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n                //find the target animationElements\n                for (k = 0; k < graphics.count; k++) {\n                    graphic = graphics.getGraphicAt(k);\n                    if (graphic.elements == particle.elements) {\n                        animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n                        break;\n                    }\n                }\n                numVertices = particle.numVertices;\n                vertexData = animationElements.vertexData;\n                vertexLength = numVertices * this._totalLenOfOneVertex;\n                startingOffset = animationElements.numProcessedVertices * this._totalLenOfOneVertex;\n                //loop through each static local node in the animation set\n                for (k = 0; k < this._localStaticNodes.length; k++) {\n                    localNode = this._localStaticNodes[k];\n                    oneData = localNode.oneData;\n                    oneDataLen = localNode.dataLength;\n                    oneDataOffset = startingOffset + localNode._iDataOffset;\n                    //loop through each vertex set in the vertex data\n                    for (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n                        vertexOffset = oneDataOffset + counterForVertex;\n                        //add the data for the local node to the vertex data\n                        for (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n                            vertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n                    }\n                }\n                //store particle properties if they need to be retreived for dynamic local nodes\n                if (this._localDynamicNodes.length)\n                    animationElements.animationParticles.push(new ParticleAnimationData_1.default(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n                animationElements.numProcessedVertices += numVertices;\n                //next index\n                j++;\n            }\n            //next particle\n            i++;\n        }\n    };\n    /**\n     * Property used by particle nodes that require compilers at the end of the shader\n     */\n    ParticleAnimationSet.POST_PRIORITY = 9;\n    /**\n     * Property used by particle nodes that require color compilers\n     */\n    ParticleAnimationSet.COLOR_PRIORITY = 18;\n    return ParticleAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"../animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"../animators/data/AnimationRegisterData\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\",\"../animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"../animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\"}],\"awayjs-renderergl/lib/animators/ParticleAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar AnimationElements_1 = require(\"../animators/data/AnimationElements\");\nvar ParticlePropertiesMode_1 = require(\"../animators/data/ParticlePropertiesMode\");\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nvar ParticleAnimator = (function (_super) {\n    __extends(ParticleAnimator, _super);\n    /**\n     * Creates a new <code>ParticleAnimator</code> object.\n     *\n     * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n     */\n    function ParticleAnimator(particleAnimationSet) {\n        _super.call(this, particleAnimationSet);\n        this._animationParticleStates = new Array();\n        this._animatorParticleStates = new Array();\n        this._timeParticleStates = new Array();\n        this._totalLenOfOneVertex = 0;\n        this._animatorSubGeometries = new Object();\n        this._particleAnimationSet = particleAnimationSet;\n        var state;\n        var node;\n        for (var i = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n            node = this._particleAnimationSet.particleNodes[i];\n            state = this.getAnimationState(node);\n            if (node.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC) {\n                this._animatorParticleStates.push(state);\n                node._iDataOffset = this._totalLenOfOneVertex;\n                this._totalLenOfOneVertex += node.dataLength;\n            }\n            else {\n                this._animationParticleStates.push(state);\n            }\n            if (state.needUpdateTime)\n                this._timeParticleStates.push(state);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.clone = function () {\n        return new ParticleAnimator(this._particleAnimationSet);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        var animationRegisterData = this._particleAnimationSet._iAnimationRegisterData;\n        var graphic = renderable.graphic;\n        if (!graphic)\n            throw (new Error(\"Must be graphic\"));\n        //process animation sub geometries\n        var animationElements = this._particleAnimationSet.getAnimationElements(graphic);\n        var i;\n        for (i = 0; i < this._animationParticleStates.length; i++)\n            this._animationParticleStates[i].setRenderState(shader, renderable, animationElements, animationRegisterData, camera, stage);\n        //process animator subgeometries\n        var animatorElements = this.getAnimatorElements(graphic);\n        for (i = 0; i < this._animatorParticleStates.length; i++)\n            this._animatorParticleStates[i].setRenderState(shader, renderable, animatorElements, animationRegisterData, camera, stage);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.start = function () {\n        _super.prototype.start.call(this);\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].update(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.resetTime = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n        this.update(this.time);\n    };\n    ParticleAnimator.prototype.dispose = function () {\n        for (var key in this._animatorSubGeometries)\n            this._animatorSubGeometries[key].dispose();\n    };\n    ParticleAnimator.prototype.getAnimatorElements = function (graphic) {\n        if (!this._animatorParticleStates.length)\n            return;\n        var elements = graphic.elements;\n        var animatorElements = this._animatorSubGeometries[elements.id] = new AnimationElements_1.default();\n        //create the vertexData vector that will be used for local state data\n        animatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        //pass the particles data to the animator elements\n        animatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n    };\n    return ParticleAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\"}],\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nvar SkeletonAnimationSet = (function (_super) {\n    __extends(SkeletonAnimationSet, _super);\n    /**\n     * Creates a new <code>SkeletonAnimationSet</code> object.\n     *\n     * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n     */\n    function SkeletonAnimationSet(jointsPerVertex) {\n        if (jointsPerVertex === void 0) { jointsPerVertex = 4; }\n        _super.call(this);\n        this._jointsPerVertex = jointsPerVertex;\n    }\n    Object.defineProperty(SkeletonAnimationSet.prototype, \"jointsPerVertex\", {\n        /**\n         * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n         * maximum allowed value is 4.\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimationSet.prototype, \"matricesIndex\", {\n        get: function () {\n            return this._matricesIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        this._matricesIndex = registerCache.numUsedVertexConstants;\n        var indexOffset0 = this._matricesIndex;\n        var indexOffset1 = this._matricesIndex + 1;\n        var indexOffset2 = this._matricesIndex + 2;\n        var indexStream = registerCache.getFreeVertexAttribute();\n        shader.jointIndexIndex = indexStream.index;\n        var weightStream = registerCache.getFreeVertexAttribute();\n        shader.jointWeightIndex = weightStream.index;\n        var indices = [indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\"];\n        var weights = [weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\"];\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        var dot = \"dp4\";\n        var code = \"\";\n        var len = sharedRegisters.animatableAttributes.length;\n        for (var i = 0; i < len; ++i) {\n            var source = sharedRegisters.animatableAttributes[i];\n            var target = sharedRegisters.animationTargetRegisters[i];\n            for (var j = 0; j < this._jointsPerVertex; ++j) {\n                registerCache.getFreeVertexConstant();\n                registerCache.getFreeVertexConstant();\n                registerCache.getFreeVertexConstant();\n                code += dot + \" \" + temp1 + \".x, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".y, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".z, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n                    \"mov \" + temp1 + \".w, \" + source + \".w\\n\" +\n                    \"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n                // add or mov to target. Need to write to a temp reg first, because an output can be a target\n                if (j == 0)\n                    code += \"mov \" + target + \", \" + temp1 + \"\\n\";\n                else\n                    code += \"add \" + target + \", \" + target + \", \" + temp1 + \"\\n\";\n            }\n            // switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n            dot = \"dp3\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        return \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    return SkeletonAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\"}],\"awayjs-renderergl/lib/animators/SkeletonAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar JointPose_1 = require(\"../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../animators/data/SkeletonPose\");\nvar AnimationStateEvent_1 = require(\"../events/AnimationStateEvent\");\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar SkeletonAnimator = (function (_super) {\n    __extends(SkeletonAnimator, _super);\n    /**\n     * Creates a new <code>SkeletonAnimator</code> object.\n     *\n     * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n     * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n     * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n     */\n    function SkeletonAnimator(animationSet, skeleton, forceCPU) {\n        var _this = this;\n        if (forceCPU === void 0) { forceCPU = false; }\n        _super.call(this, animationSet);\n        this._globalPose = new SkeletonPose_1.default();\n        this._morphedElements = new Object();\n        this._morphedElementsDirty = new Object();\n        this._skeletonAnimationSet = animationSet;\n        this._skeleton = skeleton;\n        this._forceCPU = forceCPU;\n        this._jointsPerVertex = animationSet.jointsPerVertex;\n        this._numJoints = this._skeleton.numJoints;\n        this._globalMatrices = new Float32Array(this._numJoints * 12);\n        var j = 0;\n        for (var i = 0; i < this._numJoints; ++i) {\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n        }\n        this._onTransitionCompleteDelegate = function (event) { return _this.onTransitionComplete(event); };\n        this._onIndicesUpdateDelegate = function (event) { return _this.onIndicesUpdate(event); };\n        this._onVerticesUpdateDelegate = function (event) { return _this.onVerticesUpdate(event); };\n    }\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalMatrices\", {\n        /**\n         * returns the calculated global matrices of the current skeleton pose.\n         *\n         * @see #globalPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalMatrices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalPose\", {\n        /**\n         * returns the current skeleton pose output from the animator.\n         *\n         * @see away.animators.data.SkeletonPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"skeleton\", {\n        /**\n         * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n         * skinned geoemtry to which skeleon animator is applied.\n         */\n        get: function () {\n            return this._skeleton;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"forceCPU\", {\n        /**\n         * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n         * Defaults to false.\n         */\n        get: function () {\n            return this._forceCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.clone = function () {\n        return new SkeletonAnimator(this._skeletonAnimationSet, this._skeleton, this._forceCPU);\n    };\n    /**\n     * Plays an animation state registered with the given name in the animation data set.\n     *\n     * @param name The data set name of the animation state to be played.\n     * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n     * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n     */\n    SkeletonAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        if (transition && this._pActiveNode) {\n            //setup the transition\n            this._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n            this._pActiveNode.addEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n        }\n        else\n            this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeSkeletonState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        // do on request of globalProperties\n        if (this._globalPropertiesDirty)\n            this.updateGlobalProperties();\n        var elements = renderable.graphic.elements;\n        elements.useCondensedIndices = this._useCondensedIndices;\n        if (this._useCondensedIndices) {\n            // using a condensed data set\n            this.updateCondensedMatrices(elements.condensedIndexLookUp);\n            shader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._condensedMatrices);\n        }\n        else {\n            if (this._pAnimationSet.usesCPU) {\n                if (this._morphedElementsDirty[elements.id])\n                    this.morphElements(renderable, elements);\n                return;\n            }\n            shader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._globalMatrices);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.testGPUCompatibility = function (shader) {\n        if (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints * 3 > 128))\n            this._pAnimationSet.cancelGPUCompatibility();\n    };\n    /**\n     * Applies the calculated time delta to the active animation state node or state transition object.\n     */\n    SkeletonAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        //invalidate pose matrices\n        this._globalPropertiesDirty = true;\n        //trigger geometry invalidation if using CPU animation\n        if (this._pAnimationSet.usesCPU)\n            for (var key in this._morphedElementsDirty)\n                this._morphedElementsDirty[key] = true;\n    };\n    SkeletonAnimator.prototype.updateCondensedMatrices = function (condensedIndexLookUp) {\n        var j = 0, k = 0;\n        var len = condensedIndexLookUp.length;\n        var srcIndex;\n        this._condensedMatrices = new Float32Array(len * 12);\n        for (var i = 0; i < len; i++) {\n            srcIndex = condensedIndexLookUp[i] * 12; //12 required for the three 4-component vectors that store the matrix\n            k = 12;\n            // copy into condensed\n            while (k--)\n                this._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n        }\n    };\n    SkeletonAnimator.prototype.updateGlobalProperties = function () {\n        this._globalPropertiesDirty = false;\n        //get global pose\n        this.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n        // convert pose to matrix\n        var mtxOffset = 0;\n        var globalPoses = this._globalPose.jointPoses;\n        var raw;\n        var ox, oy, oz, ow;\n        var xy2, xz2, xw2;\n        var yz2, yw2, zw2;\n        var n11, n12, n13;\n        var n21, n22, n23;\n        var n31, n32, n33;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        var joints = this._skeleton.joints;\n        var pose;\n        var quat;\n        var vec;\n        var t;\n        for (var i = 0; i < this._numJoints; ++i) {\n            pose = globalPoses[i];\n            quat = pose.orientation;\n            vec = pose.translation;\n            ox = quat.x;\n            oy = quat.y;\n            oz = quat.z;\n            ow = quat.w;\n            xy2 = (t = 2.0 * ox) * oy;\n            xz2 = t * oz;\n            xw2 = t * ow;\n            yz2 = (t = 2.0 * oy) * oz;\n            yw2 = t * ow;\n            zw2 = 2.0 * oz * ow;\n            yz2 = 2.0 * oy * oz;\n            yw2 = 2.0 * oy * ow;\n            zw2 = 2.0 * oz * ow;\n            ox *= ox;\n            oy *= oy;\n            oz *= oz;\n            ow *= ow;\n            n11 = (t = ox - oy) - oz + ow;\n            n12 = xy2 - zw2;\n            n13 = xz2 + yw2;\n            n21 = xy2 + zw2;\n            n22 = -t - oz + ow;\n            n23 = yz2 - xw2;\n            n31 = xz2 - yw2;\n            n32 = yz2 + xw2;\n            n33 = -ox - oy + oz + ow;\n            // prepend inverse bind pose\n            raw = joints[i].inverseBindPose;\n            m11 = raw[0];\n            m12 = raw[4];\n            m13 = raw[8];\n            m14 = raw[12];\n            m21 = raw[1];\n            m22 = raw[5];\n            m23 = raw[9];\n            m24 = raw[13];\n            m31 = raw[2];\n            m32 = raw[6];\n            m33 = raw[10];\n            m34 = raw[14];\n            this._globalMatrices[mtxOffset] = n11 * m11 + n12 * m21 + n13 * m31;\n            this._globalMatrices[mtxOffset + 1] = n11 * m12 + n12 * m22 + n13 * m32;\n            this._globalMatrices[mtxOffset + 2] = n11 * m13 + n12 * m23 + n13 * m33;\n            this._globalMatrices[mtxOffset + 3] = n11 * m14 + n12 * m24 + n13 * m34 + vec.x;\n            this._globalMatrices[mtxOffset + 4] = n21 * m11 + n22 * m21 + n23 * m31;\n            this._globalMatrices[mtxOffset + 5] = n21 * m12 + n22 * m22 + n23 * m32;\n            this._globalMatrices[mtxOffset + 6] = n21 * m13 + n22 * m23 + n23 * m33;\n            this._globalMatrices[mtxOffset + 7] = n21 * m14 + n22 * m24 + n23 * m34 + vec.y;\n            this._globalMatrices[mtxOffset + 8] = n31 * m11 + n32 * m21 + n33 * m31;\n            this._globalMatrices[mtxOffset + 9] = n31 * m12 + n32 * m22 + n33 * m32;\n            this._globalMatrices[mtxOffset + 10] = n31 * m13 + n32 * m23 + n33 * m33;\n            this._globalMatrices[mtxOffset + 11] = n31 * m14 + n32 * m24 + n33 * m34 + vec.z;\n            mtxOffset = mtxOffset + 12;\n        }\n    };\n    SkeletonAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = true;\n        //early out for GPU animations\n        if (!this._pAnimationSet.usesCPU)\n            return sourceElements;\n        var targetElements;\n        if (!(targetElements = this._morphedElements[sourceElements.id])) {\n            //not yet stored\n            targetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n            //turn off auto calculations on the morphed geometry\n            targetElements.autoDeriveNormals = false;\n            targetElements.autoDeriveTangents = false;\n            //add event listeners for any changes in UV values on the source geometry\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n        }\n        return targetElements;\n    };\n    /**\n     * If the animation can't be performed on GPU, transform vertices manually\n     * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n     * @param pass The material pass for which we need to transform the vertices\n     */\n    SkeletonAnimator.prototype.morphElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = false;\n        var numVertices = sourceElements.numVertices;\n        var sourcePositions = sourceElements.positions.get(numVertices);\n        var sourceNormals = sourceElements.normals.get(numVertices);\n        var sourceTangents = sourceElements.tangents.get(numVertices);\n        var posDim = sourceElements.positions.dimensions;\n        var jointIndices = sourceElements.jointIndices.get(numVertices);\n        var jointWeights = sourceElements.jointWeights.get(numVertices);\n        var targetElements = this._morphedElements[sourceElements.id];\n        var targetPositions = targetElements.positions.get(numVertices);\n        var targetNormals = targetElements.normals.get(numVertices);\n        var targetTangents = targetElements.tangents.get(numVertices);\n        var index = 0;\n        var i0 = 0;\n        var i1 = 0;\n        var j = 0;\n        var k;\n        var vx, vy, vz;\n        var nx, ny, nz;\n        var tx, ty, tz;\n        var weight;\n        var vertX, vertY, vertZ;\n        var normX, normY, normZ;\n        var tangX, tangY, tangZ;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        while (index < numVertices) {\n            i0 = index * posDim;\n            vertX = sourcePositions[i0];\n            vertY = sourcePositions[i0 + 1];\n            vertZ = (posDim == 3) ? sourcePositions[i0 + 2] : 0;\n            i1 = index * 3;\n            normX = sourceNormals[i1];\n            normY = sourceNormals[i1 + 1];\n            normZ = sourceNormals[i1 + 2];\n            tangX = sourceTangents[i1];\n            tangY = sourceTangents[i1 + 1];\n            tangZ = sourceTangents[i1 + 2];\n            vx = 0;\n            vy = 0;\n            vz = 0;\n            nx = 0;\n            ny = 0;\n            nz = 0;\n            tx = 0;\n            ty = 0;\n            tz = 0;\n            k = 0;\n            while (k < this._jointsPerVertex) {\n                weight = jointWeights[j];\n                if (weight > 0) {\n                    // implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n                    var mtxOffset = jointIndices[j++] << 2;\n                    m11 = this._globalMatrices[mtxOffset];\n                    m12 = this._globalMatrices[mtxOffset + 1];\n                    m13 = this._globalMatrices[mtxOffset + 2];\n                    m14 = this._globalMatrices[mtxOffset + 3];\n                    m21 = this._globalMatrices[mtxOffset + 4];\n                    m22 = this._globalMatrices[mtxOffset + 5];\n                    m23 = this._globalMatrices[mtxOffset + 6];\n                    m24 = this._globalMatrices[mtxOffset + 7];\n                    m31 = this._globalMatrices[mtxOffset + 8];\n                    m32 = this._globalMatrices[mtxOffset + 9];\n                    m33 = this._globalMatrices[mtxOffset + 10];\n                    m34 = this._globalMatrices[mtxOffset + 11];\n                    vx += weight * (m11 * vertX + m12 * vertY + m13 * vertZ + m14);\n                    vy += weight * (m21 * vertX + m22 * vertY + m23 * vertZ + m24);\n                    vz += weight * (m31 * vertX + m32 * vertY + m33 * vertZ + m34);\n                    nx += weight * (m11 * normX + m12 * normY + m13 * normZ);\n                    ny += weight * (m21 * normX + m22 * normY + m23 * normZ);\n                    nz += weight * (m31 * normX + m32 * normY + m33 * normZ);\n                    tx += weight * (m11 * tangX + m12 * tangY + m13 * tangZ);\n                    ty += weight * (m21 * tangX + m22 * tangY + m23 * tangZ);\n                    tz += weight * (m31 * tangX + m32 * tangY + m33 * tangZ);\n                    ++k;\n                }\n                else {\n                    j += (this._jointsPerVertex - k);\n                    k = this._jointsPerVertex;\n                }\n            }\n            targetPositions[i0] = vx;\n            targetPositions[i0 + 1] = vy;\n            if (posDim == 3)\n                targetPositions[i0 + 2] = vz;\n            targetNormals[i1] = nx;\n            targetNormals[i1 + 1] = ny;\n            targetNormals[i1 + 2] = nz;\n            targetTangents[i1] = tx;\n            targetTangents[i1 + 1] = ty;\n            targetTangents[i1 + 2] = tz;\n            index++;\n        }\n        targetElements.setPositions(targetPositions);\n        targetElements.setNormals(targetNormals);\n        targetElements.setTangents(targetTangents);\n    };\n    /**\n     * Converts a local hierarchical skeleton pose to a global pose\n     * @param targetPose The SkeletonPose object that will contain the global pose.\n     * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n     */\n    SkeletonAnimator.prototype.localToGlobalPose = function (sourcePose, targetPose, skeleton) {\n        var globalPoses = targetPose.jointPoses;\n        var globalJointPose;\n        var joints = skeleton.joints;\n        var len = sourcePose.numJointPoses;\n        var jointPoses = sourcePose.jointPoses;\n        var parentIndex;\n        var joint;\n        var parentPose;\n        var pose;\n        var or;\n        var tr;\n        var t;\n        var q;\n        var x1, y1, z1, w1;\n        var x2, y2, z2, w2;\n        var x3, y3, z3;\n        // :s\n        if (globalPoses.length != len)\n            globalPoses.length = len;\n        for (var i = 0; i < len; ++i) {\n            globalJointPose = globalPoses[i];\n            if (globalJointPose == null)\n                globalJointPose = globalPoses[i] = new JointPose_1.default();\n            joint = joints[i];\n            parentIndex = joint.parentIndex;\n            pose = jointPoses[i];\n            q = globalJointPose.orientation;\n            t = globalJointPose.translation;\n            if (parentIndex < 0) {\n                tr = pose.translation;\n                or = pose.orientation;\n                q.x = or.x;\n                q.y = or.y;\n                q.z = or.z;\n                q.w = or.w;\n                t.x = tr.x;\n                t.y = tr.y;\n                t.z = tr.z;\n            }\n            else {\n                // append parent pose\n                parentPose = globalPoses[parentIndex];\n                // rotate point\n                or = parentPose.orientation;\n                tr = pose.translation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                x3 = tr.x;\n                y3 = tr.y;\n                z3 = tr.z;\n                w1 = -x2 * x3 - y2 * y3 - z2 * z3;\n                x1 = w2 * x3 + y2 * z3 - z2 * y3;\n                y1 = w2 * y3 - x2 * z3 + z2 * x3;\n                z1 = w2 * z3 + x2 * y3 - y2 * x3;\n                // append parent translation\n                tr = parentPose.translation;\n                t.x = -w1 * x2 + x1 * w2 - y1 * z2 + z1 * y2 + tr.x;\n                t.y = -w1 * y2 + x1 * z2 + y1 * w2 - z1 * x2 + tr.y;\n                t.z = -w1 * z2 - x1 * y2 + y1 * x2 + z1 * w2 + tr.z;\n                // append parent orientation\n                x1 = or.x;\n                y1 = or.y;\n                z1 = or.z;\n                w1 = or.w;\n                or = pose.orientation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                q.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n                q.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n                q.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n                q.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onTransitionComplete = function (event) {\n        if (event.type == AnimationStateEvent_1.default.TRANSITION_COMPLETE) {\n            event.animationNode.removeEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n            //if this is the current active state transition, revert control to the active node\n            if (this._pActiveState == event.animationState) {\n                this._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n                this._pActiveState = this.getAnimationState(this._pActiveNode);\n                this._activeSkeletonState = this._pActiveState;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onIndicesUpdate = function (event) {\n        var elements = event.target;\n        this._morphedElements[elements.id].setIndices(elements.indices);\n    };\n    SkeletonAnimator.prototype.onVerticesUpdate = function (event) {\n        var elements = event.target;\n        var morphGraphics = this._morphedElements[elements.id];\n        switch (event.attributesView) {\n            case elements.uvs:\n                morphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n                break;\n            case elements.getCustomAtributes(\"secondaryUVs\"):\n                morphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n                break;\n        }\n    };\n    return SkeletonAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-display/lib/events/ElementsEvent\":undefined}],\"awayjs-renderergl/lib/animators/VertexAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\nvar AnimationRegisterData_1 = require(\"../animators/data/AnimationRegisterData\");\nvar VertexAnimationMode_1 = require(\"../animators/data/VertexAnimationMode\");\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nvar VertexAnimationSet = (function (_super) {\n    __extends(VertexAnimationSet, _super);\n    /**\n     * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n     */\n    //\t\tpublic get useNormals():boolean\n    //\t\t{\n    //\t\t\treturn this._uploadNormals;\n    //\t\t}\n    /**\n     * Creates a new <code>VertexAnimationSet</code> object.\n     *\n     * @param numPoses The number of poses made available at once to the GPU animation code.\n     * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n     *\n     * @see away3d.animators.data.VertexAnimationMode\n     */\n    function VertexAnimationSet(numPoses, blendMode) {\n        if (numPoses === void 0) { numPoses = 2; }\n        if (blendMode === void 0) { blendMode = \"absolute\"; }\n        _super.call(this);\n        this._numPoses = numPoses;\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(VertexAnimationSet.prototype, \"numPoses\", {\n        /**\n         * Returns the number of poses made available at once to the GPU animation code.\n         */\n        get: function () {\n            return this._numPoses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexAnimationSet.prototype, \"blendMode\", {\n        /**\n         * Returns the active blend mode of the vertex animator object.\n         */\n        get: function () {\n            return this._blendMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        //grab animationRegisterData from the materialpassbase or create a new one if the first time\n        this._iAnimationRegisterData = shader.animationRegisterData;\n        if (this._iAnimationRegisterData == null)\n            this._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData_1.default();\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            return this.getAbsoluteAGALCode(shader, registerCache, sharedRegisters);\n        else\n            return this.getAdditiveAGALCode(shader, registerCache, sharedRegisters);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        return \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    /**\n     * Generates the vertex AGAL code for absolute blending.\n     */\n    VertexAnimationSet.prototype.getAbsoluteAGALCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var regs = new Array(\".x\", \".y\", \".z\", \".w\");\n        var len = sharedRegisters.animatableAttributes.length;\n        var constantReg = registerCache.getFreeVertexConstant();\n        this._iAnimationRegisterData.weightsIndex = constantReg.index * 4;\n        this._iAnimationRegisterData.poseIndices = new Array(this._numPoses);\n        var poseInput;\n        var k = 0;\n        if (len > 2)\n            len = 2;\n        for (var i = 0; i < len; ++i) {\n            code += \"mul \" + temp1 + \", \" + sharedRegisters.animatableAttributes[i] + \", \" + constantReg + regs[0] + \"\\n\";\n            for (var j = 1; j < this._numPoses; ++j) {\n                poseInput = registerCache.getFreeVertexAttribute();\n                this._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n                code += \"mul \" + temp2 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\";\n                if (j < this._numPoses - 1)\n                    code += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n            }\n            code += \"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        }\n        // add code for bitangents if tangents are used\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n        }\n        //\n        // // simply write attributes to targets, do not animate them\n        // // projection will pick up on targets[0] to do the projection\n        // var len:number = sharedRegisters.animatableAttributes.length;\n        // for (var i:number = 0; i < len; ++i)\n        // \tcode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n        return code;\n    };\n    /**\n     * Generates the vertex AGAL code for additive blending.\n     */\n    VertexAnimationSet.prototype.getAdditiveAGALCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var len = sharedRegisters.animatableAttributes.length;\n        var regs = [\".x\", \".y\", \".z\", \".w\"];\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        var constantReg = registerCache.getFreeVertexConstant();\n        this._iAnimationRegisterData.weightsIndex = constantReg.index * 4;\n        this._iAnimationRegisterData.poseIndices = new Array(this._numPoses);\n        var poseInput;\n        var k = 0;\n        if (len > 2)\n            len = 2;\n        code += \"mov  \" + sharedRegisters.animationTargetRegisters[0] + \", \" + sharedRegisters.animatableAttributes[0] + \"\\n\";\n        if (shader.normalDependencies > 0)\n            code += \"mov \" + sharedRegisters.animationTargetRegisters[1] + \", \" + sharedRegisters.animatableAttributes[1] + \"\\n\";\n        for (var i = 0; i < len; ++i) {\n            for (var j = 0; j < this._numPoses; ++j) {\n                poseInput = registerCache.getFreeVertexAttribute();\n                this._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n                code += \"mul \" + temp1 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\" +\n                    \"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n            }\n        }\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n        }\n        return code;\n    };\n    return VertexAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"../animators/data/AnimationRegisterData\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\",\"../animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\"}],\"awayjs-renderergl/lib/animators/VertexAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar VertexAnimationMode_1 = require(\"../animators/data/VertexAnimationMode\");\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar VertexAnimator = (function (_super) {\n    __extends(VertexAnimator, _super);\n    /**\n     * Creates a new <code>VertexAnimator</code> object.\n     *\n     * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n     */\n    function VertexAnimator(vertexAnimationSet) {\n        _super.call(this, vertexAnimationSet);\n        this._poses = new Array();\n        this._weights = new Float32Array([1, 0, 0, 0]);\n        this._vertexAnimationSet = vertexAnimationSet;\n    }\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.clone = function () {\n        return new VertexAnimator(this._vertexAnimationSet);\n    };\n    /**\n     * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n     * @param sequenceName The name of the clip to be played.\n     */\n    VertexAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        //TODO: implement transitions in vertex animator\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeVertexState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        var geometryFlag = false;\n        if (this._poses[0] != this._activeVertexState.currentGraphics) {\n            this._poses[0] = this._activeVertexState.currentGraphics;\n            geometryFlag = true;\n        }\n        if (this._poses[1] != this._activeVertexState.nextGraphics) {\n            this._poses[1] = this._activeVertexState.nextGraphics;\n            geometryFlag = true;\n        }\n        this._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n        if (geometryFlag) {\n            //invalidate sprites\n            var sprite;\n            var len = this._pOwners.length;\n            for (var i = 0; i < len; i++) {\n                sprite = this._pOwners[i];\n                sprite.graphics.invalidateElements();\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        // todo: add code for when running on cpu\n        // this type of animation can only be SubSprite\n        var graphic = renderable.graphic;\n        var elements = graphic.elements;\n        // if no poses defined, set temp data\n        if (!this._poses.length) {\n            this.setNullPose(shader, elements);\n            return;\n        }\n        var animationRegisterData = shader.animationRegisterData;\n        var i;\n        var len = this._vertexAnimationSet.numPoses;\n        shader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n        if (this._vertexAnimationSet.blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            i = 1;\n        else\n            i = 0;\n        var elementsGL;\n        var k = 0;\n        for (; i < len; ++i) {\n            elements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n            elementsGL = shader._elementsPool.getAbstraction(elements);\n            elementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n            if (elements.isAsset(TriangleElements_1.default)) {\n                elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.positions);\n                if (shader.normalDependencies > 0)\n                    elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.normals);\n            }\n        }\n    };\n    VertexAnimator.prototype.setNullPose = function (shader, elements) {\n        var animationRegisterData = shader.animationRegisterData;\n        shader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n        var elementsGL = shader._elementsPool.getAbstraction(elements);\n        var k = 0;\n        if (this._vertexAnimationSet.blendMode == VertexAnimationMode_1.default.ABSOLUTE) {\n            var len = this._vertexAnimationSet.numPoses;\n            for (var i = 1; i < len; ++i) {\n                if (elements.isAsset(TriangleElements_1.default)) {\n                    elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.positions);\n                    if (shader.normalDependencies > 0)\n                        elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.normals);\n                }\n            }\n        }\n        // todo: set temp data for additive?\n    };\n    /**\n     * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n     * Needs to be called if gpu code is potentially required.\n     */\n    VertexAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    VertexAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        if (this._vertexAnimationSet.blendMode == VertexAnimationMode_1.default.ABSOLUTE && this._poses.length)\n            return this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n        //nothing to do here\n        return sourceElements;\n    };\n    return VertexAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/animators/data/AnimationElements\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar AnimationElements = (function () {\n    function AnimationElements() {\n        this._pVertexBuffer = new Array(8);\n        this._pBufferContext = new Array(8);\n        this._pBufferDirty = new Array(8);\n        this.numProcessedVertices = 0;\n        this.previousTime = Number.NEGATIVE_INFINITY;\n        this.animationParticles = new Array();\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n        this._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n    }\n    AnimationElements.prototype.createVertexData = function (numVertices, totalLenOfOneVertex) {\n        this._numVertices = numVertices;\n        this._totalLenOfOneVertex = totalLenOfOneVertex;\n        this._pVertexData = new Array(numVertices * totalLenOfOneVertex);\n    };\n    AnimationElements.prototype.activateVertexBuffer = function (index, bufferOffset, stage, format) {\n        var contextIndex = stage.stageIndex;\n        var context = stage.context;\n        var buffer = this._pVertexBuffer[contextIndex];\n        if (!buffer || this._pBufferContext[contextIndex] != context) {\n            buffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex * 4);\n            this._pBufferContext[contextIndex] = context;\n            this._pBufferDirty[contextIndex] = true;\n        }\n        if (this._pBufferDirty[contextIndex]) {\n            buffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n            this._pBufferDirty[contextIndex] = false;\n        }\n        context.setVertexBufferAt(index, buffer, bufferOffset * 4, format);\n    };\n    AnimationElements.prototype.dispose = function () {\n        while (this._pVertexBuffer.length) {\n            var vertexBuffer = this._pVertexBuffer.pop();\n            if (vertexBuffer)\n                vertexBuffer.dispose();\n        }\n    };\n    AnimationElements.prototype.invalidateBuffer = function () {\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n    };\n    Object.defineProperty(AnimationElements.prototype, \"vertexData\", {\n        get: function () {\n            return this._pVertexData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"totalLenOfOneVertex\", {\n        get: function () {\n            return this._totalLenOfOneVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationElements.SUBGEOM_ID_COUNT = 0;\n    return AnimationElements;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationElements;\n\n},{}],\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * ...\n */\nvar AnimationRegisterData = (function () {\n    function AnimationRegisterData() {\n        this.indexDictionary = new Object();\n    }\n    AnimationRegisterData.prototype.reset = function (registerCache, sharedRegisters, needVelocity) {\n        this.rotationRegisters = new Array();\n        this.positionAttribute = sharedRegisters.animatableAttributes[0];\n        this.scaleAndRotateTarget = sharedRegisters.animationTargetRegisters[0];\n        for (var i = 1; i < sharedRegisters.animationTargetRegisters.length; i++)\n            this.rotationRegisters.push(sharedRegisters.animationTargetRegisters[i]);\n        //allot const register\n        this.vertexZeroConst = registerCache.getFreeVertexConstant();\n        this.vertexZeroConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n        this.vertexOneConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n        this.vertexTwoConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n        //allot temp register\n        this.positionTarget = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(this.positionTarget, 1);\n        this.positionTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n        if (needVelocity) {\n            this.velocityTarget = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(this.velocityTarget, 1);\n            this.velocityTarget = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index);\n            this.vertexTime = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index, 3);\n            this.vertexLife = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index, 3);\n        }\n        else {\n            var tempTime = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(tempTime, 1);\n            this.vertexTime = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 0);\n            this.vertexLife = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 1);\n        }\n    };\n    AnimationRegisterData.prototype.setUVSourceAndTarget = function (sharedRegisters) {\n        this.uvVar = sharedRegisters.uvTarget;\n        this.uvAttribute = sharedRegisters.uvSource;\n        //uv action is processed after normal actions,so use offsetTarget as uvTarget\n        this.uvTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n    };\n    AnimationRegisterData.prototype.setRegisterIndex = function (node, parameterIndex, registerIndex) {\n        //8 should be enough for any node.\n        var t = this.indexDictionary[node.id];\n        if (t == null)\n            t = this.indexDictionary[node.id] = new Array(8);\n        t[parameterIndex] = registerIndex;\n    };\n    AnimationRegisterData.prototype.getRegisterIndex = function (node, parameterIndex) {\n        return this.indexDictionary[node.id][parameterIndex];\n    };\n    return AnimationRegisterData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationRegisterData;\n\n},{\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\":[function(require,module,exports){\n\"use strict\";\nvar ColorSegmentPoint = (function () {\n    function ColorSegmentPoint(life, color) {\n        //0<life<1\n        if (life <= 0 || life >= 1)\n            throw (new Error(\"life exceeds range (0,1)\"));\n        this._life = life;\n        this._color = color;\n    }\n    Object.defineProperty(ColorSegmentPoint.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColorSegmentPoint.prototype, \"life\", {\n        get: function () {\n            return this._life;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorSegmentPoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ColorSegmentPoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/JointPose\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nvar JointPose = (function () {\n    function JointPose() {\n        /**\n         * The rotation of the pose stored as a quaternion\n         */\n        this.orientation = new Quaternion_1.default();\n        /**\n         * The translation of the pose\n         */\n        this.translation = new Vector3D_1.default();\n    }\n    /**\n     * Converts the transformation to a Matrix3D representation.\n     *\n     * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n     * @return The transformation matrix of the pose.\n     */\n    JointPose.prototype.toMatrix3D = function (target) {\n        if (target === void 0) { target = null; }\n        if (target == null)\n            target = new Matrix3D_1.default();\n        this.orientation.toMatrix3D(target);\n        target.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n        return target;\n    };\n    /**\n     * Copies the transformation data from a source pose object into the existing pose object.\n     *\n     * @param pose The source pose to copy from.\n     */\n    JointPose.prototype.copyFrom = function (pose) {\n        var or = pose.orientation;\n        var tr = pose.translation;\n        this.orientation.x = or.x;\n        this.orientation.y = or.y;\n        this.orientation.z = or.z;\n        this.orientation.w = or.w;\n        this.translation.x = tr.x;\n        this.translation.y = tr.y;\n        this.translation.z = tr.z;\n    };\n    return JointPose;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JointPose;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Quaternion\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleAnimationData = (function () {\n    function ParticleAnimationData(index, startTime, duration, delay, particle) {\n        this.index = index;\n        this.startTime = startTime;\n        this.totalTime = duration + delay;\n        this.duration = duration;\n        this.delay = delay;\n        this.startVertexIndex = particle.startVertexIndex;\n        this.numVertices = particle.numVertices;\n    }\n    return ParticleAnimationData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationData;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the properties mode of a particle animation node.\n */\nvar ParticlePropertiesMode = (function () {\n    function ParticlePropertiesMode() {\n    }\n    /**\n     * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n     */\n    ParticlePropertiesMode.GLOBAL = 0;\n    /**\n     * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n     */\n    ParticlePropertiesMode.LOCAL_STATIC = 1;\n    /**\n     * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n     */\n    ParticlePropertiesMode.LOCAL_DYNAMIC = 2;\n    return ParticlePropertiesMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePropertiesMode;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticleProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nvar ParticleProperties = (function () {\n    function ParticleProperties() {\n    }\n    return ParticleProperties;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleProperties;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonJoint\":[function(require,module,exports){\n\"use strict\";\n/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nvar SkeletonJoint = (function () {\n    /**\n     * Creates a new <code>SkeletonJoint</code> object\n     */\n    function SkeletonJoint() {\n        /**\n         * The index of the parent joint in the skeleton's joints vector.\n         *\n         * @see away.animators.Skeleton#joints\n         */\n        this.parentIndex = -1;\n    }\n    return SkeletonJoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonJoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonPose\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nvar SkeletonPose = (function (_super) {\n    __extends(SkeletonPose, _super);\n    /**\n     * Creates a new <code>SkeletonPose</code> object.\n     */\n    function SkeletonPose() {\n        _super.call(this);\n        this.jointPoses = new Array();\n    }\n    Object.defineProperty(SkeletonPose.prototype, \"numJointPoses\", {\n        /**\n         * The total number of joint poses in the skeleton pose.\n         */\n        get: function () {\n            return this.jointPoses.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonPose.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return SkeletonPose.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint pose object with the given joint name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object whose pose is to be found.\n     * @return The pose object with the given joint name.\n     */\n    SkeletonPose.prototype.jointPoseFromName = function (jointName) {\n        var jointPoseIndex = this.jointPoseIndexFromName(jointName);\n        if (jointPoseIndex != -1)\n            return this.jointPoses[jointPoseIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n     *\n     * @param The name of the joint object whose pose is to be found.\n     * @return The index of the pose object in the jointPoses Array\n     *\n     * @see #jointPoses\n     */\n    SkeletonPose.prototype.jointPoseIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointPoseIndex;\n        var jointPose;\n        for (var i; i < this.jointPoses.length; i++) {\n            jointPose = this.jointPoses[i];\n            if (jointPose.name == jointName)\n                return jointPoseIndex;\n            jointPoseIndex++;\n        }\n        return -1;\n    };\n    /**\n     * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n     *\n     * @return SkeletonPose\n     */\n    SkeletonPose.prototype.clone = function () {\n        var clone = new SkeletonPose();\n        var numJointPoses = this.jointPoses.length;\n        for (var i = 0; i < numJointPoses; i++) {\n            var cloneJointPose = new JointPose_1.default();\n            var thisJointPose = this.jointPoses[i];\n            cloneJointPose.name = thisJointPose.name;\n            cloneJointPose.copyFrom(thisJointPose);\n            clone.jointPoses[i] = cloneJointPose;\n        }\n        return clone;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonPose.prototype.dispose = function () {\n        this.jointPoses.length = 0;\n    };\n    SkeletonPose.assetType = \"[asset SkeletonPose]\";\n    return SkeletonPose;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonPose;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/Skeleton\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nvar Skeleton = (function (_super) {\n    __extends(Skeleton, _super);\n    /**\n     * Creates a new <code>Skeleton</code> object\n     */\n    function Skeleton() {\n        _super.call(this);\n        // in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n        this.joints = new Array();\n    }\n    Object.defineProperty(Skeleton.prototype, \"numJoints\", {\n        /**\n         * The total number of joints in the skeleton.\n         */\n        get: function () {\n            return this.joints.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The joint object with the given name.\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointFromName = function (jointName) {\n        var jointIndex = this.jointIndexFromName(jointName);\n        if (jointIndex != -1)\n            return this.joints[jointIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The index of the joint object in the joints Array\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointIndex;\n        var joint;\n        for (var i; i < this.joints.length; i++) {\n            joint = this.joints[i];\n            if (joint.name == jointName)\n                return jointIndex;\n            jointIndex++;\n        }\n        return -1;\n    };\n    /**\n     * @inheritDoc\n     */\n    Skeleton.prototype.dispose = function () {\n        this.joints.length = 0;\n    };\n    Object.defineProperty(Skeleton.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return Skeleton.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skeleton.assetType = \"[asset Skeleton]\";\n    return Skeleton;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Skeleton;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nvar VertexAnimationMode = (function () {\n    function VertexAnimationMode() {\n    }\n    /**\n     * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ADDITIVE = \"additive\";\n    /**\n     * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ABSOLUTE = \"absolute\";\n    return VertexAnimationMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationMode;\n\n},{}],\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nvar AnimationClipNodeBase = (function (_super) {\n    __extends(AnimationClipNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationClipNodeBase</code> object.\n     */\n    function AnimationClipNodeBase() {\n        _super.call(this);\n        this._pLooping = true;\n        this._pTotalDuration = 0;\n        this._pStitchDirty = true;\n        this._pStitchFinalFrame = false;\n        this._pNumFrames = 0;\n        this._pDurations = new Array();\n        /*uint*/\n        this._pTotalDelta = new Vector3D_1.default();\n        this.fixedFrameRate = true;\n    }\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"looping\", {\n        /**\n         * Determines whether the contents of the animation node have looping characteristics enabled.\n         */\n        get: function () {\n            return this._pLooping;\n        },\n        set: function (value) {\n            if (this._pLooping == value)\n                return;\n            this._pLooping = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"stitchFinalFrame\", {\n        /**\n         * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n         * assumption that both first and last frames are identical (false). Defaults to false.\n         */\n        get: function () {\n            return this._pStitchFinalFrame;\n        },\n        set: function (value) {\n            if (this._pStitchFinalFrame == value)\n                return;\n            this._pStitchFinalFrame = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDuration\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDelta\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"lastFrame\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pLastFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"durations\", {\n        /**\n         * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n         */\n        get: function () {\n            return this._pDurations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the node's final frame stitch state.\n     *\n     * @see #stitchFinalFrame\n     */\n    AnimationClipNodeBase.prototype._pUpdateStitch = function () {\n        this._pStitchDirty = false;\n        this._pLastFrame = (this._pStitchFinalFrame) ? this._pNumFrames : this._pNumFrames - 1;\n        this._pTotalDuration = 0;\n        this._pTotalDelta.x = 0;\n        this._pTotalDelta.y = 0;\n        this._pTotalDelta.z = 0;\n    };\n    return AnimationClipNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipNodeBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleAccelerationState_1 = require(\"../../animators/states/ParticleAccelerationState\");\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nvar ParticleAccelerationNode = (function (_super) {\n    __extends(ParticleAccelerationNode, _super);\n    /**\n     * Creates a new <code>ParticleAccelerationNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n     */\n    function ParticleAccelerationNode(mode, acceleration) {\n        if (acceleration === void 0) { acceleration = null; }\n        _super.call(this, \"ParticleAcceleration\", mode, 3);\n        this._pStateClass = ParticleAccelerationState_1.default;\n        this._acceleration = acceleration || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var accelerationValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleAccelerationState_1.default.ACCELERATION_INDEX, accelerationValue.index);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp, 1);\n        var code = \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + accelerationValue + \"\\n\";\n        if (animationSet.needVelocity) {\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            code += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        }\n        registerCache.removeVertexTempUsage(temp);\n        code += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterData.vertexTime + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var tempAcceleration = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n        if (!tempAcceleration)\n            throw new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n        this._pOneData[0] = tempAcceleration.x / 2;\n        this._pOneData[1] = tempAcceleration.y / 2;\n        this._pOneData[2] = tempAcceleration.z / 2;\n    };\n    /**\n     * Reference for acceleration node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n     */\n    ParticleAccelerationNode.ACCELERATION_VECTOR3D = \"AccelerationVector3D\";\n    return ParticleAccelerationNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleBezierCurveState_1 = require(\"../../animators/states/ParticleBezierCurveState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nvar ParticleBezierCurveNode = (function (_super) {\n    __extends(ParticleBezierCurveNode, _super);\n    /**\n     * Creates a new <code>ParticleBezierCurveNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n     * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n     */\n    function ParticleBezierCurveNode(mode, controlPoint, endPoint) {\n        if (controlPoint === void 0) { controlPoint = null; }\n        if (endPoint === void 0) { endPoint = null; }\n        _super.call(this, \"ParticleBezierCurve\", mode, 6);\n        this._pStateClass = ParticleBezierCurveState_1.default;\n        this._iControlPoint = controlPoint || new Vector3D_1.default();\n        this._iEndPoint = endPoint || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var controlValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_CONTROL_INDEX, controlValue.index);\n        var endValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_END_INDEX, endValue.index);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var rev_time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var time_2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var time_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        registerCache.addVertexTempUsages(temp, 1);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        registerCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"sub \" + rev_time + \",\" + animationRegisterData.vertexOneConst + \",\" + animationRegisterData.vertexLife + \"\\n\";\n        code += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexLife + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + animationRegisterData.vertexLife + \",\" + rev_time + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity) {\n            code += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"sub \" + time_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + time_2 + \"\\n\";\n            code += \"mul \" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \",\" + time_temp + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n            code += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var bezierControl = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n        if (!bezierControl)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n        var bezierEnd = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n        if (!bezierEnd)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n        this._pOneData[0] = bezierControl.x;\n        this._pOneData[1] = bezierControl.y;\n        this._pOneData[2] = bezierControl.z;\n        this._pOneData[3] = bezierEnd.x;\n        this._pOneData[4] = bezierEnd.y;\n        this._pOneData[5] = bezierEnd.z;\n    };\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D = \"BezierControlVector3D\";\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_END_VECTOR3D = \"BezierEndVector3D\";\n    return ParticleBezierCurveNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleBillboardState_1 = require(\"../../animators/states/ParticleBillboardState\");\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nvar ParticleBillboardNode = (function (_super) {\n    __extends(ParticleBillboardNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleBillboardNode(billboardAxis) {\n        if (billboardAxis === void 0) { billboardAxis = null; }\n        _super.call(this, \"ParticleBillboard\", ParticlePropertiesMode_1.default.GLOBAL, 0, 4);\n        this._pStateClass = ParticleBillboardState_1.default;\n        this._iBillboardAxis = billboardAxis;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var rotationMatrixRegister = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleBillboardState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var code = \"m33 \" + temp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n            \"mov \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        var shaderRegisterElement;\n        for (var i = 0; i < animationRegisterData.rotationRegisters.length; i++) {\n            shaderRegisterElement = animationRegisterData.rotationRegisters[i];\n            code += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n                \"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasBillboard = true;\n    };\n    return ParticleBillboardNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleColorState_1 = require(\"../../animators/states/ParticleColorState\");\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nvar ParticleColorNode = (function (_super) {\n    __extends(ParticleColorNode, _super);\n    /**\n     * Creates a new <code>ParticleColorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n     * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n     * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleColorNode(mode, usesMultiplier, usesOffset, usesCycle, usesPhase, startColor, endColor, cycleDuration, cyclePhase) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (startColor === void 0) { startColor = null; }\n        if (endColor === void 0) { endColor = null; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleColor\", mode, (usesMultiplier && usesOffset) ? 16 : 8, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iStartColor = startColor || new ColorTransform_1.default();\n        this._iEndColor = endColor || new ColorTransform_1.default();\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation) {\n            var temp = registerCache.getFreeVertexVectorTemp();\n            if (this._iUsesCycle) {\n                var cycleConst = registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.CYCLE_INDEX, cycleConst.index);\n                registerCache.addVertexTempUsages(temp, 1);\n                var sin = registerCache.getFreeVertexSingleTemp();\n                registerCache.removeVertexTempUsage(temp);\n                code += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + cycleConst + \".x\\n\";\n                if (this._iUsesPhase)\n                    code += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n                code += \"sin \" + sin + \",\" + sin + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                var startMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n                var deltaMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n                code += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle ? sin : animationRegisterData.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n                code += \"mul \" + animationRegisterData.colorMulTarget + \",\" + temp + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var startOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n                var deltaOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n                code += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle ? sin : animationRegisterData.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + temp + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var startColor = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n        if (!startColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n        var endColor = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n        if (!endColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        if (!this._iUsesCycle) {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = startColor.redMultiplier;\n                this._pOneData[i++] = startColor.greenMultiplier;\n                this._pOneData[i++] = startColor.blueMultiplier;\n                this._pOneData[i++] = startColor.alphaMultiplier;\n                this._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n                this._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n                this._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n                this._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = startColor.redOffset / 255;\n                this._pOneData[i++] = startColor.greenOffset / 255;\n                this._pOneData[i++] = startColor.blueOffset / 255;\n                this._pOneData[i++] = startColor.alphaOffset / 255;\n                this._pOneData[i++] = (endColor.redOffset - startColor.redOffset) / 255;\n                this._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset) / 255;\n                this._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset) / 255;\n                this._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset) / 255;\n            }\n        }\n        else {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier) / 2;\n                this._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier) / 2;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = (startColor.redOffset + endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.redOffset - endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset) / (255 * 2);\n            }\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_START_COLORTRANSFORM = \"ColorStartColorTransform\";\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_END_COLORTRANSFORM = \"ColorEndColorTransform\";\n    return ParticleColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleFollowState_1 = require(\"../../animators/states/ParticleFollowState\");\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nvar ParticleFollowNode = (function (_super) {\n    __extends(ParticleFollowNode, _super);\n    /**\n     * Creates a new <code>ParticleFollowNode</code>\n     *\n     * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n     * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n     * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n     */\n    function ParticleFollowNode(usesPosition, usesRotation, smooth) {\n        if (usesPosition === void 0) { usesPosition = true; }\n        if (usesRotation === void 0) { usesRotation = true; }\n        if (smooth === void 0) { smooth = false; }\n        _super.call(this, \"ParticleFollow\", ParticlePropertiesMode_1.default.LOCAL_DYNAMIC, (usesPosition && usesRotation) ? 6 : 3, ParticleAnimationSet_1.default.POST_PRIORITY);\n        this._pStateClass = ParticleFollowState_1.default;\n        this._iUsesPosition = usesPosition;\n        this._iUsesRotation = usesRotation;\n        this._iSmooth = smooth;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        //TODO: use Quaternion to implement this function\n        var code = \"\";\n        if (this._iUsesRotation) {\n            var rotationAttribute = registerCache.getFreeVertexAttribute();\n            animationRegisterData.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n            var temp1 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp1, 1);\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp2, 1);\n            var temp3 = registerCache.getFreeVertexVectorTemp();\n            var temp4;\n            if (animationSet.hasBillboard) {\n                registerCache.addVertexTempUsages(temp3, 1);\n                temp4 = registerCache.getFreeVertexVectorTemp();\n            }\n            registerCache.removeVertexTempUsage(temp1);\n            registerCache.removeVertexTempUsage(temp2);\n            if (animationSet.hasBillboard)\n                registerCache.removeVertexTempUsage(temp3);\n            var len = animationRegisterData.rotationRegisters.length;\n            var i;\n            //x axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n            code += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n            code += \"mov \" + temp2 + \".x,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n            code += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n            if (animationSet.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //y axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n            code += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n            code += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n            if (animationSet.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n            code += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            if (animationSet.hasBillboard) {\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n                code += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n                code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            }\n            else {\n                code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n        }\n        if (this._iUsesPosition) {\n            var positionAttribute = registerCache.getFreeVertexAttribute();\n            animationRegisterData.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_POSITION_INDEX, positionAttribute.index);\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return ParticleFollowNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleInitialColorState_1 = require(\"../../animators/states/ParticleInitialColorState\");\n/**\n *\n */\nvar ParticleInitialColorNode = (function (_super) {\n    __extends(ParticleInitialColorNode, _super);\n    function ParticleInitialColorNode(mode, usesMultiplier, usesOffset, initialColor) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = false; }\n        if (initialColor === void 0) { initialColor = null; }\n        _super.call(this, \"ParticleInitialColor\", mode, (usesMultiplier && usesOffset) ? 8 : 4, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleInitialColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iInitialColor = initialColor || new ColorTransform_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation) {\n            if (this._iUsesMultiplier) {\n                var multiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n                animationRegisterData.setRegisterIndex(this, ParticleInitialColorState_1.default.MULTIPLIER_INDEX, multiplierValue.index);\n                code += \"mul \" + animationRegisterData.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var offsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleInitialColorState_1.default.OFFSET_INDEX, offsetValue.index);\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var initialColor = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n        if (!initialColor)\n            throw (new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        //multiplier\n        if (this._iUsesMultiplier) {\n            this._pOneData[i++] = initialColor.redMultiplier;\n            this._pOneData[i++] = initialColor.greenMultiplier;\n            this._pOneData[i++] = initialColor.blueMultiplier;\n            this._pOneData[i++] = initialColor.alphaMultiplier;\n        }\n        //offset\n        if (this._iUsesOffset) {\n            this._pOneData[i++] = initialColor.redOffset / 255;\n            this._pOneData[i++] = initialColor.greenOffset / 255;\n            this._pOneData[i++] = initialColor.blueOffset / 255;\n            this._pOneData[i++] = initialColor.alphaOffset / 255;\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n     */\n    ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM = \"ColorInitialColorTransform\";\n    return ParticleInitialColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nvar ParticleNodeBase = (function (_super) {\n    __extends(ParticleNodeBase, _super);\n    /**\n     * Creates a new <code>ParticleNodeBase</code> object.\n     *\n     * @param               name            Defines the generic name of the particle animation node.\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n     * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n     */\n    function ParticleNodeBase(name, mode, dataLength, priority) {\n        if (priority === void 0) { priority = 1; }\n        _super.call(this);\n        this._pDataLength = 3;\n        name = name + ParticleNodeBase.MODES[mode];\n        this.name = name;\n        this._pMode = mode;\n        this._priority = priority;\n        this._pDataLength = dataLength;\n        this._pOneData = new Array(this._pDataLength);\n    }\n    Object.defineProperty(ParticleNodeBase.prototype, \"mode\", {\n        /**\n         * Returns the property mode of the particle animation node. Typically set in the node constructor\n         *\n         * @see away.animators.ParticlePropertiesMode\n         */\n        get: function () {\n            return this._pMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"priority\", {\n        /**\n         * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._priority;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"dataLength\", {\n        /**\n         * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._pDataLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"oneData\", {\n        /**\n         * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #generatePropertyOfOneParticle\n         */\n        get: function () {\n            return this._pOneData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the AGAL code of the particle animation node for use in the vertex shader.\n     */\n    ParticleNodeBase.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader.\n     */\n    ParticleNodeBase.prototype.getAGALFragmentCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n     */\n    ParticleNodeBase.prototype.getAGALUVCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        return \"\";\n    };\n    /**\n     * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n     *\n     * @see away.animators.ParticleAnimationSet#initParticleFunc\n     */\n    ParticleNodeBase.prototype._iGeneratePropertyOfOneParticle = function (param) {\n    };\n    /**\n     * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n     */\n    ParticleNodeBase.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n    };\n    //modes alias\n    ParticleNodeBase.GLOBAL = 'Global';\n    ParticleNodeBase.LOCAL_STATIC = 'LocalStatic';\n    ParticleNodeBase.LOCAL_DYNAMIC = 'LocalDynamic';\n    //modes list\n    ParticleNodeBase.MODES = {\n        0: ParticleNodeBase.GLOBAL,\n        1: ParticleNodeBase.LOCAL_STATIC,\n        2: ParticleNodeBase.LOCAL_DYNAMIC\n    };\n    return ParticleNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleNodeBase;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleOrbitState_1 = require(\"../../animators/states/ParticleOrbitState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nvar ParticleOrbitNode = (function (_super) {\n    __extends(ParticleOrbitNode, _super);\n    /**\n     * Creates a new <code>ParticleOrbitNode</code> object.\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n     * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n     */\n    function ParticleOrbitNode(mode, usesEulers, usesCycle, usesPhase, radius, cycleDuration, cyclePhase, eulers) {\n        if (usesEulers === void 0) { usesEulers = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (radius === void 0) { radius = 100; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (eulers === void 0) { eulers = null; }\n        var len = 3;\n        if (usesPhase)\n            len++;\n        _super.call(this, \"ParticleOrbit\", mode, len);\n        this._pStateClass = ParticleOrbitState_1.default;\n        this._iUsesEulers = usesEulers;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iRadius = radius;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n        this._iEulers = eulers || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var orbitRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleOrbitState_1.default.ORBIT_INDEX, orbitRegister.index);\n        var eulersMatrixRegister = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleOrbitState_1.default.EULERS_INDEX, eulersMatrixRegister.index);\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp1, 1);\n        var distance = new ShaderRegisterElement_1.default(temp1.regName, temp1.index);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var cos = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 1);\n        var degree = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 2);\n        registerCache.removeVertexTempUsage(temp1);\n        var code = \"\";\n        if (this._iUsesCycle) {\n            code += \"mul \" + degree + \",\" + animationRegisterData.vertexTime + \",\" + orbitRegister + \".y\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n        }\n        else\n            code += \"mul \" + degree + \",\" + animationRegisterData.vertexLife + \",\" + orbitRegister + \".y\\n\";\n        code += \"cos \" + cos + \",\" + degree + \"\\n\";\n        code += \"sin \" + sin + \",\" + degree + \"\\n\";\n        code += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n        code += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n        code += \"mov \" + distance + \".wz\" + animationRegisterData.vertexZeroConst + \"\\n\";\n        if (this._iUsesEulers)\n            code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity) {\n            code += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n            code += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n            code += \"mov \" + distance + \".zw,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            if (this._iUsesEulers)\n                code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n            code += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n            code += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n            if (!this._iUsesCycle)\n                code += \"div \" + distance + \",\" + distance + \",\" + animationRegisterData.vertexLife + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n        var orbit = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n        if (!orbit)\n            throw new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n        this._pOneData[0] = orbit.x;\n        if (this._iUsesCycle && orbit.y <= 0)\n            throw (new Error(\"the cycle duration must be greater than zero\"));\n        this._pOneData[1] = Math.PI * 2 / (!this._iUsesCycle ? 1 : orbit.y);\n        this._pOneData[2] = orbit.x * Math.PI * 2;\n        if (this._iUsesPhase)\n            this._pOneData[3] = orbit.z * Math.PI / 180;\n    };\n    /**\n     * Reference for orbit node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n     */\n    ParticleOrbitNode.ORBIT_VECTOR3D = \"OrbitVector3D\";\n    return ParticleOrbitNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleOscillatorState_1 = require(\"../../animators/states/ParticleOscillatorState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nvar ParticleOscillatorNode = (function (_super) {\n    __extends(ParticleOscillatorNode, _super);\n    /**\n     * Creates a new <code>ParticleOscillatorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n     */\n    function ParticleOscillatorNode(mode, oscillator) {\n        if (oscillator === void 0) { oscillator = null; }\n        _super.call(this, \"ParticleOscillator\", mode, 4);\n        this._pStateClass = ParticleOscillatorState_1.default;\n        this._iOscillator = oscillator || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var oscillatorRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleOscillatorState_1.default.OSCILLATOR_INDEX, oscillatorRegister.index);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var dgree = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        registerCache.addVertexTempUsages(temp, 1);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        registerCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mul \" + dgree + \",\" + animationRegisterData.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + dgree + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity) {\n            code += \"cos \" + cos + \",\" + dgree + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n        var drift = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n        if (!drift)\n            throw (new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = drift.x;\n        this._pOneData[1] = drift.y;\n        this._pOneData[2] = drift.z;\n        if (drift.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        this._pOneData[3] = Math.PI * 2 / drift.w;\n    };\n    /**\n     * Reference for ocsillator node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n     */\n    ParticleOscillatorNode.OSCILLATOR_VECTOR3D = \"OscillatorVector3D\";\n    return ParticleOscillatorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticlePositionState_1 = require(\"../../animators/states/ParticlePositionState\");\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nvar ParticlePositionNode = (function (_super) {\n    __extends(ParticlePositionNode, _super);\n    /**\n     * Creates a new <code>ParticlePositionNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n     */\n    function ParticlePositionNode(mode, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticlePosition\", mode, 3);\n        this._pStateClass = ParticlePositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticlePositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        return \"add \" + animationRegisterData.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticlePositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for position node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing position of the particle.\n     */\n    ParticlePositionNode.POSITION_VECTOR3D = \"PositionVector3D\";\n    return ParticlePositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToHeadingState_1 = require(\"../../animators/states/ParticleRotateToHeadingState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nvar ParticleRotateToHeadingNode = (function (_super) {\n    __extends(ParticleRotateToHeadingNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleRotateToHeadingNode() {\n        _super.call(this, \"ParticleRotateToHeading\", ParticlePropertiesMode_1.default.GLOBAL, 0, 3);\n        this._pStateClass = ParticleRotateToHeadingState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        var len = animationRegisterData.rotationRegisters.length;\n        var i;\n        if (animationSet.hasBillboard) {\n            var temp1 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp1, 1);\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp2, 1);\n            var temp3 = registerCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = registerCache.getFreeVertexConstant();\n            animationRegisterData.setRegisterIndex(this, ParticleRotateToHeadingState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.removeVertexTempUsage(temp1);\n            registerCache.removeVertexTempUsage(temp2);\n            //process the velocity\n            code += \"m33 \" + temp1 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmVel = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(nrmVel, 1);\n            var xAxis = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(xAxis, 1);\n            var R = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(R, 1);\n            var R_rev = registerCache.getFreeVertexVectorTemp();\n            var cos = new ShaderRegisterElement_1.default(R.regName, R.index, 3);\n            var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n            var cos2 = new ShaderRegisterElement_1.default(nrmVel.regName, nrmVel.index, 3);\n            var tempSingle = sin;\n            registerCache.removeVertexTempUsage(nrmVel);\n            registerCache.removeVertexTempUsage(xAxis);\n            registerCache.removeVertexTempUsage(R);\n            code += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n            code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            //use R as temp to judge if nrm is (0,0,0).\n            //if nrm is (0,0,0) ,change it to (0,0,1).\n            code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n            code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n            code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n            code += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            //use cos as R_rev.w\n            //nrmVel and xAxis are used as temp register\n            code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            //code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n                code += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n                code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n                code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n                code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n                code += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n                code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n                code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n                code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n                code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n                code += \"add \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.needVelocity = true;\n    };\n    return ParticleRotateToHeadingNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToPositionState_1 = require(\"../../animators/states/ParticleRotateToPositionState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nvar ParticleRotateToPositionNode = (function (_super) {\n    __extends(ParticleRotateToPositionNode, _super);\n    /**\n     * Creates a new <code>ParticleRotateToPositionNode</code>\n     */\n    function ParticleRotateToPositionNode(mode, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticleRotateToPosition\", mode, 3, 3);\n        this._pStateClass = ParticleRotateToPositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        var code = \"\";\n        var len = animationRegisterData.rotationRegisters.length;\n        var i;\n        if (animationSet.hasBillboard) {\n            var temp1 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp1, 1);\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp2, 1);\n            var temp3 = registerCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = registerCache.getFreeVertexConstant();\n            animationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.removeVertexTempUsage(temp1);\n            registerCache.removeVertexTempUsage(temp2);\n            //process the position\n            code += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n            code += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmDirection = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(nrmDirection, 1);\n            var temp = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp, 1);\n            var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            var o_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n            var tempSingle = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n            var R = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(R, 1);\n            registerCache.removeVertexTempUsage(nrmDirection);\n            registerCache.removeVertexTempUsage(temp);\n            registerCache.removeVertexTempUsage(R);\n            code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n            code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n            code += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n            code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n            //judgu if nrmDirection=(0,1,0);\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n            code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n            code += \"neg \" + cos + \",\" + cos + \"\\n\";\n            code += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n            code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n                code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n                code += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterData.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n                code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n                code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n                code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n                code += \"neg \" + cos + \",\" + cos + \"\\n\";\n                code += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n                code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterData.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n     */\n    ParticleRotateToPositionNode.POSITION_VECTOR3D = \"RotateToPositionVector3D\";\n    return ParticleRotateToPositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotationalVelocityState_1 = require(\"../../animators/states/ParticleRotationalVelocityState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nvar ParticleRotationalVelocityNode = (function (_super) {\n    __extends(ParticleRotationalVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleRotationalVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     */\n    function ParticleRotationalVelocityNode(mode, rotationalVelocity) {\n        if (rotationalVelocity === void 0) { rotationalVelocity = null; }\n        _super.call(this, \"ParticleRotationalVelocity\", mode, 4);\n        this._pStateClass = ParticleRotationalVelocityState_1.default;\n        this._iRotationalVelocity = rotationalVelocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var rotationRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleRotationalVelocityState_1.default.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n        var nrmVel = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(nrmVel, 1);\n        var xAxis = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(xAxis, 1);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp, 1);\n        var Rtemp = new ShaderRegisterElement_1.default(temp.regName, temp.index);\n        var R_rev = registerCache.getFreeVertexVectorTemp();\n        R_rev = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index);\n        var cos = new ShaderRegisterElement_1.default(Rtemp.regName, Rtemp.index, 3);\n        var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n        registerCache.removeVertexTempUsage(nrmVel);\n        registerCache.removeVertexTempUsage(xAxis);\n        registerCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n        code += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n        code += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + cos + \"\\n\";\n        code += \"cos \" + cos + \",\" + cos + \"\\n\";\n        code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n        //nrmVel and xAxis are used as temp register\n        code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n        code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n        //use cos as R_rev.w\n        code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n        code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n        code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        var len = animationRegisterData.rotationRegisters.length;\n        for (var i = 0; i < len; i++) {\n            code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n            code += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n            code += \"sin \" + sin + \",\" + cos + \"\\n\";\n            code += \"cos \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterData.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n        var rotate = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n        if (!rotate)\n            throw (new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n        if (rotate.length <= 0)\n            rotate.z = 1; //set the default direction\n        else\n            rotate.normalize();\n        this._pOneData[0] = rotate.x;\n        this._pOneData[1] = rotate.y;\n        this._pOneData[2] = rotate.z;\n        if (rotate.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        // it's used as angle/2 in agal\n        this._pOneData[3] = Math.PI / rotate.w;\n    };\n    /**\n     * Reference for rotational velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n     */\n    ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D = \"RotationalVelocityVector3D\";\n    return ParticleRotationalVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleScaleState_1 = require(\"../../animators/states/ParticleScaleState\");\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nvar ParticleScaleNode = (function (_super) {\n    __extends(ParticleScaleNode, _super);\n    /**\n     * Creates a new <code>ParticleScaleNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n     * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleScaleNode(mode, usesCycle, usesPhase, minScale, maxScale, cycleDuration, cyclePhase) {\n        if (minScale === void 0) { minScale = 1; }\n        if (maxScale === void 0) { maxScale = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleScale\", mode, (usesCycle && usesPhase) ? 4 : ((usesCycle || usesPhase) ? 3 : 2), 3);\n        this._pStateClass = ParticleScaleState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iMinScale = minScale;\n        this._iMaxScale = maxScale;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        var temp = registerCache.getFreeVertexSingleTemp();\n        var scaleRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleScaleState_1.default.SCALE_INDEX, scaleRegister.index);\n        if (this._iUsesCycle) {\n            code += \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + scaleRegister + \".z\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n            code += \"sin \" + temp + \",\" + temp + \"\\n\";\n        }\n        code += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle) ? temp : animationRegisterData.vertexLife) + \"\\n\";\n        code += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n        code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var scale = param[ParticleScaleNode.SCALE_VECTOR3D];\n        if (!scale)\n            throw (new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n        if (this._iUsesCycle) {\n            this._pOneData[0] = (scale.x + scale.y) / 2;\n            this._pOneData[1] = Math.abs(scale.x - scale.y) / 2;\n            if (scale.z <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._pOneData[2] = Math.PI * 2 / scale.z;\n            if (this._iUsesPhase)\n                this._pOneData[3] = scale.w * Math.PI / 180;\n        }\n        else {\n            this._pOneData[0] = scale.x;\n            this._pOneData[1] = scale.y - scale.x;\n        }\n    };\n    /**\n     * Reference for scale node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n     */\n    ParticleScaleNode.SCALE_VECTOR3D = \"ScaleVector3D\";\n    return ParticleScaleNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleSegmentedColorState_1 = require(\"../../animators/states/ParticleSegmentedColorState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n *\n */\nvar ParticleSegmentedColorNode = (function (_super) {\n    __extends(ParticleSegmentedColorNode, _super);\n    function ParticleSegmentedColorNode(usesMultiplier, usesOffset, numSegmentPoint, startColor, endColor, segmentPoints) {\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleSegmentedColor\", ParticlePropertiesMode_1.default.GLOBAL, 0, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleSegmentedColorState_1.default;\n        if (numSegmentPoint > 4)\n            throw (new Error(\"the numSegmentPoint must be less or equal 4\"));\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iNumSegmentPoint = numSegmentPoint;\n        this._iStartColor = startColor;\n        this._iEndColor = endColor;\n        this._iSegmentPoints = segmentPoints;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation) {\n            var accMultiplierColor;\n            //var accOffsetColor:ShaderRegisterElement;\n            if (this._iUsesMultiplier) {\n                accMultiplierColor = registerCache.getFreeVertexVectorTemp();\n                registerCache.addVertexTempUsages(accMultiplierColor, 1);\n            }\n            var tempColor = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(tempColor, 1);\n            var temp = registerCache.getFreeVertexVectorTemp();\n            var accTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var tempTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            if (this._iUsesMultiplier)\n                registerCache.removeVertexTempUsage(accMultiplierColor);\n            registerCache.removeVertexTempUsage(tempColor);\n            //for saving all the life values (at most 4)\n            var lifeTimeRegister = registerCache.getFreeVertexConstant();\n            animationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState_1.default.TIME_DATA_INDEX, lifeTimeRegister.index);\n            var i;\n            var startMulValue;\n            var deltaMulValues;\n            if (this._iUsesMultiplier) {\n                startMulValue = registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_MULTIPLIER_INDEX, startMulValue.index);\n                deltaMulValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaMulValues.push(registerCache.getFreeVertexConstant());\n            }\n            var startOffsetValue;\n            var deltaOffsetValues;\n            if (this._iUsesOffset) {\n                startOffsetValue = registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                deltaOffsetValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaOffsetValues.push(registerCache.getFreeVertexConstant());\n            }\n            if (this._iUsesMultiplier)\n                code += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n            if (this._iUsesOffset)\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n            for (i = 0; i < this._iNumSegmentPoint; i++) {\n                switch (i) {\n                    case 0:\n                        code += \"min \" + tempTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                if (this._iUsesMultiplier) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n                    code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                }\n                if (this._iUsesOffset) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n                    code += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n                }\n            }\n            //for the last segment:\n            if (this._iNumSegmentPoint == 0)\n                tempTime = animationRegisterData.vertexLife;\n            else {\n                switch (this._iNumSegmentPoint) {\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 4:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                code += \"mul \" + animationRegisterData.colorMulTarget + \",\" + animationRegisterData.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n            }\n        }\n        return code;\n    };\n    return ParticleSegmentedColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleSpriteSheetState_1 = require(\"../../animators/states/ParticleSpriteSheetState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nvar ParticleSpriteSheetNode = (function (_super) {\n    __extends(ParticleSpriteSheetNode, _super);\n    /**\n     * Creates a new <code>ParticleSpriteSheetNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n     * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n     * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n     */\n    function ParticleSpriteSheetNode(mode, usesCycle, usesPhase, numColumns, numRows, cycleDuration, cyclePhase, totalFrames) {\n        if (numColumns === void 0) { numColumns = 1; }\n        if (numRows === void 0) { numRows = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (totalFrames === void 0) { totalFrames = Number.MAX_VALUE; }\n        _super.call(this, \"ParticleSpriteSheet\", mode, usesCycle ? (usesPhase ? 3 : 2) : 1, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleSpriteSheetState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iNumColumns = numColumns;\n        this._iNumRows = numRows;\n        this._iCyclePhase = cyclePhase;\n        this._iCycleDuration = cycleDuration;\n        this._iTotalFrames = Math.min(totalFrames, numColumns * numRows);\n    }\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numColumns\", {\n        /**\n         * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numRows\", {\n        /**\n         * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"totalFrames\", {\n        /**\n         * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n         */\n        get: function () {\n            return this._iTotalFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAGALUVCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        //get 2 vc\n        var uvParamConst1 = registerCache.getFreeVertexConstant();\n        var uvParamConst2 = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_0, uvParamConst1.index);\n        animationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_1, uvParamConst2.index);\n        var uTotal = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 0);\n        var uStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 1);\n        var vStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 2);\n        var uSpeed = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 0);\n        var cycle = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 1);\n        var phaseTime = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 2);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var vOffset = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        var temp2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n        var u = new ShaderRegisterElement_1.default(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 0);\n        var v = new ShaderRegisterElement_1.default(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 1);\n        var code = \"\";\n        //scale uv\n        code += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n        if (this._iUsesCycle) {\n            if (this._iUsesPhase)\n                code += \"add \" + time + \",\" + animationRegisterData.vertexTime + \",\" + phaseTime + \"\\n\";\n            else\n                code += \"mov \" + time + \",\" + animationRegisterData.vertexTime + \"\\n\";\n            code += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"frc \" + time + \",\" + time + \"\\n\";\n            code += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n        }\n        else\n            code += \"mul \" + temp.toString() + \",\" + animationRegisterData.vertexLife + \",\" + uTotal + \"\\n\";\n        if (this._iNumRows > 1) {\n            code += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n            code += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n            code += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n            code += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n        }\n        code += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n        code += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n        code += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n        code += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"frc \" + temp + \",\" + temp + \"\\n\";\n        code += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        if (this._iUsesCycle) {\n            var uvCycle = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n            if (!uvCycle)\n                throw (new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n            if (uvCycle.x <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            var uTotal = this._iTotalFrames / this._iNumColumns;\n            this._pOneData[0] = uTotal / uvCycle.x;\n            this._pOneData[1] = uvCycle.x;\n            if (this._iUsesPhase)\n                this._pOneData[2] = uvCycle.y;\n        }\n    };\n    /**\n     * Reference for spritesheet node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n     */\n    ParticleSpriteSheetNode.UV_VECTOR3D = \"UVVector3D\";\n    return ParticleSpriteSheetNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleTimeState_1 = require(\"../../animators/states/ParticleTimeState\");\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nvar ParticleTimeNode = (function (_super) {\n    __extends(ParticleTimeNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleTimeNode(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this, \"ParticleTime\", ParticlePropertiesMode_1.default.LOCAL_STATIC, 4, 0);\n        this._pStateClass = ParticleTimeState_1.default;\n        this._iUsesDuration = usesDuration;\n        this._iUsesLooping = usesLooping;\n        this._iUsesDelay = usesDelay;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var timeStreamRegister = registerCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n        animationRegisterData.setRegisterIndex(this, ParticleTimeState_1.default.TIME_STREAM_INDEX, timeStreamRegister.index);\n        var timeConst = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleTimeState_1.default.TIME_CONSTANT_INDEX, timeConst.index);\n        var code = \"\";\n        code += \"sub \" + animationRegisterData.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n        //if time=0,set the position to zero.\n        var temp = registerCache.getFreeVertexSingleTemp();\n        code += \"sge \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n        code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        if (this._iUsesDuration) {\n            if (this._iUsesLooping) {\n                var div = registerCache.getFreeVertexSingleTemp();\n                if (this._iUsesDelay) {\n                    code += \"div \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"slt \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n                    code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n                }\n                else {\n                    code += \"mul \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n                }\n            }\n            else {\n                var sge = registerCache.getFreeVertexSingleTemp();\n                code += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterData.vertexTime + \"\\n\";\n                code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n            }\n        }\n        code += \"mul \" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        this._pOneData[0] = param.startTime;\n        this._pOneData[1] = param.duration;\n        this._pOneData[2] = param.delay + param.duration;\n        this._pOneData[3] = 1 / param.duration;\n    };\n    return ParticleTimeNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleUVState_1 = require(\"../../animators/states/ParticleUVState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nvar ParticleUVNode = (function (_super) {\n    __extends(ParticleUVNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n     */\n    function ParticleUVNode(mode, cycle, scale, axis) {\n        if (cycle === void 0) { cycle = 1; }\n        if (scale === void 0) { scale = 1; }\n        if (axis === void 0) { axis = \"x\"; }\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleUV\", ParticlePropertiesMode_1.default.GLOBAL, 4, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleUVState_1.default;\n        this._cycle = cycle;\n        this._scale = scale;\n        this._axis = axis;\n        this.updateUVData();\n    }\n    Object.defineProperty(ParticleUVNode.prototype, \"cycle\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._cycle;\n        },\n        set: function (value) {\n            this._cycle = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"scale\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"axis\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._axis;\n        },\n        set: function (value) {\n            this._axis = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAGALUVCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        var uvConst = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleUVState_1.default.UV_INDEX, uvConst.index);\n        var axisIndex = this._axis == \"x\" ? 0 : (this._axis == \"y\" ? 1 : 2);\n        var target = new ShaderRegisterElement_1.default(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, axisIndex);\n        var sin = registerCache.getFreeVertexSingleTemp();\n        if (this._scale != 1)\n            code += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n        code += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + uvConst + \".x\\n\";\n        code += \"sin \" + sin + \",\" + sin + \"\\n\";\n        code += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    ParticleUVNode.prototype.updateUVData = function () {\n        this._iUvData = new Vector3D_1.default(Math.PI * 2 / this._cycle, this._scale, 0, 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     *\n     */\n    ParticleUVNode.U_AXIS = \"x\";\n    /**\n     *\n     */\n    ParticleUVNode.V_AXIS = \"y\";\n    return ParticleUVNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleVelocityState_1 = require(\"../../animators/states/ParticleVelocityState\");\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nvar ParticleVelocityNode = (function (_super) {\n    __extends(ParticleVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n     */\n    function ParticleVelocityNode(mode, velocity) {\n        if (velocity === void 0) { velocity = null; }\n        _super.call(this, \"ParticleVelocity\", mode, 3);\n        this._pStateClass = ParticleVelocityState_1.default;\n        this._iVelocity = velocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var velocityValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleVelocityState_1.default.VELOCITY_INDEX, velocityValue.index);\n        var distance = registerCache.getFreeVertexVectorTemp();\n        var code = \"\";\n        code += \"mul \" + distance + \",\" + animationRegisterData.vertexTime + \",\" + velocityValue + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity)\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var _tempVelocity = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n        if (!_tempVelocity)\n            throw new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n        this._pOneData[0] = _tempVelocity.x;\n        this._pOneData[1] = _tempVelocity.y;\n        this._pOneData[2] = _tempVelocity.z;\n    };\n    /**\n     * Reference for velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n     */\n    ParticleVelocityNode.VELOCITY_VECTOR3D = \"VelocityVector3D\";\n    return ParticleVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonBinaryLERPState_1 = require(\"../../animators/states/SkeletonBinaryLERPState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonBinaryLERPNode = (function (_super) {\n    __extends(SkeletonBinaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n     */\n    function SkeletonBinaryLERPNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonBinaryLERPState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonBinaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPNode;\n\n},{\"../../animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipNodeBase_1 = require(\"../../animators/nodes/AnimationClipNodeBase\");\nvar SkeletonClipState_1 = require(\"../../animators/states/SkeletonClipState\");\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nvar SkeletonClipNode = (function (_super) {\n    __extends(SkeletonClipNode, _super);\n    /**\n     * Creates a new <code>SkeletonClipNode</code> object.\n     */\n    function SkeletonClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        /**\n         * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n         * of the output skeleton pose. Defaults to false.\n         */\n        this.highQuality = false;\n        this._pStateClass = SkeletonClipState_1.default;\n    }\n    Object.defineProperty(SkeletonClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a skeleton pose frame to the internal timeline of the animation node.\n     *\n     * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     */\n    SkeletonClipNode.prototype.addFrame = function (skeletonPose, duration) {\n        this._frames.push(skeletonPose);\n        this._pDurations.push(duration);\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._frames[i].jointPoses[0].translation;\n            p2 = this._frames[i + 1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pStitchFinalFrame || !this._pLooping) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return SkeletonClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipNode;\n\n},{\"../../animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"../../animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDifferenceState_1 = require(\"../../animators/states/SkeletonDifferenceState\");\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDifferenceNode = (function (_super) {\n    __extends(SkeletonDifferenceNode, _super);\n    /**\n     * Creates a new <code>SkeletonAdditiveNode</code> object.\n     */\n    function SkeletonDifferenceNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDifferenceState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDifferenceNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceNode;\n\n},{\"../../animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDirectionalState_1 = require(\"../../animators/states/SkeletonDirectionalState\");\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDirectionalNode = (function (_super) {\n    __extends(SkeletonDirectionalNode, _super);\n    function SkeletonDirectionalNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDirectionalState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDirectionalNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalNode;\n\n},{\"../../animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonNaryLERPState_1 = require(\"../../animators/states/SkeletonNaryLERPState\");\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonNaryLERPNode = (function (_super) {\n    __extends(SkeletonNaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonNaryLERPNode</code> object.\n     */\n    function SkeletonNaryLERPNode() {\n        _super.call(this);\n        this._iInputs = new Array();\n        this._pStateClass = SkeletonNaryLERPState_1.default;\n    }\n    Object.defineProperty(SkeletonNaryLERPNode.prototype, \"numInputs\", {\n        get: function () {\n            return this._numInputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns an integer representing the input index of the given skeleton animation node.\n     *\n     * @param input The skeleton animation node for with the input index is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputIndex = function (input) {\n        return this._iInputs.indexOf(input);\n    };\n    /**\n     * Returns the skeleton animation node object that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputAt = function (index) {\n        return this._iInputs[index];\n    };\n    /**\n     * Adds a new skeleton animation node input to the animation node.\n     */\n    SkeletonNaryLERPNode.prototype.addInput = function (input) {\n        this._iInputs[this._numInputs++] = input;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonNaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPNode;\n\n},{\"../../animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationClipNodeBase_1 = require(\"../../animators/nodes/AnimationClipNodeBase\");\nvar VertexClipState_1 = require(\"../../animators/states/VertexClipState\");\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nvar VertexClipNode = (function (_super) {\n    __extends(VertexClipNode, _super);\n    /**\n     * Creates a new <code>VertexClipNode</code> object.\n     */\n    function VertexClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        this._translations = new Array();\n        this._pStateClass = VertexClipState_1.default;\n    }\n    Object.defineProperty(VertexClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a geometry object to the internal timeline of the animation node.\n     *\n     * @param geometry The geometry object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n     */\n    VertexClipNode.prototype.addFrame = function (geometry, duration, translation) {\n        if (translation === void 0) { translation = null; }\n        this._frames.push(geometry);\n        this._pDurations.push(duration);\n        this._translations.push(translation || new Vector3D_1.default());\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._translations[i];\n            p2 = this._translations[i + 1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._translations[0];\n            p2 = this._translations[1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return VertexClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipNode;\n\n},{\"../../animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"../../animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/AnimationClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\nvar AnimationStateEvent_1 = require(\"../../events/AnimationStateEvent\");\n/**\n *\n */\nvar AnimationClipState = (function (_super) {\n    __extends(AnimationClipState, _super);\n    function AnimationClipState(animator, animationClipNode) {\n        _super.call(this, animator, animationClipNode);\n        this._pFramesDirty = true;\n        this._animationClipNode = animationClipNode;\n    }\n    Object.defineProperty(AnimationClipState.prototype, \"blendWeight\", {\n        /**\n         * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n         * between the current frame (0) and next frame (1) of the animation.\n         *\n         * @see #currentFrame\n         * @see #nextFrame\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pBlendWeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"currentFrame\", {\n        /**\n         * Returns the current frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pCurrentFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"nextFrame\", {\n        /**\n         * Returns the next frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pNextFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.update = function (time) {\n        if (!this._animationClipNode.looping) {\n            if (time > this._pStartTime + this._animationClipNode.totalDuration)\n                time = this._pStartTime + this._animationClipNode.totalDuration;\n            else if (time < this._pStartTime)\n                time = this._pStartTime;\n        }\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.phase = function (value) {\n        var time = value * this._animationClipNode.totalDuration + this._pStartTime;\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype._pUpdateTime = function (time) {\n        this._pFramesDirty = true;\n        this._pTimeDir = (time - this._pStartTime > this._pTime) ? 1 : -1;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n     *\n     * @see #currentFrame\n     * @see #nextFrame\n     * @see #blendWeight\n     */\n    AnimationClipState.prototype._pUpdateFrames = function () {\n        this._pFramesDirty = false;\n        var looping = this._animationClipNode.looping;\n        var totalDuration = this._animationClipNode.totalDuration;\n        var lastFrame = this._animationClipNode.lastFrame;\n        var time = this._pTime;\n        //trace(\"time\", time, totalDuration)\n        if (looping && (time >= totalDuration || time < 0)) {\n            time %= totalDuration;\n            if (time < 0)\n                time += totalDuration;\n        }\n        if (!looping && time >= totalDuration) {\n            this.notifyPlaybackComplete();\n            this._pCurrentFrame = lastFrame;\n            this._pNextFrame = lastFrame;\n            this._pBlendWeight = 0;\n        }\n        else if (!looping && time <= 0) {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            this._pBlendWeight = 0;\n        }\n        else if (this._animationClipNode.fixedFrameRate) {\n            var t = time / totalDuration * lastFrame;\n            this._pCurrentFrame = Math.floor(t);\n            this._pBlendWeight = t - this._pCurrentFrame;\n            this._pNextFrame = this._pCurrentFrame + 1;\n        }\n        else {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            var dur = 0, frameTime;\n            var durations = this._animationClipNode.durations;\n            do {\n                frameTime = dur;\n                dur += durations[this._pNextFrame];\n                this._pCurrentFrame = this._pNextFrame++;\n            } while (time > dur);\n            if (this._pCurrentFrame == lastFrame) {\n                this._pCurrentFrame = 0;\n                this._pNextFrame = 1;\n            }\n            this._pBlendWeight = (time - frameTime) / durations[this._pCurrentFrame];\n        }\n    };\n    AnimationClipState.prototype.notifyPlaybackComplete = function () {\n        if (this._animationStatePlaybackComplete == null)\n            this._animationStatePlaybackComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n        this._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n    };\n    return AnimationClipState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipState;\n\n},{\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"../../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\"}],\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n *\n */\nvar AnimationStateBase = (function () {\n    function AnimationStateBase(animator, animationNode) {\n        this._pRootDelta = new Vector3D_1.default();\n        this._pPositionDeltaDirty = true;\n        this._pStartTime = 0;\n        this._pAnimator = animator;\n        this._pAnimationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateBase.prototype, \"positionDelta\", {\n        /**\n         * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n         */\n        get: function () {\n            if (this._pPositionDeltaDirty) {\n                this._pUpdatePositionDelta();\n            }\n            return this._pRootDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the start time of the node to a  new value.\n     *\n     * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n     */\n    AnimationStateBase.prototype.offset = function (startTime) {\n        this._pStartTime = startTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the configuration of the node to its current state.\n     *\n     * @param time The absolute time (in milliseconds) of the animator's play head position.\n     *\n     * @see AnimatorBase#update()\n     */\n    AnimationStateBase.prototype.update = function (time) {\n        if (this._pTime == time - this._pStartTime) {\n            return;\n        }\n        this._pUpdateTime(time);\n    };\n    /**\n     * Sets the animation phase of the node.\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimationStateBase.prototype.phase = function (value) {\n    };\n    /**\n     * Updates the node's internal playhead position.\n     *\n     * @param time The local time (in milliseconds) of the node's playhead position.\n     */\n    AnimationStateBase.prototype._pUpdateTime = function (time) {\n        this._pTime = time - this._pStartTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the node's root delta position\n     */\n    AnimationStateBase.prototype._pUpdatePositionDelta = function () {\n    };\n    return AnimationStateBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/IAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleAccelerationState = (function (_super) {\n    __extends(ParticleAccelerationState, _super);\n    function ParticleAccelerationState(animator, particleAccelerationNode) {\n        _super.call(this, animator, particleAccelerationNode);\n        this._particleAccelerationNode = particleAccelerationNode;\n        this._acceleration = this._particleAccelerationNode._acceleration;\n        this.updateAccelerationData();\n    }\n    Object.defineProperty(ParticleAccelerationState.prototype, \"acceleration\", {\n        /**\n         * Defines the acceleration vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._acceleration;\n        },\n        set: function (value) {\n            this._acceleration.x = value.x;\n            this._acceleration.y = value.y;\n            this._acceleration.z = value.z;\n            this.updateAccelerationData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        else\n            shader.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n    };\n    ParticleAccelerationState.prototype.updateAccelerationData = function () {\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            this._halfAcceleration = new Vector3D_1.default(this._acceleration.x / 2, this._acceleration.y / 2, this._acceleration.z / 2);\n    };\n    /** @private */\n    ParticleAccelerationState.ACCELERATION_INDEX = 0;\n    return ParticleAccelerationState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBezierCurveState = (function (_super) {\n    __extends(ParticleBezierCurveState, _super);\n    function ParticleBezierCurveState(animator, particleBezierCurveNode) {\n        _super.call(this, animator, particleBezierCurveNode);\n        this._particleBezierCurveNode = particleBezierCurveNode;\n        this._controlPoint = this._particleBezierCurveNode._iControlPoint;\n        this._endPoint = this._particleBezierCurveNode._iEndPoint;\n    }\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"controlPoint\", {\n        /**\n         * Defines the default control point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._controlPoint;\n        },\n        set: function (value) {\n            this._controlPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"endPoint\", {\n        /**\n         * Defines the default end point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._endPoint;\n        },\n        set: function (value) {\n            this._endPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleBezierCurveState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var controlIndex = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n        var endIndex = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n        if (this._particleBezierCurveNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            animationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else {\n            shader.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n            shader.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n        }\n    };\n    /** @private */\n    ParticleBezierCurveState.BEZIER_CONTROL_INDEX = 0;\n    /** @private */\n    ParticleBezierCurveState.BEZIER_END_INDEX = 1;\n    return ParticleBezierCurveState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBillboardState = (function (_super) {\n    __extends(ParticleBillboardState, _super);\n    /**\n     *\n     */\n    function ParticleBillboardState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default;\n        this._billboardAxis = particleNode._iBillboardAxis;\n    }\n    ParticleBillboardState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var comps;\n        if (this._billboardAxis) {\n            var pos = renderable.sourceEntity.sceneTransform.position;\n            var look = camera.sceneTransform.position.subtract(pos);\n            var right = look.crossProduct(this._billboardAxis);\n            right.normalize();\n            look = this.billboardAxis.crossProduct(right);\n            look.normalize();\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            this._matrix.copyColumnFrom(0, right);\n            this._matrix.copyColumnFrom(1, this.billboardAxis);\n            this._matrix.copyColumnFrom(2, look);\n            this._matrix.copyColumnFrom(3, pos);\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        else {\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            //decompose using axis angle rotations\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            //recreate the matrix with just the rotation data\n            this._matrix.identity();\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        //set a new matrix transform constant\n        shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n    };\n    Object.defineProperty(ParticleBillboardState.prototype, \"billboardAxis\", {\n        /**\n         * Defines the billboard axis.\n         */\n        get: function () {\n            return this.billboardAxis;\n        },\n        set: function (value) {\n            this.billboardAxis = value ? value.clone() : null;\n            if (this.billboardAxis)\n                this.billboardAxis.normalize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    ParticleBillboardState.MATRIX_INDEX = 0;\n    return ParticleBillboardState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Orientation3D\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticleColorState = (function (_super) {\n    __extends(ParticleColorState, _super);\n    function ParticleColorState(animator, particleColorNode) {\n        _super.call(this, animator, particleColorNode);\n        this._particleColorNode = particleColorNode;\n        this._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n        this._usesOffset = this._particleColorNode._iUsesOffset;\n        this._usesCycle = this._particleColorNode._iUsesCycle;\n        this._usesPhase = this._particleColorNode._iUsesPhase;\n        this._startColor = this._particleColorNode._iStartColor;\n        this._endColor = this._particleColorNode._iEndColor;\n        this._cycleDuration = this._particleColorNode._iCycleDuration;\n        this._cyclePhase = this._particleColorNode._iCyclePhase;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleColorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (shader.usesFragmentAnimation) {\n            var dataOffset = this._particleColorNode._iDataOffset;\n            var index;\n            if (this._usesCycle)\n                shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n            if (this._usesMultiplier) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX);\n                    shader.vertexConstantData[index++] = this._startMultiplierData.x;\n                    shader.vertexConstantData[index++] = this._startMultiplierData.y;\n                    shader.vertexConstantData[index++] = this._startMultiplierData.z;\n                    shader.vertexConstantData[index] = this._startMultiplierData.w;\n                    index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX);\n                    shader.vertexConstantData[index++] = this._deltaMultiplierData.x;\n                    shader.vertexConstantData[index++] = this._deltaMultiplierData.y;\n                    shader.vertexConstantData[index++] = this._deltaMultiplierData.z;\n                    shader.vertexConstantData[index] = this._deltaMultiplierData.w;\n                }\n            }\n            if (this._usesOffset) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n                }\n            }\n        }\n    };\n    ParticleColorState.prototype.updateColorData = function () {\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._cycleData = new Vector3D_1.default(Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180, 0, 0);\n        }\n        if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default((this._startColor.redMultiplier + this._endColor.redMultiplier) / 2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier) / 2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier) / 2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier) / 2);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier) / 2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier) / 2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier) / 2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier) / 2);\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default((this._startColor.redOffset + this._endColor.redOffset) / (255 * 2), (this._startColor.greenOffset + this._endColor.greenOffset) / (255 * 2), (this._startColor.blueOffset + this._endColor.blueOffset) / (255 * 2), (this._startColor.alphaOffset + this._endColor.alphaOffset) / (255 * 2));\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / (255 * 2), (this._endColor.greenOffset - this._startColor.greenOffset) / (255 * 2), (this._endColor.blueOffset - this._startColor.blueOffset) / (255 * 2), (this._endColor.alphaOffset - this._startColor.alphaOffset) / (255 * 2));\n                }\n            }\n            else {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default(this._startColor.redOffset / 255, this._startColor.greenOffset / 255, this._startColor.blueOffset / 255, this._startColor.alphaOffset / 255);\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / 255, (this._endColor.greenOffset - this._startColor.greenOffset) / 255, (this._endColor.blueOffset - this._startColor.blueOffset) / 255, (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255);\n                }\n            }\n        }\n    };\n    /** @private */\n    ParticleColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleColorState.DELTA_MULTIPLIER_INDEX = 1;\n    /** @private */\n    ParticleColorState.START_OFFSET_INDEX = 2;\n    /** @private */\n    ParticleColorState.DELTA_OFFSET_INDEX = 3;\n    /** @private */\n    ParticleColorState.CYCLE_INDEX = 4;\n    return ParticleColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleFollowState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleFollowState = (function (_super) {\n    __extends(ParticleFollowState, _super);\n    function ParticleFollowState(animator, particleFollowNode) {\n        _super.call(this, animator, particleFollowNode, true);\n        this._targetPos = new Vector3D_1.default();\n        this._targetEuler = new Vector3D_1.default();\n        //temporary vector3D for calculation\n        this._temp = new Vector3D_1.default();\n        this._particleFollowNode = particleFollowNode;\n        this._smooth = particleFollowNode._iSmooth;\n    }\n    Object.defineProperty(ParticleFollowState.prototype, \"followTarget\", {\n        get: function () {\n            return this._followTarget;\n        },\n        set: function (value) {\n            this._followTarget = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleFollowState.prototype, \"smooth\", {\n        get: function () {\n            return this._smooth;\n        },\n        set: function (value) {\n            this._smooth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._followTarget) {\n            if (this._particleFollowNode._iUsesPosition) {\n                this._targetPos.x = this._followTarget.transform.position.x / renderable.sourceEntity.scaleX;\n                this._targetPos.y = this._followTarget.transform.position.y / renderable.sourceEntity.scaleY;\n                this._targetPos.z = this._followTarget.transform.position.z / renderable.sourceEntity.scaleZ;\n            }\n            if (this._particleFollowNode._iUsesRotation) {\n                this._targetEuler.x = this._followTarget.rotationX;\n                this._targetEuler.y = this._followTarget.rotationY;\n                this._targetEuler.z = this._followTarget.rotationZ;\n                this._targetEuler.scaleBy(MathConsts_1.default.DEGREES_TO_RADIANS);\n            }\n        }\n        //initialization\n        if (!this._prePos)\n            this._prePos = this._targetPos.clone();\n        if (!this._preEuler)\n            this._preEuler = this._targetEuler.clone();\n        var currentTime = this._pTime / 1000;\n        var previousTime = animationElements.previousTime;\n        var deltaTime = currentTime - previousTime;\n        var needProcess = previousTime != currentTime;\n        if (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.processPositionAndRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesPosition) {\n            if (needProcess)\n                this.processPosition(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.precessRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        this._prePos.copyFrom(this._targetPos);\n        this._targetEuler.copyFrom(this._targetEuler);\n        animationElements.previousTime = currentTime;\n    };\n    ParticleFollowState.prototype.processPosition = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var posVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedPos = this._targetPos;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.precessRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedRotation;\n        var rotationVelocity;\n        if (this._smooth) {\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedRotation = this._targetEuler;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.processPositionAndRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var interpolatedRotation;\n        var posVelocity;\n        var rotationVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else {\n            interpolatedPos = this._targetPos;\n            interpolatedRotation = this._targetEuler;\n        }\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    /** @private */\n    ParticleFollowState.FOLLOW_POSITION_INDEX = 0;\n    /** @private */\n    ParticleFollowState.FOLLOW_ROTATION_INDEX = 1;\n    return ParticleFollowState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n*\n*/\nvar ParticleInitialColorState = (function (_super) {\n    __extends(ParticleInitialColorState, _super);\n    function ParticleInitialColorState(animator, particleInitialColorNode) {\n        _super.call(this, animator, particleInitialColorNode);\n        this._particleInitialColorNode = particleInitialColorNode;\n        this._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n        this._usesOffset = particleInitialColorNode._iUsesOffset;\n        this._initialColor = particleInitialColorNode._iInitialColor;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleInitialColorState.prototype, \"initialColor\", {\n        /**\n         * Defines the initial color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._initialColor;\n        },\n        set: function (value) {\n            this._initialColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (shader.usesFragmentAnimation) {\n            var index;\n            if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                var dataOffset = this._particleInitialColorNode._iDataOffset;\n                if (this._usesMultiplier) {\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                if (this._usesOffset)\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            }\n            else {\n                if (this._usesMultiplier)\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n                if (this._usesOffset)\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n            }\n        }\n    };\n    ParticleInitialColorState.prototype.updateColorData = function () {\n        if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesMultiplier)\n                this._multiplierData = new Vector3D_1.default(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n            if (this._usesOffset)\n                this._offsetData = new Vector3D_1.default(this._initialColor.redOffset / 255, this._initialColor.greenOffset / 255, this._initialColor.blueOffset / 255, this._initialColor.alphaOffset / 255);\n        }\n    };\n    /** @private */\n    ParticleInitialColorState.MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleInitialColorState.OFFSET_INDEX = 1;\n    return ParticleInitialColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOrbitState = (function (_super) {\n    __extends(ParticleOrbitState, _super);\n    function ParticleOrbitState(animator, particleOrbitNode) {\n        _super.call(this, animator, particleOrbitNode);\n        this._particleOrbitNode = particleOrbitNode;\n        this._usesEulers = this._particleOrbitNode._iUsesEulers;\n        this._usesCycle = this._particleOrbitNode._iUsesCycle;\n        this._usesPhase = this._particleOrbitNode._iUsesPhase;\n        this._eulers = this._particleOrbitNode._iEulers;\n        this._radius = this._particleOrbitNode._iRadius;\n        this._cycleDuration = this._particleOrbitNode._iCycleDuration;\n        this._cyclePhase = this._particleOrbitNode._iCyclePhase;\n        this.updateOrbitData();\n    }\n    Object.defineProperty(ParticleOrbitState.prototype, \"radius\", {\n        /**\n         * Defines the radius of the orbit when in global mode. Defaults to 100.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"eulers\", {\n        /**\n         * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n         */\n        get: function () {\n            return this._eulers;\n        },\n        set: function (value) {\n            this._eulers = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleOrbitState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesPhase)\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            else\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else\n            shader.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n        if (this._usesEulers)\n            shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n    };\n    ParticleOrbitState.prototype.updateOrbitData = function () {\n        if (this._usesEulers) {\n            this._eulersMatrix = new Matrix3D_1.default();\n            this._eulersMatrix.appendRotation(this._eulers.x, Vector3D_1.default.X_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.y, Vector3D_1.default.Y_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.z, Vector3D_1.default.Z_AXIS);\n        }\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._orbitData = new Vector3D_1.default(this._radius, 0, this._radius * Math.PI * 2, this._cyclePhase * Math.PI / 180);\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._orbitData.y = Math.PI * 2 / this._cycleDuration;\n            }\n            else\n                this._orbitData.y = Math.PI * 2;\n        }\n    };\n    /** @private */\n    ParticleOrbitState.ORBIT_INDEX = 0;\n    /** @private */\n    ParticleOrbitState.EULERS_INDEX = 1;\n    return ParticleOrbitState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOscillatorState = (function (_super) {\n    __extends(ParticleOscillatorState, _super);\n    function ParticleOscillatorState(animator, particleOscillatorNode) {\n        _super.call(this, animator, particleOscillatorNode);\n        this._particleOscillatorNode = particleOscillatorNode;\n        this._oscillator = this._particleOscillatorNode._iOscillator;\n        this.updateOscillatorData();\n    }\n    Object.defineProperty(ParticleOscillatorState.prototype, \"oscillator\", {\n        /**\n         * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n         */\n        get: function () {\n            return this._oscillator;\n        },\n        set: function (value) {\n            this._oscillator = value;\n            this.updateOscillatorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        else\n            shader.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n    };\n    ParticleOscillatorState.prototype.updateOscillatorData = function () {\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._oscillator.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            if (this._oscillatorData == null)\n                this._oscillatorData = new Vector3D_1.default();\n            this._oscillatorData.x = this._oscillator.x;\n            this._oscillatorData.y = this._oscillator.y;\n            this._oscillatorData.z = this._oscillator.z;\n            this._oscillatorData.w = Math.PI * 2 / this._oscillator.w;\n        }\n    };\n    /** @private */\n    ParticleOscillatorState.OSCILLATOR_INDEX = 0;\n    return ParticleOscillatorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticlePositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticlePositionState = (function (_super) {\n    __extends(ParticlePositionState, _super);\n    function ParticlePositionState(animator, particlePositionNode) {\n        _super.call(this, animator, particlePositionNode);\n        this._particlePositionNode = particlePositionNode;\n        this._position = this._particlePositionNode._iPosition;\n    }\n    Object.defineProperty(ParticlePositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticlePositionState.prototype.getPositions = function () {\n        return this._pDynamicProperties;\n    };\n    ParticlePositionState.prototype.setPositions = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            shader.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticlePositionState.POSITION_INDEX = 0;\n    return ParticlePositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToHeadingState = (function (_super) {\n    __extends(ParticleRotateToHeadingState, _super);\n    function ParticleRotateToHeadingState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default();\n    }\n    ParticleRotateToHeadingState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._pParticleAnimator.animationSet.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n        }\n    };\n    /** @private */\n    ParticleRotateToHeadingState.MATRIX_INDEX = 0;\n    return ParticleRotateToHeadingState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToPositionState = (function (_super) {\n    __extends(ParticleRotateToPositionState, _super);\n    function ParticleRotateToPositionState(animator, particleRotateToPositionNode) {\n        _super.call(this, animator, particleRotateToPositionNode);\n        this._matrix = new Matrix3D_1.default();\n        this._particleRotateToPositionNode = particleRotateToPositionNode;\n        this._position = this._particleRotateToPositionNode._iPosition;\n    }\n    Object.defineProperty(ParticleRotateToPositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleRotateToPositionState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n        if (this._pParticleAnimator.animationSet.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n        }\n        if (this._particleRotateToPositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n            shader.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n        }\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleRotateToPositionState.MATRIX_INDEX = 0;\n    /** @private */\n    ParticleRotateToPositionState.POSITION_INDEX = 1;\n    return ParticleRotateToPositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotationalVelocityState = (function (_super) {\n    __extends(ParticleRotationalVelocityState, _super);\n    function ParticleRotationalVelocityState(animator, particleRotationNode) {\n        _super.call(this, animator, particleRotationNode);\n        this._particleRotationalVelocityNode = particleRotationNode;\n        this._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n        this.updateRotationalVelocityData();\n    }\n    Object.defineProperty(ParticleRotationalVelocityState.prototype, \"rotationalVelocity\", {\n        /**\n         * Defines the default rotationalVelocity of the state, used when in global mode.\n         */\n        get: function () {\n            return this._rotationalVelocity;\n        },\n        set: function (value) {\n            this._rotationalVelocity = value;\n            this.updateRotationalVelocityData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleRotationalVelocityState.prototype.getRotationalVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleRotationalVelocityState.prototype.setRotationalVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            shader.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n    };\n    ParticleRotationalVelocityState.prototype.updateRotationalVelocityData = function () {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._rotationalVelocity.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            var rotation = this._rotationalVelocity.clone();\n            if (rotation.length <= 0)\n                rotation.z = 1; //set the default direction\n            else\n                rotation.normalize();\n            // w is used as angle/2 in agal\n            this._rotationalVelocityData = new Vector3D_1.default(rotation.x, rotation.y, rotation.z, Math.PI / rotation.w);\n        }\n    };\n    /** @private */\n    ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX = 0;\n    return ParticleRotationalVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleScaleState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleScaleState = (function (_super) {\n    __extends(ParticleScaleState, _super);\n    function ParticleScaleState(animator, particleScaleNode) {\n        _super.call(this, animator, particleScaleNode);\n        this._particleScaleNode = particleScaleNode;\n        this._usesCycle = this._particleScaleNode._iUsesCycle;\n        this._usesPhase = this._particleScaleNode._iUsesPhase;\n        this._minScale = this._particleScaleNode._iMinScale;\n        this._maxScale = this._particleScaleNode._iMaxScale;\n        this._cycleDuration = this._particleScaleNode._iCycleDuration;\n        this._cyclePhase = this._particleScaleNode._iCyclePhase;\n        this.updateScaleData();\n    }\n    Object.defineProperty(ParticleScaleState.prototype, \"minScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._minScale;\n        },\n        set: function (value) {\n            this._minScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"maxScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._maxScale;\n        },\n        set: function (value) {\n            this._maxScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleScaleState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesCycle) {\n                if (this._usesPhase)\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                else\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            }\n            else\n                animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        else\n            shader.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n    };\n    ParticleScaleState.prototype.updateScaleData = function () {\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._scaleData = new Vector3D_1.default((this._minScale + this._maxScale) / 2, Math.abs(this._minScale - this._maxScale) / 2, Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180);\n            }\n            else\n                this._scaleData = new Vector3D_1.default(this._minScale, this._maxScale - this._minScale, 0, 0);\n        }\n    };\n    /** @private */\n    ParticleScaleState.SCALE_INDEX = 0;\n    return ParticleScaleState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n *\n */\nvar ParticleSegmentedColorState = (function (_super) {\n    __extends(ParticleSegmentedColorState, _super);\n    function ParticleSegmentedColorState(animator, particleSegmentedColorNode) {\n        _super.call(this, animator, particleSegmentedColorNode);\n        this._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n        this._usesOffset = particleSegmentedColorNode._iUsesOffset;\n        this._startColor = particleSegmentedColorNode._iStartColor;\n        this._endColor = particleSegmentedColorNode._iEndColor;\n        this._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n        this._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"numSegmentPoint\", {\n        /**\n         * Defines the number of segments.\n         */\n        get: function () {\n            return this._numSegmentPoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"segmentPoints\", {\n        /**\n         * Defines the key points of color\n         */\n        get: function () {\n            return this._segmentPoints;\n        },\n        set: function (value) {\n            this._segmentPoints = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesMultiplier\", {\n        get: function () {\n            return this._usesMultiplier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesOffset\", {\n        get: function () {\n            return this._usesOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSegmentedColorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (shader.usesFragmentAnimation) {\n            if (this._numSegmentPoint > 0)\n                shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n            if (this._usesMultiplier)\n                shader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n            if (this._usesOffset)\n                shader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n        }\n    };\n    ParticleSegmentedColorState.prototype.updateColorData = function () {\n        this._timeLifeData = new Float32Array(4);\n        this._multiplierData = new Float32Array(4 * (this._numSegmentPoint + 1));\n        this._offsetData = new Float32Array(4 * (this._numSegmentPoint + 1));\n        //cut off the time data\n        var i;\n        var j = 0;\n        var count = this._numSegmentPoint > 3 ? 3 : this._numSegmentPoint;\n        for (i = 0; i < count; i++) {\n            if (i == 0)\n                this._timeLifeData[j++] = this._segmentPoints[i].life;\n            else\n                this._timeLifeData[j++] = this._segmentPoints[i].life - this._segmentPoints[i - 1].life;\n        }\n        i = count;\n        if (this._numSegmentPoint == 0)\n            this._timeLifeData[j++] = 1;\n        else\n            this._timeLifeData[j++] = 1 - this._segmentPoints[i - 1].life;\n        if (this._usesMultiplier) {\n            j = 0;\n            this._multiplierData[j++] = this._startColor.redMultiplier;\n            this._multiplierData[j++] = this._startColor.greenMultiplier;\n            this._multiplierData[j++] = this._startColor.blueMultiplier;\n            this._multiplierData[j++] = this._startColor.alphaMultiplier;\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0) {\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier) / this._timeLifeData[i];\n                }\n                else {\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i];\n                }\n            }\n            i = this._numSegmentPoint;\n            if (this._numSegmentPoint == 0) {\n                this._multiplierData[j++] = this._endColor.redMultiplier - this._startColor.redMultiplier;\n                this._multiplierData[j++] = this._endColor.greenMultiplier - this._startColor.greenMultiplier;\n                this._multiplierData[j++] = this._endColor.blueMultiplier - this._startColor.blueMultiplier;\n                this._multiplierData[j++] = this._endColor.alphaMultiplier - this._startColor.alphaMultiplier;\n            }\n            else {\n                this._multiplierData[j++] = (this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i];\n                this._multiplierData[j++] = (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i];\n                this._multiplierData[j++] = (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i];\n                this._multiplierData[j++] = (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i];\n            }\n        }\n        if (this._usesOffset) {\n            j = 0;\n            this._offsetData[j++] = this._startColor.redOffset / 255;\n            this._offsetData[j++] = this._startColor.greenOffset / 255;\n            this._offsetData[j++] = this._startColor.blueOffset / 255;\n            this._offsetData[j++] = this._startColor.alphaOffset / 255;\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0) {\n                    this._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._startColor.redOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset) / this._timeLifeData[i] / 255;\n                }\n                else {\n                    this._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255;\n                }\n            }\n            i = this._numSegmentPoint;\n            if (this._numSegmentPoint == 0) {\n                this._offsetData[j++] = (this._endColor.redOffset - this._startColor.redOffset) / 255;\n                this._offsetData[j++] = (this._endColor.greenOffset - this._startColor.greenOffset) / 255;\n                this._offsetData[j++] = (this._endColor.blueOffset - this._startColor.blueOffset) / 255;\n                this._offsetData[j++] = (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255;\n            }\n            else {\n                this._offsetData[i] = (this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255;\n                this._offsetData[j++] = (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255;\n                this._offsetData[j++] = (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255;\n                this._offsetData[j++] = (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255;\n            }\n        }\n    };\n    /** @private */\n    ParticleSegmentedColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleSegmentedColorState.START_OFFSET_INDEX = 1;\n    /** @private */\n    ParticleSegmentedColorState.TIME_DATA_INDEX = 2;\n    return ParticleSegmentedColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleSpriteSheetState = (function (_super) {\n    __extends(ParticleSpriteSheetState, _super);\n    function ParticleSpriteSheetState(animator, particleSpriteSheetNode) {\n        _super.call(this, animator, particleSpriteSheetNode);\n        this._particleSpriteSheetNode = particleSpriteSheetNode;\n        this._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n        this._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n        this._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n        this._numColumns = this._particleSpriteSheetNode._iNumColumns;\n        this._numRows = this._particleSpriteSheetNode._iNumRows;\n        this._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n        this._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n        this.updateSpriteSheetData();\n    }\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the cycle phase, when in global mode. Defaults to zero.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSpriteSheetState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (!shader.usesUVTransform) {\n            shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n            if (this._usesCycle) {\n                var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n                if (this._particleSpriteSheetNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    if (this._usesPhase)\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n                    else\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                }\n                else\n                    shader.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n            }\n        }\n    };\n    ParticleSpriteSheetState.prototype.updateSpriteSheetData = function () {\n        this._spriteSheetData = new Array(8);\n        var uTotal = this._totalFrames / this._numColumns;\n        this._spriteSheetData[0] = uTotal;\n        this._spriteSheetData[1] = 1 / this._numColumns;\n        this._spriteSheetData[2] = 1 / this._numRows;\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._spriteSheetData[4] = uTotal / this._cycleDuration;\n            this._spriteSheetData[5] = this._cycleDuration;\n            if (this._usesPhase)\n                this._spriteSheetData[6] = this._cyclePhase;\n        }\n    };\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_0 = 0;\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_1 = 1;\n    return ParticleSpriteSheetState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n * ...\n */\nvar ParticleStateBase = (function (_super) {\n    __extends(ParticleStateBase, _super);\n    function ParticleStateBase(animator, particleNode, needUpdateTime) {\n        if (needUpdateTime === void 0) { needUpdateTime = false; }\n        _super.call(this, animator, particleNode);\n        this._pDynamicProperties = new Array();\n        this._pDynamicPropertiesDirty = new Object();\n        this._pParticleAnimator = animator;\n        this._particleNode = particleNode;\n        this._pNeedUpdateTime = needUpdateTime;\n    }\n    Object.defineProperty(ParticleStateBase.prototype, \"needUpdateTime\", {\n        get: function () {\n            return this._pNeedUpdateTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleStateBase.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n    };\n    ParticleStateBase.prototype._pUpdateDynamicProperties = function (animationElements) {\n        this._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n        var animationParticles = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var totalLenOfOneVertex = animationElements.totalLenOfOneVertex;\n        var dataLength = this._particleNode.dataLength;\n        var dataOffset = this._particleNode._iDataOffset;\n        var vertexLength;\n        //\t\t\tvar particleOffset:number;\n        var startingOffset;\n        var vertexOffset;\n        var data;\n        var animationParticle;\n        //\t\t\tvar numParticles:number = _positions.length/dataLength;\n        var numParticles = this._pDynamicProperties.length;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        //loop through all particles\n        while (i < numParticles) {\n            //loop through each particle data for the current particle\n            while (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n                data = this._pDynamicProperties[i];\n                vertexLength = animationParticle.numVertices * totalLenOfOneVertex;\n                startingOffset = animationParticle.startVertexIndex * totalLenOfOneVertex + dataOffset;\n                //loop through each vertex in the particle data\n                for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                    vertexOffset = startingOffset + k;\n                    //\t\t\t\t\t\tparticleOffset = i * dataLength;\n                    //loop through all vertex data for the current particle data\n                    for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                        vertexOffset = startingOffset + k;\n                        vertexData[vertexOffset++] = data.x;\n                        vertexData[vertexOffset++] = data.y;\n                        vertexData[vertexOffset++] = data.z;\n                        if (dataLength == 4)\n                            vertexData[vertexOffset++] = data.w;\n                    }\n                }\n                j++;\n            }\n            i++;\n        }\n        animationElements.invalidateBuffer();\n    };\n    return ParticleStateBase;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleStateBase;\n\n},{\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleTimeState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleTimeState = (function (_super) {\n    __extends(ParticleTimeState, _super);\n    function ParticleTimeState(animator, particleTimeNode) {\n        _super.call(this, animator, particleTimeNode, true);\n        this._particleTimeNode = particleTimeNode;\n    }\n    ParticleTimeState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        var particleTime = this._pTime / 1000;\n        shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n    };\n    /** @private */\n    ParticleTimeState.TIME_STREAM_INDEX = 0;\n    /** @private */\n    ParticleTimeState.TIME_CONSTANT_INDEX = 1;\n    return ParticleTimeState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleUVState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleUVState = (function (_super) {\n    __extends(ParticleUVState, _super);\n    function ParticleUVState(animator, particleUVNode) {\n        _super.call(this, animator, particleUVNode);\n        this._particleUVNode = particleUVNode;\n    }\n    ParticleUVState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (!shader.usesUVTransform) {\n            var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n            var data = this._particleUVNode._iUvData;\n            shader.setVertexConst(index, data.x, data.y);\n        }\n    };\n    /** @private */\n    ParticleUVState.UV_INDEX = 0;\n    return ParticleUVState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleVelocityState = (function (_super) {\n    __extends(ParticleVelocityState, _super);\n    function ParticleVelocityState(animator, particleVelocityNode) {\n        _super.call(this, animator, particleVelocityNode);\n        this._particleVelocityNode = particleVelocityNode;\n        this._velocity = this._particleVelocityNode._iVelocity;\n    }\n    Object.defineProperty(ParticleVelocityState.prototype, \"velocity\", {\n        /**\n         * Defines the default velocity vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._velocity;\n        },\n        set: function (value) {\n            this._velocity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleVelocityState.prototype.getVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleVelocityState.prototype.setVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    ParticleVelocityState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            shader.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleVelocityState.VELOCITY_INDEX = 0;\n    return ParticleVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonBinaryLERPState = (function (_super) {\n    __extends(SkeletonBinaryLERPState, _super);\n    function SkeletonBinaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._inputA = animator.getAnimationState(this._skeletonAnimationNode.inputA);\n        this._inputB = animator.getAnimationState(this._skeletonAnimationNode.inputB);\n    }\n    Object.defineProperty(SkeletonBinaryLERPState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see inputA\n         * @see inputB\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdateTime = function (time) {\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonBinaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this._pRootDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this._pRootDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this._pRootDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonBinaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    return SkeletonBinaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationClipState_1 = require(\"../../animators/states/AnimationClipState\");\n/**\n *\n */\nvar SkeletonClipState = (function (_super) {\n    __extends(SkeletonClipState, _super);\n    function SkeletonClipState(animator, skeletonClipNode) {\n        _super.call(this, animator, skeletonClipNode);\n        this._rootPos = new Vector3D_1.default();\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonClipNode = skeletonClipNode;\n        this._frames = this._skeletonClipNode.frames;\n    }\n    Object.defineProperty(SkeletonClipState.prototype, \"currentPose\", {\n        /**\n         * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonClipState.prototype, \"nextPose\", {\n        /**\n         * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonClipState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateTime = function (time) {\n        this._skeletonPoseDirty = true;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentPose = this._frames[this._pCurrentFrame];\n        if (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n            this._nextPose = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextPose = this._frames[this._pNextFrame];\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the internal playhead position.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonClipState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (!this._skeletonClipNode.totalDuration)\n            return;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var currentPose = this._currentPose.jointPoses;\n        var nextPose = this._nextPose.jointPoses;\n        var numJoints = skeleton.numJoints;\n        var p1, p2;\n        var pose1, pose2;\n        var endPoses = this._skeletonPose.jointPoses;\n        var endPose;\n        var tr;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        if ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n            throw new Error(\"joint counts don't match!\");\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = currentPose[i];\n            pose2 = nextPose[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            if (this._skeletonClipNode.highQuality)\n                endPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            else\n                endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            if (i > 0) {\n                tr = endPose.translation;\n                tr.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n                tr.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n                tr.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var p1, p2, p3;\n        var totalDelta = this._skeletonClipNode.totalDelta;\n        // jumping back, need to reset position\n        if ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n            this._rootPos.x -= totalDelta.x * this._pTimeDir;\n            this._rootPos.y -= totalDelta.y * this._pTimeDir;\n            this._rootPos.z -= totalDelta.z * this._pTimeDir;\n        }\n        var dx = this._rootPos.x;\n        var dy = this._rootPos.y;\n        var dz = this._rootPos.z;\n        if (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            p3 = this._currentPose.jointPoses[0].translation;\n            this._rootPos.x = p3.x + p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p3.y + p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p3.z + p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        else {\n            p1 = this._currentPose.jointPoses[0].translation;\n            p2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n            this._rootPos.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        this._pRootDelta.x = this._rootPos.x - dx;\n        this._pRootDelta.y = this._rootPos.y - dy;\n        this._pRootDelta.z = this._rootPos.z - dz;\n        this._pOldFrame = this._pNextFrame;\n    };\n    return SkeletonClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDifferenceState = (function (_super) {\n    __extends(SkeletonDifferenceState, _super);\n    function SkeletonDifferenceState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._baseInput = animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n        this._differenceInput = animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n    }\n    Object.defineProperty(SkeletonDifferenceState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see #baseInput\n         * @see #differenceInput\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._baseInput.phase(value);\n        this._baseInput.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdateTime = function (time) {\n        this._skeletonPoseDirty = true;\n        this._baseInput.update(time);\n        this._differenceInput.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDifferenceState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._baseInput.positionDelta;\n        var deltB = this._differenceInput.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * deltB.x;\n        this.positionDelta.y = deltA.y + this._blendWeight * deltB.y;\n        this.positionDelta.z = deltA.z + this._blendWeight * deltB.z;\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDifferenceState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var basePoses = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n        var diffPoses = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n        var base, diff;\n        var basePos, diffPos;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            base = basePoses[i];\n            diff = diffPoses[i];\n            basePos = base.translation;\n            diffPos = diff.translation;\n            SkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n            endPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = basePos.x + this._blendWeight * diffPos.x;\n            tr.y = basePos.y + this._blendWeight * diffPos.y;\n            tr.z = basePos.z + this._blendWeight * diffPos.z;\n        }\n    };\n    SkeletonDifferenceState._tempQuat = new Quaternion_1.default();\n    return SkeletonDifferenceState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"awayjs-core/lib/geom/Quaternion\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDirectionalState = (function (_super) {\n    __extends(SkeletonDirectionalState, _super);\n    function SkeletonDirectionalState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeight = 0;\n        this._direction = 0;\n        this._blendDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._forward = animator.getAnimationState(this._skeletonAnimationNode.forward);\n        this._backward = animator.getAnimationState(this._skeletonAnimationNode.backward);\n        this._left = animator.getAnimationState(this._skeletonAnimationNode.left);\n        this._right = animator.getAnimationState(this._skeletonAnimationNode.right);\n    }\n    Object.defineProperty(SkeletonDirectionalState.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        /**\n         * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n         * used to produce the skeleton pose output.\n         */\n        set: function (value) {\n            if (this._direction == value)\n                return;\n            this._direction = value;\n            this._blendDirty = true;\n            this._skeletonPoseDirty = true;\n            this._pPositionDeltaDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype.phase = function (value) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUdateTime = function (time) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDirectionalState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this.positionDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this.positionDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDirectionalState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    /**\n     * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @private\n     */\n    SkeletonDirectionalState.prototype.updateBlend = function () {\n        this._blendDirty = false;\n        if (this._direction < 0 || this._direction > 360) {\n            this._direction %= 360;\n            if (this._direction < 0)\n                this._direction += 360;\n        }\n        if (this._direction < 90) {\n            this._inputA = this._forward;\n            this._inputB = this._right;\n            this._blendWeight = this._direction / 90;\n        }\n        else if (this._direction < 180) {\n            this._inputA = this._right;\n            this._inputB = this._backward;\n            this._blendWeight = (this._direction - 90) / 90;\n        }\n        else if (this._direction < 270) {\n            this._inputA = this._backward;\n            this._inputB = this._left;\n            this._blendWeight = (this._direction - 180) / 90;\n        }\n        else {\n            this._inputA = this._left;\n            this._inputB = this._forward;\n            this._blendWeight = (this._direction - 270) / 90;\n        }\n    };\n    return SkeletonDirectionalState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonNaryLERPState = (function (_super) {\n    __extends(SkeletonNaryLERPState, _super);\n    function SkeletonNaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeights = new Array();\n        this._inputs = new Array();\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        var i = this._skeletonAnimationNode.numInputs;\n        while (i--)\n            this._inputs[i] = animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(value);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUdateTime = function (time) {\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(time);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonNaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node blend weight is requested.\n     */\n    SkeletonNaryLERPState.prototype.getBlendWeightAt = function (index) {\n        return this._blendWeights[index];\n    };\n    /**\n     * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index on which the skeleton animation node blend weight is to be set.\n     * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n     */\n    SkeletonNaryLERPState.prototype.setBlendWeightAt = function (index, blendWeight) {\n        this._blendWeights[index] = blendWeight;\n        this._pPositionDeltaDirty = true;\n        this._skeletonPoseDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var delta;\n        var weight;\n        this.positionDelta.x = 0;\n        this.positionDelta.y = 0;\n        this.positionDelta.z = 0;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (weight) {\n                delta = this._inputs[j].positionDelta;\n                this.positionDelta.x += weight * delta.x;\n                this.positionDelta.y += weight * delta.y;\n                this.positionDelta.z += weight * delta.z;\n            }\n        }\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonNaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var weight;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses;\n        var endPose, pose;\n        var endTr, tr;\n        var endQuat, q;\n        var firstPose;\n        var i;\n        var w0, x0, y0, z0;\n        var w1, x1, y1, z1;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (!weight)\n                continue;\n            poses = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n            if (!firstPose) {\n                firstPose = poses;\n                for (i = 0; i < numJoints; ++i) {\n                    endPose = endPoses[i];\n                    if (endPose == null)\n                        endPose = endPoses[i] = new JointPose_1.default();\n                    pose = poses[i];\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    endQuat = endPose.orientation;\n                    endQuat.x = weight * q.x;\n                    endQuat.y = weight * q.y;\n                    endQuat.z = weight * q.z;\n                    endQuat.w = weight * q.w;\n                    endTr = endPose.translation;\n                    endTr.x = weight * tr.x;\n                    endTr.y = weight * tr.y;\n                    endTr.z = weight * tr.z;\n                }\n            }\n            else {\n                for (i = 0; i < skeleton.numJoints; ++i) {\n                    endPose = endPoses[i];\n                    pose = poses[i];\n                    q = firstPose[i].orientation;\n                    x0 = q.x;\n                    y0 = q.y;\n                    z0 = q.z;\n                    w0 = q.w;\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    x1 = q.x;\n                    y1 = q.y;\n                    z1 = q.z;\n                    w1 = q.w;\n                    // find shortest direction\n                    if (x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1 < 0) {\n                        x1 = -x1;\n                        y1 = -y1;\n                        z1 = -z1;\n                        w1 = -w1;\n                    }\n                    endQuat = endPose.orientation;\n                    endQuat.x += weight * x1;\n                    endQuat.y += weight * y1;\n                    endQuat.z += weight * z1;\n                    endQuat.w += weight * w1;\n                    endTr = endPose.translation;\n                    endTr.x += weight * tr.x;\n                    endTr.y += weight * tr.y;\n                    endTr.z += weight * tr.z;\n                }\n            }\n        }\n        for (i = 0; i < skeleton.numJoints; ++i)\n            endPoses[i].orientation.normalize();\n    };\n    return SkeletonNaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/VertexClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipState_1 = require(\"../../animators/states/AnimationClipState\");\n/**\n *\n */\nvar VertexClipState = (function (_super) {\n    __extends(VertexClipState, _super);\n    function VertexClipState(animator, vertexClipNode) {\n        _super.call(this, animator, vertexClipNode);\n        this._vertexClipNode = vertexClipNode;\n        this._frames = this._vertexClipNode.frames;\n    }\n    Object.defineProperty(VertexClipState.prototype, \"currentGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexClipState.prototype, \"nextGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentGraphics = this._frames[this._pCurrentFrame];\n        if (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n            this._nextGraphics = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextGraphics = this._frames[this._pNextFrame];\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdatePositionDelta = function () {\n        //TODO:implement positiondelta functionality for vertex animations\n    };\n    return VertexClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipState;\n\n},{\"../../animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPNode_1 = require(\"../../animators/nodes/SkeletonBinaryLERPNode\");\nvar CrossfadeTransitionState_1 = require(\"../../animators/transitions/CrossfadeTransitionState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar CrossfadeTransitionNode = (function (_super) {\n    __extends(CrossfadeTransitionNode, _super);\n    /**\n     * Creates a new <code>CrossfadeTransitionNode</code> object.\n     */\n    function CrossfadeTransitionNode() {\n        _super.call(this);\n        this._pStateClass = CrossfadeTransitionState_1.default;\n    }\n    return CrossfadeTransitionNode;\n}(SkeletonBinaryLERPNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionNode;\n\n},{\"../../animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"../../animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPState_1 = require(\"../../animators/states/SkeletonBinaryLERPState\");\nvar AnimationStateEvent_1 = require(\"../../animators/../events/AnimationStateEvent\");\n/**\n *\n */\nvar CrossfadeTransitionState = (function (_super) {\n    __extends(CrossfadeTransitionState, _super);\n    function CrossfadeTransitionState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._crossfadeTransitionNode = skeletonAnimationNode;\n    }\n    /**\n     * @inheritDoc\n     */\n    CrossfadeTransitionState.prototype._pUpdateTime = function (time) {\n        this.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend) / (1000 * this._crossfadeTransitionNode.blendSpeed);\n        if (this.blendWeight >= 1) {\n            this.blendWeight = 1;\n            if (this._animationStateTransitionComplete == null)\n                this._animationStateTransitionComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n            this._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    return CrossfadeTransitionState;\n}(SkeletonBinaryLERPState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionState;\n\n},{\"../../animators/../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"../../animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\":[function(require,module,exports){\n\"use strict\";\nvar CrossfadeTransitionNode_1 = require(\"../../animators/transitions/CrossfadeTransitionNode\");\n/**\n *\n */\nvar CrossfadeTransition = (function () {\n    function CrossfadeTransition(blendSpeed) {\n        this.blendSpeed = 0.5;\n        this.blendSpeed = blendSpeed;\n    }\n    CrossfadeTransition.prototype.getAnimationNode = function (animator, startNode, endNode, startBlend) {\n        var crossFadeTransitionNode = new CrossfadeTransitionNode_1.default();\n        crossFadeTransitionNode.inputA = startNode;\n        crossFadeTransitionNode.inputB = endNode;\n        crossFadeTransitionNode.blendSpeed = this.blendSpeed;\n        crossFadeTransitionNode.startBlend = startBlend;\n        return crossFadeTransitionNode;\n    };\n    return CrossfadeTransition;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransition;\n\n},{\"../../animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\"}],\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar AnimationElements_1 = require(\"./animators/data/AnimationElements\");\nexports.AnimationElements = AnimationElements_1.default;\nvar AnimationRegisterData_1 = require(\"./animators/data/AnimationRegisterData\");\nexports.AnimationRegisterData = AnimationRegisterData_1.default;\nvar ColorSegmentPoint_1 = require(\"./animators/data/ColorSegmentPoint\");\nexports.ColorSegmentPoint = ColorSegmentPoint_1.default;\nvar JointPose_1 = require(\"./animators/data/JointPose\");\nexports.JointPose = JointPose_1.default;\nvar ParticleAnimationData_1 = require(\"./animators/data/ParticleAnimationData\");\nexports.ParticleAnimationData = ParticleAnimationData_1.default;\nvar ParticleProperties_1 = require(\"./animators/data/ParticleProperties\");\nexports.ParticleProperties = ParticleProperties_1.default;\nvar ParticlePropertiesMode_1 = require(\"./animators/data/ParticlePropertiesMode\");\nexports.ParticlePropertiesMode = ParticlePropertiesMode_1.default;\nvar Skeleton_1 = require(\"./animators/data/Skeleton\");\nexports.Skeleton = Skeleton_1.default;\nvar SkeletonJoint_1 = require(\"./animators/data/SkeletonJoint\");\nexports.SkeletonJoint = SkeletonJoint_1.default;\nvar SkeletonPose_1 = require(\"./animators/data/SkeletonPose\");\nexports.SkeletonPose = SkeletonPose_1.default;\nvar VertexAnimationMode_1 = require(\"./animators/data/VertexAnimationMode\");\nexports.VertexAnimationMode = VertexAnimationMode_1.default;\nvar AnimationClipNodeBase_1 = require(\"./animators/nodes/AnimationClipNodeBase\");\nexports.AnimationClipNodeBase = AnimationClipNodeBase_1.default;\nvar ParticleAccelerationNode_1 = require(\"./animators/nodes/ParticleAccelerationNode\");\nexports.ParticleAccelerationNode = ParticleAccelerationNode_1.default;\nvar ParticleBezierCurveNode_1 = require(\"./animators/nodes/ParticleBezierCurveNode\");\nexports.ParticleBezierCurveNode = ParticleBezierCurveNode_1.default;\nvar ParticleBillboardNode_1 = require(\"./animators/nodes/ParticleBillboardNode\");\nexports.ParticleBillboardNode = ParticleBillboardNode_1.default;\nvar ParticleColorNode_1 = require(\"./animators/nodes/ParticleColorNode\");\nexports.ParticleColorNode = ParticleColorNode_1.default;\nvar ParticleFollowNode_1 = require(\"./animators/nodes/ParticleFollowNode\");\nexports.ParticleFollowNode = ParticleFollowNode_1.default;\nvar ParticleInitialColorNode_1 = require(\"./animators/nodes/ParticleInitialColorNode\");\nexports.ParticleInitialColorNode = ParticleInitialColorNode_1.default;\nvar ParticleNodeBase_1 = require(\"./animators/nodes/ParticleNodeBase\");\nexports.ParticleNodeBase = ParticleNodeBase_1.default;\nvar ParticleOrbitNode_1 = require(\"./animators/nodes/ParticleOrbitNode\");\nexports.ParticleOrbitNode = ParticleOrbitNode_1.default;\nvar ParticleOscillatorNode_1 = require(\"./animators/nodes/ParticleOscillatorNode\");\nexports.ParticleOscillatorNode = ParticleOscillatorNode_1.default;\nvar ParticlePositionNode_1 = require(\"./animators/nodes/ParticlePositionNode\");\nexports.ParticlePositionNode = ParticlePositionNode_1.default;\nvar ParticleRotateToHeadingNode_1 = require(\"./animators/nodes/ParticleRotateToHeadingNode\");\nexports.ParticleRotateToHeadingNode = ParticleRotateToHeadingNode_1.default;\nvar ParticleRotateToPositionNode_1 = require(\"./animators/nodes/ParticleRotateToPositionNode\");\nexports.ParticleRotateToPositionNode = ParticleRotateToPositionNode_1.default;\nvar ParticleRotationalVelocityNode_1 = require(\"./animators/nodes/ParticleRotationalVelocityNode\");\nexports.ParticleRotationalVelocityNode = ParticleRotationalVelocityNode_1.default;\nvar ParticleScaleNode_1 = require(\"./animators/nodes/ParticleScaleNode\");\nexports.ParticleScaleNode = ParticleScaleNode_1.default;\nvar ParticleSegmentedColorNode_1 = require(\"./animators/nodes/ParticleSegmentedColorNode\");\nexports.ParticleSegmentedColorNode = ParticleSegmentedColorNode_1.default;\nvar ParticleSpriteSheetNode_1 = require(\"./animators/nodes/ParticleSpriteSheetNode\");\nexports.ParticleSpriteSheetNode = ParticleSpriteSheetNode_1.default;\nvar ParticleTimeNode_1 = require(\"./animators/nodes/ParticleTimeNode\");\nexports.ParticleTimeNode = ParticleTimeNode_1.default;\nvar ParticleUVNode_1 = require(\"./animators/nodes/ParticleUVNode\");\nexports.ParticleUVNode = ParticleUVNode_1.default;\nvar ParticleVelocityNode_1 = require(\"./animators/nodes/ParticleVelocityNode\");\nexports.ParticleVelocityNode = ParticleVelocityNode_1.default;\nvar SkeletonBinaryLERPNode_1 = require(\"./animators/nodes/SkeletonBinaryLERPNode\");\nexports.SkeletonBinaryLERPNode = SkeletonBinaryLERPNode_1.default;\nvar SkeletonClipNode_1 = require(\"./animators/nodes/SkeletonClipNode\");\nexports.SkeletonClipNode = SkeletonClipNode_1.default;\nvar SkeletonDifferenceNode_1 = require(\"./animators/nodes/SkeletonDifferenceNode\");\nexports.SkeletonDifferenceNode = SkeletonDifferenceNode_1.default;\nvar SkeletonDirectionalNode_1 = require(\"./animators/nodes/SkeletonDirectionalNode\");\nexports.SkeletonDirectionalNode = SkeletonDirectionalNode_1.default;\nvar SkeletonNaryLERPNode_1 = require(\"./animators/nodes/SkeletonNaryLERPNode\");\nexports.SkeletonNaryLERPNode = SkeletonNaryLERPNode_1.default;\nvar VertexClipNode_1 = require(\"./animators/nodes/VertexClipNode\");\nexports.VertexClipNode = VertexClipNode_1.default;\nvar AnimationClipState_1 = require(\"./animators/states/AnimationClipState\");\nexports.AnimationClipState = AnimationClipState_1.default;\nvar AnimationStateBase_1 = require(\"./animators/states/AnimationStateBase\");\nexports.AnimationStateBase = AnimationStateBase_1.default;\nvar ParticleAccelerationState_1 = require(\"./animators/states/ParticleAccelerationState\");\nexports.ParticleAccelerationState = ParticleAccelerationState_1.default;\nvar ParticleBezierCurveState_1 = require(\"./animators/states/ParticleBezierCurveState\");\nexports.ParticleBezierCurveState = ParticleBezierCurveState_1.default;\nvar ParticleBillboardState_1 = require(\"./animators/states/ParticleBillboardState\");\nexports.ParticleBillboardState = ParticleBillboardState_1.default;\nvar ParticleColorState_1 = require(\"./animators/states/ParticleColorState\");\nexports.ParticleColorState = ParticleColorState_1.default;\nvar ParticleFollowState_1 = require(\"./animators/states/ParticleFollowState\");\nexports.ParticleFollowState = ParticleFollowState_1.default;\nvar ParticleInitialColorState_1 = require(\"./animators/states/ParticleInitialColorState\");\nexports.ParticleInitialColorState = ParticleInitialColorState_1.default;\nvar ParticleStateBase_1 = require(\"./animators/states/ParticleStateBase\");\nexports.ParticleStateBase = ParticleStateBase_1.default;\nvar ParticleOrbitState_1 = require(\"./animators/states/ParticleOrbitState\");\nexports.ParticleOrbitState = ParticleOrbitState_1.default;\nvar ParticleOscillatorState_1 = require(\"./animators/states/ParticleOscillatorState\");\nexports.ParticleOscillatorState = ParticleOscillatorState_1.default;\nvar ParticlePositionState_1 = require(\"./animators/states/ParticlePositionState\");\nexports.ParticlePositionState = ParticlePositionState_1.default;\nvar ParticleRotateToHeadingState_1 = require(\"./animators/states/ParticleRotateToHeadingState\");\nexports.ParticleRotateToHeadingState = ParticleRotateToHeadingState_1.default;\nvar ParticleRotateToPositionState_1 = require(\"./animators/states/ParticleRotateToPositionState\");\nexports.ParticleRotateToPositionState = ParticleRotateToPositionState_1.default;\nvar ParticleRotationalVelocityState_1 = require(\"./animators/states/ParticleRotationalVelocityState\");\nexports.ParticleRotationalVelocityState = ParticleRotationalVelocityState_1.default;\nvar ParticleScaleState_1 = require(\"./animators/states/ParticleScaleState\");\nexports.ParticleScaleState = ParticleScaleState_1.default;\nvar ParticleSegmentedColorState_1 = require(\"./animators/states/ParticleSegmentedColorState\");\nexports.ParticleSegmentedColorState = ParticleSegmentedColorState_1.default;\nvar ParticleSpriteSheetState_1 = require(\"./animators/states/ParticleSpriteSheetState\");\nexports.ParticleSpriteSheetState = ParticleSpriteSheetState_1.default;\nvar ParticleTimeState_1 = require(\"./animators/states/ParticleTimeState\");\nexports.ParticleTimeState = ParticleTimeState_1.default;\nvar ParticleUVState_1 = require(\"./animators/states/ParticleUVState\");\nexports.ParticleUVState = ParticleUVState_1.default;\nvar ParticleVelocityState_1 = require(\"./animators/states/ParticleVelocityState\");\nexports.ParticleVelocityState = ParticleVelocityState_1.default;\nvar SkeletonBinaryLERPState_1 = require(\"./animators/states/SkeletonBinaryLERPState\");\nexports.SkeletonBinaryLERPState = SkeletonBinaryLERPState_1.default;\nvar SkeletonClipState_1 = require(\"./animators/states/SkeletonClipState\");\nexports.SkeletonClipState = SkeletonClipState_1.default;\nvar SkeletonDifferenceState_1 = require(\"./animators/states/SkeletonDifferenceState\");\nexports.SkeletonDifferenceState = SkeletonDifferenceState_1.default;\nvar SkeletonDirectionalState_1 = require(\"./animators/states/SkeletonDirectionalState\");\nexports.SkeletonDirectionalState = SkeletonDirectionalState_1.default;\nvar SkeletonNaryLERPState_1 = require(\"./animators/states/SkeletonNaryLERPState\");\nexports.SkeletonNaryLERPState = SkeletonNaryLERPState_1.default;\nvar VertexClipState_1 = require(\"./animators/states/VertexClipState\");\nexports.VertexClipState = VertexClipState_1.default;\nvar CrossfadeTransition_1 = require(\"./animators/transitions/CrossfadeTransition\");\nexports.CrossfadeTransition = CrossfadeTransition_1.default;\nvar CrossfadeTransitionNode_1 = require(\"./animators/transitions/CrossfadeTransitionNode\");\nexports.CrossfadeTransitionNode = CrossfadeTransitionNode_1.default;\nvar CrossfadeTransitionState_1 = require(\"./animators/transitions/CrossfadeTransitionState\");\nexports.CrossfadeTransitionState = CrossfadeTransitionState_1.default;\nvar AnimationSetBase_1 = require(\"./animators/AnimationSetBase\");\nexports.AnimationSetBase = AnimationSetBase_1.default;\nvar AnimatorBase_1 = require(\"./animators/AnimatorBase\");\nexports.AnimatorBase = AnimatorBase_1.default;\nvar ParticleAnimationSet_1 = require(\"./animators/ParticleAnimationSet\");\nexports.ParticleAnimationSet = ParticleAnimationSet_1.default;\nvar ParticleAnimator_1 = require(\"./animators/ParticleAnimator\");\nexports.ParticleAnimator = ParticleAnimator_1.default;\nvar SkeletonAnimationSet_1 = require(\"./animators/SkeletonAnimationSet\");\nexports.SkeletonAnimationSet = SkeletonAnimationSet_1.default;\nvar SkeletonAnimator_1 = require(\"./animators/SkeletonAnimator\");\nexports.SkeletonAnimator = SkeletonAnimator_1.default;\nvar VertexAnimationSet_1 = require(\"./animators/VertexAnimationSet\");\nexports.VertexAnimationSet = VertexAnimationSet_1.default;\nvar VertexAnimator_1 = require(\"./animators/VertexAnimator\");\nexports.VertexAnimator = VertexAnimator_1.default;\n\n},{\"./animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"./animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"./animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"./animators/ParticleAnimator\":\"awayjs-renderergl/lib/animators/ParticleAnimator\",\"./animators/SkeletonAnimationSet\":\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\",\"./animators/SkeletonAnimator\":\"awayjs-renderergl/lib/animators/SkeletonAnimator\",\"./animators/VertexAnimationSet\":\"awayjs-renderergl/lib/animators/VertexAnimationSet\",\"./animators/VertexAnimator\":\"awayjs-renderergl/lib/animators/VertexAnimator\",\"./animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"./animators/data/AnimationRegisterData\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\",\"./animators/data/ColorSegmentPoint\":\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\",\"./animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"./animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"./animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"./animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"./animators/data/Skeleton\":\"awayjs-renderergl/lib/animators/data/Skeleton\",\"./animators/data/SkeletonJoint\":\"awayjs-renderergl/lib/animators/data/SkeletonJoint\",\"./animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"./animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"./animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"./animators/nodes/ParticleAccelerationNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\",\"./animators/nodes/ParticleBezierCurveNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\",\"./animators/nodes/ParticleBillboardNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\",\"./animators/nodes/ParticleColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\",\"./animators/nodes/ParticleFollowNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\",\"./animators/nodes/ParticleInitialColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\",\"./animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"./animators/nodes/ParticleOrbitNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\",\"./animators/nodes/ParticleOscillatorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\",\"./animators/nodes/ParticlePositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\",\"./animators/nodes/ParticleRotateToHeadingNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\",\"./animators/nodes/ParticleRotateToPositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\",\"./animators/nodes/ParticleRotationalVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\",\"./animators/nodes/ParticleScaleNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\",\"./animators/nodes/ParticleSegmentedColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\",\"./animators/nodes/ParticleSpriteSheetNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\",\"./animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\",\"./animators/nodes/ParticleUVNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\",\"./animators/nodes/ParticleVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\",\"./animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"./animators/nodes/SkeletonClipNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\",\"./animators/nodes/SkeletonDifferenceNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\",\"./animators/nodes/SkeletonDirectionalNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\",\"./animators/nodes/SkeletonNaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\",\"./animators/nodes/VertexClipNode\":\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\",\"./animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"./animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"./animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"./animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"./animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\",\"./animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"./animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\",\"./animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"./animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"./animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"./animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"./animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"./animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"./animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"./animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\",\"./animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"./animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"./animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"./animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\",\"./animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"./animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"./animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"./animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\",\"./animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"./animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"./animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"./animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"./animators/transitions/CrossfadeTransition\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\",\"./animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\",\"./animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/elements/ElementsPool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar ElementsPool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function ElementsPool(shader, elementsClass) {\n        this._abstractionPool = new Object();\n        this._shader = shader;\n        this._elementsClass = elementsClass;\n    }\n    /**\n     * //TODO\n     *\n     * @param renderable\n     * @returns IRenderable\n     */\n    ElementsPool.prototype.getAbstraction = function (elements) {\n        return (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param renderable\n     */\n    ElementsPool.prototype.clearAbstraction = function (elements) {\n        delete this._abstractionPool[elements.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ElementsPool.registerAbstraction = function (elementsClass, assetClass) {\n        ElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n    };\n    ElementsPool._abstractionClassPool = new Object();\n    return ElementsPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsPool;\n\n},{}],\"awayjs-renderergl/lib/elements/GL_ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nvar GL_ElementsBase = (function (_super) {\n    __extends(GL_ElementsBase, _super);\n    function GL_ElementsBase(elements, shader, pool) {\n        var _this = this;\n        _super.call(this, elements, pool);\n        this.usages = 0;\n        this._vertices = new Object();\n        this._verticesUpdated = new Object();\n        this._indexMappings = Array();\n        this._numIndices = 0;\n        this._elements = elements;\n        this._shader = shader;\n        this._stage = shader._stage;\n        this._onInvalidateIndicesDelegate = function (event) { return _this._onInvalidateIndices(event); };\n        this._onClearIndicesDelegate = function (event) { return _this._onClearIndices(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n        this._onClearVerticesDelegate = function (event) { return _this._onClearVertices(event); };\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n    }\n    Object.defineProperty(GL_ElementsBase.prototype, \"elements\", {\n        get: function () {\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numVertices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexMappings = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indexMappings;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexBufferGL = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indices;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getVertexBufferGL = function (attributesView) {\n        //first check if indices need updating which may affect vertices\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        var bufferId = attributesView.buffer.id;\n        if (!this._verticesUpdated[bufferId])\n            this._updateVertices(attributesView);\n        return this._vertices[bufferId];\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.activateVertexBufferVO = function (index, attributesView, dimensions, offset) {\n        if (dimensions === void 0) { dimensions = 0; }\n        if (offset === void 0) { offset = 0; }\n        this.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this._elements = null;\n        if (this._overflow) {\n            this._overflow.onClear(event);\n            this._overflow = null;\n        }\n    };\n    GL_ElementsBase.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        if (!this._verticesUpdated)\n            this._updateIndices();\n        //TODO replace overflow system with something sensible\n        //this._render(renderable, camera, viewProjection);\n        //\n        // if (this._overflow)\n        // \tthis._overflow._iRender(renderable, camera, viewProjection);\n    };\n    GL_ElementsBase.prototype.draw = function (renderable, camera, viewProjection, count, offset) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_ElementsBase.prototype._updateIndices = function (indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var indices = this._elements.indices;\n        if (indices) {\n            this._indices = this._stage.getAbstraction(ElementsUtils_1.default.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n            this._numIndices = this._indices._attributesBuffer.count * indices.dimensions;\n        }\n        else {\n            this._indices = null;\n            this._numIndices = 0;\n            this._indexMappings = Array();\n        }\n        indexOffset += this._numIndices;\n        //check if there is more to split\n        if (indices && indexOffset < indices.count * this._elements.indices.dimensions) {\n            if (!this._overflow)\n                this._overflow = this._pGetOverflowElements();\n            this._overflow._updateIndices(indexOffset);\n        }\n        else if (this._overflow) {\n            this._overflow.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._elements));\n            this._overflow = null;\n        }\n        this._indicesUpdated = true;\n        //invalidate vertices if index mappings exist\n        if (this._indexMappings.length)\n            for (var key in this._verticesUpdated)\n                this._verticesUpdated[key] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param attributesView\n     * @private\n     */\n    GL_ElementsBase.prototype._updateVertices = function (attributesView) {\n        this._numVertices = this._elements.numVertices;\n        var bufferId = attributesView.buffer.id;\n        this._vertices[bufferId] = this._stage.getAbstraction(ElementsUtils_1.default.getSubVertices(attributesView.buffer, this._indexMappings));\n        this._verticesUpdated[bufferId] = true;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indicesUpdated = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indices.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n        this._indices = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        this._verticesUpdated[bufferId] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        if (this._vertices[bufferId]) {\n            this._vertices[bufferId].onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n            delete this._vertices[bufferId];\n            delete this._verticesUpdated[bufferId];\n        }\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_ElementsBase.prototype._pGetOverflowElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return GL_ElementsBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_ElementsBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/ElementsEvent\":undefined,\"awayjs-display/lib/utils/ElementsUtils\":undefined}],\"awayjs-renderergl/lib/elements/GL_LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"../elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_LineElements\n */\nvar GL_LineElements = (function (_super) {\n    __extends(GL_LineElements, _super);\n    function GL_LineElements(lineElements, shader, pool) {\n        _super.call(this, lineElements, shader, pool);\n        this._calcMatrix = new Matrix3D_1.default();\n        this._thickness = 1.25;\n        this._lineElements = lineElements;\n    }\n    GL_LineElements._iIncludeDependencies = function (shader) {\n        shader.colorDependencies++;\n    };\n    GL_LineElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        //get the projection coordinates\n        var position0 = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        var position1 = registerCache.getFreeVertexAttribute();\n        var thickness = registerCache.getFreeVertexAttribute();\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        registerCache.getFreeVertexConstant(); // not used\n        var constOne = registerCache.getFreeVertexConstant();\n        var constNegOne = registerCache.getFreeVertexConstant();\n        var misc = registerCache.getFreeVertexConstant();\n        var sceneMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.sceneMatrixIndex = sceneMatrixReg.index * 4;\n        var q0 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(q0, 1);\n        var q1 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(q1, 1);\n        var l = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(l, 1);\n        var behind = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(behind, 1);\n        var qclipped = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(qclipped, 1);\n        var offset = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(offset, 1);\n        return \"m44 \" + q0 + \", \" + position0 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" +\n            \"m44 \" + q1 + \", \" + position1 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" +\n            \"sub \" + l + \", \" + q1 + \", \" + q0 + \" \t\t\t\\n\" +\n            // test if behind camera near plane\n            // if 0 - Q0.z < Camera.near then the point needs to be clipped\n            \"slt \" + behind + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" +\n            \"sub \" + behind + \".y, \" + constOne + \".x, \" + behind + \".x\t\t\t\\n\" +\n            // p = point on the plane (0,0,-near)\n            // n = plane normal (0,0,-1)\n            // D = Q1 - Q0\n            // t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n            // solve for t where line crosses Camera.near\n            \"add \" + offset + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" +\n            \"sub \" + offset + \".y, \" + q0 + \".z, \" + q1 + \".z\t\t\t\\n\" +\n            // fix divide by zero for horizontal lines\n            \"seq \" + offset + \".z, \" + offset + \".y \" + constNegOne + \".x\t\t\t\\n\" +\n            \"add \" + offset + \".y, \" + offset + \".y, \" + offset + \".z\t\t\t\\n\" +\n            \"div \" + offset + \".z, \" + offset + \".x, \" + offset + \".y\t\t\t\\n\" +\n            \"mul \" + offset + \".xyz, \" + offset + \".zzz, \" + l + \".xyz\t\\n\" +\n            \"add \" + qclipped + \".xyz, \" + q0 + \".xyz, \" + offset + \".xyz\t\\n\" +\n            \"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" +\n            // If necessary, replace Q0 with new Qclipped\n            \"mul \" + q0 + \", \" + q0 + \", \" + behind + \".yyyy\t\t\t\\n\" +\n            \"mul \" + qclipped + \", \" + qclipped + \", \" + behind + \".xxxx\t\t\t\\n\" +\n            \"add \" + q0 + \", \" + q0 + \", \" + qclipped + \"\t\t\t\t\\n\" +\n            // calculate side vector for line\n            \"nrm \" + l + \".xyz, \" + l + \".xyz\t\t\t\\n\" +\n            \"nrm \" + behind + \".xyz, \" + q0 + \".xyz\t\t\t\\n\" +\n            \"mov \" + behind + \".w, \" + constOne + \".x\t\t\t\t\\n\" +\n            \"crs \" + qclipped + \".xyz, \" + l + \", \" + behind + \"\t\t\t\\n\" +\n            \"nrm \" + qclipped + \".xyz, \" + qclipped + \".xyz\t\t\t\\n\" +\n            // face the side vector properly for the given point\n            \"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + thickness + \".xxx\t\\n\" +\n            \"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" +\n            // calculate the amount required to move at the point's distance to correspond to the line's pixel width\n            // scale the side vector by that amount\n            \"dp3 \" + offset + \".x, \" + q0 + \", \" + constNegOne + \"\t\t\t\\n\" +\n            \"mul \" + offset + \".x, \" + offset + \".x, \" + misc + \".x\t\t\t\\n\" +\n            \"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + offset + \".xxx\t\\n\" +\n            // add scaled side vector to Q0 and transform to clip space\n            \"add \" + q0 + \".xyz, \" + q0 + \".xyz, \" + qclipped + \".xyz\t\\n\" +\n            \"m44 op, \" + q0 + \", \" + viewMatrixReg + \"\t\t\t\\n\"; // transform Q0 to clip space\n    };\n    GL_LineElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_LineElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineElements = null;\n    };\n    GL_LineElements.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        if (this._shader.colorBufferIndex >= 0)\n            this.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n        this.activateVertexBufferVO(0, this._lineElements.positions, 3);\n        this.activateVertexBufferVO(2, this._lineElements.positions, 3, 12);\n        this.activateVertexBufferVO(3, this._lineElements.thickness);\n        this._shader.vertexConstantData[4 + 16] = 1;\n        this._shader.vertexConstantData[5 + 16] = 1;\n        this._shader.vertexConstantData[6 + 16] = 1;\n        this._shader.vertexConstantData[7 + 16] = 1;\n        this._shader.vertexConstantData[10 + 16] = -1;\n        this._shader.vertexConstantData[12 + 16] = this._thickness / ((this._stage.scissorRect) ? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n        this._shader.vertexConstantData[13 + 16] = 1 / 255;\n        this._shader.vertexConstantData[14 + 16] = camera.projection.near;\n        var context = this._stage.context;\n    };\n    GL_LineElements.prototype.draw = function (renderable, camera, viewProjection, count, offset) {\n        var context = this._stage.context;\n        // projection matrix\n        camera.projection.matrix.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        this._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n        this._calcMatrix.append(camera.inverseSceneTransform);\n        this._calcMatrix.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, this._shader.vertexConstantData);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @protected\n     */\n    GL_LineElements.prototype._pGetOverflowElements = function () {\n        return new GL_LineElements(this._lineElements, this._shader, this._pool);\n    };\n    return GL_LineElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineElements;\n\n},{\"../elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/GL_SkyboxElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TriangleElements_1 = require(\"../elements/GL_TriangleElements\");\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nvar GL_SkyboxElements = (function (_super) {\n    __extends(GL_SkyboxElements, _super);\n    function GL_SkyboxElements() {\n        _super.apply(this, arguments);\n    }\n    GL_SkyboxElements._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"mul vt0, va0, vc5\\n\" +\n            \"add vt0, vt0, vc4\\n\" +\n            \"m44 op, vt0, vc0\\n\";\n    };\n    GL_SkyboxElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return GL_SkyboxElements;\n}(GL_TriangleElements_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxElements;\n\n},{\"../elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/elements/GL_TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"../elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nvar GL_TriangleElements = (function (_super) {\n    __extends(GL_TriangleElements, _super);\n    function GL_TriangleElements(triangleElements, shader, pool) {\n        _super.call(this, triangleElements, shader, pool);\n        this._triangleElements = triangleElements;\n    }\n    GL_TriangleElements._iIncludeDependencies = function (shader) {\n    };\n    GL_TriangleElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        //get the projection coordinates\n        var position = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        if (shader.projectionDependencies > 0) {\n            sharedRegisters.projectionFragment = registerCache.getFreeVarying();\n            var temp = registerCache.getFreeVertexVectorTemp();\n            code += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n                \"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n                \"mov op, \" + temp + \"\\n\";\n        }\n        else {\n            code += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n        }\n        return code;\n    };\n    GL_TriangleElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_TriangleElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._triangleElements = null;\n    };\n    GL_TriangleElements.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        //set buffers\n        //TODO: find a better way to update a concatenated buffer when autoderiving\n        if (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n            this._triangleElements.normals;\n        if (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n            this._triangleElements.tangents;\n        if (this._shader.curvesIndex >= 0)\n            this.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n        if (this._shader.uvIndex >= 0)\n            this.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n        if (this._shader.secondaryUVIndex >= 0)\n            this.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n        if (this._shader.normalIndex >= 0)\n            this.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n        if (this._shader.tangentIndex >= 0)\n            this.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n        if (this._shader.jointIndexIndex >= 0)\n            this.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n        if (this._shader.jointWeightIndex >= 0)\n            this.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n        this.activateVertexBufferVO(0, this._triangleElements.positions);\n    };\n    GL_TriangleElements.prototype.draw = function (renderable, camera, viewProjection, count, offset) {\n        //set constants\n        if (this._shader.sceneMatrixIndex >= 0) {\n            renderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n            viewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        }\n        else {\n            var matrix3D = Matrix3DUtils_1.default.CALCULATION_MATRIX;\n            matrix3D.copyFrom(renderable.renderSceneTransform);\n            matrix3D.append(viewProjection);\n            matrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        }\n        var context = this._stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, this._shader.vertexConstantData);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._shader.fragmentConstantData);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_TriangleElements.prototype._pGetOverflowElements = function () {\n        return new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n    };\n    return GL_TriangleElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TriangleElements;\n\n},{\"../elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/IElementsClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/elements\":[function(require,module,exports){\n\"use strict\";\nvar ElementsPool_1 = require(\"./elements/ElementsPool\");\nexports.ElementsPool = ElementsPool_1.default;\nvar GL_ElementsBase_1 = require(\"./elements/GL_ElementsBase\");\nexports.GL_ElementsBase = GL_ElementsBase_1.default;\nvar GL_LineElements_1 = require(\"./elements/GL_LineElements\");\nexports.GL_LineElements = GL_LineElements_1.default;\nvar GL_SkyboxElements_1 = require(\"./elements/GL_SkyboxElements\");\nexports.GL_SkyboxElements = GL_SkyboxElements_1.default;\nvar GL_TriangleElements_1 = require(\"./elements/GL_TriangleElements\");\nexports.GL_TriangleElements = GL_TriangleElements_1.default;\n\n},{\"./elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"./elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"./elements/GL_LineElements\":\"awayjs-renderergl/lib/elements/GL_LineElements\",\"./elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"./elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/errors/AnimationSetError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar AnimationSetError = (function (_super) {\n    __extends(AnimationSetError, _super);\n    function AnimationSetError(message) {\n        _super.call(this, message);\n    }\n    return AnimationSetError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-renderergl/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar AnimationSetError_1 = require(\"./errors/AnimationSetError\");\nexports.AnimationSetError = AnimationSetError_1.default;\n\n},{\"./errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\"}],\"awayjs-renderergl/lib/events/AnimationStateEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nvar AnimationStateEvent = (function (_super) {\n    __extends(AnimationStateEvent, _super);\n    /**\n     * Create a new <code>AnimatonStateEvent</code>\n     *\n     * @param type The event type.\n     * @param animator The animation state object that is the subject of this event.\n     * @param animationNode The animation node inside the animation state from which the event originated.\n     */\n    function AnimationStateEvent(type, animator, animationState, animationNode) {\n        _super.call(this, type);\n        this._animator = animator;\n        this._animationState = animationState;\n        this._animationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateEvent.prototype, \"animator\", {\n        /**\n         * The animator object that is the subject of this event.\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationState\", {\n        /**\n         * The animation state object that is the subject of this event.\n         */\n        get: function () {\n            return this._animationState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationNode\", {\n        /**\n         * The animation node inside the animation state from which the event originated.\n         */\n        get: function () {\n            return this._animationNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    AnimationStateEvent.prototype.clone = function () {\n        return new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n    };\n    /**\n     * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n     */\n    AnimationStateEvent.PLAYBACK_COMPLETE = \"playbackComplete\";\n    AnimationStateEvent.TRANSITION_COMPLETE = \"transitionComplete\";\n    return AnimationStateEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/AnimatorEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animator's state.\n */\nvar AnimatorEvent = (function (_super) {\n    __extends(AnimatorEvent, _super);\n    /**\n     * Create a new <code>AnimatorEvent</code> object.\n     *\n     * @param type The event type.\n     * @param animator The animator object that is the subject of this event.\n     */\n    function AnimatorEvent(type, animator) {\n        _super.call(this, type);\n        this._animator = animator;\n    }\n    Object.defineProperty(AnimatorEvent.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current event object.\n     */\n    AnimatorEvent.prototype.clone = function () {\n        return new AnimatorEvent(this.type, this._animator);\n    };\n    /**\n     * Defines the value of the type property of a start event object.\n     */\n    AnimatorEvent.START = \"animatorStart\";\n    /**\n     * Defines the value of the type property of a stop event object.\n     */\n    AnimatorEvent.STOP = \"animatorStop\";\n    /**\n     * Defines the value of the type property of a cycle complete event object.\n     */\n    AnimatorEvent.CYCLE_COMPLETE = \"animatorCycleComplete\";\n    return AnimatorEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/PassEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar PassEvent = (function (_super) {\n    __extends(PassEvent, _super);\n    function PassEvent(type, pass) {\n        _super.call(this, type);\n        this._pass = pass;\n    }\n    Object.defineProperty(PassEvent.prototype, \"pass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    PassEvent.prototype.clone = function () {\n        return new PassEvent(this.type, this._pass);\n    };\n    /**\n     *\n     */\n    PassEvent.INVALIDATE = \"invalidatePass\";\n    return PassEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/RTTEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RTTEvent = (function (_super) {\n    __extends(RTTEvent, _super);\n    function RTTEvent(type, rttManager) {\n        _super.call(this, type);\n        this._rttManager = rttManager;\n    }\n    Object.defineProperty(RTTEvent.prototype, \"rttManager\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._rttManager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    RTTEvent.prototype.clone = function () {\n        return new RTTEvent(this.type, this._rttManager);\n    };\n    /**\n     *\n     */\n    RTTEvent.RESIZE = \"rttManagerResize\";\n    return RTTEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/ShadingMethodEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ShadingMethodEvent = (function (_super) {\n    __extends(ShadingMethodEvent, _super);\n    function ShadingMethodEvent(type) {\n        _super.call(this, type);\n    }\n    ShadingMethodEvent.SHADER_INVALIDATED = \"ShaderInvalidated\";\n    return ShadingMethodEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShadingMethodEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar AnimationStateEvent_1 = require(\"./events/AnimationStateEvent\");\nexports.AnimationStateEvent = AnimationStateEvent_1.default;\nvar AnimatorEvent_1 = require(\"./events/AnimatorEvent\");\nexports.AnimatorEvent = AnimatorEvent_1.default;\nvar PassEvent_1 = require(\"./events/PassEvent\");\nexports.PassEvent = PassEvent_1.default;\nvar RTTEvent_1 = require(\"./events/RTTEvent\");\nexports.RTTEvent = RTTEvent_1.default;\nvar ShadingMethodEvent_1 = require(\"./events/ShadingMethodEvent\");\nexports.ShadingMethodEvent = ShadingMethodEvent_1.default;\n\n},{\"./events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"./events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"./events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"./events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"./events/ShadingMethodEvent\":\"awayjs-renderergl/lib/events/ShadingMethodEvent\"}],\"awayjs-renderergl/lib/filters/BlurFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DHBlurTask_1 = require(\"../filters/tasks/Filter3DHBlurTask\");\nvar Filter3DVBlurTask_1 = require(\"../filters/tasks/Filter3DVBlurTask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar BlurFilter3D = (function (_super) {\n    __extends(BlurFilter3D, _super);\n    /**\n     * Creates a new BlurFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function BlurFilter3D(blurX, blurY, stepSize) {\n        if (blurX === void 0) { blurX = 3; }\n        if (blurY === void 0) { blurY = 3; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._hBlurTask = new Filter3DHBlurTask_1.default(blurX, stepSize);\n        this._vBlurTask = new Filter3DVBlurTask_1.default(blurY, stepSize);\n        this.addTask(this._hBlurTask);\n        this.addTask(this._vBlurTask);\n    }\n    Object.defineProperty(BlurFilter3D.prototype, \"blurX\", {\n        get: function () {\n            return this._hBlurTask.amount;\n        },\n        set: function (value) {\n            this._hBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"blurY\", {\n        get: function () {\n            return this._vBlurTask.amount;\n        },\n        set: function (value) {\n            this._vBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"stepSize\", {\n        /**\n         * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n         * Higher values provide better performance at the cost of reduces quality.\n         */\n        get: function () {\n            return this._hBlurTask.stepSize;\n        },\n        set: function (value) {\n            this._hBlurTask.stepSize = value;\n            this._vBlurTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BlurFilter3D.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n        _super.prototype.setRenderTargets.call(this, mainTarget, stage);\n    };\n    return BlurFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BlurFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"../filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/filters/CompositeFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DCompositeTask_1 = require(\"../filters/tasks/Filter3DCompositeTask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar CompositeFilter3D = (function (_super) {\n    __extends(CompositeFilter3D, _super);\n    /**\n     * Creates a new CompositeFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function CompositeFilter3D(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._compositeTask = new Filter3DCompositeTask_1.default(blendMode, exposure);\n        this.addTask(this._compositeTask);\n    }\n    Object.defineProperty(CompositeFilter3D.prototype, \"exposure\", {\n        get: function () {\n            return this._compositeTask.exposure;\n        },\n        set: function (value) {\n            this._compositeTask.exposure = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompositeFilter3D.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._compositeTask.overlayTexture;\n        },\n        set: function (value) {\n            this._compositeTask.overlayTexture = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompositeFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompositeFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\"}],\"awayjs-renderergl/lib/filters/FXAAFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DFXAATask_1 = require(\"../filters/tasks/Filter3DFXAATask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar FXAAFilter3D = (function (_super) {\n    __extends(FXAAFilter3D, _super);\n    /**\n     * Creates a new FXAAFilter3D object\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function FXAAFilter3D(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._fxaaTask = new Filter3DFXAATask_1.default(amount, stepSize);\n        this.addTask(this._fxaaTask);\n    }\n    Object.defineProperty(FXAAFilter3D.prototype, \"amount\", {\n        get: function () {\n            return this._fxaaTask.amount;\n        },\n        set: function (value) {\n            this._fxaaTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FXAAFilter3D.prototype, \"stepSize\", {\n        get: function () {\n            return this._fxaaTask.stepSize;\n        },\n        set: function (value) {\n            this._fxaaTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FXAAFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FXAAFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\"}],\"awayjs-renderergl/lib/filters/Filter3DBase\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DBase = (function () {\n    function Filter3DBase() {\n        this._tasks = new Array();\n    }\n    Object.defineProperty(Filter3DBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.addTask = function (filter) {\n        this._tasks.push(filter);\n        if (this._requireDepthRender == null)\n            this._requireDepthRender = filter.requireDepthRender;\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"tasks\", {\n        get: function () {\n            return this._tasks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.getMainInputTexture = function (stage) {\n        return this._tasks[0].getMainInputTexture(stage);\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            this._textureWidth = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            this._rttManager = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].rttManager = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            this._textureHeight = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // link up the filters correctly with the next filter\n    Filter3DBase.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._tasks[this._tasks.length - 1].target = mainTarget;\n    };\n    Filter3DBase.prototype.dispose = function () {\n        for (var i = 0; i < this._tasks.length; ++i)\n            this._tasks[i].dispose();\n    };\n    Filter3DBase.prototype.update = function (stage, camera) {\n    };\n    return Filter3DBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DBase;\n\n},{}],\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DCompositeTask = (function (_super) {\n    __extends(Filter3DCompositeTask, _super);\n    function Filter3DCompositeTask(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0]);\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._overlayTexture;\n        },\n        set: function (value) {\n            this._overlayTexture = value;\n            this._overlayWidth = this._overlayTexture.width;\n            this._overlayHeight = this._overlayTexture.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"exposure\", {\n        get: function () {\n            return this._data[0];\n        },\n        set: function (value) {\n            this._data[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DCompositeTask.prototype.getFragmentCode = function () {\n        var temp1 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp2, 1);\n        var temp3 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp3, 1);\n        var temp4 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp4, 1);\n        var inputTexture = this._registerCache.getFreeTextureReg();\n        this._inputTextureIndex = inputTexture.index;\n        var overlayTexture = this._registerCache.getFreeTextureReg();\n        this._overlayTextureIndex = overlayTexture.index;\n        var exposure = this._registerCache.getFreeFragmentConstant();\n        this._exposureIndex = exposure.index * 4;\n        var scaling = this._registerCache.getFreeFragmentConstant();\n        this._scalingIndex = scaling.index * 4;\n        var code;\n        code = \"tex \" + temp1 + \", \" + this._uvVarying + \", \" + inputTexture + \" <2d,linear,clamp>\\n\" +\n            \"mul \" + temp2 + \", \" + this._uvVarying + \", \" + scaling + \".zw\\n\" +\n            \"add \" + temp2 + \", \" + temp2 + \", \" + scaling + \".xy\\n\" +\n            \"tex \" + temp2 + \", \" + temp2 + \", \" + overlayTexture + \" <2d,linear,clamp>\\n\" +\n            \"mul \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\" +\n            \"add \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\";\n        switch (this._blendMode) {\n            case \"multiply\":\n                code += \"mul oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n                break;\n            case \"add\":\n                code += \"add oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n                break;\n            case \"subtract\":\n                code += \"sub oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n                break;\n            case \"overlay\":\n                code += \"sge \" + temp3 + \", \" + temp1 + \", \" + exposure + \".yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n                code += \"sub \" + temp1 + \", \" + temp3 + \", \" + temp1 + \"\\n\"; // base = (1 : 0 - base)\n                code += \"sub \" + temp2 + \", \" + temp2 + \", \" + temp3 + \"\\n\"; // blend = (blend - 1 : 0)\n                code += \"mul \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\"; // blend = blend * base\n                code += \"sub \" + temp4 + \", \" + temp3 + \", \" + exposure + \".yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n                code += \"div \" + temp2 + \", \" + temp2 + \", \" + temp4 + \"\\n\"; // blend = blend / ( 0.5 : -0.5)\n                code += \"add oc, \" + temp2 + \", \" + temp3 + \"\\n\";\n                break;\n            case \"normal\":\n                // for debugging purposes\n                code += \"mov oc, \" + temp1 + \"\\n\";\n                break;\n            default:\n                throw new Error(\"Unknown blend mode\");\n        }\n        return code;\n    };\n    Filter3DCompositeTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        this._data[4] = -0.5 * (this._scaledTextureWidth - this._overlayWidth) / this._overlayWidth;\n        this._data[5] = -0.5 * (this._scaledTextureHeight - this._overlayHeight) / this._overlayHeight;\n        this._data[6] = this._scaledTextureWidth / this._overlayWidth;\n        this._data[7] = this._scaledTextureHeight / this._overlayHeight;\n        var context = stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n        stage.getAbstraction(this._overlayTexture).activate(this._overlayTextureIndex, false);\n    };\n    Filter3DCompositeTask.prototype.deactivate = function (stage) {\n        stage.context.setTextureAt(1, null);\n    };\n    return Filter3DCompositeTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DCompositeTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DFXAATask = (function (_super) {\n    __extends(Filter3DFXAATask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DFXAATask(amount, stepSize) {\n        if (amount === void 0) { amount = 1; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._data = new Float32Array(20);\n        //luma\n        this._data.set([0.299, 0.587, 0.114, 0], 0); //0.212, 0.716, 0.072\n        //helpers\n        this._data.set([0.25, 0.5, 0.75, 1], 4);\n        //settings (screen x, screen y, ...)\n        this._data.set([1 / 1024, 1 / 1024, -1, 1], 8);\n        //deltas\n        this._data.set([1 / 128, 1 / 8, 8, 0], 12);\n        //deltas\n        this._data.set([1.0 / 3.0 - 0.5, 2.0 / 3.0 - 0.5, 0.0 / 3.0 - 0.5, 3.0 / 3.0 - 0.5], 16);\n        this.amount = amount;\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DFXAATask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DFXAATask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DFXAATask.prototype.getFragmentCode = function () {\n        var lum = \"fc0\"; //\t0.299, 0.587, 0.114\n        var _0 = \"fc0.w\";\n        var _025 = \"fc1.x\";\n        var _05 = \"fc1.y\";\n        var _075 = \"fc1.z\";\n        var _1 = \"fc1.w\";\n        var pix = \"fc2.xy\";\n        var dx = \"fc2.x\"; // 1/1024\n        var dy = \"fc2.y\"; // 1/1024\n        var mOne = \"fc2.z\"; // -1.0\n        var mul = \"fc2.w\"; // 1.0  -- one for now\n        var fxaaReduceMin = \"fc3.x\"; //1/128\n        var fxaaReduceMul = \"fc3.y\"; //1/8\n        var fxaaSpanMax = \"fc3.z\"; //8\n        var delta1 = \"fc4.x\"; //1.0/3.0 - 0.5\n        var delta2 = \"fc4.y\"; //2.0/3.0 - 0.5\n        var delta3 = \"fc4.z\"; //0.0/3.0 - 0.5\n        var delta4 = \"fc4.w\"; //3.0/3.0 - 0.5\n        var uv_in = \"v0\";\n        var uv = \"ft0.xy\";\n        var uvx = \"ft0.x\";\n        var uvy = \"ft0.y\";\n        var TL = \"ft2.x\";\n        var TR = \"ft2.y\";\n        var BL = \"ft2.z\";\n        var BR = \"ft2.w\";\n        var M = \"ft3.x\";\n        var tempf1 = \"ft3.y\";\n        var tempf2 = \"ft3.z\";\n        var tempf3 = \"ft3.w\";\n        var tex = \"ft1\";\n        var dir = \"ft4\";\n        var dirx = \"ft4.x\";\n        var diry = \"ft4.y\";\n        var dirxy = \"ft4.xy\";\n        var dirReduce = \"ft5.x\";\n        var inverseDirAdjustment = \"ft5.y\";\n        var result1 = \"ft6\";\n        var result2 = \"ft7\";\n        var lumaMin = \"ft5.x\";\n        var lumaMax = \"ft5.y\";\n        var sample = \"fs0\";\n        var temp = tex;\n        var tempxy = temp + \".xy\";\n        var code = new Array();\n        //lumas\n        code.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", M, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TL, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uvy, uvy, dy, \"\\n\");\n        code.push(\"add\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uvy, uvy, dy, \"\\n\");\n        code.push(\"sub\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BL, tex, lum, \"\\n\");\n        //dir\n        code.push(\"add\", tempf1, TL, TR, \"\\n\");\n        code.push(\"add\", tempf2, BL, BR, \"\\n\");\n        code.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n        code.push(\"neg\", dirx, dirx, \"\\n\");\n        code.push(\"add\", tempf1, TL, BL, \"\\n\");\n        code.push(\"add\", tempf2, TR, BR, \"\\n\");\n        code.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n        code.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n        code.push(\"abs\", tempf1, dirx, \"\\n\");\n        code.push(\"abs\", tempf2, diry, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n        code.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n        code.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n        code.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", diry, tempf1, dy, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result1, result1, tex, \"\\n\");\n        code.push(\"mul\", result1, result1, _05, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"mul\", result2, result2, _025, \"\\n\");\n        code.push(\"mul\", tex, result1, _05, \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"min\", tempf1, BL, BR, \"\\n\");\n        code.push(\"min\", tempf2, TL, TR, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n        code.push(\"max\", tempf1, BL, BR, \"\\n\");\n        code.push(\"max\", tempf2, TL, TR, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n        code.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n        code.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n        code.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n        code.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n        code.push(\"mul\", result1, result1, tempf2, \"\\n\");\n        code.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n        code.push(\"mul\", result2, result2, tempf2, \"\\n\");\n        code.push(\"add\", \"oc\", result1, result2, \"\\n\");\n        //this._data[2] = 1/numSamples;\n        return code.join(\" \");\n    };\n    Filter3DFXAATask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n    };\n    Filter3DFXAATask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DFXAATask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        if (this._rttManager) {\n            this._data[8] = 1 / this._textureWidth;\n            this._data[9] = 1 / this._textureHeight;\n        }\n    };\n    Filter3DFXAATask.prototype.calculateStepSize = function () {\n        this._realStepSize = 1; //this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    //TODO - remove blur variables and create setters/getters for FXAA\n    Filter3DFXAATask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DFXAATask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DFXAATask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DHBlurTask = (function (_super) {\n    __extends(Filter3DHBlurTask, _super);\n    /**\n     * Creates a new Filter3DHDepthOfFFieldTask\n     * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DHBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n            this.calculateStepSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DHBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.x, v0.x, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.x, ft0.x, fc0.y\\n\" +\n                \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DHBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n    };\n    Filter3DHBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DHBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invW = 1 / this._textureWidth;\n        this._data[0] = this._amount * .5 * invW;\n        this._data[1] = this._realStepSize * invW;\n    };\n    Filter3DHBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DHBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DHBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DHBlurTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar ShaderRegisterCache_1 = require(\"../../shaders/ShaderRegisterCache\");\nvar Filter3DTaskBase = (function () {\n    function Filter3DTaskBase(requireDepthRender) {\n        if (requireDepthRender === void 0) { requireDepthRender = false; }\n        this._scaledTextureWidth = -1;\n        this._scaledTextureHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._textureDimensionsInvalid = true;\n        this._program3DInvalid = true;\n        this._textureScale = 0;\n        this._requireDepthRender = requireDepthRender;\n        this._registerCache = new ShaderRegisterCache_1.default(\"baseline\");\n    }\n    ;\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureScale\", {\n        /**\n         * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n         */\n        get: function () {\n            return this._textureScale;\n        },\n        set: function (value) {\n            if (this._textureScale == value)\n                return;\n            this._textureScale = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"target\", {\n        get: function () {\n            return this._target;\n        },\n        set: function (value) {\n            this._target = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            if (this._rttManager == value)\n                return;\n            this._rttManager = value;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            if (this._textureWidth == value)\n                return;\n            this._textureWidth = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            if (this._textureHeight == value)\n                return;\n            this._textureHeight = value;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DTaskBase.prototype.getMainInputTexture = function (stage) {\n        if (this._textureDimensionsInvalid)\n            this.updateTextures(stage);\n        return this._mainInputTexture;\n    };\n    Filter3DTaskBase.prototype.dispose = function () {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        if (this._program3D)\n            this._program3D.dispose();\n    };\n    Filter3DTaskBase.prototype.invalidateProgram = function () {\n        this._program3DInvalid = true;\n    };\n    Filter3DTaskBase.prototype.updateProgram = function (stage) {\n        if (this._program3D)\n            this._program3D.dispose();\n        this._program3D = stage.context.createProgram();\n        this._registerCache.reset();\n        var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n        var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n        this._program3D.upload(vertexByteCode, fragmentByteCode);\n        this._program3DInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getVertexCode = function () {\n        var position = this._registerCache.getFreeVertexAttribute();\n        this._positionIndex = position.index;\n        var uv = this._registerCache.getFreeVertexAttribute();\n        this._uvIndex = uv.index;\n        this._uvVarying = this._registerCache.getFreeVarying();\n        var code;\n        code = \"mov op, \" + position + \"\\n\" +\n            \"mov \" + this._uvVarying + \", \" + uv + \"\\n\";\n        return code;\n    };\n    Filter3DTaskBase.prototype.getFragmentCode = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Filter3DTaskBase.prototype.updateTextures = function (stage) {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        this._mainInputTexture = new Image2D_1.default(this._scaledTextureWidth, this._scaledTextureHeight);\n        this._textureDimensionsInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getProgram = function (stage) {\n        if (this._program3DInvalid)\n            this.updateProgram(stage);\n        return this._program3D;\n    };\n    Filter3DTaskBase.prototype.activate = function (stage, camera, depthTexture) {\n    };\n    Filter3DTaskBase.prototype.deactivate = function (stage) {\n    };\n    Object.defineProperty(Filter3DTaskBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Filter3DTaskBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DTaskBase;\n\n},{\"../../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DVBlurTask = (function (_super) {\n    __extends(Filter3DVBlurTask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DVBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DVBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.y, v0.y, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.y, ft0.y, fc0.y\\n\";\n            code += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DVBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n    };\n    Filter3DVBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DVBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invH = 1 / this._textureHeight;\n        this._data[0] = this._amount * .5 * invH;\n        this._data[1] = this._realStepSize * invH;\n    };\n    Filter3DVBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DVBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DVBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DVBlurTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DCompositeTask_1 = require(\"./filters/tasks/Filter3DCompositeTask\");\nexports.Filter3DCompositeTask = Filter3DCompositeTask_1.default;\nvar Filter3DFXAATask_1 = require(\"./filters/tasks/Filter3DFXAATask\");\nexports.Filter3DFXAATask = Filter3DFXAATask_1.default;\nvar Filter3DHBlurTask_1 = require(\"./filters/tasks/Filter3DHBlurTask\");\nexports.Filter3DHBlurTask = Filter3DHBlurTask_1.default;\nvar Filter3DTaskBase_1 = require(\"./filters/tasks/Filter3DTaskBase\");\nexports.Filter3DTaskBase = Filter3DTaskBase_1.default;\nvar Filter3DVBlurTask_1 = require(\"./filters/tasks/Filter3DVBlurTask\");\nexports.Filter3DVBlurTask = Filter3DVBlurTask_1.default;\nvar BlurFilter3D_1 = require(\"./filters/BlurFilter3D\");\nexports.BlurFilter3D = BlurFilter3D_1.default;\nvar CompositeFilter3D_1 = require(\"./filters/CompositeFilter3D\");\nexports.CompositeFilter3D = CompositeFilter3D_1.default;\nvar Filter3DBase_1 = require(\"./filters/Filter3DBase\");\nexports.Filter3DBase = Filter3DBase_1.default;\nvar FXAAFilter3D_1 = require(\"./filters/FXAAFilter3D\");\nexports.FXAAFilter3D = FXAAFilter3D_1.default;\n\n},{\"./filters/BlurFilter3D\":\"awayjs-renderergl/lib/filters/BlurFilter3D\",\"./filters/CompositeFilter3D\":\"awayjs-renderergl/lib/filters/CompositeFilter3D\",\"./filters/FXAAFilter3D\":\"awayjs-renderergl/lib/filters/FXAAFilter3D\",\"./filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"./filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\",\"./filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\",\"./filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"./filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"./filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/managers/RTTBufferManager\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar RTTEvent_1 = require(\"../events/RTTEvent\");\nvar RTTBufferManager = (function (_super) {\n    __extends(RTTBufferManager, _super);\n    function RTTBufferManager(stage) {\n        _super.call(this);\n        this._viewWidth = -1;\n        this._viewHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._buffersInvalid = true;\n        this._renderToTextureRect = new Rectangle_1.default();\n        this._stage = stage;\n    }\n    RTTBufferManager.getInstance = function (stage) {\n        if (!stage)\n            throw new Error(\"stage key cannot be null!\");\n        if (RTTBufferManager._instances == null)\n            RTTBufferManager._instances = new Array();\n        var rttBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n        if (rttBufferManager == null) {\n            rttBufferManager = new RTTBufferManager(stage);\n            var vo = new RTTBufferManagerVO();\n            vo.stage3d = stage;\n            vo.rttbfm = rttBufferManager;\n            RTTBufferManager._instances.push(vo);\n        }\n        return rttBufferManager;\n    };\n    RTTBufferManager.getRTTBufferManagerFromStage = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage)\n                return r.rttbfm;\n        }\n        return null;\n    };\n    RTTBufferManager.deleteRTTBufferManager = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage) {\n                RTTBufferManager._instances.splice(c, 1);\n                return;\n            }\n        }\n    };\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioX\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioY\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewWidth\", {\n        get: function () {\n            return this._viewWidth;\n        },\n        set: function (value) {\n            if (value == this._viewWidth)\n                return;\n            this._viewWidth = value;\n            this._buffersInvalid = true;\n            this._textureWidth = ImageUtils_1.default.getBestPowerOf2(this._viewWidth);\n            if (this._textureWidth > this._viewWidth) {\n                this._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth) * .5);\n                this._renderToTextureRect.width = this._viewWidth;\n            }\n            else {\n                this._renderToTextureRect.x = 0;\n                this._renderToTextureRect.width = this._textureWidth;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewHeight\", {\n        get: function () {\n            return this._viewHeight;\n        },\n        set: function (value) {\n            if (value == this._viewHeight)\n                return;\n            this._viewHeight = value;\n            this._buffersInvalid = true;\n            this._textureHeight = ImageUtils_1.default.getBestPowerOf2(this._viewHeight);\n            if (this._textureHeight > this._viewHeight) {\n                this._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight) * .5);\n                this._renderToTextureRect.height = this._viewHeight;\n            }\n            else {\n                this._renderToTextureRect.y = 0;\n                this._renderToTextureRect.height = this._textureHeight;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToScreenVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToScreenVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"indexBuffer\", {\n        get: function () {\n            return this._indexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureRect\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RTTBufferManager.prototype.dispose = function () {\n        RTTBufferManager.deleteRTTBufferManager(this._stage);\n        if (this._indexBuffer) {\n            this._indexBuffer.dispose();\n            this._renderToScreenVertexBuffer.dispose();\n            this._renderToTextureVertexBuffer.dispose();\n            this._renderToScreenVertexBuffer = null;\n            this._renderToTextureVertexBuffer = null;\n            this._indexBuffer = null;\n        }\n    };\n    // todo: place all this in a separate model, since it's used all over the place\n    // maybe it even has a place in the core (together with screenRect etc)?\n    // needs to be stored per view of course\n    RTTBufferManager.prototype.updateRTTBuffers = function () {\n        var context = this._stage.context;\n        var textureVerts;\n        var screenVerts;\n        var x;\n        var y;\n        if (this._renderToTextureVertexBuffer == null)\n            this._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n        if (this._renderToScreenVertexBuffer == null)\n            this._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n        if (!this._indexBuffer) {\n            this._indexBuffer = context.createIndexBuffer(6);\n            this._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n        }\n        this._textureRatioX = x = Math.min(this._viewWidth / this._textureWidth, 1);\n        this._textureRatioY = y = Math.min(this._viewHeight / this._textureHeight, 1);\n        var u1 = (1 - x) * .5;\n        var u2 = (x + 1) * .5;\n        var v1 = (1 - y) * .5;\n        var v2 = (y + 1) * .5;\n        // last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n        textureVerts = [-x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3];\n        screenVerts = [-1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3];\n        this._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n        this._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n        this._buffersInvalid = false;\n    };\n    return RTTBufferManager;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTBufferManager;\nvar RTTBufferManagerVO = (function () {\n    function RTTBufferManagerVO() {\n    }\n    return RTTBufferManagerVO;\n}());\n\n},{\"../events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined}],\"awayjs-renderergl/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\nexports.RTTBufferManager = RTTBufferManager_1.default;\n\n},{\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\"}],\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.RenderableListItem\n */\nvar GL_Billboard = (function (_super) {\n    __extends(GL_Billboard, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param billboard\n     */\n    function GL_Billboard(billboard, renderer) {\n        _super.call(this, billboard, renderer);\n        this._billboard = billboard;\n    }\n    GL_Billboard.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._billboard = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     */\n    GL_Billboard.prototype._pGetElements = function () {\n        var texture = this._billboard.material.getTextureAt(0);\n        var id = -1;\n        if (texture)\n            id = ((this.renderable.style ? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager_1.default.getDefaultSampler()).id;\n        this._id = id;\n        var elements = GL_Billboard._samplerElements[id];\n        var width = this._billboard.billboardWidth;\n        var height = this._billboard.billboardHeight;\n        var billboardRect = this._billboard.billboardRect;\n        if (!elements) {\n            elements = GL_Billboard._samplerElements[id] = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(Array(0, 1, 2, 0, 2, 3));\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n            elements.setNormals(Array(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n            elements.setTangents(Array(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n            elements.setUVs(Array(0, 0, 1, 0, 1, 1, 0, 1));\n        }\n        else {\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n        }\n        return elements;\n    };\n    GL_Billboard.prototype._pGetSurface = function () {\n        return this._billboard.material;\n    };\n    GL_Billboard._samplerElements = new Object();\n    return GL_Billboard;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Billboard;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nvar GL_GraphicRenderable = (function (_super) {\n    __extends(GL_GraphicRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param indexOffset\n     */\n    function GL_GraphicRenderable(graphic, renderer) {\n        _super.call(this, graphic, renderer);\n        this.graphic = graphic;\n    }\n    GL_GraphicRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.graphic = null;\n    };\n    /**\n     *\n     * @returns {ElementsBase}\n     * @protected\n     */\n    GL_GraphicRenderable.prototype._pGetElements = function () {\n        this._offset = this.graphic.offset;\n        this._count = this.graphic.count;\n        return this.graphic.elements;\n    };\n    GL_GraphicRenderable.prototype._pGetSurface = function () {\n        return this.graphic.material;\n    };\n    return GL_GraphicRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_GraphicRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\"}],\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nvar GL_LineSegmentRenderable = (function (_super) {\n    __extends(GL_LineSegmentRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param dataOffset\n     */\n    function GL_LineSegmentRenderable(lineSegment, renderer) {\n        _super.call(this, lineSegment, renderer);\n        this._lineSegment = lineSegment;\n    }\n    GL_LineSegmentRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineSegment = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {base.LineElements}\n     * @protected\n     */\n    GL_LineSegmentRenderable.prototype._pGetElements = function () {\n        var geometry = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements_1.default());\n        var start = this._lineSegment.startPostion;\n        var end = this._lineSegment.endPosition;\n        var positions;\n        var thickness;\n        //if (geometry.indices != null) {\n        //\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n        //\tthickness = geometry.thickness.get(geometry.numVertices);\n        //} else {\n        positions = new Float32Array(6);\n        thickness = new Float32Array(1);\n        //}\n        positions[0] = start.x;\n        positions[1] = start.y;\n        positions[2] = start.z;\n        positions[3] = end.x;\n        positions[4] = end.y;\n        positions[5] = end.z;\n        thickness[0] = this._lineSegment.thickness;\n        geometry.setPositions(positions);\n        geometry.setThickness(thickness);\n        return geometry;\n    };\n    GL_LineSegmentRenderable.prototype._pGetSurface = function () {\n        return this._lineSegment.material;\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @private\n     */\n    GL_LineSegmentRenderable.prototype._pGetOverflowRenderable = function (indexOffset) {\n        return new GL_LineSegmentRenderable(this.renderable, this._renderer);\n    };\n    GL_LineSegmentRenderable._lineGraphics = new Object();\n    return GL_LineSegmentRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineSegmentRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-display/lib/graphics/LineElements\":undefined}],\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n/**\n * @class RenderableListItem\n */\nvar GL_RenderableBase = (function (_super) {\n    __extends(GL_RenderableBase, _super);\n    /**\n     *\n     * @param renderable\n     * @param sourceEntity\n     * @param surface\n     * @param renderer\n     */\n    function GL_RenderableBase(renderable, renderer) {\n        var _this = this;\n        _super.call(this, renderable, renderer);\n        this._count = 0;\n        this._offset = 0;\n        this._elementsDirty = true;\n        this._surfaceDirty = true;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onSurfaceUpdatedDelegate = function (event) { return _this._onSurfaceUpdated(event); };\n        this._onInvalidateElementsDelegate = function (event) { return _this.onInvalidateElements(event); };\n        //store a reference to the pool for later disposal\n        this._renderer = renderer;\n        this._stage = renderer.stage;\n        this.renderable = renderable;\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n    }\n    Object.defineProperty(GL_RenderableBase.prototype, \"elements\", {\n        get: function () {\n            if (this._elementsDirty)\n                this._updateElements();\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_RenderableBase.prototype, \"surfaceGL\", {\n        get: function () {\n            if (this._surfaceDirty)\n                this._updateSurface();\n            return this._surfaceGL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_RenderableBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.next = null;\n        this.masksConfig = null;\n        this.renderSceneTransform = null;\n        this._renderer = null;\n        this._stage = null;\n        this.sourceEntity = null;\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n        this.renderable = null;\n        this._surfaceGL.usages--;\n        if (!this._surfaceGL.usages)\n            this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n        this._surfaceGL = null;\n        this._elements = null;\n    };\n    GL_RenderableBase.prototype.onInvalidateElements = function (event) {\n        this._elementsDirty = true;\n    };\n    GL_RenderableBase.prototype._onSurfaceUpdated = function (event) {\n        this._surfaceDirty = true;\n    };\n    GL_RenderableBase.prototype._pGetElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    GL_RenderableBase.prototype._pGetSurface = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_RenderableBase.prototype._iActivate = function (pass, camera) {\n        pass._iActivate(camera);\n    };\n    /**\n     * Renders an object to the current render target.\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iRender = function (pass, camera, viewProjection) {\n        this._setRenderState(pass, camera, viewProjection);\n        if (this._elementsDirty)\n            this._updateElements();\n        var elements = pass.shader._elementsPool.getAbstraction((this.renderable.animator) ? this.renderable.animator.getRenderableElements(this, this._elements) : this._elements);\n        if (pass.shader.activeElements != elements) {\n            pass.shader.activeElements = elements;\n            elements._setRenderState(this, camera, viewProjection);\n        }\n        elements.draw(this, camera, viewProjection, this._count, this._offset);\n    };\n    GL_RenderableBase.prototype._setRenderState = function (pass, camera, viewProjection) {\n        pass._iRender(this, camera, viewProjection);\n    };\n    /**\n     * Clears the surface state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iDeactivate = function (pass) {\n        pass._iDeactivate();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._updateElements = function () {\n        this._elements = this._pGetElements();\n        this._elementsDirty = false;\n    };\n    GL_RenderableBase.prototype._updateSurface = function () {\n        var surface = this._pGetSurface() || DefaultMaterialManager_1.default.getDefaultMaterial(this.renderable);\n        var surfaceGL = this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n        if (this._surfaceGL != surfaceGL) {\n            if (this._surfaceGL) {\n                this._surfaceGL.usages--;\n                //dispose current surfaceGL object\n                if (!this._surfaceGL.usages)\n                    this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n            }\n            this._surfaceGL = surfaceGL;\n            this._surfaceGL.usages++;\n        }\n        //create a cache of image & sampler objects for the renderable\n        var numImages = surfaceGL.numImages;\n        this.images.length = numImages;\n        this.samplers.length = numImages;\n        this.uvMatrix = this.renderable.style ? this.renderable.style.uvMatrix : surface.style ? surface.style.uvMatrix : null;\n        var numTextures = surface.getNumTextures();\n        var texture;\n        var numImages;\n        var image;\n        var sampler;\n        var index;\n        for (var i = 0; i < numTextures; i++) {\n            texture = surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            for (var j = 0; j < numImages; j++) {\n                index = surfaceGL.getImageIndex(texture, j);\n                image = this.renderable.style ? this.renderable.style.getImageAt(texture, j) : null;\n                this.images[index] = image ? this._stage.getAbstraction(image) : null;\n                sampler = this.renderable.style ? this.renderable.style.getSamplerAt(texture, j) : null;\n                this.samplers[index] = sampler ? this._stage.getAbstraction(sampler) : null;\n            }\n        }\n        this._surfaceDirty = false;\n    };\n    return GL_RenderableBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_RenderableBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/RenderableEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nvar GL_SkyboxRenderable = (function (_super) {\n    __extends(GL_SkyboxRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param skybox\n     */\n    function GL_SkyboxRenderable(skybox, renderer) {\n        _super.call(this, skybox, renderer);\n        this._skybox = skybox;\n        this._vertexArray = new Float32Array(24);\n        this._vertexArray[19] = 1;\n        this._vertexArray[23] = 1;\n    }\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     * @private\n     */\n    GL_SkyboxRenderable.prototype._pGetElements = function () {\n        var geometry = GL_SkyboxRenderable._geometry;\n        if (!geometry) {\n            geometry = GL_SkyboxRenderable._geometry = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            geometry.autoDeriveNormals = false;\n            geometry.autoDeriveTangents = false;\n            geometry.setIndices(Array(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n            geometry.setPositions(Array(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n        }\n        return geometry;\n    };\n    GL_SkyboxRenderable.prototype._pGetSurface = function () {\n        return this._skybox;\n    };\n    GL_SkyboxRenderable._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxRenderable._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        var temp = registerCache.getFreeFragmentVectorTemp();\n        return \"mul vt0, va0, vc5\\n\" +\n            \"add vt0, vt0, vc4\\n\" +\n            \"m44 op, vt0, vc0\\n\";\n    };\n    GL_SkyboxRenderable._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxRenderable.prototype._setRenderState = function (pass, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, pass, camera, viewProjection);\n        var context = this._stage.context;\n        var pos = camera.scenePosition;\n        this._vertexArray[16] = pos.x;\n        this._vertexArray[17] = pos.y;\n        this._vertexArray[18] = pos.z;\n        this._vertexArray[20] = this._vertexArray[21] = this._vertexArray[22] = camera.projection.far / Math.sqrt(3);\n        viewProjection.copyRawDataTo(this._vertexArray, 0, true);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, this._vertexArray);\n    };\n    return GL_SkyboxRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/renderables\":[function(require,module,exports){\n\"use strict\";\nvar GL_BillboardRenderable_1 = require(\"./renderables/GL_BillboardRenderable\");\nexports.GL_BillboardRenderable = GL_BillboardRenderable_1.default;\nvar GL_GraphicRenderable_1 = require(\"./renderables/GL_GraphicRenderable\");\nexports.GL_GraphicRenderable = GL_GraphicRenderable_1.default;\nvar GL_LineSegmentRenderable_1 = require(\"./renderables/GL_LineSegmentRenderable\");\nexports.GL_LineSegmentRenderable = GL_LineSegmentRenderable_1.default;\nvar GL_RenderableBase_1 = require(\"./renderables/GL_RenderableBase\");\nexports.GL_RenderableBase = GL_RenderableBase_1.default;\nvar GL_SkyboxRenderable_1 = require(\"./renderables/GL_SkyboxRenderable\");\nexports.GL_SkyboxRenderable = GL_SkyboxRenderable_1.default;\n\n},{\"./renderables/GL_BillboardRenderable\":\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\",\"./renderables/GL_GraphicRenderable\":\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\",\"./renderables/GL_LineSegmentRenderable\":\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\",\"./renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"./renderables/GL_SkyboxRenderable\":\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\"}],\"awayjs-renderergl/lib/shaders/LightingShader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LightSources_1 = require(\"awayjs-display/lib/materials/LightSources\");\nvar ContextGLProfile_1 = require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\nvar LightingCompiler_1 = require(\"../shaders/compilers/LightingCompiler\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar LightingShader = (function (_super) {\n    __extends(LightingShader, _super);\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function LightingShader(elementsClass, lightingPass, stage) {\n        _super.call(this, elementsClass, lightingPass, stage);\n        this._includeCasters = true;\n        this._lightingPass = lightingPass;\n    }\n    LightingShader.prototype._iIncludeDependencies = function () {\n        this.numPointLights = this._lightingPass.numPointLights;\n        this.numDirectionalLights = this._lightingPass.numDirectionalLights;\n        this.numLightProbes = this._lightingPass.numLightProbes;\n        var numAllLights = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n        var numLightProbes = this._lightingPass.numLightProbes;\n        var diffuseLightSources = this._lightingPass._iUsesDiffuse(this) ? this._lightingPass.diffuseLightSources : 0x00;\n        var specularLightSources = this._lightingPass._iUsesSpecular(this) ? this._lightingPass.specularLightSources : 0x00;\n        var combinedLightSources = diffuseLightSources | specularLightSources;\n        this.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile_1.default.BASELINE_CONSTRAINED;\n        this.usesCommonData = this.usesLightFallOff;\n        this.numLights = numAllLights + numLightProbes;\n        this.usesLights = numAllLights > 0 && (combinedLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesShadows = this._lightingPass._iUsesShadows(this);\n        //IMPORTANT this must occur after shader lighting initialisation above\n        _super.prototype._iIncludeDependencies.call(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param materialPassVO\n     * @returns {away.materials.LightingCompiler}\n     */\n    LightingShader.prototype.createCompiler = function (elementsClass, pass) {\n        return new LightingCompiler_1.default(elementsClass, pass, this);\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    LightingShader.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        if (this._lightingPass.lightPicker)\n            this._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n        if (this.usesLights)\n            this.updateLights();\n        if (this.usesProbes)\n            this.updateProbes();\n    };\n    /**\n     * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateLights = function () {\n        var dirLight;\n        var pointLight;\n        var i = 0;\n        var k = 0;\n        var len;\n        var dirPos;\n        var total = 0;\n        var numLightTypes = this.usesShadows ? 2 : 1;\n        var l;\n        var offset;\n        this.ambientR = this.ambientG = this.ambientB = 0;\n        l = this.lightVertexConstantIndex;\n        k = this.lightFragmentConstantIndex;\n        var cast = 0;\n        var dirLights = this._lightingPass.lightPicker.directionalLights;\n        offset = this._lightingPass.directionalLightsOffset;\n        len = this._lightingPass.lightPicker.directionalLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                dirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n            len = dirLights.length;\n            if (len > this.numDirectionalLights)\n                len = this.numDirectionalLights;\n            for (i = 0; i < len; ++i) {\n                dirLight = dirLights[offset + i];\n                dirPos = dirLight.sceneDirection;\n                this.ambientR += dirLight._iAmbientR;\n                this.ambientG += dirLight._iAmbientG;\n                this.ambientB += dirLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    var x = -dirPos.x;\n                    var y = -dirPos.y;\n                    var z = -dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = -dirPos.x;\n                    this.fragmentConstantData[k++] = -dirPos.y;\n                    this.fragmentConstantData[k++] = -dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = dirLight._iDiffuseR;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseG;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseB;\n                this.fragmentConstantData[k++] = 1;\n                this.fragmentConstantData[k++] = dirLight._iSpecularR;\n                this.fragmentConstantData[k++] = dirLight._iSpecularG;\n                this.fragmentConstantData[k++] = dirLight._iSpecularB;\n                this.fragmentConstantData[k++] = 1;\n                if (++total == this.numDirectionalLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numDirectionalLights > total) {\n            i = k + (this.numDirectionalLights - total) * 12;\n            while (k < i)\n                this.fragmentConstantData[k++] = 0;\n        }\n        total = 0;\n        var pointLights = this._lightingPass.lightPicker.pointLights;\n        offset = this._lightingPass.pointLightsOffset;\n        len = this._lightingPass.lightPicker.pointLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        else {\n            cast = 0;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                pointLights = this._lightingPass.lightPicker.castingPointLights;\n            len = pointLights.length;\n            for (i = 0; i < len; ++i) {\n                pointLight = pointLights[offset + i];\n                dirPos = pointLight.scenePosition;\n                this.ambientR += pointLight._iAmbientR;\n                this.ambientG += pointLight._iAmbientG;\n                this.ambientB += pointLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    x = dirPos.x;\n                    y = dirPos.y;\n                    z = dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n                    this.vertexConstantData[l++] = 1;\n                }\n                else if (!this.usesGlobalPosFragment) {\n                    this.vertexConstantData[l++] = dirPos.x;\n                    this.vertexConstantData[l++] = dirPos.y;\n                    this.vertexConstantData[l++] = dirPos.z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = dirPos.x;\n                    this.fragmentConstantData[k++] = dirPos.y;\n                    this.fragmentConstantData[k++] = dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = pointLight._iDiffuseR;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseG;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseB;\n                var radius = pointLight._pRadius;\n                this.fragmentConstantData[k++] = radius * radius;\n                this.fragmentConstantData[k++] = pointLight._iSpecularR;\n                this.fragmentConstantData[k++] = pointLight._iSpecularG;\n                this.fragmentConstantData[k++] = pointLight._iSpecularB;\n                this.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n                if (++total == this.numPointLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numPointLights > total) {\n            i = k + (total - this.numPointLights) * 12;\n            for (; k < i; ++k)\n                this.fragmentConstantData[k] = 0;\n        }\n    };\n    /**\n     * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateProbes = function () {\n        var probe;\n        var lightProbes = this._lightingPass.lightPicker.lightProbes;\n        var weights = this._lightingPass.lightPicker.lightProbeWeights;\n        var len = lightProbes.length - this._lightingPass.lightProbesOffset;\n        var addDiff = this.usesProbesForDiffuse;\n        var addSpec = this.usesProbesForSpecular;\n        if (!(addDiff || addSpec))\n            return;\n        if (len > this.numLightProbes)\n            len = this.numLightProbes;\n        for (var i = 0; i < len; ++i) {\n            probe = lightProbes[this._lightingPass.lightProbesOffset + i];\n            if (addDiff)\n                this._stage.getAbstraction(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n            if (addSpec)\n                this._stage.getAbstraction(probe.specularMap).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n        }\n        for (i = 0; i < len; ++i)\n            this.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n    };\n    return LightingShader;\n}(ShaderBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingShader;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\",\"awayjs-display/lib/materials/LightSources\":undefined,\"awayjs-stagegl/lib/base/ContextGLProfile\":undefined}],\"awayjs-renderergl/lib/shaders/RegisterPool\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterElement_1 = require(\"../shaders/ShaderRegisterElement\");\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nvar RegisterPool = (function () {\n    /**\n     * Creates a new RegisterPool object.\n     * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n     * @param regCount The amount of available registers of this type.\n     * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n     */\n    function RegisterPool(regName, regCount, persistent) {\n        if (persistent === void 0) { persistent = true; }\n        this._regName = regName;\n        this._regCount = regCount;\n        this._persistent = persistent;\n        this.initRegisters(regName, regCount);\n    }\n    /**\n     * Retrieve an entire vector register that's still available.\n     */\n    RegisterPool.prototype.requestFreeVectorReg = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (!this.isRegisterUsed(i)) {\n                if (this._persistent)\n                    this._usedVectorCount[i]++;\n                return this._vectorRegisters[i];\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Retrieve a single vector component that's still available.\n     */\n    RegisterPool.prototype.requestFreeRegComponent = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (this._usedVectorCount[i] > 0)\n                continue;\n            for (var j = 0; j < 4; ++j) {\n                if (this._usedSingleCount[j][i] == 0) {\n                    if (this._persistent)\n                        this._usedSingleCount[j][i]++;\n                    return this._registerComponents[j][i];\n                }\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    RegisterPool.prototype.addUsage = function (register, usageCount) {\n        if (register._component > -1)\n            this._usedSingleCount[register._component][register.index] += usageCount;\n        else\n            this._usedVectorCount[register.index] += usageCount;\n    };\n    /**\n     * Removes a usage from a register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    RegisterPool.prototype.removeUsage = function (register) {\n        if (register._component > -1) {\n            if (--this._usedSingleCount[register._component][register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n        else {\n            if (--this._usedVectorCount[register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n    };\n    /**\n     * Disposes any resources used by the current RegisterPool object.\n     */\n    RegisterPool.prototype.dispose = function () {\n        this._vectorRegisters = null;\n        this._registerComponents = null;\n        this._usedSingleCount = null;\n        this._usedVectorCount = null;\n    };\n    /**\n     * Indicates whether or not any registers are in use.\n     */\n    RegisterPool.prototype.hasRegisteredRegs = function () {\n        for (var i = 0; i < this._regCount; ++i)\n            if (this.isRegisterUsed(i))\n                return true;\n        return false;\n    };\n    /**\n     * Initializes all registers.\n     */\n    RegisterPool.prototype.initRegisters = function (regName, regCount) {\n        var hash = RegisterPool._initPool(regName, regCount);\n        this._vectorRegisters = RegisterPool._regPool[hash];\n        this._registerComponents = RegisterPool._regCompsPool[hash];\n        this._usedVectorCount = this._initArray(Array(regCount), 0);\n        this._usedSingleCount = new Array(4);\n        this._usedSingleCount[0] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[1] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[2] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[3] = this._initArray(new Array(regCount), 0);\n    };\n    RegisterPool._initPool = function (regName, regCount) {\n        var hash = regName + regCount;\n        if (RegisterPool._regPool[hash] != undefined)\n            return hash;\n        var vectorRegisters = new Array(regCount);\n        RegisterPool._regPool[hash] = vectorRegisters;\n        var registerComponents = [\n            [],\n            [],\n            [],\n            []\n        ];\n        RegisterPool._regCompsPool[hash] = registerComponents;\n        for (var i = 0; i < regCount; ++i) {\n            vectorRegisters[i] = new ShaderRegisterElement_1.default(regName, i);\n            for (var j = 0; j < 4; ++j)\n                registerComponents[j][i] = new ShaderRegisterElement_1.default(regName, i, j);\n        }\n        return hash;\n    };\n    /**\n     * Check if the temp register is either used for single or vector use\n     */\n    RegisterPool.prototype.isRegisterUsed = function (index) {\n        if (this._usedVectorCount[index] > 0)\n            return true;\n        for (var i = 0; i < 4; ++i)\n            if (this._usedSingleCount[i][index] > 0)\n                return true;\n        return false;\n    };\n    RegisterPool.prototype._initArray = function (a, val) {\n        var l = a.length;\n        for (var c = 0; c < l; c++)\n            a[c] = val;\n        return a;\n    };\n    RegisterPool._regPool = new Object();\n    RegisterPool._regCompsPool = new Object();\n    return RegisterPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RegisterPool;\n\n},{\"../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderBase\":[function(require,module,exports){\n\"use strict\";\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLTriangleFace_1 = require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nvar ElementsPool_1 = require(\"../elements/ElementsPool\");\nvar CompilerBase_1 = require(\"../shaders/compilers/CompilerBase\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar ShaderBase = (function () {\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function ShaderBase(elementsClass, pass, stage) {\n        this._abstractionPool = new Object();\n        this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n        this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n        this._invalidProgram = true;\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        this.usesBlending = false;\n        this.useImageRect = false;\n        this.usesCurves = false;\n        /**\n         * The depth compare mode used to render the renderables using this material.\n         *\n         * @see away.stagegl.ContextGLCompareMode\n         */\n        this.depthCompareMode = ContextGLCompareMode_1.default.LESS_EQUAL;\n        /**\n         * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n         */\n        this.writeDepth = true;\n        this._defaultCulling = ContextGLTriangleFace_1.default.BACK;\n        this._pInverseSceneMatrix = new Float32Array(16);\n        //set ambient values to default\n        this.ambientR = 0xFF;\n        this.ambientG = 0xFF;\n        this.ambientB = 0xFF;\n        /**\n         * Indicates whether there are any dependencies on the world-space position vector.\n         */\n        this.usesGlobalPosFragment = false;\n        /**\n         * Indicates whether there are any dependencies on the local position vector.\n         */\n        this.usesPositionFragment = false;\n        /**\n         *\n         */\n        this.imageIndices = new Array();\n        this._elementsClass = elementsClass;\n        this._pass = pass;\n        this._stage = stage;\n        this.profile = this._stage.profile;\n        this._elementsPool = new ElementsPool_1.default(this, elementsClass);\n    }\n    Object.defineProperty(ShaderBase.prototype, \"programData\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._programData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"usesAnimation\", {\n        get: function () {\n            return this._usesAnimation;\n        },\n        set: function (value) {\n            if (this._usesAnimation == value)\n                return;\n            this._usesAnimation = value;\n            this.invalidateProgram();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedVertexConstants\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedVertexConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedFragmentConstants\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedFragmentConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedStreams\", {\n        /**\n         * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n         */\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedStreams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedTextures\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedTextures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderBase.prototype.getAbstraction = function (texture) {\n        return (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new ShaderBase._abstractionClassPool[texture.assetType](texture, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    ShaderBase.prototype.clearAbstraction = function (texture) {\n        this._abstractionPool[texture.id] = null;\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ShaderBase.registerAbstraction = function (gl_assetClass, assetClass) {\n        ShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n    };\n    ShaderBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._pass.getImageIndex(texture, index);\n    };\n    ShaderBase.prototype._iIncludeDependencies = function () {\n        this._pass._iIncludeDependencies(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param elementsClass\n     * @param pass\n     * @param stage\n     * @returns {CompilerBase}\n     */\n    ShaderBase.prototype.createCompiler = function (elementsClass, pass) {\n        return new CompilerBase_1.default(elementsClass, pass, this);\n    };\n    /**\n     * Clears dependency counts for all registers. Called when recompiling a pass.\n     */\n    ShaderBase.prototype.reset = function () {\n        this.projectionDependencies = 0;\n        this.normalDependencies = 0;\n        this.colorDependencies = 0;\n        this.viewDirDependencies = 0;\n        this.uvDependencies = 0;\n        this.secondaryUVDependencies = 0;\n        this.globalPosDependencies = 0;\n        this.tangentDependencies = 0;\n        this.usesCommonData = false;\n        this.usesGlobalPosFragment = false;\n        this.usesPositionFragment = false;\n        this.usesFragmentAnimation = false;\n        this.usesTangentSpace = false;\n        this.outputsNormals = false;\n        this.outputsTangentNormals = false;\n    };\n    ShaderBase.prototype.pInitRegisterIndices = function () {\n        this.commonsDataIndex = -1;\n        this.cameraPositionIndex = -1;\n        this.curvesIndex = -1;\n        this.uvIndex = -1;\n        this.uvMatrixIndex = -1;\n        this.colorTransformIndex = -1;\n        this.secondaryUVIndex = -1;\n        this.normalIndex = -1;\n        this.colorBufferIndex = -1;\n        this.tangentIndex = -1;\n        this.sceneMatrixIndex = -1;\n        this.sceneNormalMatrixIndex = -1;\n        this.jointIndexIndex = -1;\n        this.jointWeightIndex = -1;\n        this.imageIndices.length = 0;\n    };\n    /**\n     * Initializes the unchanging constant data for this shader object.\n     */\n    ShaderBase.prototype.initConstantData = function (registerCache) {\n        //Updates the amount of used register indices.\n        this._numUsedVertexConstants = registerCache.numUsedVertexConstants;\n        this._numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n        this._numUsedStreams = registerCache.numUsedStreams;\n        this._numUsedTextures = registerCache.numUsedTextures;\n        this.vertexConstantData = new Float32Array(registerCache.numUsedVertexConstants * 4);\n        this.fragmentConstantData = new Float32Array(registerCache.numUsedFragmentConstants * 4);\n        //Initializes commonly required constant values.\n        if (this.commonsDataIndex >= 0) {\n            this.fragmentConstantData[this.commonsDataIndex] = .5;\n            this.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n            this.fragmentConstantData[this.commonsDataIndex + 2] = 1 / 255;\n            this.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n        }\n        //Initializes the default UV transformation matrix.\n        if (this.uvMatrixIndex >= 0) {\n            this.vertexConstantData[this.uvMatrixIndex] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n        }\n        //Initializes the default colorTransform.\n        if (this.colorTransformIndex >= 0) {\n            this.fragmentConstantData[this.colorTransformIndex] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n        }\n        if (this.cameraPositionIndex >= 0)\n            this.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n        // init constant data in pass\n        this._pass._iInitConstantData(this);\n        //init constant data in animation\n        if (this.usesAnimation)\n            this._pass.animationSet.doneAGALCode(this);\n    };\n    /**\n     * The blend mode to use when drawing this renderable. The following blend modes are supported:\n     * <ul>\n     * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n     * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n     * <li>BlendMode.MULTIPLY</li>\n     * <li>BlendMode.ADD</li>\n     * <li>BlendMode.ALPHA</li>\n     * </ul>\n     */\n    ShaderBase.prototype.setBlendMode = function (value) {\n        switch (value) {\n            case BlendMode_1.default.NORMAL:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n                this.usesBlending = false;\n                break;\n            case BlendMode_1.default.LAYER:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.MULTIPLY:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_COLOR;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ADD:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ALPHA:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            default:\n                throw new ArgumentError_1.default(\"Unsupported blend mode!\");\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iActivate = function (camera) {\n        this._stage.context.setCulling(this.useBothSides ? ContextGLTriangleFace_1.default.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n        if (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            var pos = camera.scenePosition;\n            this.vertexConstantData[this.cameraPositionIndex] = pos.x;\n            this.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n            this.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n        }\n        this._stage.context.setDepthTest((this.writeDepth && !this.usesBlending), this.depthCompareMode);\n        if (this.usesBlending)\n            this._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n        this.activeElements = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iDeactivate = function () {\n        //For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n        this._stage.context.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this.activeElements = null;\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    ShaderBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        if (renderable.renderable.animator)\n            renderable.renderable.animator.setRenderState(this, renderable, this._stage, camera);\n        if (this.usesUVTransform) {\n            var uvMatrix = renderable.uvMatrix;\n            if (uvMatrix) {\n                this.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n            }\n            else {\n                this.vertexConstantData[this.uvMatrixIndex] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n            }\n        }\n        if (this.usesColorTransform) {\n            var colorTransform = renderable.sourceEntity._iAssignedColorTransform();\n            if (colorTransform) {\n                this.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset / 255;\n            }\n            else {\n                this.fragmentConstantData[this.colorTransformIndex] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n            }\n        }\n        if (this.sceneNormalMatrixIndex >= 0)\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n        if (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n            var pos = camera.scenePosition;\n            var x = pos.x;\n            var y = pos.y;\n            var z = pos.z;\n            this.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n            this.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n            this.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n        }\n    };\n    ShaderBase.prototype.invalidateProgram = function () {\n        this._invalidProgram = true;\n    };\n    ShaderBase.prototype.dispose = function () {\n        this._programData.dispose();\n        this._programData = null;\n    };\n    ShaderBase.prototype._updateProgram = function () {\n        this._invalidProgram = false;\n        var compiler = this.createCompiler(this._elementsClass, this._pass);\n        compiler.compile();\n        this._calcAnimationCode(compiler._pRegisterCache, compiler.shadedTarget, compiler._pSharedRegisters);\n        //initialise the required shader constants\n        this.initConstantData(compiler._pRegisterCache);\n        var programData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n        //check program data hasn't changed, keep count of program usages\n        if (this._programData != programData) {\n            if (this._programData)\n                this._programData.dispose();\n            this._programData = programData;\n            programData.usages++;\n        }\n    };\n    ShaderBase.prototype._calcAnimationCode = function (registerCache, shadedTarget, sharedRegisters) {\n        //reset code\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        //check to see if GPU animation is used\n        if (this.usesAnimation) {\n            var animationSet = this._pass.animationSet;\n            this._animationVertexCode += animationSet.getAGALVertexCode(this, registerCache, sharedRegisters);\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += animationSet.getAGALUVCode(this, registerCache, sharedRegisters);\n            if (this.usesFragmentAnimation)\n                this._animationFragmentCode += animationSet.getAGALFragmentCode(this, registerCache, shadedTarget);\n        }\n        else {\n            // simply write attributes to targets, do not animate them\n            // projection will pick up on targets[0] to do the projection\n            var len = sharedRegisters.animatableAttributes.length;\n            for (var i = 0; i < len; ++i)\n                this._animationVertexCode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n        }\n    };\n    ShaderBase.prototype.setVertexConst = function (index, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        index *= 4;\n        this.vertexConstantData[index++] = x;\n        this.vertexConstantData[index++] = y;\n        this.vertexConstantData[index++] = z;\n        this.vertexConstantData[index] = w;\n    };\n    ShaderBase.prototype.setVertexConstFromArray = function (index, data) {\n        index *= 4;\n        for (var i = 0; i < data.length; i++)\n            this.vertexConstantData[index++] = data[i];\n    };\n    ShaderBase.prototype.setVertexConstFromMatrix = function (index, matrix) {\n        index *= 4;\n        var rawData = matrix.rawData;\n        this.vertexConstantData[index++] = rawData[0];\n        this.vertexConstantData[index++] = rawData[4];\n        this.vertexConstantData[index++] = rawData[8];\n        this.vertexConstantData[index++] = rawData[12];\n        this.vertexConstantData[index++] = rawData[1];\n        this.vertexConstantData[index++] = rawData[5];\n        this.vertexConstantData[index++] = rawData[9];\n        this.vertexConstantData[index++] = rawData[13];\n        this.vertexConstantData[index++] = rawData[2];\n        this.vertexConstantData[index++] = rawData[6];\n        this.vertexConstantData[index++] = rawData[10];\n        this.vertexConstantData[index++] = rawData[14];\n        this.vertexConstantData[index++] = rawData[3];\n        this.vertexConstantData[index++] = rawData[7];\n        this.vertexConstantData[index++] = rawData[11];\n        this.vertexConstantData[index] = rawData[15];\n    };\n    ShaderBase.prototype.setFragmentConst = function (index, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        index *= 4;\n        this.fragmentConstantData[index++] = x;\n        this.fragmentConstantData[index++] = y;\n        this.fragmentConstantData[index++] = z;\n        this.fragmentConstantData[index] = w;\n    };\n    ShaderBase._abstractionClassPool = new Object();\n    return ShaderBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderBase;\n\n},{\"../elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"../shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLTriangleFace\":undefined}],\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\":[function(require,module,exports){\n\"use strict\";\nvar RegisterPool_1 = require(\"../shaders/RegisterPool\");\nvar ShaderRegisterElement_1 = require(\"../shaders/ShaderRegisterElement\");\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nvar ShaderRegisterCache = (function () {\n    /**\n     * Create a new ShaderRegisterCache object.\n     *\n     * @param profile The compatibility profile used by the renderer.\n     */\n    function ShaderRegisterCache(profile) {\n        this._numUsedVertexConstants = 0;\n        this._numUsedFragmentConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._profile = profile;\n        this.reset();\n    }\n    /**\n     * Resets all registers.\n     */\n    ShaderRegisterCache.prototype.reset = function () {\n        this._fragmentTempCache = new RegisterPool_1.default(\"ft\", 8, false);\n        this._vertexTempCache = new RegisterPool_1.default(\"vt\", 8, false);\n        this._varyingCache = new RegisterPool_1.default(\"v\", 8);\n        this._textureCache = new RegisterPool_1.default(\"fs\", 8);\n        this._vertexAttributesCache = new RegisterPool_1.default(\"va\", 8);\n        this._fragmentConstantsCache = new RegisterPool_1.default(\"fc\", 28);\n        this._vertexConstantsCache = new RegisterPool_1.default(\"vc\", 128);\n        this._fragmentOutputRegister = new ShaderRegisterElement_1.default(\"oc\", -1);\n        this._vertexOutputRegister = new ShaderRegisterElement_1.default(\"op\", -1);\n        this._numUsedVertexConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._numUsedFragmentConstants = 0;\n    };\n    /**\n     * Disposes all resources used.\n     */\n    ShaderRegisterCache.prototype.dispose = function () {\n        this._fragmentTempCache.dispose();\n        this._vertexTempCache.dispose();\n        this._varyingCache.dispose();\n        this._fragmentConstantsCache.dispose();\n        this._vertexAttributesCache.dispose();\n        this._fragmentTempCache = null;\n        this._vertexTempCache = null;\n        this._varyingCache = null;\n        this._fragmentConstantsCache = null;\n        this._vertexAttributesCache = null;\n        this._fragmentOutputRegister = null;\n        this._vertexOutputRegister = null;\n    };\n    /**\n     * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addFragmentTempUsages = function (register, usageCount) {\n        this._fragmentTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeFragmentTempUsage = function (register) {\n        this._fragmentTempCache.removeUsage(register);\n    };\n    /**\n     * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n     * until removeUsage has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addVertexTempUsages = function (register, usageCount) {\n        this._vertexTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeVertexTempUsage = function (register) {\n        this._vertexTempCache.removeUsage(register);\n    };\n    /**\n     * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentVectorTemp = function () {\n        return this._fragmentTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a fragment temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentSingleTemp = function () {\n        return this._fragmentTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available varying register\n     */\n    ShaderRegisterCache.prototype.getFreeVarying = function () {\n        ++this._numUsedVaryings;\n        return this._varyingCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available fragment constant register\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentConstant = function () {\n        ++this._numUsedFragmentConstants;\n        return this._fragmentConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available vertex constant register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexConstant = function () {\n        ++this._numUsedVertexConstants;\n        return this._vertexConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an entire vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexVectorTemp = function () {\n        return this._vertexTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexSingleTemp = function () {\n        return this._vertexTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available vertex attribute register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexAttribute = function () {\n        ++this._numUsedStreams;\n        return this._vertexAttributesCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available texture register\n     */\n    ShaderRegisterCache.prototype.getFreeTextureReg = function () {\n        ++this._numUsedTextures;\n        return this._textureCache.requestFreeVectorReg();\n    };\n    Object.defineProperty(ShaderRegisterCache.prototype, \"fragmentOutputRegister\", {\n        /**\n         * The fragment output register.\n         */\n        get: function () {\n            return this._fragmentOutputRegister;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVertexConstants\", {\n        /**\n         * The amount of used vertex constant registers.\n         */\n        get: function () {\n            return this._numUsedVertexConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedFragmentConstants\", {\n        /**\n         * The amount of used fragment constant registers.\n         */\n        get: function () {\n            return this._numUsedFragmentConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedStreams\", {\n        /**\n         * The amount of used vertex streams.\n         */\n        get: function () {\n            return this._numUsedStreams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedTextures\", {\n        /**\n         * The amount of used texture slots.\n         */\n        get: function () {\n            return this._numUsedTextures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVaryings\", {\n        /**\n         * The amount of used varying registers.\n         */\n        get: function () {\n            return this._numUsedVaryings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ShaderRegisterCache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterCache;\n\n},{\"../shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderRegisterData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nvar ShaderRegisterData = (function () {\n    function ShaderRegisterData() {\n        this.textures = new Array();\n        this.animatableAttributes = new Array();\n        this.animationTargetRegisters = new Array();\n    }\n    return ShaderRegisterData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterData;\n\n},{}],\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":[function(require,module,exports){\n\"use strict\";\n/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nvar ShaderRegisterElement = (function () {\n    /**\n     * Creates a new ShaderRegisterElement object.\n     *\n     * @param regName The name of the register.\n     * @param index The index of the register.\n     * @param component The register's component, if not the entire register is represented.\n     */\n    function ShaderRegisterElement(regName, index, component) {\n        if (component === void 0) { component = -1; }\n        this._component = component;\n        this._regName = regName;\n        this._index = index;\n        this._toStr = this._regName;\n        if (this._index >= 0)\n            this._toStr += this._index;\n        if (component > -1)\n            this._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n    }\n    /**\n     * Converts the register or the components AGAL string representation.\n     */\n    ShaderRegisterElement.prototype.toString = function () {\n        return this._toStr;\n    };\n    Object.defineProperty(ShaderRegisterElement.prototype, \"regName\", {\n        /**\n         * The register's name.\n         */\n        get: function () {\n            return this._regName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterElement.prototype, \"index\", {\n        /**\n         * The register's index.\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderRegisterElement.COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n    return ShaderRegisterElement;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterElement;\n\n},{}],\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterCache_1 = require(\"../../shaders/ShaderRegisterCache\");\nvar ShaderRegisterData_1 = require(\"../../shaders/ShaderRegisterData\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar CompilerBase = (function () {\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function CompilerBase(elementsClass, pass, shader) {\n        this._pVertexCode = ''; // Changed to emtpy string- AwayTS\n        this._pFragmentCode = ''; // Changed to emtpy string - AwayTS\n        this._pPostAnimationFragmentCode = ''; // Changed to emtpy string - AwayTS\n        this._pElementsClass = elementsClass;\n        this._pRenderPass = pass;\n        this._pShader = shader;\n        this._pSharedRegisters = new ShaderRegisterData_1.default();\n        this._pRegisterCache = new ShaderRegisterCache_1.default(shader.profile);\n    }\n    /**\n     * Compiles the code after all setup on the compiler has finished.\n     */\n    CompilerBase.prototype.compile = function () {\n        this._pShader.reset();\n        this._pShader._iIncludeDependencies();\n        this.pInitRegisterIndices();\n        this.pCompileDependencies();\n        //compile custom vertex & fragment codes\n        this._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        if (this._pShader.usesColorTransform)\n            this.compileColorTransformCode();\n        else\n            this._pShader.colorTransformIndex = -1;\n        //assign the final output color to the output register\n        this._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n        this._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n    };\n    /**\n     * Calculate the transformed colours\n     */\n    CompilerBase.prototype.compileColorTransformCode = function () {\n        // rm, gm, bm, am - multiplier\n        // ro, go, bo, ao - offset\n        var ct1 = this._pRegisterCache.getFreeFragmentConstant();\n        var ct2 = this._pRegisterCache.getFreeFragmentConstant();\n        this._pShader.colorTransformIndex = ct1.index * 4;\n        this._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n        this._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n    };\n    /**\n     * Compile the code for the methods.\n     */\n    CompilerBase.prototype.pCompileDependencies = function () {\n        this._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n        //compile the world-space position if required\n        if (this._pShader.globalPosDependencies > 0)\n            this.compileGlobalPositionCode();\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n        if (this._pShader.usesCurves)\n            this.compileCurvesCode();\n        //Calculate the (possibly animated) UV coordinates.\n        if (this._pShader.uvDependencies > 0)\n            this.compileUVCode();\n        if (this._pShader.secondaryUVDependencies > 0)\n            this.compileSecondaryUVCode();\n        if (this._pShader.normalDependencies > 0)\n            this.compileNormalCode();\n        if (this._pShader.viewDirDependencies > 0)\n            this.compileViewDirCode();\n        //collect code from material\n        this._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        //collect code from pass\n        this._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n    };\n    CompilerBase.prototype.compileGlobalPositionCode = function () {\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n        var sceneMatrixReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pShader.sceneMatrixIndex = sceneMatrixReg.index * 4;\n        this._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n        if (this._pShader.usesGlobalPosFragment) {\n            this._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n        }\n    };\n    CompilerBase.prototype.compilePositionCode = function () {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    };\n    CompilerBase.prototype.compileCurvesCode = function () {\n        this._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n        this._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n        var temp = this._pRegisterCache.getFreeFragmentSingleTemp();\n        this._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n            \"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n            \"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n            \"kil \" + temp + \"\\n\";\n    };\n    /**\n     * Calculate the (possibly animated) UV coordinates.\n     */\n    CompilerBase.prototype.compileUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.uvIndex = uvAttributeReg.index;\n        var varying = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n        if (this._pShader.usesUVTransform) {\n            // a, b, 0, tx\n            // c, d, 0, ty\n            var uvTransform1 = this._pRegisterCache.getFreeVertexConstant();\n            var uvTransform2 = this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.uvMatrixIndex = uvTransform1.index * 4;\n            this._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n                \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n                \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n        }\n        else {\n            this._pShader.uvMatrixIndex = -1;\n            this._pSharedRegisters.uvTarget = varying;\n            this._pSharedRegisters.uvSource = uvAttributeReg;\n        }\n    };\n    /**\n     * Provide the secondary UV coordinates.\n     */\n    CompilerBase.prototype.compileSecondaryUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.secondaryUVIndex = uvAttributeReg.index;\n        this._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n    };\n    /**\n     * Calculate the view direction.\n     */\n    CompilerBase.prototype.compileViewDirCode = function () {\n        var cameraPositionReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n        this._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n        this._pShader.cameraPositionIndex = cameraPositionReg.index * 4;\n        if (this._pShader.usesTangentSpace) {\n            var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                \"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n        }\n        else {\n            this._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n        }\n        //TODO is this required in all cases? (re: distancemappass)\n        this._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n            \"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n    };\n    /**\n     * Calculate the normal.\n     */\n    CompilerBase.prototype.compileNormalCode = function () {\n        this._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n        //simple normal aquisition if no tangent space is being used\n        if (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n            this._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            return;\n        }\n        var normalMatrix;\n        if (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n            normalMatrix = new Array(3);\n            normalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n            this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.sceneNormalMatrixIndex = normalMatrix[0].index * 4;\n            this._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n        }\n        if (this._pShader.outputsNormals) {\n            if (this._pShader.usesTangentSpace) {\n                // normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n                this._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            }\n            else {\n                //Compiles the vertex shader code for tangent-space normal maps.\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n                    \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n                this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n                //Compiles the fragment shader code for tangent-space normal maps.\n                var t;\n                var b;\n                var n;\n                t = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(t, 1);\n                b = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(b, 1);\n                n = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(n, 1);\n                this._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n                    \"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n                    \"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n                    \"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n                //compile custom fragment code for normal calcs\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n                    \"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n                this._pRegisterCache.removeFragmentTempUsage(b);\n                this._pRegisterCache.removeFragmentTempUsage(t);\n                this._pRegisterCache.removeFragmentTempUsage(n);\n            }\n        }\n        else {\n            // no output, world space is enough\n            this._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n            this._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n            if (this._pShader.tangentDependencies > 0) {\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n            }\n        }\n        if (!this._pShader.usesTangentSpace)\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    CompilerBase.prototype.pInitRegisterIndices = function () {\n        this._pShader.pInitRegisterIndices();\n        this._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp();\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n        this._pSharedRegisters.animatableAttributes.push(this._pRegisterCache.getFreeVertexAttribute());\n        this._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedPosition);\n        this._pVertexCode = \"\";\n        this._pFragmentCode = \"\";\n        this._pPostAnimationFragmentCode = \"\";\n        //create commonly shared constant registers\n        if (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n            this._pShader.commonsDataIndex = this._pSharedRegisters.commons.index * 4;\n        }\n        //Creates the registers to contain the tangent data.\n        //Needs to be created FIRST and in this order (for when using tangent space)\n        if (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n            this._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n            this._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n            if (this._pShader.usesTangentSpace) {\n                this._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n            }\n            this._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.tangentInput);\n            this._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedTangent);\n        }\n        if (this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n            this._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n            this._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.normalInput);\n            this._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedNormal);\n        }\n        if (this._pShader.colorDependencies > 0) {\n            this._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n            this._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n        }\n    };\n    /**\n     * Disposes all resources used by the compiler.\n     */\n    CompilerBase.prototype.dispose = function () {\n        this._pRegisterCache.dispose();\n        this._pRegisterCache = null;\n        this._pSharedRegisters = null;\n    };\n    Object.defineProperty(CompilerBase.prototype, \"vertexCode\", {\n        /**\n         * The generated vertex code.\n         */\n        get: function () {\n            return this._pVertexCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"fragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"postAnimationFragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pPostAnimationFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"shadedTarget\", {\n        /**\n         * The register containing the final shaded colour.\n         */\n        get: function () {\n            return this._pSharedRegisters.shadedTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompilerBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompilerBase;\n\n},{\"../../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"../../shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\"}],\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar CompilerBase_1 = require(\"../../shaders/compilers/CompilerBase\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar LightingCompiler = (function (_super) {\n    __extends(LightingCompiler, _super);\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function LightingCompiler(elementsClass, lightingPass, shaderLightingObject) {\n        _super.call(this, elementsClass, lightingPass, shaderLightingObject);\n        this._shaderLightingObject = shaderLightingObject;\n        this._lightingPass = lightingPass;\n    }\n    /**\n     * Compile the code for the methods.\n     */\n    LightingCompiler.prototype.pCompileDependencies = function () {\n        _super.prototype.pCompileDependencies.call(this);\n        //compile the lighting code\n        if (this._shaderLightingObject.usesShadows)\n            this.pCompileShadowCode();\n        if (this._shaderLightingObject.usesLights) {\n            this.initLightRegisters();\n            this.compileLightCode();\n        }\n        if (this._shaderLightingObject.usesProbes)\n            this.compileLightProbeCode();\n        this._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n    };\n    /**\n     * Provides the code to provide shadow mapping.\n     */\n    LightingCompiler.prototype.pCompileShadowCode = function () {\n        if (this._shaderLightingObject.normalDependencies > 0) {\n            this._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n        }\n        else {\n            this._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n        }\n    };\n    /**\n     * Initializes constant registers to contain light data.\n     */\n    LightingCompiler.prototype.initLightRegisters = function () {\n        // init these first so we're sure they're in sequence\n        var i, len;\n        if (this._dirLightVertexConstants) {\n            len = this._dirLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index * 4;\n            }\n        }\n        if (this._pointLightVertexConstants) {\n            len = this._pointLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index * 4;\n            }\n        }\n        len = this._dirLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index * 4;\n        }\n        len = this._pointLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index * 4;\n        }\n    };\n    /**\n     * Compiles the shading code for directional and point lights.\n     */\n    LightingCompiler.prototype.compileLightCode = function () {\n        var diffuseColorReg;\n        var specularColorReg;\n        var lightPosReg;\n        var lightDirReg;\n        var vertexRegIndex = 0;\n        var fragmentRegIndex = 0;\n        var addSpec = this._shaderLightingObject.usesLightsForSpecular;\n        var addDiff = this._shaderLightingObject.usesLightsForDiffuse;\n        //compile the shading code for directional lights.\n        for (var i = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n                var lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n                lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            else {\n                lightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            }\n            diffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (this._shaderLightingObject.usesTangentSpace)\n                this._pRegisterCache.removeVertexTempUsage(lightDirReg);\n        }\n        vertexRegIndex = 0;\n        fragmentRegIndex = 0;\n        //compile the shading code for point lights\n        for (var i = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n                lightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n            else\n                lightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            diffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n            var lightVarying;\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                    \"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n            }\n            else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            }\n            else {\n                lightVarying = lightDirReg;\n                this._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n            }\n            if (this._shaderLightingObject.usesLightFallOff) {\n                // calculate attenuation\n                this._pFragmentCode +=\n                    \"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" +\n                        \"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" +\n                        \"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n            }\n            else {\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index * 4;\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            this._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n        }\n    };\n    /**\n     * Compiles shading code for light probes.\n     */\n    LightingCompiler.prototype.compileLightProbeCode = function () {\n        var weightReg;\n        var weightComponents = [\".x\", \".y\", \".z\", \".w\"];\n        var weightRegisters = new Array();\n        var i;\n        var texReg;\n        var addSpec = this._shaderLightingObject.usesProbesForSpecular;\n        var addDiff = this._shaderLightingObject.usesProbesForDiffuse;\n        if (addDiff)\n            this._shaderLightingObject.lightProbeDiffuseIndices = new Array();\n        if (addSpec)\n            this._shaderLightingObject.lightProbeSpecularIndices = new Array();\n        for (i = 0; i < this._pNumProbeRegisters; ++i) {\n            weightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (i == 0)\n                this._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index * 4;\n        }\n        for (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n            weightReg = weightRegisters[Math.floor(i / 4)].toString() + weightComponents[i % 4];\n            if (addDiff) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n            if (addSpec) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n        }\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    LightingCompiler.prototype.pInitRegisterIndices = function () {\n        _super.prototype.pInitRegisterIndices.call(this);\n        this._shaderLightingObject.lightVertexConstantIndex = -1;\n        this._shaderLightingObject.lightFragmentConstantIndex = -1;\n        this._shaderLightingObject.probeWeightsIndex = -1;\n        this._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes / 4);\n        //init light data\n        if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n            this._pointLightVertexConstants = new Array(this._shaderLightingObject.numPointLights);\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 2);\n        }\n        else {\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 3);\n        }\n        if (this._shaderLightingObject.usesTangentSpace) {\n            this._dirLightVertexConstants = new Array(this._shaderLightingObject.numDirectionalLights);\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 2);\n        }\n        else {\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 3);\n        }\n    };\n    return LightingCompiler;\n}(CompilerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingCompiler;\n\n},{\"../../shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\"}],\"awayjs-renderergl/lib/shaders\":[function(require,module,exports){\n\"use strict\";\nvar CompilerBase_1 = require(\"./shaders/compilers/CompilerBase\");\nexports.CompilerBase = CompilerBase_1.default;\nvar LightingCompiler_1 = require(\"./shaders/compilers/LightingCompiler\");\nexports.LightingCompiler = LightingCompiler_1.default;\nvar LightingShader_1 = require(\"./shaders/LightingShader\");\nexports.LightingShader = LightingShader_1.default;\nvar RegisterPool_1 = require(\"./shaders/RegisterPool\");\nexports.RegisterPool = RegisterPool_1.default;\nvar ShaderBase_1 = require(\"./shaders/ShaderBase\");\nexports.ShaderBase = ShaderBase_1.default;\nvar ShaderRegisterCache_1 = require(\"./shaders/ShaderRegisterCache\");\nexports.ShaderRegisterCache = ShaderRegisterCache_1.default;\nvar ShaderRegisterData_1 = require(\"./shaders/ShaderRegisterData\");\nexports.ShaderRegisterData = ShaderRegisterData_1.default;\nvar ShaderRegisterElement_1 = require(\"./shaders/ShaderRegisterElement\");\nexports.ShaderRegisterElement = ShaderRegisterElement_1.default;\n\n},{\"./shaders/LightingShader\":\"awayjs-renderergl/lib/shaders/LightingShader\",\"./shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"./shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"./shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"./shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\",\"./shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"./shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"./shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\"}],\"awayjs-renderergl/lib/sort/IEntitySorter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableMergeSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nvar RenderableMergeSort = (function () {\n    function RenderableMergeSort() {\n    }\n    RenderableMergeSort.prototype.sortBlendedRenderables = function (head) {\n        var headB;\n        var fast;\n        var slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortBlendedRenderables(head);\n        headB = this.sortBlendedRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB) {\n            if (head.zIndex < headB.zIndex) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result)\n                result = l;\n            else\n                curr.next = l;\n            curr = l;\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    RenderableMergeSort.prototype.sortOpaqueRenderables = function (head) {\n        var headB;\n        var fast, slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortOpaqueRenderables(head);\n        headB = this.sortOpaqueRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        var cmp = 0;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB && head != null && headB != null) {\n            // first sort per render order id (reduces program3D switches),\n            // then on render object id (reduces setting props),\n            // then on zIndex (reduces overdraw)\n            var aid = head.renderOrderId;\n            var bid = headB.renderOrderId;\n            if (aid == bid) {\n                var ma = head.surfaceID;\n                var mb = headB.surfaceID;\n                if (ma == mb) {\n                    if (head.zIndex < headB.zIndex)\n                        cmp = 1;\n                    else\n                        cmp = -1;\n                }\n                else if (ma > mb) {\n                    cmp = 1;\n                }\n                else {\n                    cmp = -1;\n                }\n            }\n            else if (aid > bid) {\n                cmp = 1;\n            }\n            else {\n                cmp = -1;\n            }\n            if (cmp < 0) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result) {\n                result = l;\n                curr = l;\n            }\n            else {\n                curr.next = l;\n                curr = l;\n            }\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    return RenderableMergeSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableMergeSort;\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableNullSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.NullSort\n */\nvar RenderableNullSort = (function () {\n    function RenderableNullSort() {\n    }\n    RenderableNullSort.prototype.sortBlendedRenderables = function (head) {\n        return head;\n    };\n    RenderableNullSort.prototype.sortOpaqueRenderables = function (head) {\n        return head;\n    };\n    return RenderableNullSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableNullSort;\n\n},{}],\"awayjs-renderergl/lib/sort\":[function(require,module,exports){\n\"use strict\";\nvar RenderableMergeSort_1 = require(\"./sort/RenderableMergeSort\");\nexports.RenderableMergeSort = RenderableMergeSort_1.default;\nvar RenderableNullSort_1 = require(\"./sort/RenderableNullSort\");\nexports.RenderableNullSort = RenderableNullSort_1.default;\n\n},{\"./sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"./sort/RenderableNullSort\":\"awayjs-renderergl/lib/sort/RenderableNullSort\"}],\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar BasicMaterialPass_1 = require(\"../surfaces/passes/BasicMaterialPass\");\nvar GL_SurfaceBase_1 = require(\"../surfaces/GL_SurfaceBase\");\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_BasicMaterialSurface = (function (_super) {\n    __extends(GL_BasicMaterialSurface, _super);\n    function GL_BasicMaterialSurface(material, elementsClass, renderPool) {\n        _super.call(this, material, elementsClass, renderPool);\n        this._material = material;\n        this._pAddPass(this._pass = new BasicMaterialPass_1.default(this, material, elementsClass, this._stage));\n    }\n    GL_BasicMaterialSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._material = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_BasicMaterialSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._material.blendMode != BlendMode_1.default.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n        this._pass.preserveAlpha = this._material.preserveAlpha; //this._pRequiresBlending;\n        this._pass.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._material.blendMode);\n        //this._pass.forceSeparateMVP = false;\n    };\n    return GL_BasicMaterialSurface;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_BasicMaterialSurface;\n\n},{\"../surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"../surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"awayjs-core/lib/image/BlendMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_DepthSurface = (function (_super) {\n    __extends(GL_DepthSurface, _super);\n    /**\n     *\n     * @param pool\n     * @param surface\n     * @param elementsClass\n     * @param stage\n     */\n    function GL_DepthSurface(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    GL_DepthSurface.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    GL_DepthSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n    };\n    GL_DepthSurface.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index] = 1.0;\n        data[index + 1] = 255.0;\n        data[index + 2] = 65025.0;\n        data[index + 3] = 16581375.0;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        code += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        //codeF += \"mov ft1.w, fc1.w\t\\n\" +\n        //    \"mov ft0.w, fc0.x\t\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        registerCache.removeFragmentTempUsage(temp1);\n        registerCache.removeFragmentTempUsage(temp2);\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            this._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return GL_DepthSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_DepthSurface;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nvar DistanceRender = (function (_super) {\n    __extends(DistanceRender, _super);\n    /**\n     * Creates a new DistanceRender object.\n     *\n     * @param material The material to which this pass belongs.\n     */\n    function DistanceRender(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    DistanceRender.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    /**\n     * Initializes the unchanging constant data for this material.\n     */\n    DistanceRender.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    DistanceRender.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        shader.viewDirDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n        if (shader.viewDirDependencies > 0)\n            shader.globalPosDependencies++;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code;\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        // squared distance to view\n        code = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        var f = camera.projection.far;\n        f = 1 / (2 * f * f);\n        // sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n        var index = this._fragmentConstantsIndex;\n        var data = this._shader.fragmentConstantData;\n        data[index] = 1.0 * f;\n        data[index + 1] = 255.0 * f;\n        data[index + 2] = 65025.0 * f;\n        data[index + 3] = 16581375.0 * f;\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            data[index + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return DistanceRender;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRender;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_SkyboxSurface = (function (_super) {\n    __extends(GL_SkyboxSurface, _super);\n    function GL_SkyboxSurface(skybox, elementsClass, renderPool) {\n        _super.call(this, skybox, elementsClass, renderPool);\n        this._skybox = skybox;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._texture = this._shader.getAbstraction(this._skybox.texture);\n        this._pAddPass(this);\n    }\n    GL_SkyboxSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._skybox.texture));\n        this._texture = null;\n        this._skybox = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._surface.blendMode != BlendMode_1.default.NORMAL);\n        this.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._surface.blendMode);\n    };\n    GL_SkyboxSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.usesPositionFragment = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n    };\n    GL_SkyboxSurface.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        this._texture._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        this._stage.context.setDepthTest(false, ContextGLCompareMode_1.default.LESS);\n        this._texture.activate(this);\n    };\n    return GL_SkyboxSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxSurface;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar MaterialBase_1 = require(\"awayjs-display/lib/materials/MaterialBase\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar PassEvent_1 = require(\"../events/PassEvent\");\n/**\n *\n * @class away.pool.Passes\n */\nvar GL_SurfaceBase = (function (_super) {\n    __extends(GL_SurfaceBase, _super);\n    function GL_SurfaceBase(surface, elementsClass, renderPool) {\n        var _this = this;\n        _super.call(this, surface, renderPool);\n        this.usages = 0;\n        this._forceSeparateMVP = false;\n        this._invalidAnimation = true;\n        this._invalidRender = true;\n        this._invalidImages = true;\n        this._passes = new Array();\n        this._imageIndices = new Object();\n        this._pRequiresBlending = false;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onInvalidateAnimationDelegate = function (event) { return _this.onInvalidateAnimation(event); };\n        this._onInvalidatePassesDelegate = function (event) { return _this.onInvalidatePasses(event); };\n        this.surfaceID = surface.id;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = renderPool.stage;\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n        this._onPassInvalidateDelegate = function (event) { return _this.onPassInvalidate(event); };\n    }\n    Object.defineProperty(GL_SurfaceBase.prototype, \"requiresBlending\", {\n        /**\n         * Indicates whether or not the renderable requires alpha blending during rendering.\n         */\n        get: function () {\n            return this._pRequiresBlending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"renderOrderId\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._renderOrderId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"passes\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._passes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"surface\", {\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"numImages\", {\n        get: function () {\n            if (this._invalidImages)\n                this._updateImages();\n            return this._numImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_SurfaceBase.prototype._iIncludeDependencies = function (shader) {\n        this._elementsClass._iIncludeDependencies(shader);\n        shader.alphaThreshold = this._surface.alphaThreshold;\n        shader.useImageRect = this._surface.imageRect;\n        shader.usesCurves = this._surface.curves;\n        if (this._surface instanceof MaterialBase_1.default) {\n            var material = this._surface;\n            shader.useAlphaPremultiplied = material.alphaPremultiplied;\n            shader.useBothSides = material.bothSides;\n            shader.usesUVTransform = material.animateUVs;\n            shader.usesColorTransform = material.useColorTransform;\n        }\n    };\n    GL_SurfaceBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (this._invalidImages)\n            this._updateImages();\n        return this._imageIndices[texture.id][index];\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n            this._passes[i].dispose();\n        }\n        this._passes = null;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        this._invalidRender = true;\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidatePasses = function (event) {\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++)\n            this._passes[i].invalidate();\n        this._invalidAnimation = true;\n        this._invalidImages = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidateAnimation = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     * @param surface\n     */\n    GL_SurfaceBase.prototype._updateAnimation = function () {\n        if (this._invalidRender)\n            this._pUpdateRender();\n        this._invalidAnimation = false;\n        var enabledGPUAnimation = this._getEnabledGPUAnimation();\n        var renderOrderId = 0;\n        var mult = 1;\n        var shader;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            shader = this._passes[i].shader;\n            shader.usesAnimation = enabledGPUAnimation;\n            renderOrderId += shader.programData.id * mult;\n            mult *= 1000;\n        }\n        this._renderOrderId = renderOrderId;\n    };\n    GL_SurfaceBase.prototype._updateImages = function () {\n        this._invalidImages = false;\n        var numTextures = this._surface.getNumTextures();\n        var texture;\n        var numImages;\n        var images;\n        var image;\n        var sampler;\n        var index = 0;\n        for (var i = 0; i < numTextures; i++) {\n            texture = this._surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            images = this._imageIndices[texture.id] = new Array();\n            for (var j = 0; j < numImages; j++) {\n                image = texture.getImageAt(j) || (this._surface.style ? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultImage2D();\n                this.images[index] = this._stage.getAbstraction(image);\n                sampler = texture.getSamplerAt(j) || (this._surface.style ? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultSampler();\n                this.samplers[index] = this._stage.getAbstraction(sampler);\n                images[j] = index++;\n            }\n        }\n        this._numImages = index;\n    };\n    /**\n     * Performs any processing that needs to occur before any of its passes are used.\n     *\n     * @private\n     */\n    GL_SurfaceBase.prototype._pUpdateRender = function () {\n        this._invalidRender = false;\n        //overrride to update shader object properties\n    };\n    /**\n     * Removes a pass from the surface.\n     * @param pass The pass to be removed.\n     */\n    GL_SurfaceBase.prototype._pRemovePass = function (pass) {\n        pass.removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.splice(this._passes.indexOf(pass), 1);\n    };\n    /**\n     * Removes all passes from the surface\n     */\n    GL_SurfaceBase.prototype._pClearPasses = function () {\n        var len = this._passes.length;\n        for (var i = 0; i < len; ++i)\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.length = 0;\n    };\n    /**\n     * Adds a pass to the surface\n     * @param pass\n     */\n    GL_SurfaceBase.prototype._pAddPass = function (pass) {\n        this._passes.push(pass);\n        pass.addEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n    };\n    /**\n     * Listener for when a pass's shader code changes. It recalculates the render order id.\n     */\n    GL_SurfaceBase.prototype.onPassInvalidate = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     * test if animation will be able to run on gpu BEFORE compiling materials\n     * test if the shader objects supports animating the animation set in the vertex shader\n     * if any object using this material fails to support accelerated animations for any of the shader objects,\n     * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n     */\n    GL_SurfaceBase.prototype._getEnabledGPUAnimation = function () {\n        if (this._surface.animationSet) {\n            this._surface.animationSet.resetGPUCompatibility();\n            var renderables = this._surface.iOwners;\n            var numOwners = renderables.length;\n            var len = this._passes.length;\n            var shader;\n            for (var i = 0; i < len; i++) {\n                shader = this._passes[i].shader;\n                shader.usesAnimation = false;\n                for (var j = 0; j < numOwners; j++)\n                    if (renderables[j].animator)\n                        renderables[j].animator.testGPUCompatibility(shader);\n            }\n            return !this._surface.animationSet.usesCPU;\n        }\n        return false;\n    };\n    return GL_SurfaceBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfaceBase;\n\n},{\"../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/SurfaceEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined,\"awayjs-display/lib/materials/MaterialBase\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PassEvent_1 = require(\"../events/PassEvent\");\nvar GL_SurfaceBase_1 = require(\"../surfaces/GL_SurfaceBase\");\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar GL_SurfacePassBase = (function (_super) {\n    __extends(GL_SurfacePassBase, _super);\n    function GL_SurfacePassBase() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    GL_SurfacePassBase.prototype.invalidate = function () {\n        this._shader.invalidateProgram();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    GL_SurfacePassBase.prototype.dispose = function () {\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    GL_SurfacePassBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        this._shader._iRender(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    GL_SurfacePassBase.prototype._iInitConstantData = function (shader) {\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return GL_SurfacePassBase;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfacePassBase;\n\n},{\"../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"../surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\"}],\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/SurfacePool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar SurfacePool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function SurfacePool(elementsClass, stage, surfaceClassGL) {\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        this._abstractionPool = new Object();\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n        this._surfaceClassGL = surfaceClassGL;\n    }\n    Object.defineProperty(SurfacePool.prototype, \"stage\", {\n        get: function () {\n            return this._stage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     * @returns IElements\n     */\n    SurfacePool.prototype.getAbstraction = function (surface) {\n        return (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     */\n    SurfacePool.prototype.clearAbstraction = function (surface) {\n        delete this._abstractionPool[surface.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    SurfacePool.registerAbstraction = function (surfaceClassGL, assetClass) {\n        SurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n    };\n    SurfacePool._abstractionClassPool = new Object();\n    return SurfacePool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SurfacePool;\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ShaderBase_1 = require(\"../../shaders/ShaderBase\");\nvar PassBase_1 = require(\"../../surfaces/passes/PassBase\");\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterialPass = (function (_super) {\n    __extends(BasicMaterialPass, _super);\n    function BasicMaterialPass(render, surface, elementsClass, stage) {\n        _super.call(this, render, surface, elementsClass, stage);\n        this._diffuseR = 1;\n        this._diffuseG = 1;\n        this._diffuseB = 1;\n        this._diffuseA = 1;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this.invalidate();\n    }\n    BasicMaterialPass.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        if (this._textureVO != null)\n            shader.uvDependencies++;\n    };\n    BasicMaterialPass.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    BasicMaterialPass.prototype.dispose = function () {\n        if (this._textureVO) {\n            this._textureVO.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surface.getTextureAt(0)));\n            this._textureVO = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iGetFragmentCode = function (shader, regCache, sharedReg) {\n        var code = \"\";\n        var alphaReg;\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n        var targetReg = sharedReg.shadedTarget;\n        if (this._textureVO != null) {\n            code += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n            if (shader.alphaThreshold > 0) {\n                var cutOffReg = regCache.getFreeFragmentConstant();\n                this._fragmentConstantsIndex = cutOffReg.index * 4;\n                code += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n            }\n        }\n        else if (shader.colorBufferIndex != -1) {\n            code += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n        }\n        else {\n            var diffuseInputReg = regCache.getFreeFragmentConstant();\n            this._fragmentConstantsIndex = diffuseInputReg.index * 4;\n            code += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n        }\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n        return code;\n    };\n    BasicMaterialPass.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        if (this._textureVO != null)\n            this._textureVO._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO != null) {\n            this._textureVO.activate(this._render);\n            if (this._shader.alphaThreshold > 0)\n                this._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n        }\n        else if (this._shader.colorBufferIndex == -1) {\n            var index = this._fragmentConstantsIndex;\n            var data = this._shader.fragmentConstantData;\n            data[index] = this._diffuseR;\n            data[index + 1] = this._diffuseG;\n            data[index + 2] = this._diffuseB;\n            data[index + 3] = this._diffuseA;\n        }\n    };\n    return BasicMaterialPass;\n}(PassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicMaterialPass;\n\n},{\"../../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../../surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/IPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/PassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar PassEvent_1 = require(\"../../events/PassEvent\");\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar PassBase = (function (_super) {\n    __extends(PassBase, _super);\n    /**\n     * Creates a new PassBase object.\n     */\n    function PassBase(render, surface, elementsClass, stage) {\n        _super.call(this);\n        this._preserveAlpha = true;\n        this._forceSeparateMVP = false;\n        this._render = render;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n    }\n    Object.defineProperty(PassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"forceSeparateMVP\", {\n        /**\n         * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n         * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n         * projection code.\n         */\n        get: function () {\n            return this._forceSeparateMVP;\n        },\n        set: function (value) {\n            if (this._forceSeparateMVP == value)\n                return;\n            this._forceSeparateMVP = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PassBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._render.getImageIndex(texture, index);\n    };\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    PassBase.prototype.invalidate = function () {\n        this._shader.invalidateProgram();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n     */\n    PassBase.prototype.dispose = function () {\n        this._render = null;\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    PassBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        this._shader._iRender(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    PassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    PassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    PassBase.prototype._iIncludeDependencies = function (shader) {\n        this._render._iIncludeDependencies(shader);\n        if (this._forceSeparateMVP)\n            shader.globalPosDependencies++;\n    };\n    PassBase.prototype._iInitConstantData = function (shader) {\n    };\n    PassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return PassBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassBase;\n\n},{\"../../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-renderergl/lib/surfaces\":[function(require,module,exports){\n\"use strict\";\nvar BasicMaterialPass_1 = require(\"./surfaces/passes/BasicMaterialPass\");\nexports.BasicMaterialPass = BasicMaterialPass_1.default;\nvar PassBase_1 = require(\"./surfaces/passes/PassBase\");\nexports.PassBase = PassBase_1.default;\nvar GL_BasicMaterialSurface_1 = require(\"./surfaces/GL_BasicMaterialSurface\");\nexports.GL_BasicMaterialSurface = GL_BasicMaterialSurface_1.default;\nvar GL_DepthSurface_1 = require(\"./surfaces/GL_DepthSurface\");\nexports.GL_DepthSurface = GL_DepthSurface_1.default;\nvar GL_DistanceSurface_1 = require(\"./surfaces/GL_DistanceSurface\");\nexports.GL_DistanceSurface = GL_DistanceSurface_1.default;\nvar GL_SkyboxSurface_1 = require(\"./surfaces/GL_SkyboxSurface\");\nexports.GL_SkyboxSurface = GL_SkyboxSurface_1.default;\nvar GL_SurfaceBase_1 = require(\"./surfaces/GL_SurfaceBase\");\nexports.GL_SurfaceBase = GL_SurfaceBase_1.default;\nvar GL_SurfacePassBase_1 = require(\"./surfaces/GL_SurfacePassBase\");\nexports.GL_SurfacePassBase = GL_SurfacePassBase_1.default;\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\nexports.SurfacePool = SurfacePool_1.default;\n\n},{\"./surfaces/GL_BasicMaterialSurface\":\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\",\"./surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\",\"./surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\",\"./surfaces/GL_SkyboxSurface\":\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\",\"./surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"./surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"./surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"./surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\"}],\"awayjs-renderergl/lib/textures/GL_Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MappingMode_1 = require(\"awayjs-display/lib/textures/MappingMode\");\nvar GL_TextureBase_1 = require(\"../textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nvar GL_Single2DTexture = (function (_super) {\n    __extends(GL_Single2DTexture, _super);\n    function GL_Single2DTexture(single2DTexture, shader) {\n        _super.call(this, single2DTexture, shader);\n        this._single2DTexture = single2DTexture;\n    }\n    GL_Single2DTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._single2DTexture = null;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The uv coordinate vector with which to sample the texture map.\n     * @returns {string}\n     * @private\n     */\n    GL_Single2DTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var code = \"\";\n        var wrap = \"wrap\";\n        var format = \"\"; //this.getFormatString(this._single2DTexture.image2D);\n        var filter = \"linear,miplinear\";\n        var temp;\n        //modify depending on mapping mode\n        if (this._single2DTexture.mappingMode == MappingMode_1.default.RADIAL_GRADIENT) {\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n            code += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n            code += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n            inputReg = temp;\n        }\n        //handles texture atlasing\n        if (this._shader.useImageRect) {\n            var samplerReg = regCache.getFreeFragmentConstant();\n            this._samplerIndex = samplerReg.index * 4;\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n            code += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n            inputReg = temp;\n        }\n        this._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        code += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n        return code;\n    };\n    GL_Single2DTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        sampler.activate(this._textureIndex);\n        var image = render.images[this._imageIndex];\n        image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    GL_Single2DTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        var image = renderable.images[this._imageIndex];\n        if (image)\n            image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect && sampler) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    return GL_Single2DTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Single2DTexture;\n\n},{\"../textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\",\"awayjs-display/lib/textures/MappingMode\":undefined}],\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TextureBase_1 = require(\"../textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.TextureDataBase\n */\nvar GL_SingleCubeTexture = (function (_super) {\n    __extends(GL_SingleCubeTexture, _super);\n    function GL_SingleCubeTexture(singleCubeTexture, shader) {\n        _super.call(this, singleCubeTexture, shader);\n        this._singleCubeTexture = singleCubeTexture;\n    }\n    GL_SingleCubeTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._singleCubeTexture = null;\n    };\n    GL_SingleCubeTexture.prototype._iIncludeDependencies = function (includeInput) {\n        if (includeInput === void 0) { includeInput = true; }\n        if (includeInput)\n            this._shader.usesPositionFragment = true;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The direction vector with which to sample the cube map.\n     * @returns {string}\n     * @private\n     */\n    GL_SingleCubeTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var format = \"\"; //this.getFormatString(this._singleCubeTexture.imageCube);\n        var filter = \"linear,miplinear\";\n        this._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        return \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n    };\n    GL_SingleCubeTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (render.images[this._imageIndex])\n            render.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    GL_SingleCubeTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (renderable.images[this._imageIndex] && sampler)\n            renderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    return GL_SingleCubeTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SingleCubeTexture;\n\n},{\"../textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/textures/GL_TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar ContextGLTextureFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nvar GL_TextureBase = (function (_super) {\n    __extends(GL_TextureBase, _super);\n    function GL_TextureBase(texture, shader) {\n        _super.call(this, texture, shader);\n        this._texture = texture;\n        this._shader = shader;\n        this._stage = shader._stage;\n    }\n    /**\n     *\n     */\n    GL_TextureBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture = null;\n        this._shader = null;\n        this._stage = null;\n    };\n    GL_TextureBase.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        if (inputReg === void 0) { inputReg = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    GL_TextureBase.prototype._setRenderState = function (renderable) {\n        //overidden for state logic\n    };\n    GL_TextureBase.prototype.activate = function (render) {\n        //overridden for activation logic\n    };\n    GL_TextureBase.prototype.getTextureReg = function (imageIndex, regCache, sharedReg) {\n        var index = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n        if (index == -1) {\n            var textureReg = regCache.getFreeTextureReg();\n            sharedReg.textures.push(textureReg);\n            this._shader.imageIndices.push(imageIndex);\n            return textureReg;\n        }\n        return sharedReg.textures[index];\n    };\n    GL_TextureBase.prototype.getFormatString = function (image) {\n        switch (image.format) {\n            case ContextGLTextureFormat_1.default.COMPRESSED:\n                return \"dxt1,\";\n            case ContextGLTextureFormat_1.default.COMPRESSED_ALPHA:\n                return \"dxt5,\";\n            default:\n                return \"\";\n        }\n    };\n    return GL_TextureBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TextureBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-stagegl/lib/base/ContextGLTextureFormat\":undefined}],\"awayjs-renderergl/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar GL_Single2DTexture_1 = require(\"./textures/GL_Single2DTexture\");\nexports.GL_Single2DTexture = GL_Single2DTexture_1.default;\nvar GL_SingleCubeTexture_1 = require(\"./textures/GL_SingleCubeTexture\");\nexports.GL_SingleCubeTexture = GL_SingleCubeTexture_1.default;\nvar GL_TextureBase_1 = require(\"./textures/GL_TextureBase\");\nexports.GL_TextureBase = GL_TextureBase_1.default;\n\n},{\"./textures/GL_Single2DTexture\":\"awayjs-renderergl/lib/textures/GL_Single2DTexture\",\"./textures/GL_SingleCubeTexture\":\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\",\"./textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/tools/commands/Merge\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nvar Merge = (function () {\n    /**\n     * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n     * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n     * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n     * If true, only receiver geometry and resulting sprite are kept in  memory.\n     * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n     */\n    function Merge(keepMaterial, disposeSources, objectSpace) {\n        if (keepMaterial === void 0) { keepMaterial = false; }\n        if (disposeSources === void 0) { disposeSources = false; }\n        if (objectSpace === void 0) { objectSpace = false; }\n        this._keepMaterial = keepMaterial;\n        this._disposeSources = disposeSources;\n        this._objectSpace = objectSpace;\n    }\n    Object.defineProperty(Merge.prototype, \"disposeSources\", {\n        get: function () {\n            return this._disposeSources;\n        },\n        /**\n         * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._disposeSources = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"keepMaterial\", {\n        get: function () {\n            return this._keepMaterial;\n        },\n        /**\n         * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._keepMaterial = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"objectSpace\", {\n        get: function () {\n            return this._objectSpace;\n        },\n        /**\n         * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n         */\n        set: function (b) {\n            this._objectSpace = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n     *\n     * @param    receiver           The Sprite to receive the merged contents of the container.\n     * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n     *\n     * @return The merged Sprite instance.\n     */\n    Merge.prototype.applyToContainer = function (receiver, objectContainer) {\n        this.reset();\n        //collect container sprites\n        this.parseContainer(receiver, objectContainer);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of the sprites.\n     * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n     */\n    Merge.prototype.applyToSpritees = function (receiver, sprites) {\n        this.reset();\n        if (!sprites.length)\n            return;\n        //collect sprites in vector\n        for (var i = 0; i < sprites.length; i++)\n            if (sprites[i] != receiver)\n                this.collect(sprites[i], this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of both sprites.\n     * @param    sprite        The Sprite to be merged with the receiver sprite\n     */\n    Merge.prototype.apply = function (receiver, sprite) {\n        this.reset();\n        //collect sprite\n        this.collect(sprite, this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    Merge.prototype.reset = function () {\n        this._toDispose = new Array();\n        this._graphicVOs = new Array();\n    };\n    Merge.prototype.merge = function (destSprite, dispose) {\n        var i;\n        //var oldGraphics:Graphics;\n        var destGraphics;\n        var useSubMaterials;\n        //oldGraphics = destSprite.graphics.clone();\n        destGraphics = destSprite.graphics;\n        // Only apply materials directly to sub-sprites if necessary,\n        // i.e. if there is more than one material available.\n        useSubMaterials = (this._graphicVOs.length > 1);\n        for (i = 0; i < this._graphicVOs.length; i++) {\n            var elements = new TriangleElements_1.default(new AttributesBuffer_1.default());\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            var data = this._graphicVOs[i];\n            elements.setIndices(data.indices);\n            elements.setPositions(data.vertices);\n            elements.setNormals(data.normals);\n            elements.setTangents(data.tangents);\n            elements.setUVs(data.uvs);\n            destGraphics.addGraphic(elements);\n            if (this._keepMaterial && useSubMaterials)\n                destSprite.graphics[i].material = data.material;\n        }\n        if (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n            destSprite.material = this._graphicVOs[0].material;\n        if (dispose) {\n            var len = this._toDispose.length;\n            for (var i; i < len; i++)\n                this._toDispose[i].dispose();\n            ;\n        }\n        this._toDispose = null;\n    };\n    Merge.prototype.collect = function (sprite, dispose) {\n        var subIdx;\n        var calc;\n        for (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n            var i;\n            var len;\n            var iIdx /*uint*/, vIdx /*uint*/, nIdx /*uint*/, tIdx /*uint*/, uIdx;\n            var indexOffset;\n            var elements;\n            var vo;\n            var vertices;\n            var normals;\n            var tangents;\n            var ind, pd, nd, td, ud;\n            elements = sprite.graphics.getGraphicAt(subIdx).elements;\n            pd = elements.positions.get(elements.numVertices);\n            nd = elements.normals.get(elements.numVertices);\n            td = elements.tangents.get(elements.numVertices);\n            ud = elements.uvs.get(elements.numVertices);\n            // Get (or create) a VO for this material\n            vo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n            // Vertices and normals are copied to temporary vectors, to be transformed\n            // before concatenated onto those of the data. This is unnecessary if no\n            // transformation will be performed, i.e. for object space merging.\n            vertices = (this._objectSpace) ? vo.vertices : new Array();\n            normals = (this._objectSpace) ? vo.normals : new Array();\n            tangents = (this._objectSpace) ? vo.tangents : new Array();\n            // Copy over vertex attributes\n            vIdx = vertices.length;\n            nIdx = normals.length;\n            tIdx = tangents.length;\n            uIdx = vo.uvs.length;\n            len = elements.numVertices;\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                // Position\n                vertices[vIdx++] = pd[calc];\n                vertices[vIdx++] = pd[calc + 1];\n                vertices[vIdx++] = pd[calc + 2];\n                // Normal\n                normals[nIdx++] = nd[calc];\n                normals[nIdx++] = nd[calc + 1];\n                normals[nIdx++] = nd[calc + 2];\n                // Tangent\n                tangents[tIdx++] = td[calc];\n                tangents[tIdx++] = td[calc + 1];\n                tangents[tIdx++] = td[calc + 2];\n                // UV\n                vo.uvs[uIdx++] = ud[i * 2];\n                vo.uvs[uIdx++] = ud[i * 2 + 1];\n            }\n            // Copy over triangle indices\n            indexOffset = (!this._objectSpace) ? vo.vertices.length / 3 : 0;\n            iIdx = vo.indices.length;\n            len = elements.numElements;\n            ind = elements.indices.get(len);\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                vo.indices[iIdx++] = ind[calc] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n            }\n            if (!this._objectSpace) {\n                sprite.sceneTransform.transformVectors(vertices, vertices);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n                // Copy vertex data from temporary (transformed) vectors\n                vIdx = vo.vertices.length;\n                nIdx = vo.normals.length;\n                tIdx = vo.tangents.length;\n                len = vertices.length;\n                for (i = 0; i < len; i++) {\n                    vo.vertices[vIdx++] = vertices[i];\n                    vo.normals[nIdx++] = normals[i];\n                    vo.tangents[tIdx++] = tangents[i];\n                }\n            }\n        }\n        if (dispose)\n            this._toDispose.push(sprite);\n    };\n    Merge.prototype.getGraphicData = function (material) {\n        var data;\n        if (this._keepMaterial) {\n            var i;\n            var len;\n            len = this._graphicVOs.length;\n            for (i = 0; i < len; i++) {\n                if (this._graphicVOs[i].material == material) {\n                    data = this._graphicVOs[i];\n                    break;\n                }\n            }\n        }\n        else if (this._graphicVOs.length) {\n            // If materials are not to be kept, all data can be\n            // put into a single VO, so return that one.\n            data = this._graphicVOs[0];\n        }\n        // No data (for this material) found, create new.\n        if (!data) {\n            data = new GraphicVO();\n            data.vertices = new Array();\n            data.normals = new Array();\n            data.tangents = new Array();\n            data.uvs = new Array();\n            data.indices = new Array();\n            data.material = material;\n            this._graphicVOs.push(data);\n        }\n        return data;\n    };\n    Merge.prototype.parseContainer = function (receiver, object) {\n        var child;\n        var i;\n        if (object instanceof Sprite_1.default && object != receiver)\n            this.collect(object, this._disposeSources);\n        for (i = 0; i < object.numChildren; ++i) {\n            child = object.getChildAt(i);\n            this.parseContainer(receiver, child);\n        }\n    };\n    return Merge;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Merge;\nvar GraphicVO = (function () {\n    function GraphicVO() {\n    }\n    return GraphicVO;\n}());\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-display/lib/display/Sprite\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleGraphicsTransform = (function () {\n    function ParticleGraphicsTransform() {\n    }\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"vertexTransform\", {\n        get: function () {\n            return this._defaultVertexTransform;\n        },\n        set: function (value) {\n            this._defaultVertexTransform = value;\n            this._defaultInvVertexTransform = value.clone();\n            this._defaultInvVertexTransform.invert();\n            this._defaultInvVertexTransform.transpose();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"UVTransform\", {\n        get: function () {\n            return this._defaultUVTransform;\n        },\n        set: function (value) {\n            this._defaultUVTransform = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"invVertexTransform\", {\n        get: function () {\n            return this._defaultInvVertexTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ParticleGraphicsTransform;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsTransform;\n\n},{}],\"awayjs-renderergl/lib/tools\":[function(require,module,exports){\n\"use strict\";\nvar Merge_1 = require(\"./tools/commands/Merge\");\nexports.Merge = Merge_1.default;\nvar ParticleGraphicsTransform_1 = require(\"./tools/data/ParticleGraphicsTransform\");\nexports.ParticleGraphicsTransform = ParticleGraphicsTransform_1.default;\n\n},{\"./tools/commands/Merge\":\"awayjs-renderergl/lib/tools/commands/Merge\",\"./tools/data/ParticleGraphicsTransform\":\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\"}],\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleData_1 = require(\"awayjs-display/lib/animators/data/ParticleData\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\n/**\n * ...\n */\nvar ParticleGraphicsHelper = (function () {\n    function ParticleGraphicsHelper() {\n    }\n    ParticleGraphicsHelper.generateGraphics = function (output, graphicsArray, transforms) {\n        if (transforms === void 0) { transforms = null; }\n        var indicesVector = new Array();\n        var positionsVector = new Array();\n        var normalsVector = new Array();\n        var tangentsVector = new Array();\n        var uvsVector = new Array();\n        var vertexCounters = new Array();\n        var particles = new Array();\n        var elementsArray = new Array();\n        var numParticles = graphicsArray.length;\n        var sourceGraphics;\n        var sourceElements;\n        var numGraphics;\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var uvs;\n        var vertexCounter;\n        var elements;\n        var i;\n        var j;\n        var sub2SubMap = new Array();\n        var tempVertex = new Vector3D_1.default;\n        var tempNormal = new Vector3D_1.default;\n        var tempTangents = new Vector3D_1.default;\n        var tempUV = new Point_1.default;\n        for (i = 0; i < numParticles; i++) {\n            sourceGraphics = graphicsArray[i];\n            numGraphics = sourceGraphics.count;\n            for (var srcIndex = 0; srcIndex < numGraphics; srcIndex++) {\n                //create a different particle subgeometry group for each source subgeometry in a particle.\n                if (sub2SubMap.length <= srcIndex) {\n                    sub2SubMap.push(elementsArray.length);\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                sourceElements = sourceGraphics.getGraphicAt(srcIndex).elements;\n                //add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n                if (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n                    //update submap and add new subgeom vectors\n                    sub2SubMap[srcIndex] = elementsArray.length;\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                j = sub2SubMap[srcIndex];\n                //select the correct vector\n                indices = indicesVector[j];\n                positions = positionsVector[j];\n                normals = normalsVector[j];\n                tangents = tangentsVector[j];\n                uvs = uvsVector[j];\n                vertexCounter = vertexCounters[j];\n                elements = elementsArray[j];\n                var particleData = new ParticleData_1.default();\n                particleData.numVertices = sourceElements.numVertices;\n                particleData.startVertexIndex = vertexCounter;\n                particleData.particleIndex = i;\n                particleData.elements = elements;\n                particles.push(particleData);\n                vertexCounters[j] += sourceElements.numVertices;\n                var k;\n                var tempLen;\n                var compact = sourceElements;\n                var product;\n                var sourcePositions;\n                var sourceNormals;\n                var sourceTangents;\n                var sourceUVs;\n                if (compact) {\n                    tempLen = compact.numVertices;\n                    sourcePositions = compact.positions.get(tempLen);\n                    sourceNormals = compact.normals.get(tempLen);\n                    sourceTangents = compact.tangents.get(tempLen);\n                    sourceUVs = compact.uvs.get(tempLen);\n                    if (transforms) {\n                        var particleGraphicsTransform = transforms[i];\n                        var vertexTransform = particleGraphicsTransform.vertexTransform;\n                        var invVertexTransform = particleGraphicsTransform.invVertexTransform;\n                        var UVTransform = particleGraphicsTransform.UVTransform;\n                        for (k = 0; k < tempLen; k++) {\n                            /*\n                             * 0 - 2: vertex position X, Y, Z\n                             * 3 - 5: normal X, Y, Z\n                             * 6 - 8: tangent X, Y, Z\n                             * 9 - 10: U V\n                             * 11 - 12: Secondary U V*/\n                            product = k * 3;\n                            tempVertex.x = sourcePositions[product];\n                            tempVertex.y = sourcePositions[product + 1];\n                            tempVertex.z = sourcePositions[product + 2];\n                            tempNormal.x = sourceNormals[product];\n                            tempNormal.y = sourceNormals[product + 1];\n                            tempNormal.z = sourceNormals[product + 2];\n                            tempTangents.x = sourceTangents[product];\n                            tempTangents.y = sourceTangents[product + 1];\n                            tempTangents.z = sourceTangents[product + 2];\n                            tempUV.x = sourceUVs[k * 2];\n                            tempUV.y = sourceUVs[k * 2 + 1];\n                            if (vertexTransform) {\n                                tempVertex = vertexTransform.transformVector(tempVertex);\n                                tempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n                                tempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n                            }\n                            if (UVTransform)\n                                tempUV = UVTransform.transformPoint(tempUV);\n                            //this is faster than that only push one data\n                            positions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n                            normals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n                            tangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n                            uvs.push(tempUV.x, tempUV.y);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < tempLen; k++) {\n                            product = k * 3;\n                            //this is faster than that only push one data\n                            positions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n                            normals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n                            tangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n                            uvs.push(sourceUVs[k * 2], sourceUVs[k * 2 + 1]);\n                        }\n                    }\n                }\n                else {\n                }\n                tempLen = sourceElements.numElements;\n                var sourceIndices = sourceElements.indices.get(tempLen);\n                for (k = 0; k < tempLen; k++) {\n                    product = k * 3;\n                    indices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n                }\n            }\n        }\n        output.particles = particles;\n        output.numParticles = numParticles;\n        numParticles = elementsArray.length;\n        for (i = 0; i < numParticles; i++) {\n            elements = elementsArray[i];\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(indicesVector[i]);\n            elements.setPositions(positionsVector[i]);\n            elements.setNormals(normalsVector[i]);\n            elements.setTangents(tangentsVector[i]);\n            elements.setUVs(uvsVector[i]);\n            output.addGraphic(elements);\n        }\n    };\n    ParticleGraphicsHelper.MAX_VERTEX = 65535;\n    return ParticleGraphicsHelper;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsHelper;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/data/ParticleData\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\n/**\n *\n */\nvar PerspectiveMatrix3D = (function (_super) {\n    __extends(PerspectiveMatrix3D, _super);\n    function PerspectiveMatrix3D(v) {\n        if (v === void 0) { v = null; }\n        _super.call(this, v);\n    }\n    PerspectiveMatrix3D.prototype.perspectiveFieldOfViewLH = function (fieldOfViewY, aspectRatio, zNear, zFar) {\n        var yScale = 1 / Math.tan(fieldOfViewY / 2);\n        var xScale = yScale / aspectRatio;\n        this.rawData[0] = xScale;\n        this.rawData[1] = 0.0;\n        this.rawData[2] = 0.0;\n        this.rawData[3] = 0.0;\n        this.rawData[4] = 0.0;\n        this.rawData[5] = yScale;\n        this.rawData[6] = 0.0;\n        this.rawData[7] = 0.0;\n        this.rawData[8] = 0.0;\n        this.rawData[9] = 0.0;\n        this.rawData[10] = zFar / (zFar - zNear);\n        this.rawData[11] = 1.0;\n        this.rawData[12] = 0.0;\n        this.rawData[13] = 0.0;\n        this.rawData[14] = (zNear * zFar) / (zNear - zFar);\n        this.rawData[15] = 0.0;\n    };\n    return PerspectiveMatrix3D;\n}(Matrix3D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PerspectiveMatrix3D;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar ParticleGraphicsHelper_1 = require(\"./utils/ParticleGraphicsHelper\");\nexports.ParticleGraphicsHelper = ParticleGraphicsHelper_1.default;\nvar PerspectiveMatrix3D_1 = require(\"./utils/PerspectiveMatrix3D\");\nexports.PerspectiveMatrix3D = PerspectiveMatrix3D_1.default;\n\n},{\"./utils/ParticleGraphicsHelper\":\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\",\"./utils/PerspectiveMatrix3D\":\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\"}]},{},[1])\n\n",
    "import * as animators\t\t\t\tfrom \"./lib/animators\";\nimport * as elements\t\t\t\tfrom \"./lib/elements\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as filters\t\t\t\t\tfrom \"./lib/filters\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as renderables\t\t\t\tfrom \"./lib/renderables\";\nimport * as shaders\t\t\t\t\tfrom \"./lib/shaders\";\nimport * as sort\t\t\t\t\tfrom \"./lib/sort\";\nimport * as surfaces\t\t\t\tfrom \"./lib/surfaces\";\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\nimport * as tools\t\t\t\t\tfrom \"./lib/tools\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\nimport DefaultRenderer\t\t\t\tfrom \"./lib/DefaultRenderer\";\nimport DepthRenderer\t\t\t\tfrom \"./lib/DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./lib/DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./lib/Filter3DRenderer\";\nimport RendererBase\t\t\t\t\tfrom \"./lib/RendererBase\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\n\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox);\n\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements);\n\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(renderables.GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(renderables.GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox);\n\nexport {\n\tanimators,\n\telements,\n\terrors,\n\tevents,\n\tfilters,\n\tmanagers,\n\trenderables,\n\tshaders,\n\tsort,\n\tsurfaces,\n\ttextures,\n\ttools,\n\tutils,\n\tDefaultRenderer,\n\tDepthRenderer,\n\tDistanceRenderer,\n\tFilter3DRenderer,\n\tRendererBase\n}",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLClearMask\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLClearMask\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport DepthRenderer\t\t\t\tfrom \"./DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./Filter3DRenderer\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport GL_SkyboxElements\t\t\tfrom \"./elements/GL_SkyboxElements\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _skybox:Skybox;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis.shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = super.enterNode(node);\n\n\t\tif (enter && node.debugVisible)\n\t\t\tthis.applyEntity(node.bounds.boundsPrimitive);\n\n\t\treturn enter;\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this.shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this.shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this.shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tif (this._skybox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(camera);\n\t\t}\n\n\t\tsuper.pDraw(camera);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t **/\n\tprivate drawSkybox(camera:Camera)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(this._skybox);\n\n\t\trenderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar pass:IPass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._skybox = <Skybox> entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this.shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this.shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport default DefaultRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DepthSurface\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DepthRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DistanceSurface\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DistanceRenderer;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLVertexBufferFormat\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport RTTEvent\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport Filter3DTaskBase\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(this._tasks[0]._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(this._tasks[0]._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(task._inputTextureIndex, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(task._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(task._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport default Filter3DRenderer;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport RendererEvent\t\t\t\tfrom \"awayjs-display/lib/events/RendererEvent\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport StageEvent\t\t\t\t\tfrom \"awayjs-stagegl/lib/events/StageEvent\";\nimport StageManager\t\t\t\t\tfrom \"awayjs-stagegl/lib/managers/StageManager\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport ISurfaceClassGL\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"./elements/ElementsPool\";\nimport IEntitySorter\t\t\t\tfrom \"./sort/IEntitySorter\";\nimport RenderableMergeSort\t\t\tfrom \"./sort/RenderableMergeSort\";\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tprivate _cameraPosition:Vector3D;\n\tpublic _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tprivate _sourceEntity:IEntity;\n\tprivate _zIndex:number;\n\tprivate _renderSceneTransform:Matrix3D;\n\n\t\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic shareContext:boolean;\n\t\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tvar i:number\n\t\tfor (i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this.shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this.shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isRenderable() && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._sourceEntity = entity;\n\n\t\t// project onto camera's z-axis\n\t\tthis._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n\n\t\t//save sceneTransform\n\t\tthis._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n\n\t\t//collect renderables\n\t\tentity._acceptTraverser(this);\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\trenderableGL.sourceEntity = this._sourceEntity;\n\t\trenderableGL.zIndex = this._zIndex;\n\t\trenderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = this._renderSceneTransform;\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default RendererBase;",
    "import IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimationSetError\t\t\tfrom \"../errors/AnimationSetError\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport default AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport RequestAnimationFrame\t\t\tfrom \"awayjs-core/lib/utils/RequestAnimationFrame\";\nimport getTimer\t\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport IAnimationState\t\t\t\t\tfrom \"../animators/states/IAnimationState\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport AnimatorEvent\t\t\t\t\tfrom \"../events/AnimatorEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../animators/data/ParticleAnimationData\";\nimport ParticleProperties\t\t\t\tfrom \"../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../animators/nodes/ParticleTimeNode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterData:AnimationRegisterData;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//grab animationRegisterData from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterData = shader.animationRegisterData;\n\n\t\tif (this._iAnimationRegisterData == null)\n\t\t\tthis._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData();\n\n\t\t//reset animationRegisterData\n\t\tthis._iAnimationRegisterData.reset(registerCache, sharedRegisters, this.needVelocity);\n\n\t\tvar code:string = \"\";\n\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tcode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \",\" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this._iAnimationRegisterData.positionTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.velocityTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t}\n\n\t\tcode += \"add \" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t}\n\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis._iAnimationRegisterData.colorMulTarget = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(this._iAnimationRegisterData.colorMulTarget, 1);\n\t\t\tthis._iAnimationRegisterData.colorMulVary = registerCache.getFreeVarying();\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorMulTarget + \",\" + this._iAnimationRegisterData.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis._iAnimationRegisterData.colorAddTarget = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(this._iAnimationRegisterData.colorAddTarget, 1);\n\t\t\tthis._iAnimationRegisterData.colorAddVary = registerCache.getFreeVarying();\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorAddTarget + \",\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n\t\t}\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t}\n\t\tif (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorMulVary + \",\" + this._iAnimationRegisterData.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorAddVary + \",\" + this._iAnimationRegisterData.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterData.setUVSourceAndTarget(sharedRegisters);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.uvTarget + \".xy,\" + this._iAnimationRegisterData.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.uvVar + \",\" + this._iAnimationRegisterData.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tshader.setVertexConst(this._iAnimationRegisterData.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic):AnimationElements\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number, j:number, k:number;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number = particles.length;\n\t\tvar numParticles:number = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number;\n\t\tvar oneDataOffset:number;\n\t\tvar counterForVertex:number;\n\t\tvar counterForOneData:number;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number;\n\t\tvar startingOffset:number;\n\t\tvar vertexOffset:number;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport default ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../animators/ParticleAnimationSet\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../animators/states/ParticleStateBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tvar animationRegisterData:AnimationRegisterData = this._particleAnimationSet._iAnimationRegisterData;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\t\tvar i:number;\n\t\t\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(shader, renderable, animationElements, animationRegisterData, camera, stage);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(shader, renderable, animatorElements, animationRegisterData, camera, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport default ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number;\n\tprivate _matricesIndex:number;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\t\n\tpublic get matricesIndex():number\n\t{\n\t\treturn this._matricesIndex;\n\t}\n\t\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._matricesIndex = registerCache.numUsedVertexConstants;\n\t\tvar indexOffset0:number = this._matricesIndex;\n\t\tvar indexOffset1:number = this._matricesIndex + 1;\n\t\tvar indexOffset2:number = this._matricesIndex + 2;\n\t\t\n\t\tvar indexStream:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\tshader.jointIndexIndex = indexStream.index;\n\t\t\n\t\tvar weightStream:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\tshader.jointWeightIndex = weightStream.index;\n\t\t\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\n\t\t\tvar source:ShaderRegisterElement = sharedRegisters.animatableAttributes[i];\n\t\t\tvar target:ShaderRegisterElement = sharedRegisters.animationTargetRegisters[i];\n\n\t\t\tfor (var j:number = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + source + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + target + \", \" + temp1 + \"\\n\";\n\t\t\t\telse\n\t\t\t\t\tcode += \"add \" + target + \", \" + target + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport default SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport SkeletonAnimationSet\t\t\t\tfrom \"../animators/SkeletonAnimationSet\";\nimport JointPose\t\t\t\t\t\tfrom \"../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../animators/data/Skeleton\";\nimport SkeletonJoint\t\t\t\t\tfrom \"../animators/data/SkeletonJoint\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../animators/data/SkeletonPose\";\nimport ISkeletonAnimationState\t\t\tfrom \"../animators/states/ISkeletonAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport AnimationStateEvent\t\t\t\tfrom \"../events/AnimationStateEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeletonAnimationSet:SkeletonAnimationSet;\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeletonAnimationSet = animationSet;\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number = 0;\n\t\tfor (var i:number = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new SkeletonAnimator(this._skeletonAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tshader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._condensedMatrices);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tshader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._globalMatrices);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number = 0;\n\t\tvar i0:number = 0;\n\t\tvar i1:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _iAnimationRegisterData:AnimationRegisterData;\n\t\n\tprivate _numPoses:number;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//grab animationRegisterData from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterData = shader.animationRegisterData;\n\n\t\tif (this._iAnimationRegisterData == null)\n\t\t\tthis._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData();\n\t\t\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader, registerCache, sharedRegisters);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar regs:Array<string> = new Array<string>(\".x\", \".y\", \".z\", \".w\");\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tvar constantReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tthis._iAnimationRegisterData.weightsIndex = constantReg.index*4;\n\t\tthis._iAnimationRegisterData.poseIndices = new Array<number>(this._numPoses);\n\t\tvar poseInput:ShaderRegisterElement;\n\t\tvar k:number = 0;\n\t\t\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\t\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + sharedRegisters.animatableAttributes[i] + \", \" + constantReg + regs[0] + \"\\n\";\n\t\t\n\t\t\tfor (var j:number = 1; j < this._numPoses; ++j) {\n\t\t\t\tposeInput = registerCache.getFreeVertexAttribute();\n\t\t\t\tthis._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n\t\t\t\tcode += \"mul \" + temp2 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\";\n\t\t\n\t\t\t\tif (j < this._numPoses - 1) //TODO this is always the case, write better?\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t}\n\t\t\n\t\t\tcode += \"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\t\t\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\t//\n\t\t// // simply write attributes to targets, do not animate them\n\t\t// // projection will pick up on targets[0] to do the projection\n\t\t// var len:number = sharedRegisters.animatableAttributes.length;\n\t\t// for (var i:number = 0; i < len; ++i)\n\t\t// \tcode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\".x\", \".y\", \".z\", \".w\"];\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar constantReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tthis._iAnimationRegisterData.weightsIndex = constantReg.index*4;\n\t\tthis._iAnimationRegisterData.poseIndices = new Array<number>(this._numPoses);\n\t\tvar poseInput:ShaderRegisterElement;\n\t\tvar k:number = 0;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + sharedRegisters.animationTargetRegisters[0] + \", \" + sharedRegisters.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + sharedRegisters.animationTargetRegisters[1] + \", \" + sharedRegisters.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tfor (var j:number = 0; j < this._numPoses; ++j) {\n\t\t\t\tposeInput = registerCache.getFreeVertexAttribute();\n\t\t\t\tthis._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n\t\t\t\tcode += \"mul \" + temp1 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport default VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport VertexAnimationSet\t\t\t\tfrom \"../animators/VertexAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport IVertexAnimationState\t\t\tfrom \"../animators/states/IVertexAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_ElementsBase\t\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate sprites\n\t\t\tvar sprite:Sprite;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsprite = this._pOwners[i];\n\t\t\t\tsprite.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements);\n\t\t\treturn;\n\t\t}\n\n\t\tvar animationRegisterData:AnimationRegisterData = shader.animationRegisterData;\n\t\tvar i:number;\n\t\tvar len:number = this._vertexAnimationSet.numPoses;\n\n\t\tshader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n\n\t\tif (this._vertexAnimationSet.blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\t\tvar k:number = 0;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase)\n\t{\n\t\tvar animationRegisterData:AnimationRegisterData = shader.animationRegisterData;\n\t\t\n\t\tshader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\t\tvar k:number = 0;\n\t\t\n\t\tif (this._vertexAnimationSet.blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number = this._vertexAnimationSet.numPoses;\n\t\t\tfor (var i:number = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._vertexAnimationSet.blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default VertexAnimator;",
    "import Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IVertexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number;\n\n\tprivate _totalLenOfOneVertex:number;\n\n\tpublic numProcessedVertices:number = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number, totalLenOfOneVertex:number)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number, bufferOffset:number, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport default AnimationElements;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n\n/**\n * ...\n */\nclass AnimationRegisterData\n{\n\t//vertex animation data\n\tpublic weightsIndex:number;\n\tpublic poseIndices:Array<number>;\n\t\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic reset(registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData, needVelocity:boolean)\n\t{\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = sharedRegisters.animatableAttributes[0];\n\t\tthis.scaleAndRotateTarget = sharedRegisters.animationTargetRegisters[0];\n\n\t\tfor (var i:number = 1; i < sharedRegisters.animationTargetRegisters.length; i++)\n\t\t\tthis.rotationRegisters.push(sharedRegisters.animationTargetRegisters[i]);\n\t\t\n\t\t//allot const register\n\t\tthis.vertexZeroConst = registerCache.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (needVelocity) {\n\t\t\tthis.velocityTarget = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(sharedRegisters:ShaderRegisterData)\n\t{\n\t\tthis.uvVar = sharedRegisters.uvTarget;\n\t\tthis.uvAttribute = sharedRegisters.uvSource;\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number, registerIndex:number)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8);\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number):number\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n}\n\nexport default AnimationRegisterData;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport default ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport default JointPose;",
    "import ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number;\n\tpublic numVertices:number;\n\n\tconstructor(index:number, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport default ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number = 2;\n}\n\nexport default ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport default ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number = this.jointPoses.length;\n\t\tfor (var i:number = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport default SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\tfrom \"../../animators/data/SkeletonJoint\";\n\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport default Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport default VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number = 0;\n\tpublic _pLastFrame:number;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number>\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport default AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleAccelerationState\t\tfrom \"../../animators/states/ParticleAccelerationState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterData.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport default ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBezierCurveState\t\t\tfrom \"../../animators/states/ParticleBezierCurveState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterData.vertexOneConst + \",\" + animationRegisterData.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterData.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport default ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBillboardState\t\t\tfrom \"../../animators/states/ParticleBillboardState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number = 0; i < animationRegisterData.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterData.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport default ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleColorState\t\t\t\tfrom \"../../animators/states/ParticleColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\t\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterData.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterData.colorMulTarget + \",\" + temp + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterData.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + temp + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport default ParticleColorNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleFollowState\t\t\t\tfrom \"../../animators/states/ParticleFollowState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationSet.hasBillboard) {\n\t\t\t\tregisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = registerCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tregisterCache.removeVertexTempUsage(temp1);\n\t\t\tregisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationSet.hasBillboard)\n\t\t\t\tregisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\t\tvar i:number;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationSet.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationSet.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationSet.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport default ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleInitialColorState\t\tfrom \"../../animators/states/ParticleInitialColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterData.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport default ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number;\n\n\tpublic _pMode:number;\n\tpublic _pDataLength:number = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number, dataLength:number, priority:number = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport default ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOrbitState\t\t\t\tfrom \"../../animators/states/ParticleOrbitState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tregisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterData.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterData.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterData.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport default ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOscillatorState\t\t\tfrom \"../../animators/states/ParticleOscillatorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterData.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport default ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticlePositionState\t\t\tfrom \"../../animators/states/ParticlePositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterData.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticlePositionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToHeadingState\t\tfrom \"../../animators/states/ParticleRotateToHeadingState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\tvar i:number;\n\t\tif (animationSet.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\n\t\t\tregisterCache.removeVertexTempUsage(temp1);\n\t\t\tregisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tregisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tregisterCache.removeVertexTempUsage(xAxis);\n\t\t\tregisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport default ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToPositionState\tfrom \"../../animators/states/ParticleRotateToPositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\tvar i:number;\n\t\tif (animationSet.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\n\t\t\tregisterCache.removeVertexTempUsage(temp1);\n\t\t\tregisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tregisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tregisterCache.removeVertexTempUsage(temp);\n\t\t\tregisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterData.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterData.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotationalVelocityState\tfrom \"../../animators/states/ParticleRotationalVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tregisterCache.removeVertexTempUsage(nrmVel);\n\t\tregisterCache.removeVertexTempUsage(xAxis);\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport default ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleScaleState\t\t\t\tfrom \"../../animators/states/ParticleScaleState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterData.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport default ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSegmentedColorState\t\tfrom \"../../animators/states/ParticleSegmentedColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = registerCache.getFreeVertexVectorTemp();\n\t\t\t\tregisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tregisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tregisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(registerCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(registerCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterData.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterData.colorMulTarget + \",\" + animationRegisterData.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport default ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSpriteSheetState\t\t\tfrom \"../../animators/states/ParticleSpriteSheetState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number;\n\t/** @private */\n\tpublic _iNumColumns:number;\n\t/** @private */\n\tpublic _iNumRows:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number, usesCycle:boolean, usesPhase:boolean, numColumns:number = 1, numRows:number = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterData.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterData.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterData.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeState\t\t\t\tfrom \"../../animators/states/ParticleTimeState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t\t\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = registerCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterData.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterData.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport default ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleUVState\t\t\t\t\tfrom \"../../animators/states/ParticleUVState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport default ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleVelocityState\t\t\tfrom \"../../animators/states/ParticleVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterData.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport default ParticleVelocityNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport SkeletonClipState\t\t\t\tfrom \"../../animators/states/SkeletonClipState\";\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDifferenceState\t\t\tfrom \"../../animators/states/SkeletonDifferenceState\";\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDirectionalState\t\t\tfrom \"../../animators/states/SkeletonDirectionalState\";\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport default SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonNaryLERPState\t\t\tfrom \"../../animators/states/SkeletonNaryLERPState\";\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number;\n\n\tpublic get numInputs():number\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport VertexClipState\t\t\t\t\tfrom \"../../animators/states/VertexClipState\";\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number;\n\tpublic _pNextFrame:number;\n\n\tpublic _pOldFrame:number;\n\tpublic _pTimeDir:number;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number = this._animationClipNode.lastFrame;\n\t\tvar time:number = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number = 0, frameTime:number;\n\t\t\tvar durations:Array<number> = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport default AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../../animators/states/IAnimationState\";\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport default AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleAccelerationNode\t\t\tfrom \"../../animators/nodes/ParticleAccelerationNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tshader.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport default ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleBezierCurveNode\t\t\tfrom \"../../animators/nodes/ParticleBezierCurveNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar controlIndex:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tshader.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tshader.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport default ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Orientation3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleBillboardNode\t\t\tfrom \"../../animators/nodes/ParticleBillboardNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport default ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleColorNode\t\t\t\tfrom \"../../animators/nodes/ParticleColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar dataOffset:number = this._particleColorNode._iDataOffset;\n\t\t\tvar index:number;\n\t\t\tif (this._usesCycle)\n\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tindex = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX);\n\t\t\t\t\tshader.vertexConstantData[index++] = this._startMultiplierData.x;\n\t\t\t\t\tshader.vertexConstantData[index++] = this._startMultiplierData.y;\n\t\t\t\t\tshader.vertexConstantData[index++] = this._startMultiplierData.z;\n\t\t\t\t\tshader.vertexConstantData[index] = this._startMultiplierData.w;\n\n\t\t\t\t\tindex = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX);\n\t\t\t\t\tshader.vertexConstantData[index++] = this._deltaMultiplierData.x;\n\t\t\t\t\tshader.vertexConstantData[index++] = this._deltaMultiplierData.y;\n\t\t\t\t\tshader.vertexConstantData[index++] = this._deltaMultiplierData.z;\n\t\t\t\t\tshader.vertexConstantData[index] = this._deltaMultiplierData.w;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleColorState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleFollowNode\t\t\t\tfrom \"../../animators/nodes/ParticleFollowNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleFollowState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleInitialColorNode\t\t\tfrom \"../../animators/nodes/ParticleInitialColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar index:number;\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport default ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOrbitNode\t\t\t\tfrom \"../../animators/nodes/ParticleOrbitNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tshader.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport default ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOscillatorNode\t\t\tfrom \"../../animators/nodes/ParticleOscillatorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tshader.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport default ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticlePositionNode\t\t\t\tfrom \"../../animators/nodes/ParticlePositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tshader.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif ((<ParticleAnimationSet> this._pParticleAnimator.animationSet).hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport default ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotateToPositionNode\t\tfrom \"../../animators/nodes/ParticleRotateToPositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif ((<ParticleAnimationSet> this._pParticleAnimator.animationSet).hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tshader.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport default ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotationalVelocityNode\tfrom \"../../animators/nodes/ParticleRotationalVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tshader.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport default ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleScaleNode\t\t\t\tfrom \"../../animators/nodes/ParticleScaleNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tshader.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport default ParticleScaleState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSegmentedColorNode\t\tfrom \"../../animators/nodes/ParticleSegmentedColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number;\n\n\tprivate _timeLifeData:Float32Array;\n\tprivate _multiplierData:Float32Array;\n\tprivate _offsetData:Float32Array;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\t\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tshader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tshader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Float32Array(4);\n\t\tthis._multiplierData = new Float32Array(4*(this._numSegmentPoint + 1));\n\t\tthis._offsetData = new Float32Array(4*(this._numSegmentPoint + 1));\n\n\t\t//cut off the time data\n\t\tvar i:number;\n\t\tvar j:number = 0;\n\t\tvar count:number = this._numSegmentPoint > 3? 3 : this._numSegmentPoint;\n\t\tfor (i = 0; i < count; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData[j++] = this._segmentPoints[i].life;\n\t\t\telse\n\t\t\t\tthis._timeLifeData[j++] = this._segmentPoints[i].life - this._segmentPoints[i - 1].life;\n\t\t}\n\t\ti = count;\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData[j++] = 1;\n\t\telse\n\t\t\tthis._timeLifeData[j++] = 1 - this._segmentPoints[i - 1].life;\n\n\t\tif (this._usesMultiplier) {\n\t\t\tj = 0;\n\t\t\tthis._multiplierData[j++] = this._startColor.redMultiplier;\n\t\t\tthis._multiplierData[j++] = this._startColor.greenMultiplier;\n\t\t\tthis._multiplierData[j++] = this._startColor.blueMultiplier;\n\t\t\tthis._multiplierData[j++] = this._startColor.alphaMultiplier;\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i];\n\t\t\t\t} else {\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = this._numSegmentPoint;\n\t\t\tif (this._numSegmentPoint == 0) {\n\t\t\t\tthis._multiplierData[j++] = this._endColor.redMultiplier - this._startColor.redMultiplier;\n\t\t\t\tthis._multiplierData[j++] = this._endColor.greenMultiplier - this._startColor.greenMultiplier;\n\t\t\t\tthis._multiplierData[j++] = this._endColor.blueMultiplier - this._startColor.blueMultiplier;\n\t\t\t\tthis._multiplierData[j++] = this._endColor.alphaMultiplier - this._startColor.alphaMultiplier;\n\t\t\t} else {\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i];\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i];\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i];\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i];\n\t\t\t}\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tj = 0;\n\t\t\tthis._offsetData[j++] = this._startColor.redOffset/255;\n\t\t\tthis._offsetData[j++] = this._startColor.greenOffset/255;\n\t\t\tthis._offsetData[j++] = this._startColor.blueOffset/255;\n\t\t\tthis._offsetData[j++] = this._startColor.alphaOffset/255;\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255;\n\t\t\t\t} else {\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = this._numSegmentPoint;\n\t\t\tif (this._numSegmentPoint == 0) {\n\t\t\t\tthis._offsetData[j++] = (this._endColor.redOffset - this._startColor.redOffset)/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.greenOffset - this._startColor.greenOffset)/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.blueOffset - this._startColor.blueOffset)/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.alphaOffset - this._startColor.alphaOffset)/255;\n\t\t\t} else {\n\t\t\t\tthis._offsetData[i] = (this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSpriteSheetNode\t\t\tfrom \"../../animators/nodes/ParticleSpriteSheetNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number;\n\tprivate _numColumns:number;\n\tprivate _numRows:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (!shader.usesUVTransform) {\n\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tshader.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\tpublic _pParticleAnimator:ParticleAnimator;\n\t\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._pParticleAnimator = animator;\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number = this._particleNode.dataLength;\n\t\tvar dataOffset:number = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number;\n\t\t//\t\t\tvar particleOffset:number;\n\t\tvar startingOffset:number;\n\t\tvar vertexOffset:number;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number = _positions.length/dataLength;\n\t\tvar numParticles:number = this._pDynamicProperties.length;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleTimeNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport default ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleUVNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleUVNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (!shader.usesUVTransform) {\n\t\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tshader.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport default ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleVelocityNode\t\t\t\tfrom \"../../animators/nodes/ParticleVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tshader.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport default SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonAnimator\t\t\t\t\tfrom \"../../animators/SkeletonAnimator\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonClipNode\t\t\t\t\tfrom \"../../animators/nodes/SkeletonClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport default SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDifferenceNode\t\t\tfrom \"../../animators/nodes/SkeletonDifferenceNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDirectionalNode\t\t\tfrom \"../../animators/nodes/SkeletonDirectionalNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport default SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonNaryLERPNode\t\t\t\tfrom \"../../animators/nodes/SkeletonNaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number)\n\t{\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport default SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport VertexAnimator\t\t\t\t\tfrom \"../../animators/VertexAnimator\";\nimport VertexClipNode\t\t\t\t\tfrom \"../../animators/nodes/VertexClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport IVertexAnimationState\t\t\tfrom \"../../animators/states/IVertexAnimationState\";\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport default VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport CrossfadeTransitionState\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport default CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../animators/../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport default CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport IAnimationTransition\t\t\t\tfrom \"../../animators/transitions/IAnimationTransition\";\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport default CrossfadeTransition;",
    "export {default as AnimationElements}\t\t\t\tfrom \"./animators/data/AnimationElements\";\nexport {default as AnimationRegisterData}\t\t\tfrom \"./animators/data/AnimationRegisterData\";\nexport {default as ColorSegmentPoint}\t\t\t\tfrom \"./animators/data/ColorSegmentPoint\";\nexport {default as JointPose}\t\t\t\t\t\tfrom \"./animators/data/JointPose\";\nexport {default as ParticleAnimationData}\t\t\tfrom \"./animators/data/ParticleAnimationData\";\nexport {default as ParticleProperties}\t\t\t\tfrom \"./animators/data/ParticleProperties\";\nexport {default as ParticlePropertiesMode}\t\t\tfrom \"./animators/data/ParticlePropertiesMode\";\nexport {default as Skeleton}\t\t\t\t\t\tfrom \"./animators/data/Skeleton\";\nexport {default as SkeletonJoint}\t\t\t\t\tfrom \"./animators/data/SkeletonJoint\";\nexport {default as SkeletonPose}\t\t\t\t\tfrom \"./animators/data/SkeletonPose\";\nexport {default as VertexAnimationMode}\t\t\t\tfrom \"./animators/data/VertexAnimationMode\";\nexport {default as AnimationClipNodeBase}\t\t\tfrom \"./animators/nodes/AnimationClipNodeBase\";\nexport {default as ParticleAccelerationNode}\t\tfrom \"./animators/nodes/ParticleAccelerationNode\";\nexport {default as ParticleBezierCurveNode}\t\t\tfrom \"./animators/nodes/ParticleBezierCurveNode\";\nexport {default as ParticleBillboardNode}\t\t\tfrom \"./animators/nodes/ParticleBillboardNode\";\nexport {default as ParticleColorNode}\t\t\t\tfrom \"./animators/nodes/ParticleColorNode\";\nexport {default as ParticleFollowNode}\t\t\t\tfrom \"./animators/nodes/ParticleFollowNode\";\nexport {default as ParticleInitialColorNode}\t\tfrom \"./animators/nodes/ParticleInitialColorNode\";\nexport {default as ParticleNodeBase}\t\t\t\tfrom \"./animators/nodes/ParticleNodeBase\";\nexport {default as ParticleOrbitNode}\t\t\t\tfrom \"./animators/nodes/ParticleOrbitNode\";\nexport {default as ParticleOscillatorNode}\t\t\tfrom \"./animators/nodes/ParticleOscillatorNode\";\nexport {default as ParticlePositionNode}\t\t\tfrom \"./animators/nodes/ParticlePositionNode\";\nexport {default as ParticleRotateToHeadingNode}\t\tfrom \"./animators/nodes/ParticleRotateToHeadingNode\";\nexport {default as ParticleRotateToPositionNode}\tfrom \"./animators/nodes/ParticleRotateToPositionNode\";\nexport {default as ParticleRotationalVelocityNode}\tfrom \"./animators/nodes/ParticleRotationalVelocityNode\";\nexport {default as ParticleScaleNode}\t\t\t\tfrom \"./animators/nodes/ParticleScaleNode\";\nexport {default as ParticleSegmentedColorNode}\t\tfrom \"./animators/nodes/ParticleSegmentedColorNode\";\nexport {default as ParticleSpriteSheetNode}\t\t\tfrom \"./animators/nodes/ParticleSpriteSheetNode\";\nexport {default as ParticleTimeNode}\t\t\t\tfrom \"./animators/nodes/ParticleTimeNode\";\nexport {default as ParticleUVNode}\t\t\t\t\tfrom \"./animators/nodes/ParticleUVNode\";\nexport {default as ParticleVelocityNode}\t\t\tfrom \"./animators/nodes/ParticleVelocityNode\";\nexport {default as SkeletonBinaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonBinaryLERPNode\";\nexport {default as SkeletonClipNode}\t\t\t\tfrom \"./animators/nodes/SkeletonClipNode\";\nexport {default as SkeletonDifferenceNode}\t\t\tfrom \"./animators/nodes/SkeletonDifferenceNode\";\nexport {default as SkeletonDirectionalNode}\t\t\tfrom \"./animators/nodes/SkeletonDirectionalNode\";\nexport {default as SkeletonNaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonNaryLERPNode\";\nexport {default as VertexClipNode}\t\t\t\t\tfrom \"./animators/nodes/VertexClipNode\";\nexport {default as AnimationClipState}\t\t\t\tfrom \"./animators/states/AnimationClipState\";\nexport {default as AnimationStateBase}\t\t\t\tfrom \"./animators/states/AnimationStateBase\";\nexport {default as IAnimationState}\t\t\t\t\tfrom \"./animators/states/IAnimationState\";\nexport {default as ISkeletonAnimationState}\t\t\tfrom \"./animators/states/ISkeletonAnimationState\";\nexport {default as IVertexAnimationState}\t\t\tfrom \"./animators/states/IVertexAnimationState\";\nexport {default as ParticleAccelerationState}\t\tfrom \"./animators/states/ParticleAccelerationState\";\nexport {default as ParticleBezierCurveState}\t\tfrom \"./animators/states/ParticleBezierCurveState\";\nexport {default as ParticleBillboardState}\t\t\tfrom \"./animators/states/ParticleBillboardState\";\nexport {default as ParticleColorState}\t\t\t\tfrom \"./animators/states/ParticleColorState\";\nexport {default as ParticleFollowState}\t\t\t\tfrom \"./animators/states/ParticleFollowState\";\nexport {default as ParticleInitialColorState}\t\tfrom \"./animators/states/ParticleInitialColorState\";\nexport {default as ParticleStateBase}\t\t\t\tfrom \"./animators/states/ParticleStateBase\";\nexport {default as ParticleOrbitState}\t\t\t\tfrom \"./animators/states/ParticleOrbitState\";\nexport {default as ParticleOscillatorState}\t\t\tfrom \"./animators/states/ParticleOscillatorState\";\nexport {default as ParticlePositionState}\t\t\tfrom \"./animators/states/ParticlePositionState\";\nexport {default as ParticleRotateToHeadingState}\tfrom \"./animators/states/ParticleRotateToHeadingState\";\nexport {default as ParticleRotateToPositionState}\tfrom \"./animators/states/ParticleRotateToPositionState\";\nexport {default as ParticleRotationalVelocityState}\tfrom \"./animators/states/ParticleRotationalVelocityState\";\nexport {default as ParticleScaleState}\t\t\t\tfrom \"./animators/states/ParticleScaleState\";\nexport {default as ParticleSegmentedColorState}\t\tfrom \"./animators/states/ParticleSegmentedColorState\";\nexport {default as ParticleSpriteSheetState}\t\tfrom \"./animators/states/ParticleSpriteSheetState\";\nexport {default as ParticleTimeState}\t\t\t\tfrom \"./animators/states/ParticleTimeState\";\nexport {default as ParticleUVState}\t\t\t\t\tfrom \"./animators/states/ParticleUVState\";\nexport {default as ParticleVelocityState}\t\t\tfrom \"./animators/states/ParticleVelocityState\";\nexport {default as SkeletonBinaryLERPState}\t\t\tfrom \"./animators/states/SkeletonBinaryLERPState\";\nexport {default as SkeletonClipState}\t\t\t\tfrom \"./animators/states/SkeletonClipState\";\nexport {default as SkeletonDifferenceState}\t\t\tfrom \"./animators/states/SkeletonDifferenceState\";\nexport {default as SkeletonDirectionalState}\t\tfrom \"./animators/states/SkeletonDirectionalState\";\nexport {default as SkeletonNaryLERPState}\t\t\tfrom \"./animators/states/SkeletonNaryLERPState\";\nexport {default as VertexClipState}\t\t\t\t\tfrom \"./animators/states/VertexClipState\";\nexport {default as CrossfadeTransition}\t\t\t\tfrom \"./animators/transitions/CrossfadeTransition\";\nexport {default as CrossfadeTransitionNode}\t\t\tfrom \"./animators/transitions/CrossfadeTransitionNode\";\nexport {default as CrossfadeTransitionState}\t\tfrom \"./animators/transitions/CrossfadeTransitionState\";\nexport {default as IAnimationTransition}\t\t\tfrom \"./animators/transitions/IAnimationTransition\";\nexport {default as AnimationSetBase}\t\t\t\tfrom \"./animators/AnimationSetBase\";\nexport {default as AnimatorBase}\t\t\t\t\tfrom \"./animators/AnimatorBase\";\nexport {default as ParticleAnimationSet}\t\t\tfrom \"./animators/ParticleAnimationSet\";\nexport {default as ParticleAnimator}\t\t\t\tfrom \"./animators/ParticleAnimator\";\nexport {default as SkeletonAnimationSet}\t\t\tfrom \"./animators/SkeletonAnimationSet\";\nexport {default as SkeletonAnimator}\t\t\t\tfrom \"./animators/SkeletonAnimator\";\nexport {default as VertexAnimationSet}\t\t\t\tfrom \"./animators/VertexAnimationSet\";\nexport {default as VertexAnimator}\t\t\t\t\tfrom \"./animators/VertexAnimator\";",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport default ElementsPool;",
    "import Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nimport IAbstractionPool \t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_AttributesBuffer\t\t\tfrom \"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\n\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tpublic _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\t\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferGL():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferGL(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\t//TODO replace overflow system with something sensible\n\t\t//this._render(renderable, camera, viewProjection);\n\t\t//\n\t\t// if (this._overflow)\n\t\t// \tthis._overflow._iRender(renderable, camera, viewProjection);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = this._elements.numVertices;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_ElementsBase;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//get the projection coordinates\n\t\tvar position0:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\t\tvar position1:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\tvar thickness:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tregisterCache.getFreeVertexConstant(); // not used\n\t\tvar constOne:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tvar constNegOne:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tvar misc:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\t\t\n\t\tvar q0:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(q0, 1);\n\t\tvar q1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(q1, 1);\n\t\t\n\t\tvar l:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(l, 1);\n\t\tvar behind:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(behind, 1);\n\t\tvar qclipped:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(qclipped, 1);\n\t\tvar offset:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(offset, 1);\n\n\t\treturn \"m44 \" + q0 + \", \" + position0 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 \" + q1 + \", \" + position1 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub \" + l + \", \" + q1 + \", \" + q0 + \" \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\"slt \" + behind + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub \" + behind + \".y, \" + constOne + \".x, \" + behind + \".x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add \" + offset + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub \" + offset + \".y, \" + q0 + \".z, \" + q1 + \".z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq \" + offset + \".z, \" + offset + \".y \" + constNegOne + \".x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add \" + offset + \".y, \" + offset + \".y, \" + offset + \".z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div \" + offset + \".z, \" + offset + \".x, \" + offset + \".y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul \" + offset + \".xyz, \" + offset + \".zzz, \" + l + \".xyz\t\\n\" + // t(L)\n\t\t\t\"add \" + qclipped + \".xyz, \" + q0 + \".xyz, \" + offset + \".xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul \" + q0 + \", \" + q0 + \", \" + behind + \".yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul \" + qclipped + \", \" + qclipped + \", \" + behind + \".xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add \" + q0 + \", \" + q0 + \", \" + qclipped + \"\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"nrm \" + l + \".xyz, \" + l + \".xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm \" + behind + \".xyz, \" + q0 + \".xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov \" + behind + \".w, \" + constOne + \".x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs \" + qclipped + \".xyz, \" + l + \", \" + behind + \"\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm \" + qclipped + \".xyz, \" + qclipped + \".xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + thickness + \".xxx\t\\n\" + // S *= weight\n\t\t\t\"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 \" + offset + \".x, \" + q0 + \", \" + constNegOne + \"\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul \" + offset + \".x, \" + offset + \".x, \" + misc + \".x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + offset + \".xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add \" + q0 + \".xyz, \" + q0 + \".xyz, \" + qclipped + \".xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, \" + q0 + \", \" + viewMatrixReg + \"\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\t\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\t\t\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(3, this._lineElements.thickness);\n\n\t\tthis._shader.vertexConstantData[4+16] = 1;\n\t\tthis._shader.vertexConstantData[5+16] = 1;\n\t\tthis._shader.vertexConstantData[6+16] = 1;\n\t\tthis._shader.vertexConstantData[7+16] = 1;\n\n\t\tthis._shader.vertexConstantData[10+16] = -1;\n\n\t\tthis._shader.vertexConstantData[12+16] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\t\tthis._shader.vertexConstantData[13+16] = 1/255;\n\t\tthis._shader.vertexConstantData[14+16] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\t\n\t\t// projection matrix\n\t\tcamera.projection.matrix.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tthis._calcMatrix.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, this._shader.vertexConstantData);\n\t\t\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_LineElements;",
    "import ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TriangleElements\t\t\tfrom \"../elements/GL_TriangleElements\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SkyboxElements;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\t\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.renderSceneTransform);\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, this._shader.vertexConstantData);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._shader.fragmentConstantData);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_TriangleElements;",
    "export {default as ElementsPool}\t\t\t\t\tfrom \"./elements/ElementsPool\";\nexport {default as GL_ElementsBase}\t\t\t\t\tfrom \"./elements/GL_ElementsBase\";\nexport {default as GL_LineElements}\t\t\t\t\tfrom \"./elements/GL_LineElements\";\nexport {default as GL_SkyboxElements}\t\t\t\tfrom \"./elements/GL_SkyboxElements\";\nexport {default as GL_TriangleElements}\t\t\t\tfrom \"./elements/GL_TriangleElements\";\nexport {default as IElementsClassGL}\t\t\t\tfrom \"./elements/IElementsClassGL\";",
    "import ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default AnimationSetError;",
    "export {default as AnimationSetError}\t\t\t\tfrom \"./errors/AnimationSetError\";",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport EventBase\t\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../animators/states/IAnimationState\";\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport default AnimationStateEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport default AnimatorEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IPass\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport default PassEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport RTTBufferManager\t\t\tfrom \"../managers/RTTBufferManager\";\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport default RTTEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport default ShadingMethodEvent;",
    "export {default as AnimationStateEvent}\t\t\t\tfrom \"./events/AnimationStateEvent\";\nexport {default as AnimatorEvent}\t\t\t\t\tfrom \"./events/AnimatorEvent\";\nexport {default as PassEvent}\t\t\t\t\t\tfrom \"./events/PassEvent\";\nexport {default as RTTEvent}\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nexport {default as ShadingMethodEvent}\t\t\t\tfrom \"./events/ShadingMethodEvent\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DHBlurTask\t\t\tfrom \"../filters/tasks/Filter3DHBlurTask\";\nimport Filter3DVBlurTask\t\t\tfrom \"../filters/tasks/Filter3DVBlurTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport default BlurFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DCompositeTask\t\tfrom \"../filters/tasks/Filter3DCompositeTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport default CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DFXAATask\t\t\t\tfrom \"../filters/tasks/Filter3DFXAATask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport default FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../filters/tasks/Filter3DTaskBase\";\nimport RTTBufferManager from \"../managers/RTTBufferManager\";\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport default Filter3DBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tprivate _overlayTextureIndex:number;\n\tprivate _exposureIndex:number;\n\tprivate _scalingIndex:number;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\t\tvar temp1:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp2, 1);\n\t\tvar temp3:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp3, 1);\n\t\tvar temp4:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp4, 1);\n\t\t\n\t\t\n\t\tvar inputTexture:ShaderRegisterElement = this._registerCache.getFreeTextureReg();\n\t\tthis._inputTextureIndex = inputTexture.index;\n\t\t\n\t\tvar overlayTexture:ShaderRegisterElement = this._registerCache.getFreeTextureReg();\n\t\tthis._overlayTextureIndex = overlayTexture.index;\n\t\t\n\t\tvar exposure:ShaderRegisterElement = this._registerCache.getFreeFragmentConstant();\n\t\tthis._exposureIndex = exposure.index*4;\n\n\t\tvar scaling:ShaderRegisterElement = this._registerCache.getFreeFragmentConstant();\n\t\tthis._scalingIndex = scaling.index*4;\n\t\t\n\t\tvar code:string;\n\t\t\n\t\tcode = \"tex \" + temp1 + \", \" + this._uvVarying + \", \" + inputTexture + \" <2d,linear,clamp>\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + this._uvVarying + \", \" + scaling + \".zw\\n\" +\n\t\t\t\"add \" + temp2 + \", \" + temp2 + \", \" + scaling + \".xy\\n\" +\n\t\t\t\"tex \" + temp2 + \", \" + temp2 + \", \" + overlayTexture + \" <2d,linear,clamp>\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\" +\n\t\t\t\"add \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge \" + temp3 + \", \" + temp1 + \", \" + exposure + \".yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub \" + temp1 + \", \" + temp3 + \", \" + temp1 + \"\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub \" + temp2 + \", \" + temp2 + \", \" + temp3 + \"\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub \" + temp4 + \", \" + temp3 + \", \" + exposure + \".yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div \" + temp2 + \", \" + temp2 + \", \" + temp4 + \"\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, \" + temp2 + \", \" + temp3 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, \" + temp1 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t\t\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(this._overlayTextureIndex, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport default Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport IProgram\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IProgram\";\n\nimport RTTBufferManager\t\t\t\tfrom \"../../managers/RTTBufferManager\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\nclass Filter3DTaskBase\n{\n\tpublic _registerCache:ShaderRegisterCache;\n\t\n\tpublic _positionIndex:number;\n\tpublic _uvIndex:number;;\n\tpublic _inputTextureIndex:number;\n\tpublic _uvVarying:ShaderRegisterElement;\n\t\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t\tthis._registerCache = new ShaderRegisterCache(\"baseline\");\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tthis._registerCache.reset();\n\t\t\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\tvar position:ShaderRegisterElement = this._registerCache.getFreeVertexAttribute();\n\t\tthis._positionIndex = position.index;\n\t\t\n\t\tvar uv:ShaderRegisterElement = this._registerCache.getFreeVertexAttribute();\n\t\tthis._uvIndex = uv.index;\n\t\t\n\t\tthis._uvVarying = this._registerCache.getFreeVarying();\n\t\t\n\t\tvar code:string;\n\t\t\n\t\tcode = \"mov op, \" + position + \"\\n\" + \n\t\t\t\"mov \" + this._uvVarying + \", \" + uv + \"\\n\";\n\t\t\n\t\treturn code;\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport default Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DVBlurTask;",
    "export {default as Filter3DCompositeTask}\t\t\tfrom \"./filters/tasks/Filter3DCompositeTask\";\nexport {default as Filter3DFXAATask}\t\t\t\tfrom \"./filters/tasks/Filter3DFXAATask\";\nexport {default as Filter3DHBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DHBlurTask\";\nexport {default as Filter3DTaskBase}\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\nexport {default as Filter3DVBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DVBlurTask\";\nexport {default as BlurFilter3D}\t\t\t\t\tfrom \"./filters/BlurFilter3D\";\nexport {default as CompositeFilter3D}\t\t\t\tfrom \"./filters/CompositeFilter3D\";\nexport {default as Filter3DBase}\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nexport {default as FXAAFilter3D}\t\t\t\t\tfrom \"./filters/FXAAFilter3D\";",
    "import Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ImageUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\nimport RTTEvent\t\t\t\t\t\tfrom \"../events/RTTEvent\";\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport default RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "export {default as RTTBufferManager}\t\t\t\tfrom \"./managers/RTTBufferManager\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport default GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthis._offset = this.graphic.offset;\n\t\tthis._count = this.graphic.count;\n\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport default GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport default GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport RenderableEvent\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onSurfaceUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _count:number = 0;\n\tpublic _offset:number = 0;\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onSurfaceUpdatedDelegate = (event:RenderableEvent) => this._onSurfaceUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onSurfaceUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tvar elements:GL_ElementsBase = pass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements);\n\n\t\tif (pass.shader.activeElements != elements) {\n\t\t\tpass.shader.activeElements = elements;\n\t\t\telements._setRenderState(this, camera, viewProjection);\n\t\t}\n\n\t\telements.draw(this, camera, viewProjection, this._count, this._offset)\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surface:ISurface = this._pGetSurface() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport default GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array(24);\n\t\tthis._vertexArray[19] = 1;\n\t\tthis._vertexArray[23] = 1;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[16] = pos.x;\n\t\tthis._vertexArray[17] = pos.y;\n\t\tthis._vertexArray[18] = pos.z;\n\t\tthis._vertexArray[20] = this._vertexArray[21] = this._vertexArray[22] = camera.projection.far/Math.sqrt(3);\n\t\tviewProjection.copyRawDataTo(this._vertexArray, 0, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, this._vertexArray);\n\t}\n}\n\nexport default GL_SkyboxRenderable;",
    "export {default as GL_BillboardRenderable}\t\t\tfrom \"./renderables/GL_BillboardRenderable\";\nexport {default as GL_GraphicRenderable}\t\t\tfrom \"./renderables/GL_GraphicRenderable\";\nexport {default as GL_LineSegmentRenderable}\t\tfrom \"./renderables/GL_LineSegmentRenderable\";\nexport {default as GL_RenderableBase}\t\t\t\tfrom \"./renderables/GL_RenderableBase\";\nexport {default as GL_SkyboxRenderable}\t\t\t\tfrom \"./renderables/GL_SkyboxRenderable\";",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport LightSources\t\t\t\t\tfrom \"awayjs-display/lib/materials/LightSources\";\n\nimport ContextGLProfile\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProfile\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport ILightingPass\t\t\t\tfrom \"../surfaces/passes/ILightingPass\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport LightingCompiler\t\t\t\tfrom \"../shaders/compilers/LightingCompiler\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport default LightingShader;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport default RegisterPool;\n",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLTriangleFace\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTriangleFace\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterData\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\t\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\tprivate _numUsedVertexConstants:number;\n\tprivate _numUsedFragmentConstants:number;\n\tprivate _numUsedStreams:number;\n\tprivate _numUsedTextures:number;\n\tprivate _usesAnimation:boolean;\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic get usesAnimation():boolean\n\t{\n\t\treturn this._usesAnimation;\n\t}\n\n\tpublic set usesAnimation(value:boolean)\n\t{\n\t\tif (this._usesAnimation == value)\n\t\t\treturn;\n\n\t\tthis._usesAnimation = value;\n\n\t\tthis.invalidateProgram();\n\t}\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterData:AnimationRegisterData;\n\n\t\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\t\t\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\t\t\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\t\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._numUsedTextures;\n\t}\n\n\tpublic numLights:number;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * \n\t */\n\tpublic activeElements:GL_ElementsBase;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis._numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis._numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis._numUsedStreams = registerCache.numUsedStreams;\n\t\tthis._numUsedTextures = registerCache.numUsedTextures;\n\n\t\tthis.vertexConstantData = new Float32Array(registerCache.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(registerCache.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t\t\n\t\t// init constant data in pass\n\t\tthis._pass._iInitConstantData(this);\n\t\t\n\t\t//init constant data in animation\n\t\tif (this.usesAnimation)\n\t\t\tthis._pass.animationSet.doneAGALCode(this);\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\tthis.activeElements = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.activeElements = null;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase = this.createCompiler(this._elementsClass, this._pass);\n\t\tcompiler.compile();\n\n\t\tthis._calcAnimationCode(compiler._pRegisterCache, compiler.shadedTarget, compiler._pSharedRegisters);\n\n\t\t//initialise the required shader constants\n\t\tthis.initConstantData(compiler._pRegisterCache);\n\t\t\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement, sharedRegisters:ShaderRegisterData)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this, registerCache, sharedRegisters);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this, registerCache, sharedRegisters);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, registerCache, shadedTarget);\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t\t}\n\t}\n\n\n\tpublic setVertexConst(index:number, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tindex *= 4;\n\t\tthis.vertexConstantData[index++] = x;\n\t\tthis.vertexConstantData[index++] = y;\n\t\tthis.vertexConstantData[index++] = z;\n\t\tthis.vertexConstantData[index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number, data:Float32Array)\n\t{\n\t\tindex *= 4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number, matrix:Matrix3D)\n\t{\n\t\tindex *= 4;\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tthis.vertexConstantData[index++] = rawData[0];\n\t\tthis.vertexConstantData[index++] = rawData[4];\n\t\tthis.vertexConstantData[index++] = rawData[8];\n\t\tthis.vertexConstantData[index++] = rawData[12];\n\t\tthis.vertexConstantData[index++] = rawData[1];\n\t\tthis.vertexConstantData[index++] = rawData[5];\n\t\tthis.vertexConstantData[index++] = rawData[9];\n\t\tthis.vertexConstantData[index++] = rawData[13];\n\t\tthis.vertexConstantData[index++] = rawData[2];\n\t\tthis.vertexConstantData[index++] = rawData[6];\n\t\tthis.vertexConstantData[index++] = rawData[10];\n\t\tthis.vertexConstantData[index++] = rawData[14];\n\t\tthis.vertexConstantData[index++] = rawData[3];\n\t\tthis.vertexConstantData[index++] = rawData[7];\n\t\tthis.vertexConstantData[index++] = rawData[11];\n\t\tthis.vertexConstantData[index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tindex *= 4;\n\t\tthis.fragmentConstantData[index++] = x;\n\t\tthis.fragmentConstantData[index++] = y;\n\t\tthis.fragmentConstantData[index++] = z;\n\t\tthis.fragmentConstantData[index] = w;\n\t}\n}\n\nexport default ShaderBase;",
    "import RegisterPool\t\t\t\t\tfrom \"../shaders/RegisterPool\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t\t\n\t\tthis.reset();\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport default ShaderRegisterCache;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\n\tpublic animatableAttributes:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\tpublic animationTargetRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\tpublic uvSource:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport default ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport default ShaderRegisterElement;",
    "import ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._pSharedRegisters.uvTarget = varying;\n\t\t\tthis._pSharedRegisters.uvSource = uvAttributeReg;\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pSharedRegisters.animatableAttributes.push(this._pRegisterCache.getFreeVertexAttribute());\n\t\tthis._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedPosition);\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.tangentInput);\n\t\t\tthis._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedTangent);\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.normalInput);\n\t\t\tthis._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedNormal);\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():ShaderRegisterElement\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget;\n\t}\n}\n\nexport default CompilerBase;",
    "import LightingShader\t\t\t\tfrom \"../../shaders/LightingShader\";\nimport CompilerBase\t\t\t\t\tfrom \"../../shaders/compilers/CompilerBase\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport ILightingPass\t\t\t\tfrom \"../../surfaces/passes/ILightingPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport default LightingCompiler;",
    "export {default as CompilerBase}\t\t\t\t\tfrom \"./shaders/compilers/CompilerBase\";\nexport {default as LightingCompiler}\t\t\t\tfrom \"./shaders/compilers/LightingCompiler\";\nexport {default as LightingShader}\t\t\t\t\tfrom \"./shaders/LightingShader\";\nexport {default as RegisterPool}\t\t\t\t\tfrom \"./shaders/RegisterPool\";\nexport {default as ShaderBase}\t\t\t\t\t\tfrom \"./shaders/ShaderBase\";\nexport {default as ShaderRegisterCache}\t\t\t\tfrom \"./shaders/ShaderRegisterCache\";\nexport {default as ShaderRegisterData}\t\t\t\tfrom \"./shaders/ShaderRegisterData\";\nexport {default as ShaderRegisterElement}\t\t\tfrom \"./shaders/ShaderRegisterElement\";",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport default RenderableMergeSort;",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport default RenderableNullSort;",
    "export {default as IEntitySorter}\t\t\t\t\tfrom \"./sort/IEntitySorter\";\nexport {default as RenderableMergeSort}\t\t\t\tfrom \"./sort/RenderableMergeSort\";\nexport {default as RenderableNullSort}\t\t\t\tfrom \"./sort/RenderableNullSort\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\n\nimport BasicMaterialPass\t\t\tfrom \"../surfaces/passes/BasicMaterialPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport default GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default DistanceRender;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\n\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport default GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar renderables:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = renderables.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tvar shader:ShaderBase;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tshader = this._passes[i].shader;\n\t\t\t\tshader.usesAnimation = false;\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (renderables[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> renderables[j].animator).testGPUCompatibility(shader);\n\t\t\t}\n\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateProgram();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ISurfaceClassGL\t\t\t\tfrom \"../surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport default SurfacePool;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport PassBase\t\t\t\t\t\tfrom \"../../surfaces/passes/PassBase\";\nimport GL_TextureBase\t\t\t\tfrom \"../../textures/GL_TextureBase\";\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport default BasicMaterialPass;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateProgram();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default PassBase;",
    "export {default as BasicMaterialPass}\t\t\t\tfrom \"./surfaces/passes/BasicMaterialPass\";\nexport {default as ILightingPass}\t\t\t\t\tfrom \"./surfaces/passes/ILightingPass\";\nexport {default as IPass}\t\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nexport {default as PassBase}\t\t\t\t\t\tfrom \"./surfaces/passes/PassBase\";\nexport {default as GL_BasicMaterialSurface}\t\t\tfrom \"./surfaces/GL_BasicMaterialSurface\";\nexport {default as GL_DepthSurface}\t\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\nexport {default as GL_DistanceSurface}\t\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\nexport {default as GL_SkyboxSurface}\t\t\t\tfrom \"./surfaces/GL_SkyboxSurface\";\nexport {default as GL_SurfaceBase}\t\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nexport {default as GL_SurfacePassBase}\t\t\t\tfrom \"./surfaces/GL_SurfacePassBase\";\nexport {default as ISurfaceClassGL}\t\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nexport {default as SurfacePool}\t\t\t\t\t\tfrom \"./surfaces/SurfacePool\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport GL_Image2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Image2D\";\nimport GL_Sampler2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Sampler2D\";\n\nimport MappingMode\t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport GL_SamplerCube\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerCube\";\n\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport default GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ContextGLTextureFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTextureFormat\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport default GL_TextureBase;",
    "export {default as GL_Single2DTexture}\t\t\t\tfrom \"./textures/GL_Single2DTexture\";\nexport {default as GL_SingleCubeTexture}\t\t\tfrom \"./textures/GL_SingleCubeTexture\";\nexport {default as GL_TextureBase}\t\t\t\t\tfrom \"./textures/GL_TextureBase\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix3DUtils\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\n\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport default Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport default ParticleGraphicsTransform;",
    "export {default as Merge}\t\t\t\t\t\t\tfrom \"./tools/commands/Merge\";\nexport {default as ParticleGraphicsTransform}\t\tfrom \"./tools/data/ParticleGraphicsTransform\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport ParticleGraphicsTransform\t\tfrom \"../tools/data/ParticleGraphicsTransform\";\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport default ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport default PerspectiveMatrix3D;",
    "export {default as ParticleGraphicsHelper}\t\t\tfrom \"./utils/ParticleGraphicsHelper\";\nexport {default as PerspectiveMatrix3D}\t\t\t\tfrom \"./utils/PerspectiveMatrix3D\";"
  ],
  "sourceRoot": ""
}