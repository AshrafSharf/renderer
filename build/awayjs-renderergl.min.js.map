{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-renderergl/lib/animators/animationsetbase.ts","awayjs-renderergl/lib/animators/animatorbase.ts","awayjs-renderergl/lib/animators/particleanimationset.ts","awayjs-renderergl/lib/animators/particleanimator.ts","awayjs-renderergl/lib/animators/skeletonanimationset.ts","awayjs-renderergl/lib/animators/skeletonanimator.ts","awayjs-renderergl/lib/animators/vertexanimationset.ts","awayjs-renderergl/lib/animators/vertexanimator.ts","awayjs-renderergl/lib/animators/data/animationregistercache.ts","awayjs-renderergl/lib/animators/data/animationsubgeometry.ts","awayjs-renderergl/lib/animators/data/colorsegmentpoint.ts","awayjs-renderergl/lib/animators/data/jointpose.ts","awayjs-renderergl/lib/animators/data/particleanimationdata.ts","awayjs-renderergl/lib/animators/data/particledata.ts","awayjs-renderergl/lib/animators/data/particlepropertiesmode.ts","awayjs-renderergl/lib/animators/data/particleproperties.ts","awayjs-renderergl/lib/animators/data/skeletonjoint.ts","awayjs-renderergl/lib/animators/data/skeletonpose.ts","awayjs-renderergl/lib/animators/data/skeleton.ts","awayjs-renderergl/lib/animators/data/vertexanimationmode.ts","awayjs-renderergl/lib/animators/nodes/animationclipnodebase.ts","awayjs-renderergl/lib/animators/nodes/particleaccelerationnode.ts","awayjs-renderergl/lib/animators/nodes/particlebeziercurvenode.ts","awayjs-renderergl/lib/animators/nodes/particlebillboardnode.ts","awayjs-renderergl/lib/animators/nodes/particlecolornode.ts","awayjs-renderergl/lib/animators/nodes/particlefollownode.ts","awayjs-renderergl/lib/animators/nodes/particleinitialcolornode.ts","awayjs-renderergl/lib/animators/nodes/particlenodebase.ts","awayjs-renderergl/lib/animators/nodes/particleorbitnode.ts","awayjs-renderergl/lib/animators/nodes/particleoscillatornode.ts","awayjs-renderergl/lib/animators/nodes/particlepositionnode.ts","awayjs-renderergl/lib/animators/nodes/particlerotatetoheadingnode.ts","awayjs-renderergl/lib/animators/nodes/particlerotatetopositionnode.ts","awayjs-renderergl/lib/animators/nodes/particlerotationalvelocitynode.ts","awayjs-renderergl/lib/animators/nodes/particlescalenode.ts","awayjs-renderergl/lib/animators/nodes/particlesegmentedcolornode.ts","awayjs-renderergl/lib/animators/nodes/particlespritesheetnode.ts","awayjs-renderergl/lib/animators/nodes/particletimenode.ts","awayjs-renderergl/lib/animators/nodes/particleuvnode.ts","awayjs-renderergl/lib/animators/nodes/particlevelocitynode.ts","awayjs-renderergl/lib/animators/nodes/skeletonbinarylerpnode.ts","awayjs-renderergl/lib/animators/nodes/skeletonclipnode.ts","awayjs-renderergl/lib/animators/nodes/skeletondifferencenode.ts","awayjs-renderergl/lib/animators/nodes/skeletondirectionalnode.ts","awayjs-renderergl/lib/animators/nodes/skeletonnarylerpnode.ts","awayjs-renderergl/lib/animators/nodes/vertexclipnode.ts","awayjs-renderergl/lib/animators/states/animationclipstate.ts","awayjs-renderergl/lib/animators/states/animationstatebase.ts","awayjs-renderergl/lib/animators/states/particleaccelerationstate.ts","awayjs-renderergl/lib/animators/states/particlebeziercurvestate.ts","awayjs-renderergl/lib/animators/states/particlebillboardstate.ts","awayjs-renderergl/lib/animators/states/particlecolorstate.ts","awayjs-renderergl/lib/animators/states/particlefollowstate.ts","awayjs-renderergl/lib/animators/states/particleinitialcolorstate.ts","awayjs-renderergl/lib/animators/states/particleorbitstate.ts","awayjs-renderergl/lib/animators/states/particleoscillatorstate.ts","awayjs-renderergl/lib/animators/states/particlepositionstate.ts","awayjs-renderergl/lib/animators/states/particlerotatetoheadingstate.ts","awayjs-renderergl/lib/animators/states/particlerotatetopositionstate.ts","awayjs-renderergl/lib/animators/states/particlerotationalvelocitystate.ts","awayjs-renderergl/lib/animators/states/particlescalestate.ts","awayjs-renderergl/lib/animators/states/particlesegmentedcolorstate.ts","awayjs-renderergl/lib/animators/states/particlespritesheetstate.ts","awayjs-renderergl/lib/animators/states/particlestatebase.ts","awayjs-renderergl/lib/animators/states/particletimestate.ts","awayjs-renderergl/lib/animators/states/particleuvstate.ts","awayjs-renderergl/lib/animators/states/particlevelocitystate.ts","awayjs-renderergl/lib/animators/states/skeletonbinarylerpstate.ts","awayjs-renderergl/lib/animators/states/skeletonclipstate.ts","awayjs-renderergl/lib/animators/states/skeletondifferencestate.ts","awayjs-renderergl/lib/animators/states/skeletondirectionalstate.ts","awayjs-renderergl/lib/animators/states/skeletonnarylerpstate.ts","awayjs-renderergl/lib/animators/states/vertexclipstate.ts","awayjs-renderergl/lib/animators/transitions/crossfadetransitionnode.ts","awayjs-renderergl/lib/animators/transitions/crossfadetransitionstate.ts","awayjs-renderergl/lib/animators/transitions/crossfadetransition.ts","awayjs-renderergl/lib/base/particlegeometry.ts","awayjs-renderergl/lib/compilation/registerpool.ts","awayjs-renderergl/lib/compilation/shadercompilerbase.ts","awayjs-renderergl/lib/compilation/shaderlightingcompiler.ts","awayjs-renderergl/lib/compilation/shaderlightingobject.ts","awayjs-renderergl/lib/compilation/shaderobjectbase.ts","awayjs-renderergl/lib/compilation/shaderregistercache.ts","awayjs-renderergl/lib/compilation/shaderregisterdata.ts","awayjs-renderergl/lib/compilation/shaderregisterelement.ts","awayjs-renderergl/lib/errors/animationseterror.ts","awayjs-renderergl/lib/events/animationstateevent.ts","awayjs-renderergl/lib/events/animatorevent.ts","awayjs-renderergl/lib/events/shadingmethodevent.ts","awayjs-renderergl/lib/filters/filter3dbase.ts","awayjs-renderergl/lib/filters/tasks/filter3dtaskbase.ts","awayjs-renderergl/lib/managers/defaultmaterialmanager.ts","awayjs-renderergl/lib/managers/rttbuffermanager.ts","awayjs-renderergl/lib/materials/linebasicmaterial.ts","awayjs-renderergl/lib/materials/materialglbase.ts","awayjs-renderergl/lib/materials/skyboxmaterial.ts","awayjs-renderergl/lib/materials/trianglebasicmaterial.ts","awayjs-renderergl/lib/materials/trianglematerialbase.ts","awayjs-renderergl/lib/passes/depthmappass.ts","awayjs-renderergl/lib/passes/distancemappass.ts","awayjs-renderergl/lib/passes/lightingpassglbase.ts","awayjs-renderergl/lib/passes/linebasicpass.ts","awayjs-renderergl/lib/passes/materialpassglbase.ts","awayjs-renderergl/lib/passes/skyboxpass.ts","awayjs-renderergl/lib/passes/trianglebasicpass.ts","awayjs-renderergl/lib/pick/jspickingcollider.ts","awayjs-renderergl/lib/pick/pickingcolliderbase.ts","awayjs-renderergl/lib/pick/shaderpicker.ts","awayjs-renderergl/lib/pool/billboardrenderable.ts","awayjs-renderergl/lib/pool/linesubmeshrenderable.ts","awayjs-renderergl/lib/pool/materialdatapool.ts","awayjs-renderergl/lib/pool/materialdata.ts","awayjs-renderergl/lib/pool/materialpassdatapool.ts","awayjs-renderergl/lib/pool/materialpassdata.ts","awayjs-renderergl/lib/pool/renderablebase.ts","awayjs-renderergl/lib/pool/skyboxrenderable.ts","awayjs-renderergl/lib/pool/trianglesubmeshrenderable.ts","awayjs-renderergl/lib/render/defaultrenderer.ts","awayjs-renderergl/lib/render/depthrenderer.ts","awayjs-renderergl/lib/render/filter3drenderer.ts","awayjs-renderergl/lib/render/rendererbase.ts","awayjs-renderergl/lib/tools/commands/merge.ts","awayjs-renderergl/lib/tools/data/particlegeometrytransform.ts","awayjs-renderergl/lib/utils/particlegeometryhelper.ts","awayjs-renderergl/lib/utils/perspectivematrix3d.ts","awayjs-renderergl/lib/utils/shadercompilerhelper.ts"],"names":[],"mappings":"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","file":"awayjs-renderergl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends NamedAssetBase implements IAsset\n{\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_SET;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends NamedAssetBase implements IAnimator\n{\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATOR;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilation at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilation\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationSubGeometries:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache = new AnimationRegisterCache(shaderObject.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shaderObject.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shaderObject.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shaderObject.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shaderObject.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shaderObject.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shaderObject.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shaderObject.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shaderObject.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shaderObject.uvSource, shaderObject.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shaderObject, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\n\t{\n\t\tvar mesh:Mesh = subMesh.parentMesh;\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\n\t\tif (animationSubGeometry)\n\t\t\treturn animationSubGeometry;\n\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\n\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationSubGeometry:AnimationSubGeometry;\n\t\tvar newAnimationSubGeometry:boolean = false;\n\t\tvar subGeometry:SubGeometryBase;\n\t\tvar subMesh:ISubMesh;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\t\t\tsubGeometry = subMesh.subGeometry;\n\t\t\tif (mesh.shareAnimationGeometry) {\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\n\n\t\t\t\tif (animationSubGeometry)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\n\n\t\t\tif (mesh.shareAnimationGeometry)\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\n\t\t\telse\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\n\n\t\t\tnewAnimationSubGeometry = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationSubGeometry)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationSubGeometry\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;","import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGeometry\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!subMesh)\n\t\t\tthrow(new Error(\"Must be subMesh\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator subGeometry\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shaderObject.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shaderObject.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shaderObject.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shaderObject.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Array<number>;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedSubGeometry:Object = new Object();\n\tprivate _morphedSubGeometryDirty:Object = new Object();\n\tprivate _condensedMatrices:Array<number>;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Array<number>\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\n\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp, subGeometry.numCondensedJoints);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, subGeometry.numCondensedJoints*3);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tstage.activateBuffer(vertexStreamOffset, renderable.getVertexData(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.JOINT_INDEX_FORMAT);\n\t\tstage.activateBuffer(vertexStreamOffset + 1, renderable.getVertexData(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.JOINT_WEIGHT_FORMAT);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shaderObject.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number> /*uint*/, numJoints:number /*uint*/)\n\t{\n\t\tvar i:number /*uint*/ = 0, j:number /*uint*/ = 0;\n\t\tvar len:number /*uint*/;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Array<number>();\n\n\t\tdo {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*4;\n\t\t\tlen = srcIndex + 12;\n\t\t\t// copy into condensed\n\t\t\twhile (srcIndex < len)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t} while (++i < numJoints);\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Array<number>;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceSubGeometry;\n\n\t\tvar targetSubGeometry:TriangleSubGeometry;\n\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetSubGeometry;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\n\n\t\tvar sourcePositions:Array<number> = sourceSubGeometry.positions;\n\t\tvar sourceNormals:Array<number> = sourceSubGeometry.vertexNormals;\n\t\tvar sourceTangents:Array<number> = sourceSubGeometry.vertexTangents;\n\n\t\tvar jointIndices:Array<number> = sourceSubGeometry.jointIndices;\n\t\tvar jointWeights:Array<number> = sourceSubGeometry.jointWeights;\n\n\t\tvar targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\n\n\t\tvar targetPositions:Array<number> = targetSubGeometry.positions;\n\t\tvar targetNormals:Array<number> = targetSubGeometry.vertexNormals;\n\t\tvar targetTangents:Array<number> = targetSubGeometry.vertexTangents;\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar len:number /*int*/ = sourcePositions.length;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < len) {\n\t\t\tvertX = sourcePositions[index];\n\t\t\tvertY = sourcePositions[index + 1];\n\t\t\tvertZ = sourcePositions[index + 2];\n\t\t\tnormX = sourceNormals[index];\n\t\t\tnormY = sourceNormals[index + 1];\n\t\t\tnormZ = sourceNormals[index + 2];\n\t\t\ttangX = sourceTangents[index];\n\t\t\ttangY = sourceTangents[index + 1];\n\t\t\ttangZ = sourceTangents[index + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[index] = vx;\n\t\t\ttargetPositions[index + 1] = vy;\n\t\t\ttargetPositions[index + 2] = vz;\n\t\t\ttargetNormals[index] = nx;\n\t\t\ttargetNormals[index + 1] = ny;\n\t\t\ttargetNormals[index + 2] = nz;\n\t\t\ttargetTangents[index] = tx;\n\t\t\ttargetTangents[index + 1] = ty;\n\t\t\ttargetTangents[index + 2] = tz;\n\n\t\t\tindex += 3;\n\t\t}\n\n\t\ttargetSubGeometry.updatePositions(targetPositions);\n\t\ttargetSubGeometry.updateVertexNormals(targetNormals);\n\t\ttargetSubGeometry.updateVertexTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).updateIndices(subGeometry.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\n\n\t\tswitch(event.dataType) {\n\t\t\tcase TriangleSubGeometry.UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.uvs);\n\t\t\tcase TriangleSubGeometry.SECONDARY_UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.secondaryUVs);\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shaderObject);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shaderObject);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shaderObject.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shaderObject.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shaderObject.animationTargetRegisters[0] + \", \" + shaderObject.animatableAttributes[0] + \"\\n\";\n\t\tif (shaderObject.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[1] + \", \" + shaderObject.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shaderObject.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport VertexDataPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shaderObject, renderable, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\t\t// this type of animation can only be SubMesh\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tfor (; i < len; ++i) {\n\t\t\tsubGeom = this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\n\n\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.POSITION_DATA), subGeom.getOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\tif (shaderObject.normalDependencies > 0)\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.NORMAL_DATA), subGeom.getOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t}\n\t}\n\n\tprivate setNullPose(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\t\tif (shaderObject.normalDependencies > 0)\n\t\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t}\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\n\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = VertexAnimator;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Array<number> = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationSubGeometry\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationSubGeometry;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;","import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;","import TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic subGeometry:TriangleSubGeometry;\n}\n\nexport = ParticleData","/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;","/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;","/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Array<number>;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;","import AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends NamedAssetBase implements IAsset\n{\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKELETON_POSE;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;","import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends NamedAssetBase implements IAsset\n{\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKELETON;\n\t}\n}\n\nexport = Skeleton;","/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Geometry>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;","import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;","import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;","import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationSubGeometry.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Geometry>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGeometry:Geometry;\n\tprivate _nextGeometry:Geometry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGeometry;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGeometry;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGeometry = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;","import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;","import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * @class away.base.ParticleGeometry\n */\nclass ParticleGeometry extends Geometry\n{\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n}\n\nexport = ParticleGeometry;","import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilation process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n","import AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderCompilerBase\n{\n\tpublic _pShaderObject:ShaderObjectBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pMaterialPass:MaterialPassGLBase;\n\tpublic _pMaterial:MaterialGLBase;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\tpublic _pProfile:string;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(material:MaterialGLBase, materialPass:MaterialPassGLBase, shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._pMaterial = material;\n\t\tthis._pMaterialPass = materialPass;\n\n\t\tthis._pShaderObject = shaderObject;\n\t\tthis._pProfile = shaderObject.profile;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(this._pProfile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = 1;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShaderObject.reset();\n\n\t\tthis.pCalculateDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pMaterialPass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pMaterialPass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShaderObject.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pMaterialPass._iInitConstantData(this._pShaderObject);\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShaderObject.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShaderObject.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShaderObject.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShaderObject.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShaderObject.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pMaterial._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pMaterial._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pMaterialPass._iGetPreLightingVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pMaterialPass._iGetPreLightingFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\n\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShaderObject.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShaderObject.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShaderObject.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\tthis._pSharedRegisters.uvVarying = varying;\n\n\t\tif (this._pShaderObject.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShaderObject.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShaderObject.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShaderObject.viewDirDependencies);\n\n\t\tthis._pShaderObject.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShaderObject.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShaderObject.outputsNormals && !this._pShaderObject.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pMaterialPass._iGetNormalVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShaderObject.outputsNormals || !this._pShaderObject.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShaderObject.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShaderObject.outputsNormals) {\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShaderObject.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShaderObject.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShaderObject.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShaderObject.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShaderObject.tangentDependencies > 0 || this._pShaderObject.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShaderObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\t}\n\n\t/**\n\t * Figure out which named registers are required, and how often.\n\t */\n\tpublic pCalculateDependencies()\n\t{\n\t\tthis._pShaderObject.useAlphaPremultiplied = this._pMaterial.alphaPremultiplied;\n\t\tthis._pShaderObject.useBothSides = this._pMaterial.bothSides;\n\t\tthis._pShaderObject.useMipmapping = this._pMaterial.mipmap;\n\t\tthis._pShaderObject.useSmoothTextures = this._pMaterial.smooth;\n\t\tthis._pShaderObject.repeatTextures = this._pMaterial.repeat;\n\t\tthis._pShaderObject.usesUVTransform = this._pMaterial.animateUVs;\n\t\tthis._pShaderObject.alphaThreshold = this._pMaterial.alphaThreshold;\n\t\tthis._pShaderObject.texture = this._pMaterial.texture;\n\t\tthis._pShaderObject.color = this._pMaterial.color;\n\n\t\tthis._pMaterialPass._iIncludeDependencies(this._pShaderObject);\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = ShaderCompilerBase;","import LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport LightingPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/LightingPassGLBase\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderLightingCompiler extends ShaderCompilerBase\n{\n\tprivate _materialLightingPass:LightingPassGLBase;\n\tprivate _shaderLightingObject:ShaderLightingObject;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(material:MaterialGLBase, materialPass:LightingPassGLBase, shaderObject:ShaderLightingObject)\n\t{\n\t\tsuper(material, materialPass, shaderObject);\n\n\t\tthis._materialLightingPass = materialPass;\n\t\tthis._shaderLightingObject = shaderObject;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._materialLightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._materialLightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._materialLightingPass.iNumDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._materialLightingPass.iNumPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._materialLightingPass.iNumLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._materialLightingPass.iNumLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights*3);\n\t\t}\n\t}\n\n\n\t/**\n\t * Figure out which named registers are required, and how often.\n\t */\n\tpublic pCalculateDependencies()\n\t{\n\t\tvar numAllLights:number = this._materialLightingPass.iNumPointLights + this._materialLightingPass.iNumDirectionalLights;\n\t\tvar numLightProbes:number = this._materialLightingPass.iNumLightProbes;\n\t\tvar diffuseLightSources:number = this._pMaterial.diffuseLightSources;\n\t\tvar specularLightSources:number = this._materialLightingPass._iUsesSpecular()? this._pMaterial.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis._shaderLightingObject.usesLightFallOff = this._pMaterial.enableLightFallOff && this._shaderLightingObject.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis._shaderLightingObject.numLights = numAllLights + numLightProbes;\n\t\tthis._shaderLightingObject.numPointLights = this._materialLightingPass.iNumPointLights;\n\t\tthis._shaderLightingObject.numDirectionalLights = this._materialLightingPass.iNumDirectionalLights;\n\t\tthis._shaderLightingObject.numLightProbes = numLightProbes;\n\t\tthis._shaderLightingObject.pointLightsOffset = this._materialLightingPass.pointLightsOffset;\n\t\tthis._shaderLightingObject.directionalLightsOffset = this._materialLightingPass.directionalLightsOffset;\n\t\tthis._shaderLightingObject.lightProbesOffset = this._materialLightingPass.lightProbesOffset;\n\t\tthis._shaderLightingObject.lightPicker = this._materialLightingPass.lightPicker;\n\t\tthis._shaderLightingObject.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesShadows = this._materialLightingPass._iUsesShadows();\n\n\t\tsuper.pCalculateDependencies();\n\t}\n}\n\nexport = ShaderLightingCompiler;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport ShaderLightingCompiler\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingCompiler\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport LightingPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/LightingPassGLBase\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderLightingObject extends ShaderObjectBase\n{\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\tpublic numPointLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numLightProbes:number;\n\tpublic pointLightsOffset:number;\n\tpublic directionalLightsOffset:number;\n\tpublic lightProbesOffset:number;\n\tpublic lightPicker:LightPickerBase;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(profile)\n\t{\n\t\tsuper(profile);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderLightingCompiler}\n\t */\n\tpublic createCompiler(material:MaterialGLBase, materialPass:LightingPassGLBase):ShaderCompilerBase\n\t{\n\t\treturn new ShaderLightingCompiler(material, materialPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.numLights = 0;\n\t\tthis.usesLightFallOff = true;\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper.setRenderState(renderable, stage, camera, viewProjection);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes(stage);\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this.lightPicker.directionalLights;\n\t\toffset = this.directionalLightsOffset;\n\t\tlen = this.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this.lightPicker.pointLights;\n\t\toffset = this.pointLightsOffset;\n\t\tlen = this.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes(stage:Stage)\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\tstage.activateCubeTexture(this.lightProbeDiffuseIndices[i], probe.diffuseMap);\n\n\t\t\tif (addSpec)\n\t\t\t\tstage.activateCubeTexture(this.lightProbeSpecularIndices[i], probe.specularMap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this.lightProbesOffset + i];\n\t}\n}\n\nexport = ShaderLightingObject;","import Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderObjectBase\n{\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\tpublic profile:string;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:Texture2DBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the local position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic localPosDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(profile)\n\t{\n\t\tthis.profile = profile;\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderCompilerBase}\n\t */\n\tpublic createCompiler(material:MaterialGLBase, materialPass:MaterialPassGLBase):ShaderCompilerBase\n\t{\n\t\treturn new ShaderCompilerBase(material, materialPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\n\n\t\t//Initializes commonly required constant values.\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(stage:Stage, camera:Camera)\n\t{\n\t\tstage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(stage:Stage)\n\t{\n\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tvar context:IContextGL = stage.context;\n\n\t\tif (renderable.materialOwner.animator)\n\t\t\t(<AnimatorBase> renderable.materialOwner.animator).setRenderState(this, renderable, stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.uvBufferIndex >= 0)\n\t\t\tstage.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\n\n\t\tif (this.secondaryUVBufferIndex >= 0)\n\t\t\tstage.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\n\n\t\tif (this.normalBufferIndex >= 0)\n\t\t\tstage.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\n\t\tif (this.tangentBufferIndex >= 0)\n\t\t\tstage.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\n\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.materialOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO uncount associated program data\n\t}\n}\n\nexport = ShaderObjectBase;","import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilation.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;","import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;","/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;","import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends Event\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic pAddTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:ITexture;\n\n\tprivate _scaledTextureWidth:number = -1;\n\tprivate _scaledTextureHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():ITexture\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:ITexture)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.pUpdateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic pInvalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic pUpdateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic pGetVertexCode():string\n\t{\n\t\t// TODO: imeplement AGAL <> GLSL\n\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic pGetFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic pUpdateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.pUpdateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\n\nimport LineBasicMaterial\t\t\t= require(\"awayjs-renderergl/lib/materials/LineBasicMaterial\");\nimport TriangleBasicMaterial\t\t= require(\"awayjs-renderergl/lib/materials/TriangleBasicMaterial\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:TriangleBasicMaterial;\n\tprivate static _defaultLineMaterial:LineBasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(materialOwner:IMaterialOwner = null):MaterialGLBase\n\t{\n\t\tif (materialOwner != null && materialOwner.assetType == AssetType.LINE_SUB_MESH) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(materialOwner:IMaterialOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData, true);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new TriangleBasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new LineBasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultSegmentMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = TextureUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = TextureUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport LineBasicPass\t\t\t\t= require(\"awayjs-renderergl/lib/passes/LineBasicPass\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * LineMaterial is a material exclusively used to render wireframe objects\n *\n * @see away.entities.Lines\n */\nclass LineBasicMaterial extends MaterialGLBase\n{\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number;\n\n\tprivate _screenPass:LineBasicPass;\n\n\t/**\n\t * Creates a new LineMaterial object.\n\t *\n\t * @param thickness The thickness of the wireframe lines.\n\t */\n\tconstructor(thickness:number = 1.25)\n\t{\n\t\tsuper();\n\n\t\tthis._thickness = thickness;\n\n\t\tthis.bothSides = true;\n\n\t\tthis._pAddScreenPass(this._screenPass = new LineBasicPass());\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t// test if behind camera near plane\n\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t// n = plane normal (0,0,-1)\n\t\t\t// D = Q1 - Q0\n\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\" + // transform Q0 to clip space\n\n\t\t\t// interpolate color\n\t\t\t\"mov v0, va3\t\t\t\t\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivatePass(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivatePass(pass, renderer, camera);\n\n\t\tvar context:IContextGL = renderer.context;\n\t\tvar stage:Stage = renderer.stage;\n\n\t\tthis._constants[0] = this._thickness/((stage.scissorRect)? Math.min(stage.scissorRect.width, stage.scissorRect.height) : Math.min(stage.width, stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineBasicMaterial.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineBasicMaterial.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar context:IContextGL = stage.context;\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tstage.activateBuffer(0, renderable.getVertexData(LineSubGeometry.START_POSITION_DATA), renderable.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tstage.activateBuffer(1, renderable.getVertexData(LineSubGeometry.END_POSITION_DATA), renderable.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tstage.activateBuffer(2, renderable.getVertexData(LineSubGeometry.THICKNESS_DATA), renderable.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\t\tstage.activateBuffer(3, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\n\n\t\tcontext.drawTriangles(stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = LineBasicMaterial;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\n\nclass MaterialGLBase extends MaterialBase\n{\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = MaterialGLBase;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport SkyboxPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/SkyboxPass\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * SkyboxMaterial is a material exclusively used to render skyboxes\n *\n * @see away3d.primitives.Skybox\n */\nclass SkyboxMaterial extends MaterialGLBase\n{\n\tprivate _vertexData:Array<number>;\n\tprivate _cubeMap:CubeTextureBase;\n\tprivate _skyboxPass:SkyboxPass;\n\n\t/**\n\t * Creates a new SkyboxMaterial object.\n\t * @param cubeMap The CubeMap to use as the skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase, smooth:boolean = true, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._cubeMap = cubeMap;\n\t\tthis._pAddScreenPass(this._skyboxPass = new SkyboxPass());\n\n\t\tthis._vertexData = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\n\t}\n\n\t/**\n\t * The cube texture to use as the skybox.\n\t */\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.hasMipmaps != this._cubeMap.hasMipmaps || value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidatePasses();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\" +\n\t\t\t\"mov v0, va0\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//var cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\t//this._texturesIndex = cubeMapReg.index;\n\n\t\t//ShaderCompilerHelper.getTexCubeSampleCode(sharedRegisters.shadedTarget, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar mip:string = \",mipnone\";\n\n\t\tif (this._cubeMap.hasMipmaps)\n\t\t\tmip = \",miplinear\";\n\n\t\treturn \"tex ft0, v0, fs0 <cube,\" + ShaderCompilerHelper.getFormatStringForTexture(this._cubeMap) + \"linear,clamp\" + mip + \">\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivatePass(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivatePass(pass, renderer, camera);\n\n\t\tvar context:IContextGL = renderer.context;\n\t\tcontext.setSamplerStateAt(0, ContextGLWrapMode.CLAMP, ContextGLTextureFilter.LINEAR, this._cubeMap.hasMipmaps? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\trenderer.stage.activateCubeTexture(0, this._cubeMap);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar context:IContextGL = stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexData[0] = pos.x;\n\t\tthis._vertexData[1] = pos.y;\n\t\tthis._vertexData[2] = pos.z;\n\t\tthis._vertexData[4] = this._vertexData[5] = this._vertexData[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexData, 2);\n\n\t\tstage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = SkyboxMaterial;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport TriangleMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialBase\");\nimport TriangleBasicPass\t\t\t= require(\"awayjs-renderergl/lib/passes/TriangleBasicPass\");\n\n/**\n * TriangleMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass TriangleBasicMaterial extends TriangleMaterialBase\n{\n\tprivate _screenPass:TriangleBasicPass;\n\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new TriangleMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._screenPass = new TriangleBasicPass();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iUpdateMaterial()\n\t{\n\t\tif (this._pScreenPassesInvalid) {\n\t\t\t//Updates screen passes when they were found to be invalid.\n\t\t\tthis._pScreenPassesInvalid = false;\n\n\t\t\tthis.setBlendAndCompareModes();\n\n\t\t\tthis._pClearScreenPasses();\n\n\t\t\tthis._pAddScreenPass(this._screenPass);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tthis._pRequiresBlending = (this._pBlendMode != BlendMode.NORMAL || this._alphaBlending || this._alpha < 1);\n\t\tthis._screenPass.depthCompareMode = this._depthCompareMode;\n\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\tthis._screenPass.setBlendMode((this._pBlendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._pBlendMode);\n\t\tthis._screenPass.forceSeparateMVP = false;\n\t}\n}\n\nexport = TriangleBasicMaterial;","﻿import Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleMaterialBase extends MaterialGLBase\n{\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shaderObject.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.sceneMatrixIndex >= 0) {\n\t\t\trenderable.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shaderObject.vertexConstantData, shaderObject.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shaderObject.vertexConstantData, shaderObject.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shaderObject.vertexConstantData, shaderObject.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shaderObject.vertexConstantData, shaderObject.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shaderObject.fragmentConstantData, shaderObject.numUsedFragmentConstants);\n\n\t\tstage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = TriangleMaterialBase;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * DepthMapPass is a pass that writes depth values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render shadow maps, depth maps, etc.\n */\nclass DepthMapPass extends MaterialPassGLBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DepthMapPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.projectionDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//this.setRenderState(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar context:IContextGL = renderer.context;\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tcontext.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\trenderer.stage.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tshaderObject.fragmentConstantData[this._fragmentConstantsIndex + 8] = pass.shaderObject.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DepthMapPass;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * DistanceMapPass is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceMapPass extends MaterialPassGLBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DistanceMapPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.projectionDependencies++;\n\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tif (shaderObject.viewDirDependencies > 0)\n\t\t\tshaderObject.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant()\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t   \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t   \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t   \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar context:IContextGL = renderer.context;\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tcontext.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\trenderer.stage.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tdata[index + 8] = pass.shaderObject.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceMapPass;","import AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialPassGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass LightingPassGLBase extends MaterialPassGLBase\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tprivate _directionalLightsOffset:number = 0;\n\tprivate _pointLightsOffset:number = 0;\n\tprivate _lightProbesOffset:number = 0;\n\n\t/**\n\t * Indicates the offset in the light picker's directional light vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get directionalLightsOffset():number\n\t{\n\t\treturn this._directionalLightsOffset;\n\t}\n\n\tpublic set directionalLightsOffset(value:number)\n\t{\n\t\tthis._directionalLightsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the offset in the light picker's point light vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get pointLightsOffset():number\n\t{\n\t\treturn this._pointLightsOffset;\n\t}\n\n\tpublic set pointLightsOffset(value:number)\n\t{\n\t\tthis._pointLightsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the offset in the light picker's light probes vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get lightProbesOffset():number\n\t{\n\t\treturn this._lightProbesOffset;\n\t}\n\n\tpublic set lightProbesOffset(value:number)\n\t{\n\t\tthis._lightProbesOffset = value;\n\t}\n\n\t/**\n\t * The amount of point lights that need to be supported.\n\t */\n\tpublic get iNumPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The amount of directional lights that need to be supported.\n\t */\n\tpublic get iNumDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of light probes that need to be supported.\n\t */\n\tpublic get iNumLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * \n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic _iUsesSpecular():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iUsesShadows():boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPerLightDiffuseFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, diffuseColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPerLightSpecularFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, specularColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPerProbeDiffuseFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPerProbeSpecularFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPostLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetPostLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = LightingPassGLBase;","﻿import ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n/**\n * LineBasicPass is a material pass that draws wireframe segments.\n */\nclass LineBasicPass extends MaterialPassGLBase\n{\n\t/**\n\t * Creates a new SegmentPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\treturn \"mov \" + targetReg + \", v0\\n\";\n\t}\n}\n\nexport = LineBasicPass;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n\n/**\n * MaterialPassGLBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass MaterialPassGLBase extends NamedAssetBase implements IMaterialPass\n{\n\tprivate _materialPassData:Array<MaterialPassData> = new Array<MaterialPassData>();\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tpublic _pEnableBlending:boolean = false;\n\n\tpublic  _pLightPicker:LightPickerBase;\n\n\tprivate _writeDepth:boolean = true;\n\tprivate _onLightsChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Creates a new MaterialPassGLBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onLightsChangeDelegate = (event:Event) => this.onLightsChange(event);\n\t}\n\n\t/**\n\t * Factory method to create a concrete shader object for this pass.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tpublic createShaderObject(profile:string):ShaderObjectBase\n\t{\n\t\treturn new ShaderObjectBase(profile);\n\t}\n\n\t/**\n\t * Indicate whether this pass should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic get writeDepth():boolean\n\t{\n\t\treturn this._writeDepth;\n\t}\n\n\tpublic set writeDepth(value:boolean)\n\t{\n\t\tthis._writeDepth = value;\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tthis._depthCompareMode = value;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\twhile (this._materialPassData.length)\n\t\t\tthis._materialPassData[0].dispose();\n\n\t\tthis._materialPassData = null;\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis.setRenderState(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass.shaderObject.setRenderState(renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\n\t\t\tcase BlendMode.NORMAL:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._pEnableBlending = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\n\t\t}\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\trenderer.context.setDepthTest(( this._writeDepth && !this._pEnableBlending ), this._depthCompareMode);\n\n\t\tif (this._pEnableBlending)\n\t\t\trenderer.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\trenderer.activateMaterialPass(pass, camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:MaterialPassData, renderer:RendererBase)\n\t{\n\t\trenderer.deactivateMaterialPass(pass);\n\n\t\trenderer.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL); // TODO : imeplement\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic _pInvalidatePass()\n\t{\n\t\tvar len:number = this._materialPassData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].invalidate();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see away.materials.LightPickerBase\n\t * @see away.materials.StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis.pUpdateLights();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changes.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis.pUpdateLights();\n\t}\n\n\t/**\n\t * Implemented by subclasses if the pass uses lights to update the shader.\n\t */\n\tpublic pUpdateLights()\n\t{\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tif (this._forceSeparateMVP)\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\tshaderObject.outputsNormals = this._pOutputsNormals(shaderObject);\n\t\tshaderObject.outputsTangentNormals = shaderObject.outputsNormals && this._pOutputsTangentNormals(shaderObject);\n\t\tshaderObject.usesTangentSpace = shaderObject.outputsTangentNormals && this._pUsesTangentSpace(shaderObject);\n\n\t\tif (!shaderObject.usesTangentSpace && shaderObject.viewDirDependencies > 0)\n\t\t\tshaderObject.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated at all.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic _iAddMaterialPassData(materialPassData:MaterialPassData):MaterialPassData\n\t{\n\t\tthis._materialPassData.push(materialPassData);\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic _iRemoveMaterialPassData(materialPassData:MaterialPassData):MaterialPassData\n\t{\n\t\tthis._materialPassData.splice(this._materialPassData.indexOf(materialPassData), 1);\n\n\t\treturn materialPassData;\n\t}\n}\n\nexport = MaterialPassGLBase;","import ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n/**\n * SkyboxPass provides a material pass exclusively used to render sky boxes from a cube texture.\n */\nclass SkyboxPass extends MaterialPassGLBase\n{\n\t/**\n\t * Creates a new SkyboxPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.useMipmapping = false;\n\t}\n}\n\nexport = SkyboxPass;","﻿import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleBasicPass extends MaterialPassGLBase\n{\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * The alpha component of the diffuse reflection.\n\t */\n\tpublic get diffuseAlpha():number\n\t{\n\t\treturn this._diffuseA;\n\t}\n\n\tpublic set diffuseAlpha(value:number)\n\t{\n\t\tthis._diffuseA = value;\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(diffuseColor:number)\n\t{\n\t\tthis._diffuseColor = diffuseColor;\n\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\tdiffuseInputReg = regCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedReg, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tdiffuseInputReg = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic _iIncludeDependencies(dependencyCounter:ShaderObjectBase)\n\t{\n\t\tif (dependencyCounter.texture != null)\n\t\t\tdependencyCounter.uvDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\trenderer.context.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\trenderer.stage.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[this._fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = TriangleBasicPass;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport PickingColliderBase\t\t\t\t= require(\"awayjs-renderergl/lib/pick/PickingColliderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider extends PickingColliderBase implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indexData:Array<number> = renderable.getIndexData().data;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = (<MaterialBase> renderable.materialOwner.material).bothSides;\n\n\t\tvar positionData:Array<number> = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar uvData:Array<number> = renderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = renderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = renderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\t\tvar numIndices:number = indexData.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = positionOffset + indexData[ index ]*positionStride;\n\t\t\ti1 = positionOffset + indexData[ (index + 1) ]*positionStride;\n\t\t\ti2 = positionOffset + indexData[ (index + 2) ]*positionStride;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positionData[ i0 ];\n\t\t\tp0y = positionData[ (i0 + 1) ];\n\t\t\tp0z = positionData[ (i0 + 2) ];\n\t\t\tp1x = positionData[ i1 ];\n\t\t\tp1y = positionData[ (i1 + 1) ];\n\t\t\tp1z = positionData[ (i1 + 2) ];\n\t\t\tp2x = positionData[ i2 ];\n\t\t\tp2y = positionData[ (i2 + 1) ];\n\t\t\tp2z = positionData[ (i2 + 2) ];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*this.rayDirection.x + ny* +this.rayDirection.y + nz*this.rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*this.rayPosition.x + ny*this.rayPosition.y + nz*this.rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = this.rayPosition.x + t*this.rayDirection.x;\n\t\t\t\tcy = this.rayPosition.y + t*this.rayDirection.y;\n\t\t\t\tcz = this.rayPosition.z + t*this.rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/( Q1Q1*Q2Q2 - Q1Q2*Q1Q2 );\n\t\t\t\tv = coeff*( Q2Q2*RQ1 - Q1Q2*RQ2 );\n\t\t\t\tw = coeff*( -Q1Q2*RQ1 + Q1Q1*RQ2 );\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._pGetCollisionUV(indexData, uvData, index, v, w, u, uvOffset, uvStride);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;","import Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RenderablePool\t\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport BillboardRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * An abstract base class for all picking collider classes. It should not be instantiated directly.\n *\n * @class away.pick.PickingColliderBase\n */\nclass PickingColliderBase\n{\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _subMeshRenderablePool:RenderablePool;\n\n\tpublic rayPosition:Vector3D;\n\tpublic rayDirection:Vector3D;\n\n\tconstructor()\n\t{\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(BillboardRenderable);\n\t\tthis._subMeshRenderablePool = RenderablePool.getPool(TriangleSubMeshRenderable);\n\t}\n\n\tpublic _pPetCollisionNormal(indexData:Array<number> /*uint*/, vertexData:Array<number>, triangleIndex:number):Vector3D // PROTECTED\n\t{\n\t\tvar normal:Vector3D = new Vector3D();\n\t\tvar i0:number = indexData[ triangleIndex ]*3;\n\t\tvar i1:number = indexData[ triangleIndex + 1 ]*3;\n\t\tvar i2:number = indexData[ triangleIndex + 2 ]*3;\n\t\tvar p0:Vector3D = new Vector3D(vertexData[ i0 ], vertexData[ i0 + 1 ], vertexData[ i0 + 2 ]);\n\t\tvar p1:Vector3D = new Vector3D(vertexData[ i1 ], vertexData[ i1 + 1 ], vertexData[ i1 + 2 ]);\n\t\tvar p2:Vector3D = new Vector3D(vertexData[ i2 ], vertexData[ i2 + 1 ], vertexData[ i2 + 2 ]);\n\t\tvar side0:Vector3D = p1.subtract(p0);\n\t\tvar side1:Vector3D = p2.subtract(p0);\n\t\tnormal = side0.crossProduct(side1);\n\t\tnormal.normalize();\n\t\treturn normal;\n\t}\n\n\tpublic _pGetCollisionUV(indexData:Array<number> /*uint*/, uvData:Array<number>, triangleIndex:number, v:number, w:number, u:number, uvOffset:number, uvStride:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indexData[ triangleIndex ]*uvStride + uvOffset;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 1 ]*uvStride + uvOffset;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 2 ]*uvStride + uvOffset;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setLocalRay(localPosition:Vector3D, localDirection:Vector3D)\n\t{\n\t\tthis.rayPosition = localPosition;\n\t\tthis.rayDirection = localDirection;\n\t}\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.materialOwner = null;\n\n\t\tif (this._pTestRenderableCollision(<RenderableBase> this._billboardRenderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\tpickingCollisionVO.materialOwner = billboard;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\n\t *\n\t * @param mesh The mesh instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testMeshCollision(mesh:Mesh, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.materialOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = mesh.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\n\t\t\tif (this._pTestRenderableCollision(<RenderableBase> this._subMeshRenderablePool.getItem(subMesh), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tpickingCollisionVO.materialOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn pickingCollisionVO.materialOwner != null;\n\t}\n}\n\nexport = PickingColliderBase;","import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/DefaultRenderer\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.entities.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:RenderableBase;\n\tprivate _blendedRenderableHead:RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapData:BitmapData;\n\tprivate _viewportData:Array<number>;\n\tprivate _boundOffsetScale:Array<number>;\n\tprivate _id:Array<number>;\n\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _subGeometryIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Array<number>(4);\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapData)\n\t\t\tthis._bitmapData = new BitmapData(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapData(this._bitmapData);\n\t\tthis._hitColor = this._bitmapData.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.subGeometryIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderable) {\n\t\t\t// it's possible that the renderable was already removed from the scene\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderable = renderable.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.materialOwner.material).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\t\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\n\t\t\trenderable = renderable.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.bounds.aabb;\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\tthis._stage.activateBuffer(0, this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA), this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(this._hitRenderable.getIndexData()), 0, this._hitRenderable.numTriangles);\n\n\t\tthis._context.drawToBitmapData(this._bitmapData);\n\n\t\tcol = this._bitmapData.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar indices:Array<number> = this._hitRenderable.getIndexData().data;\n\n\t\tvar positions:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\n\t\tvar uvs:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\n\t\tvar normals:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).data;\n\t\tvar normalStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).dataPerVertex;\n\t\tvar normalOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = positionOffset + indices[i]*positionStride;\n\t\t\tt2 = positionOffset + indices[j]*positionStride;\n\t\t\tt3 = positionOffset + indices[k]*positionStride;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = normalOffset + indices[i]*normalStride;\n\t\t\t\t\tni2 = normalOffset + indices[j]*normalStride;\n\t\t\t\t\tni3 = normalOffset + indices[k]*normalStride;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = uvOffset + indices[i]*uvStride\n\t\t\t\t\tui2 = uvOffset + indices[j]*uvStride\n\t\t\t\t\tui3 = uvOffset + indices[k]*uvStride\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back subGeometryIndex value\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapData.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapData = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tprivate static _materialGeometry:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"billboard\";\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\treturn geometry;\n\t}\n}\n\nexport = BillboardRenderable;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"linesubmesh\";\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\n\t\tif (subGeometry.thickness)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\n\t\tif (subGeometry.startColors)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param materialOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSubMeshRenderable(pool, <LineSubMesh> materialOwner, level, indexOffset);\n\t}\n}\n\nexport = LineSubMeshRenderable;","import MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\n\n/**\n * @class away.pool.MaterialDataPool\n */\nclass MaterialDataPool\n{\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(material:MaterialGLBase):MaterialData\n\t{\n\t\treturn (this._pool[material.id] || (this._pool[material.id] = material._iAddMaterialData(new MaterialData(this, material))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(material:MaterialGLBase)\n\t{\n\t\tmaterial._iRemoveMaterialData(this._pool[material.id]);\n\n\t\tthis._pool[material.id] = null;\n\t}\n}\n\nexport = MaterialDataPool;","import IMaterialData\t\t\t\t= require(\"awayjs-display/lib/pool/IMaterialData\");\n\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport MaterialDataPool\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialDataPool\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassDataPool\");\n\n/**\n *\n * @class away.pool.MaterialData\n */\nclass MaterialData implements IMaterialData\n{\n\tprivate _pool:MaterialDataPool;\n\n\tprivate _materialPassDataPool:MaterialPassDataPool;\n\n\tprivate _passes:Array<MaterialPassData>;\n\n\tpublic material:MaterialGLBase;\n\n\tpublic renderOrderId:number;\n\n\tpublic invalidAnimation:boolean = true;\n\n\tconstructor(pool:MaterialDataPool, material:MaterialGLBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.material = material;\n\n\t\tthis._materialPassDataPool = new MaterialPassDataPool(material);\n\t}\n\n\tpublic getMaterialPass(materialPass:MaterialPassGLBase, profile:string):MaterialPassData\n\t{\n\t\tvar materialPassData:MaterialPassData = this._materialPassDataPool.getItem(materialPass);\n\n\t\tif (!materialPassData.shaderObject) {\n\t\t\tmaterialPassData.shaderObject = materialPass.createShaderObject(profile);\n\t\t\tmaterialPassData.invalid = true;\n\t\t}\n\n\t\tif (materialPassData.invalid) {\n\t\t\tmaterialPassData.invalid = false;\n\t\t\tvar compiler:ShaderCompilerBase = materialPassData.shaderObject.createCompiler(this.material, materialPass);\n\t\t\tcompiler.compile();\n\n\t\t\tmaterialPassData.shadedTarget = compiler.shadedTarget;\n\t\t\tmaterialPassData.vertexCode = compiler.vertexCode;\n\t\t\tmaterialPassData.fragmentCode = compiler.fragmentCode;\n\t\t\tmaterialPassData.postAnimationFragmentCode = compiler.postAnimationFragmentCode;\n\t\t\tmaterialPassData.key = \"\";\n\t\t}\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic getMaterialPasses(profile:string):Array<MaterialPassData>\n\t{\n\t\tif (this._passes == null) {\n\t\t\tvar passes:Array<MaterialPassGLBase> = <Array<MaterialPassGLBase>> this.material._iScreenPasses;\n\t\t\tvar numPasses:number = passes.length;\n\n\t\t\t//reset the material passes in MaterialData\n\t\t\tthis._passes = new Array<MaterialPassData>(numPasses);\n\n\t\t\t//get the shader object for each screen pass and store\n\t\t\tfor (var i:number = 0; i < numPasses; i++)\n\t\t\t\tthis._passes[i] = this.getMaterialPass(passes[i], profile);\n\t\t}\n\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._materialPassDataPool.disposePool();\n\n\t\tthis._materialPassDataPool = null;\n\n\t\tthis._pool.disposeItem(this.material);\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateMaterial()\n\t{\n\t\tthis._passes = null;\n\n\t\tthis.invalidateAnimation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis.invalidAnimation = true;\n\t}\n}\n\nexport = MaterialData;","import MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n/**\n * @class away.pool.MaterialPassDataPool\n */\nclass MaterialPassDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _material:MaterialGLBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(material:MaterialGLBase)\n\t{\n\t\tthis._material = material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(materialPass:MaterialPassGLBase):MaterialPassData\n\t{\n\t\treturn (this._pool[materialPass.id] || (this._pool[materialPass.id] = this._material._iAddMaterialPassData(materialPass._iAddMaterialPassData(new MaterialPassData(this, this._material, materialPass)))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(materialPass:MaterialPassGLBase)\n\t{\n\t\tmaterialPass._iRemoveMaterialPassData(this._pool[materialPass.id]);\n\n\t\tdelete this._pool[materialPass.id];\n\t}\n\n\tpublic disposePool()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\t(<MaterialPassData> this._pool[id]).materialPass._iRemoveMaterialPassData(this._pool[id]);\n\n\t\tdelete this._pool;\n\t}\n}\n\nexport = MaterialPassDataPool;","import IMaterialPassData\t\t\t= require(\"awayjs-display/lib/pool/IMaterialPassData\");\n\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassDataPool\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n *\n * @class away.pool.MaterialPassData\n */\nclass MaterialPassData implements IMaterialPassData\n{\n\tprivate _pool:MaterialPassDataPool;\n\n\tpublic material:MaterialGLBase;\n\n\tpublic shaderObject:ShaderObjectBase;\n\n\tpublic materialPass:MaterialPassGLBase;\n\n\tpublic programData:ProgramData;\n\n\tpublic shadedTarget:string;\n\n\tpublic vertexCode:string;\n\n\tpublic postAnimationFragmentCode:string;\n\n\tpublic fragmentCode:string;\n\n\tpublic animationVertexCode:string = \"\";\n\n\tpublic animationFragmentCode:string = \"\";\n\n\tpublic key:string;\n\n\tpublic invalid:boolean;\n\n\tpublic usesAnimation:boolean;\n\n\tconstructor(pool:MaterialPassDataPool, material:MaterialGLBase, materialPass:MaterialPassGLBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.material = material;\n\t\tthis.materialPass = materialPass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialPass);\n\n\t\tthis.shaderObject.dispose();\n\t\tthis.shaderObject = null;\n\n\t\tthis.programData.dispose();\n\t\tthis.programData = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n}\n\nexport = MaterialPassData;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\n\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryDirty:boolean = true;\n\tprivate _indexData:IndexData;\n\tprivate _indexDataDirty:boolean = true;\n\tprivate _vertexData:Object = new Object();\n\tpublic _pVertexDataDirty:Object = new Object();\n\tprivate _vertexOffset:Object = new Object();\n\n\tprivate _level:number;\n\tprivate _indexOffset:number;\n\tprivate _overflow:RenderableBase;\n\tprivate _numTriangles:number;\n\tprivate _concatenateArrays:boolean;\n\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic get overflow():RenderableBase\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._overflow;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tpublic material:MaterialGLBase;\n\n\t/**\n\t *\n\t */\n\tpublic getIndexData():IndexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._indexData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexData(dataType:string):VertexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexOffset(dataType:string):number\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexOffset[dataType];\n\t}\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param materialOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, materialOwner:IMaterialOwner, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\t//reference to level of overflow\n\t\tthis._level = level;\n\n\t\t//reference to the offset on indices (if this is an overflow renderable)\n\t\tthis._indexOffset = indexOffset;\n\n\t\tthis.sourceEntity = sourceEntity;\n\t\tthis.materialOwner = materialOwner;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialOwner);\n\n\t\tthis._indexData.dispose();\n\t\tthis._indexData = null;\n\n\t\tfor (var dataType in this._vertexData) {\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\n\t\t\tthis._vertexData[dataType] = null;\n\t\t}\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\n\t\t//invalidate indices\n\t\tif (this._level == 0)\n\t\t\tthis._indexDataDirty = true;\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\t\tthis._indexDataDirty = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\t\tthis._pVertexDataDirty[dataType] = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @param offset\n\t * @internal\n\t */\n\tpublic _iFillIndexData(indexOffset:number)\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\n\n\t\tthis._numTriangles = this._indexData.data.length/3;\n\n\t\tindexOffset = this._indexData.offset;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.length) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(this._pool, this.materialOwner, indexOffset, this._level + 1);\n\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\tthis._subGeometry = this._pGetSubGeometry();\n\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\n\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\t//dispose\n//\t\t\tif (this._indexData) {\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._indexData = null;\n//\t\t\t}\n\n//\t\t\tfor (var dataType in this._vertexData) {\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._vertexData[dataType] = null;\n//\t\t\t}\n\n\t\tthis._geometryDirty = false;\n\n\t\t//specific vertex data types have to be invalidated in the specific renderable\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateIndexData()\n\t{\n\t\tthis._iFillIndexData(this._indexOffset);\n\n\t\tthis._indexDataDirty = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t * @private\n\t */\n\tprivate _updateVertexData(dataType:string)\n\t{\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\n\n\t\tif (this._subGeometry.concatenateArrays)\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\n\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\n\n\t\tthis._pVertexDataDirty[dataType] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndexData();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\n\n\t\tthis.invalidateVertexData(event.dataType);\n\t}\n}\n\nexport = RenderableBase;","import TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"skybox\";\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePool, skybox:Skybox)\n\t{\n\t\tsuper(pool, skybox, skybox);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\treturn geometry;\n\t}\n}\n\nexport = SkyboxRenderable;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\n\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"trianglesubmesh\";\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar subGeometry:TriangleSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.vertexNormals)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\n\t\tif (subGeometry.vertexTangents)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\tif (subGeometry.secondaryUVs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\n\n\t\tif (subGeometry.jointIndices)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\n\n\t\tif (subGeometry.jointWeights)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\n\n\t\tswitch(subGeometry.jointsPerVertex) {\n\t\t\tcase 1:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn subGeometry;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param materialOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\treturn new TriangleSubMeshRenderable(pool, <TriangleSubMesh> materialOwner, level, indexOffset);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\n\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/SkyboxRenderable\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/render/DepthRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/render/Filter3DRenderer\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport DepthMapPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/DepthMapPass\");\nimport DistanceMapPass\t\t\t\t= require(\"awayjs-renderergl/lib/passes/DistanceMapPass\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase implements IRenderer\n{\n\tpublic _pRequireDepthRender:boolean;\n\tprivate _skyboxRenderablePool:RenderablePool;\n\n//\t\tprivate _activeMaterial:MaterialBase;\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:TextureProxyBase;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(forceSoftware:boolean = false, profile:string = \"baseline\", mode = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._skyboxRenderablePool = RenderablePool.getPool(SkyboxRenderable);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(new DepthMapPass());\n\t\tthis._pDistanceRenderer = new DepthRenderer(new DistanceMapPass());\n\n\t\tif (this._pStage == null)\n\t\t\tthis.stage = StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\t// otherwise RTT will interfere with other RTTs\n\t\tif (target) {\n\t\t\tthis.pCollectRenderables(entityCollector);\n\n\t\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\t\t}\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:TextureProxyBase)\n\t{\n\t\tif (!target)\n\t\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar skyBox:SkyboxRenderable = <SkyboxRenderable> this._skyboxRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar material:MaterialGLBase = <MaterialGLBase> entityCollector.skyBox.material;\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar activePass:MaterialPassData = this.getMaterial(material, this._pStage.profile).getMaterialPass(<MaterialPassGLBase> material._iScreenPasses[0], this._pStage.profile);\n\n\t\tmaterial._iActivatePass(activePass, this, camera);\n\t\tmaterial._iRenderPass(activePass, skyBox, this._pStage, camera, this._skyboxProjection);\n\t\tmaterial._iDeactivatePass(activePass, this);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, entityCollector:ICollector)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar passes:Array<IMaterialPass>;\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextGL = <IContextGL> this._pStage.context;\n\t\tvar camera:Camera = entityCollector.camera;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = this.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\t//iterate through each screen pass\n\t\t\tpasses = renderable.material._iScreenPasses;\n\t\t\tlen = renderable.material._iNumScreenPasses();\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\trenderable2 = renderable;\n\n\t\t\t\tactivePass = activeMaterial.getMaterialPass(<MaterialPassGLBase> passes[i], this._pStage.profile);\n\n\t\t\t\trenderable.material._iActivatePass(activePass, this, camera);\n\n\t\t\t\tdo {\n\t\t\t\t\trenderable.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\n\t\t\t\tactiveMaterial.material._iDeactivatePass(activePass, this);\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tsuper.iSetStage(value);\n\n\t\tthis._pDistanceRenderer.iSetStage(value);\n\t\tthis._pDepthRenderer.iSetStage(value);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new RenderTexture(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\nimport MaterialPassGLBase\t\t\t= require(\"awayjs-renderergl/lib/passes/MaterialPassGLBase\");\n\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\tprivate _pass:MaterialPassGLBase;\n\tprivate _renderBlended:boolean;\n\tprivate _disableColor:boolean;\n\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(pass:MaterialPassGLBase, renderBlended:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pass = pass;\n\n\t\tthis._renderBlended = renderBlended;\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\tthis.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\n\t}\n\n\tprivate drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t{\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextGL = this._pStage.context;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = this.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\trenderable2 = renderable;\n\n\t\t\tactivePass = activeMaterial.getMaterialPass(this._pass, this._pStage.profile);\n\n\t\t\t//TODO: generalise this test\n\t\t\tif (activePass.key == \"\")\n\t\t\t\tthis.calcAnimationCode(renderable.material, activePass);\n\n\t\t\trenderable.material._iActivatePass(activePass, this, camera);\n\n\t\t\tdo {\n\t\t\t\t// if completely in front, it will fall in a different cascade\n\t\t\t\t// do not use near and far planes\n\t\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t\t\t\t\trenderable2.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t} else {\n\t\t\t\t\trenderable2.cascaded = true;\n\t\t\t\t}\n\n\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t} while (renderable2 && renderable2.material == renderable.material && !renderable2.cascaded);\n\n\t\t\trenderable.material._iDeactivatePass(activePass, this);\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:TextureProxyBase)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextGL = this._pStage.context;\n\t\tvar camera:Camera = entityCollector.camera;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = this.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && renderable.material.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\t\t\t} else {\n\t\t\t\trenderable2 = renderable;\n\n\t\t\t\tactivePass = activeMaterial.getMaterialPass(this._pass, this._pStage.profile);\n\n\t\t\t\t//TODO: generalise this test\n\t\t\t\tif (activePass.key == \"\")\n\t\t\t\t\tthis.calcAnimationCode(renderable.material, activePass);\n\n\t\t\t\trenderable.material._iActivatePass(activePass, this, camera);\n\n\t\t\t\tdo {\n\t\t\t\t\trenderable2.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\n\t\t\t\trenderable.material._iDeactivatePass(activePass, this);\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n}\n\nexport = DepthRenderer;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid) {\n\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\t}\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\n\t\t\t// TODO: check logic:\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\n\n\t\t\tvar s:any = this._filters[i];\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\n\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\n\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid) {\n\n\t\t\tthis.updateFilterSizes();\n\n\t\t}\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\t// TODO: check logic\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._filterSizesInvalid) {\n\t\t\tthis.updateFilterSizes();\n\t\t}\n\n\t\tif (this._filterTasksInvalid) {\n\t\t\tthis.updateFilterTasks(stage);\n\t\t}\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._filters[i].update(stage, camera);\n\t\t}\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StageEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialDataPool\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialDataPool\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassDataPool\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport MaterialGLBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/MaterialGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-renderergl/lib/managers/DefaultMaterialManager\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher\n{\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tprivate _materialDataPool:MaterialDataPool;\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _triangleSubMeshRenderablePool:RenderablePool;\n\tprivate _lineSubMeshRenderablePool:RenderablePool;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean = false;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapData:BitmapData;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumTriangles:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._pNumTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\n\t\tthis._materialDataPool = new MaterialDataPool();\n\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(BillboardRenderable);\n\t\tthis._triangleSubMeshRenderablePool = RenderablePool.getPool(TriangleSubMeshRenderable);\n\t\tthis._lineSubMeshRenderablePool = RenderablePool.getPool(LineSubMeshRenderable);\n\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\t}\n\n\n\tpublic getProgram(materialPassData:MaterialPassData):ProgramData\n\t{\n\t\t//check key doesn't need re-concatenating\n\t\tif (!materialPassData.key.length) {\n\t\t\tmaterialPassData.key = materialPassData.animationVertexCode +\n\t\t\tmaterialPassData.vertexCode +\n\t\t\t\"---\" +\n\t\t\tmaterialPassData.fragmentCode +\n\t\t\tmaterialPassData.animationFragmentCode +\n\t\t\tmaterialPassData.postAnimationFragmentCode;\n\t\t} else {\n\t\t\treturn materialPassData.programData;\n\t\t}\n\n\t\tvar programData:ProgramData = this._pStage.getProgramData(materialPassData.key);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (materialPassData.programData != programData) {\n\t\t\tif (materialPassData.programData)\n\t\t\t\tmaterialPassData.programData.dispose();\n\n\t\t\tmaterialPassData.programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\n\t\treturn programData;\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t */\n\tpublic getMaterial(material:MaterialGLBase, profile:string):MaterialData\n\t{\n\t\tvar materialData:MaterialData = this._materialDataPool.getItem(material);\n\n\t\tif (materialData.invalidAnimation) {\n\t\t\tmaterialData.invalidAnimation = false;\n\n\t\t\tvar materialDataPasses:Array<MaterialPassData> = materialData.getMaterialPasses(profile);\n\n\t\t\tvar enabledGPUAnimation:boolean = this.getEnabledGPUAnimation(material, materialDataPasses);\n\n\t\t\tvar renderOrderId = 0;\n\t\t\tvar mult:number = 1;\n\t\t\tvar materialPassData:MaterialPassData;\n\t\t\tvar len:number = materialDataPasses.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmaterialPassData = materialDataPasses[i];\n\n\t\t\t\tif (materialPassData.usesAnimation != enabledGPUAnimation) {\n\t\t\t\t\tmaterialPassData.usesAnimation = enabledGPUAnimation;\n\t\t\t\t\tmaterialPassData.key == \"\";\n\t\t\t\t}\n\n\t\t\t\tif (materialPassData.key == \"\")\n\t\t\t\t\tthis.calcAnimationCode(material, materialPassData);\n\n\t\t\t\trenderOrderId += this.getProgram(materialPassData).id*mult;\n\t\t\t\tmult *= 1000;\n\t\t\t}\n\n\t\t\tmaterialData.renderOrderId = renderOrderId;\n\t\t}\n\n\t\treturn materialData;\n\t}\n\n\tpublic activateMaterialPass(materialPassData:MaterialPassData, camera:Camera)\n\t{\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\t//clear unused vertex streams\n\t\tfor (var i = shaderObject.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = shaderObject.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\tif (materialPassData.usesAnimation)\n\t\t\t(<AnimationSetBase> materialPassData.material.animationSet).activate(shaderObject, this._pStage);\n\n\t\t//activate shader object\n\t\tshaderObject.iActivate(this._pStage, camera);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = this.getProgram(materialPassData);\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + materialPassData.animationVertexCode + materialPassData.vertexCode + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + materialPassData.fragmentCode + materialPassData.animationFragmentCode + materialPassData.postAnimationFragmentCode + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\t}\n\n\tpublic deactivateMaterialPass(materialPassData:MaterialPassData)\n\t{\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\tif (materialPassData.usesAnimation)\n\t\t\t(<AnimationSetBase> materialPassData.material.animationSet).deactivate(shaderObject, this._pStage);\n\n\t\tmaterialPassData.shaderObject.iDeactivate(this._pStage);\n\n\t\tthis._numUsedStreams = shaderObject.numUsedStreams;\n\t\tthis._numUsedTextures = shaderObject.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\tpublic set stage(value:Stage)\n\t{\n\t\tif (value == this._pStage)\n\t\t\treturn;\n\n\t\tthis.iSetStage(value);\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tif (this._pStage) {\n\t\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t}\n\n\t\tif (!value) {\n\t\t\tthis._pStage = null;\n\t\t\tthis._pContext = null;\n\t\t} else {\n\t\t\tthis._pStage = value;\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t\t/*\n\t\t\t if (_backgroundImageRenderer)\n\t\t\t _backgroundImageRenderer.stage = value;\n\t\t\t */\n\t\t\tif (this._pStage.context)\n\t\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t\t}\n\n\t\tthis._pBackBufferInvalid = true;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.dispose();\n\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:ICollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\n\tpublic pCollectRenderables(entityCollector:ICollector)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumTriangles = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:ICollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis.pDraw(entityCollector, target);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapData) {\n\t\t\t\tthis._pContext.drawToBitmapData(this._snapshotBitmapData);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapData)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapData = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:ICollector, target:TextureProxyBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\t/**\n\t *\n\t * @param billboard\n\t * @protected\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._triangleSubMeshRenderablePool.getItem(triangleSubMesh));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._lineSubMeshRenderablePool.getItem(lineSubMesh));\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @protected\n\t */\n\tprivate _applyRenderable(renderable:RenderableBase)\n\t{\n\t\tvar material:MaterialGLBase = <MaterialGLBase> renderable.materialOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (!material)\n\t\t\tmaterial = DefaultMaterialManager.getDefaultMaterial(renderable.materialOwner);\n\n\t\t//update material if invalidated\n\t\tmaterial._iUpdateMaterial();\n\n\t\t//set ids for faster referencing\n\t\trenderable.material = material;\n\t\trenderable.materialId = material._iMaterialId;\n\t\trenderable.renderOrderId = this.getMaterial(material, this._pStage.profile).renderOrderId;\n\t\trenderable.cascaded = false;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (material.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumTriangles += renderable.numTriangles;\n\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\n\t\tif (renderable.overflow)\n\t\t\tthis._applyRenderable(renderable.overflow);\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate getEnabledGPUAnimation(material:MaterialBase, materialDataPasses:Array<MaterialPassData>):boolean\n\t{\n\t\tif (material.animationSet) {\n\t\t\tmaterial.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IMaterialOwner> = material.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = materialDataPasses.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(materialDataPasses[i].shaderObject);\n\n\t\t\treturn !material.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic calcAnimationCode(material:MaterialBase, materialPassData:MaterialPassData)\n\t{\n\t\t//reset key so that the program is re-calculated\n\t\tmaterialPassData.key = \"\";\n\t\tmaterialPassData.animationVertexCode = \"\";\n\t\tmaterialPassData.animationFragmentCode = \"\";\n\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\t//check to see if GPU animation is used\n\t\tif (materialPassData.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> material.animationSet;\n\n\t\t\tmaterialPassData.animationVertexCode += animationSet.getAGALVertexCode(shaderObject);\n\n\t\t\tif (shaderObject.uvDependencies > 0 && !shaderObject.usesUVTransform)\n\t\t\t\tmaterialPassData.animationVertexCode += animationSet.getAGALUVCode(shaderObject);\n\n\t\t\tif (shaderObject.usesFragmentAnimation)\n\t\t\t\tmaterialPassData.animationFragmentCode += animationSet.getAGALFragmentCode(shaderObject, materialPassData.shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(shaderObject);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = shaderObject.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tmaterialPassData.animationVertexCode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (shaderObject.uvDependencies > 0 && !shaderObject.usesUVTransform)\n\t\t\t\tmaterialPassData.animationVertexCode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = RendererBase;","import Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _geomVOs:Array<GeometryVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._geomVOs = new Array<GeometryVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar subIdx:number /*uint*/;\n\t\tvar oldGeom:Geometry;\n\t\tvar destGeom:Geometry;\n\t\tvar useSubMaterials:boolean;\n\n\t\toldGeom = destMesh.geometry;\n\t\tdestGeom = destMesh.geometry = new Geometry();\n\t\tsubIdx = destMesh.subMeshes.length;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\n\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\n\t\t\tvar s:number /*uint*/;\n\t\t\tvar data:GeometryVO;\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = false;\n\t\t\tsub.autoDeriveTangents = false;\n\n\t\t\tdata = this._geomVOs[i];\n\t\t\tsub.updateIndices(data.indices);\n\t\t\tsub.updatePositions(data.vertices);\n\t\t\tsub.updateVertexNormals(data.normals);\n\t\t\tsub.updateVertexTangents(data.tangents);\n\t\t\tsub.updateUVs(data.uvs);\n\n\t\t\tdestGeom.addSubGeometry(sub);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\n\t\t\tdestMesh.material = this._geomVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar m:Mesh;\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++) {\n\t\t\t\tm = this._toDispose[i];\n\t\t\t\tm.geometry.dispose();\n\t\t\t\tm.dispose();\n\t\t\t}\n\n\t\t\t//dispose of the original receiver geometry\n\t\t\toldGeom.dispose();\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tif (mesh.geometry) {\n\t\t\tvar subIdx:number /*uint*/;\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\n\t\t\tvar calc:number /*uint*/;\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\n\t\t\t\tvar i:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\t\tvar indexOffset:number /*uint*/;\n\t\t\t\tvar subGeom:TriangleSubGeometry;\n\t\t\t\tvar vo:GeometryVO;\n\t\t\t\tvar vertices:Array<number>;\n\t\t\t\tvar normals:Array<number>;\n\t\t\t\tvar tangents:Array<number>;\n\t\t\t\tvar pd:Array<number>, nd:Array<number>, td:Array<number>, ud:Array<number>;\n\n\t\t\t\tsubGeom = subGeometries[subIdx];\n\t\t\t\tpd = subGeom.positions;\n\t\t\t\tnd = subGeom.vertexNormals;\n\t\t\t\ttd = subGeom.vertexTangents;\n\t\t\t\tud = subGeom.uvs;\n\n\t\t\t\t// Get (or create) a VO for this material\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\n\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t\t// Copy over vertex attributes\n\t\t\t\tvIdx = vertices.length;\n\t\t\t\tnIdx = normals.length;\n\t\t\t\ttIdx = tangents.length;\n\t\t\t\tuIdx = vo.uvs.length;\n\t\t\t\tlen = subGeom.numVertices;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\n\t\t\t\t\t// Position\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t\t// Normal\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t\t// Tangent\n\t\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t\t// UV\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t\t}\n\n\t\t\t\t// Copy over triangle indices\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\t\tiIdx = vo.indices.length;\n\t\t\t\tlen = subGeom.numTriangles;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 1] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 2] + indexOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!this._objectSpace) {\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\t\tlen = vertices.length;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispose)\n\t\t\t\tthis._toDispose.push(mesh);\n\t\t}\n\t}\n\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\n\t{\n\t\tvar data:GeometryVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._geomVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._geomVOs[i].material == material) {\n\t\t\t\t\tdata = this._geomVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._geomVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._geomVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GeometryVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._geomVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GeometryVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n","import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGeometryTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGeometryTransform;","import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\n\n/**\n * ...\n */\nclass ParticleGeometryHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\n\t\tvar numParticles:number /*uint*/ = geometries.length;\n\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\n\t\tvar numSubGeometries:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar subGeometry:TriangleSubGeometry;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\tsubGeometry = subGeometries[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.subGeometry = subGeometry;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:Array<number>;\n\t\t\t\tvar sourceNormals:Array<number>;\n\t\t\t\tvar sourceTangents:Array<number>;\n\t\t\t\tvar sourceUVs:Array<number>;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tcompact.numTriangles;\n\t\t\t\t\tsourcePositions = compact.positions;\n\t\t\t\t\tsourceNormals = compact.vertexNormals;\n\t\t\t\t\tsourceTangents = compact.vertexTangents;\n\t\t\t\t\tsourceUVs = compact.uvs;\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tsourcePositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tsourceNormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\tsourceTangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tsourceUVs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\tvar sourceIndices:Array<number> /*uint*/ = sourceSubGeometry.indices;\n\t\t\t\ttempLen = sourceSubGeometry.numTriangles;\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\n\t\tparticleGeometry.particles = particles;\n\t\tparticleGeometry.numParticles = numParticles;\n\n\t\tnumParticles = subGeometries.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsubGeometry = subGeometries[i];\n\t\t\tsubGeometry.autoDeriveNormals = false;\n\t\t\tsubGeometry.autoDeriveTangents = false;\n\t\t\tsubGeometry.updateIndices(indicesVector[i]);\n\t\t\tsubGeometry.updatePositions(positionsVector[i]);\n\t\t\tsubGeometry.updateVertexNormals(normalsVector[i]);\n\t\t\tsubGeometry.updateVertexTangents(tangentsVector[i]);\n\t\t\tsubGeometry.updateUVs(uvsVector[i]);\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\n\t\t}\n\n\t\treturn particleGeometry;\n\t}\n}\n\nexport = ParticleGeometryHelper;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Array<number> = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\n\t}\n}\n\nexport = PerspectiveMatrix3D;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nclass ShaderCompilerHelper\n{\n\t/**\n\t * A helper method that generates standard code for sampling from a texture using the normal uv coordinates.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param sharedReg The shared register object for the shader.\n\t * @param inputReg The texture stream register.\n\t * @param texture The texture which will be assigned to the given slot.\n\t * @param uvReg An optional uv register if coordinates different from the primary uv coordinates are to be used.\n\t * @param forceWrap If true, texture wrapping is enabled regardless of the material setting.\n\t * @return The fragment code that performs the sampling.\n\t *\n\t * @protected\n\t */\n\tpublic static getTex2DSampleCode(targetReg:ShaderRegisterElement, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, repeat:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement = null, forceWrap:string = null):string\n\t{\n\t\tvar wrap:string = forceWrap || (repeat? \"wrap\":\"clamp\");\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar enableMipMaps:boolean = mipmaps && texture.hasMipmaps;\n\t\tvar filter:string = (smooth)? (enableMipMaps? \"linear,miplinear\" : \"linear\") : (enableMipMaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tif (uvReg == null)\n\t\t\tuvReg = sharedReg.uvVarying;\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t}\n\n\n\t/**\n\t * A helper method that generates standard code for sampling from a cube texture.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param inputReg The texture stream register.\n\t * @param texture The cube map which will be assigned to the given slot.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t *\n\t * @protected\n\t */\n\tpublic static getTexCubeSampleCode(targetReg:ShaderRegisterElement, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar enableMipMaps:boolean = mipmaps && texture.hasMipmaps;\n\t\tvar filter:string = (smooth)? (enableMipMaps? \"linear,miplinear\" : \"linear\") : (enableMipMaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic static getFormatStringForTexture(texture:TextureProxyBase):string\n\t{\n\t\tswitch (texture.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = ShaderCompilerHelper;"],"sourceRoot":"./"}