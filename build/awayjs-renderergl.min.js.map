{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/RendererGL.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationElements.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/elements/ElementsPool.ts",
    "awayjs-renderergl/lib/elements/GL_ElementsBase.ts",
    "awayjs-renderergl/lib/elements/GL_LineElements.ts",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements.ts",
    "awayjs-renderergl/lib/elements/GL_TriangleElements.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/PassEvent.ts",
    "awayjs-renderergl/lib/events/RTTEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/BlurFilter3D.ts",
    "awayjs-renderergl/lib/filters/CompositeFilter3D.ts",
    "awayjs-renderergl/lib/filters/FXAAFilter3D.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/sort/RenderableMergeSort.ts",
    "awayjs-renderergl/lib/sort/RenderableNullSort.ts",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase.ts",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase.ts",
    "awayjs-renderergl/lib/surfaces/SurfacePool.ts",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/surfaces/passes/PassBase.ts",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture.ts",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture.ts",
    "awayjs-renderergl/lib/textures/GL_TextureBase.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "GL_SkyboxElements",
    "RTTBufferManager",
    "SurfacePool",
    "DefaultRenderer",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_antiAlias",
    "_directionalLights",
    "Array",
    "_pointLights",
    "_lightProbes",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "_skyBoxSurfacePool",
    "Object",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "enterNode",
    "node",
    "enter",
    "debugVisible",
    "applyEntity",
    "bounds",
    "boundsPrimitive",
    "render",
    "camera",
    "scene",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "_skybox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getAbstraction",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "_cameraTransform",
    "updateSkyboxProjection",
    "pass",
    "surfaceGL",
    "surface",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "applyDirectionalLight",
    "entity",
    "push",
    "applyLightProbe",
    "applyPointLight",
    "applySkybox",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/geom/Matrix3D",
    "undefined",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "GL_DepthSurface",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iCollectionMark",
    "isCastingShadow",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_DistanceSurface",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "ContextGLDrawMode",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "RTTEvent",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "FLOAT_2",
    "setRenderTarget",
    "activate",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "awayjs-renderergl/lib/events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Matrix3DUtils",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RendererEvent",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "ElementsPool",
    "RenderableMergeSort",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_cameraForward",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_numCullPlanes",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_abstractionClassPool",
    "_customCullPlanes",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "id",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "elements",
    "registerAbstraction",
    "renderableClass",
    "assetClass",
    "renderableGL",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_viewportDirty",
    "_scissorDirty",
    "_pBlendedRenderableHead",
    "_pOpaqueRenderableHead",
    "_cullPlanes",
    "frustumPlanes",
    "_cameraPosition",
    "sceneTransform",
    "getForward",
    "traversePartitions",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "LESS",
    "head",
    "first",
    "LESS_EQUAL",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "next",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "isInFrustum",
    "_sourceEntity",
    "_zIndex",
    "zOffset",
    "subtract",
    "dotProduct",
    "_renderSceneTransform",
    "_acceptTraverser",
    "applyRenderable",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "zIndex",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "requiresBlending",
    "numElements",
    "obj",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-renderergl/lib/elements/ElementsPool",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/RendererGL",
    "BasicMaterial",
    "Skybox",
    "Billboard",
    "LineSegment",
    "LineElements",
    "TriangleElements",
    "Graphic",
    "Single2DTexture",
    "SingleCubeTexture",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "ShaderBase",
    "GL_LineElements",
    "GL_TriangleElements",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "renderergl",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "sprite",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "transform",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationElements",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "animationElements",
    "_iGenerateAnimationElements",
    "parent",
    "graphics",
    "initParticleFunc",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetElements",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "invalidateElements",
    "setNullPose",
    "elementsGL",
    "_iIndex",
    "_elementsPool",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "position",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "geometry",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "elementsClass",
    "_shader",
    "_elementsClass",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase",
    "AssetEvent",
    "ElementsUtils",
    "GL_ElementsBase",
    "pool",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferVO",
    "_indices",
    "getVertexBufferVO",
    "bufferId",
    "_updateVertices",
    "size",
    "unsigned",
    "onClear",
    "names",
    "getCustomAtributesNames",
    "_overflow",
    "_render",
    "_drawElements",
    "_drawArrays",
    "firstIndex",
    "numIndices",
    "firstVertex",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "lineElements",
    "_constants",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "registerCache",
    "sharedRegisters",
    "_iGetFragmentCode",
    "thickness",
    "colors",
    "colorBufferIndex",
    "projection",
    "setProgramConstantsFromMatrix",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "draw",
    "drawVertices",
    "_pool",
    "apply",
    "arguments",
    "triangleElements",
    "_triangleElements",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "viewMatrixReg",
    "viewMatrixIndex",
    "projectionDependencies",
    "projectionFragment",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "sceneMatrixIndex",
    "copyRawDataTo",
    "matrix3D",
    "CALCULATION_MATRIX",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "ErrorBase",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "EventBase",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask",
    "Filter3DVBlurTask",
    "Filter3DBase",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask",
    "FXAAFilter3D",
    "_fxaaTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "_textureWidth",
    "_textureHeight",
    "Filter3DTaskBase",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "op",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "numSamples",
    "invW",
    "Image2D",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "awayjs-core/lib/image/Image2D",
    "invH",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "AttributesBuffer",
    "DefaultMaterialManager",
    "GL_RenderableBase",
    "GL_Billboard",
    "billboard",
    "renderer",
    "_billboard",
    "_pGetElements",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_id",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetSurface",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "_renderer",
    "RenderableEvent",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onSurfaceUpdatedDelegate",
    "_onSurfaceUpdated",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_RENDER_OWNER",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_updateSurface",
    "_surfaceGL",
    "_setRenderState",
    "getDefaultMaterial",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "skybox",
    "_vertexArray",
    "_geometry",
    "far",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "dirLights",
    "directionalLights",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLights",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "BlendMode",
    "ArgumentError",
    "ContextGLTriangleFace",
    "CompilerBase",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "BACK",
    "usesPositionFragment",
    "imageIndices",
    "_updateProgram",
    "_programData",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "usesAnimation",
    "setCulling",
    "useBothSides",
    "NONE",
    "coordinateSystem",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "invalidateShader",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeFragmentConstant",
    "removeFragmentTempUsage",
    "getFreeFragmentVectorTemp",
    "getFreeFragmentSingleTemp",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "textures",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_uvSource",
    "_uvTarget",
    "_iInitConstantData",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "BasicMaterialPass",
    "GL_SurfaceBase",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "GL_SurfacePassBase",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "DistanceRender",
    "_texture",
    "SurfaceEvent",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "bothSides",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "_surfaceClassGL",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "_preserveAlpha",
    "MappingMode",
    "GL_TextureBase",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "ContextGLTextureFormat",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Sprite",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToSpritees",
    "sprites",
    "_toDispose",
    "_graphicVOs",
    "destSprite",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Sprite",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport GL_SkyboxElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_SkyboxElements\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SkyboxRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _skybox:Skybox;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis._shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = super.enterNode(node);\n\n\t\tif (enter && node.debugVisible)\n\t\t\tthis.applyEntity(node.bounds.boundsPrimitive);\n\n\t\treturn enter;\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tif (this._skybox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(camera);\n\t\t}\n\n\t\tsuper.pDraw(camera);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t **/\n\tprivate drawSkybox(camera:Camera)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(this._skybox);\n\n\t\trenderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar pass:IPass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._skybox = <Skybox> entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport GL_DepthSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\");\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport GL_DistanceSurface\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTEvent\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/RTTEvent\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(0, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/ProgramData\");\nimport GL_IAssetClass\t\t\t\t= require(\"awayjs-stagegl/lib/library/GL_IAssetClass\");\n\nimport ISurfaceClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-renderergl/lib/sort/RenderableMergeSort\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tprivate _cameraPosition:Vector3D;\n\tpublic _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tprivate _sourceEntity:IEntity;\n\tprivate _zIndex:number;\n\tprivate _renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._sourceEntity = entity;\n\n\t\t// project onto camera's z-axis\n\t\tthis._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n\n\t\t//save sceneTransform\n\t\tthis._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n\n\t\t//collect renderables\n\t\tentity._acceptTraverser(this);\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\trenderableGL.sourceEntity = this._sourceEntity;\n\t\trenderableGL.zIndex = this._zIndex;\n\t\trenderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = this._renderSceneTransform;\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RendererBase;",
    "import BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport GL_BasicMaterialSurface\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nimport GL_SkyboxSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\nimport GL_BillboardRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\");\nimport GL_LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\");\nimport GL_GraphicRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nimport GL_SkyboxRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport GL_LineElements\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_LineElements\");\nimport GL_TriangleElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nimport GL_Single2DTexture\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_Single2DTexture\");\nimport GL_SingleCubeTexture\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\");\n\n\n\nSurfacePool.registerAbstraction(GL_BasicMaterialSurface, BasicMaterial);\nSurfacePool.registerAbstraction(GL_SkyboxSurface, Skybox);\n\nElementsPool.registerAbstraction(GL_LineElements, LineElements);\nElementsPool.registerAbstraction(GL_TriangleElements, TriangleElements);\n\nShaderBase.registerAbstraction(GL_Single2DTexture, Single2DTexture);\nShaderBase.registerAbstraction(GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(GL_SkyboxRenderable, Skybox);\n\n/**\n *\n * static shim\n */\nclass renderergl\n{\n}\n\nexport = renderergl;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport = AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic)\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_GraphicRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ElementsEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_GraphicRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar i0:number /*uint*/ = 0;\n\t\tvar i1:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\"\t);\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport GL_GraphicRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_ElementsBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate sprites\n\t\t\tvar sprite:Sprite;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsprite = this._pOwners[i];\n\t\t\t\tsprite.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationElements;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport = ElementsPool;",
    "import Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\nimport IAbstractionPool \t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_AttributesBuffer\t\t\t= require(\"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\n\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tprivate _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferVO():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferVO(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferVO(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._onClearIndices(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._elements.indices));\n\n\t\tvar names:Array<string> = this._elements.getCustomAtributesNames();\n\t\tvar len:number = names.length;\n\t\tfor (var i:number = 0; i <len; i++)\n\t\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._elements.getCustomAtributes(names[i])));\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tthis._render(renderable, camera, viewProjection);\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow._iRender(renderable, camera, viewProjection);\n\t}\n\n\tpublic _render(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._indices)\n\t\t\tthis._drawElements(0, this._numIndices);\n\t\telse\n\t\t\tthis._drawArrays(0, this._numVertices);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = attributesView.count;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = GL_ElementsBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.positions));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.thickness));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.colors));\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _render(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.thickness);\n\n\t\tsuper._render(renderable, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport = GL_LineElements;",
    "import ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TriangleElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = GL_SkyboxElements;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\n\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.positions));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.normals));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.tangents));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.uvs));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.jointIndices));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.jointWeights));\n\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _render(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.renderSceneTransform);\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n\n\t\tsuper._render(renderable, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, firstIndex, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport = GL_TriangleElements;",
    "import ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport EventBase\t\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport = PassEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport RTTBufferManager\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport = RTTEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DHBlurTask\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\");\nimport Filter3DVBlurTask\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport = BlurFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DCompositeTask\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport = CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DFXAATask\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport = FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nimport RTTBufferManager = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\n\t\tvar code:string;\n\t\tvar op:string;\n\t\tcode = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, v0, fc1.zw\\n\" +\n\t\t\t\"add ft1, ft1, fc1.xy\\n\" +\n\t\t\t\"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, ft1, fc0.xxx\\n\" +\n\t\t\t\"add ft1, ft1, fc0.xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, ft1, ft2\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, ft0\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 2);\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(1, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport = Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 6);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport RTTBufferManager = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DVBlurTask;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport RTTEvent\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/RTTEvent\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport = GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport = GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport = GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\nimport GL_SamplerBase\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerBase\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onSurfaceUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onSurfaceUpdatedDelegate = (event:RenderableEvent) => this._onSurfaceUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onSurfaceUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tpass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements)._iRender(this, camera, viewProjection);\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surface:ISurface = this._pGetSurface() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport = GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport = GL_SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\nimport GL_IAssetClass\t\t\t\t= require(\"awayjs-stagegl/lib/library/GL_IAssetClass\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic numLights:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._elementsClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = Array<ShaderRegisterElement>();\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string> = new Array<string>();\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string> = new Array<string>();\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp()\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pAnimatableAttributes.push(\"va0\");\n\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = LightingCompiler;",
    "import IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport = GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceRender;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport = GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\n\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\nimport GL_SamplerBase\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerBase\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\n\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_BasicMaterialSurface\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nimport ISurfaceClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_SkyboxSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport = SurfacePool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = PassBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport GL_Image2D\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_Image2D\");\nimport GL_Sampler2D\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_Sampler2D\");\n\nimport MappingMode\t\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport GL_SamplerCube\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerCube\");\n\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport = GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = GL_TextureBase;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGraphicsTransform;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport ParticleGraphicsTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\");\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport = ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport = PerspectiveMatrix3D;"
  ],
  "sourceRoot": ""
}