{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticleData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/base/ParticleGeometry.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/pick/ShaderPicker.ts",
    "awayjs-renderergl/lib/render/BasicMaterialRender.ts",
    "awayjs-renderergl/lib/render/DepthRender.ts",
    "awayjs-renderergl/lib/render/DistanceRender.ts",
    "awayjs-renderergl/lib/render/RenderBase.ts",
    "awayjs-renderergl/lib/render/RenderPassBase.ts",
    "awayjs-renderergl/lib/render/RenderPool.ts",
    "awayjs-renderergl/lib/render/SkyboxRender.ts",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/render/passes/PassBase.ts",
    "awayjs-renderergl/lib/renderables/BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/RenderablePool.ts",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable.ts",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts",
    "awayjs-renderergl/lib/vos/CurveSubGeometryVO.ts",
    "awayjs-renderergl/lib/vos/LineSubGeometryVO.ts",
    "awayjs-renderergl/lib/vos/Sampler2DVO.ts",
    "awayjs-renderergl/lib/vos/SamplerCubeVO.ts",
    "awayjs-renderergl/lib/vos/SamplerVOBase.ts",
    "awayjs-renderergl/lib/vos/Single2DTextureVO.ts",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO.ts",
    "awayjs-renderergl/lib/vos/SubGeometryVOBase.ts",
    "awayjs-renderergl/lib/vos/SubGeometryVOPool.ts",
    "awayjs-renderergl/lib/vos/TextureVOBase.ts",
    "awayjs-renderergl/lib/vos/TextureVOPool.ts",
    "awayjs-renderergl/lib/vos/TriangleSubGeometryVO.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "RenderablePool",
    "RTTBufferManager",
    "DefaultRenderer",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_pRenderablePool",
    "_pStage",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "Object",
    "defineProperty",
    "get",
    "_antiAlias",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "entityCollector",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "dirLights",
    "directionalLights",
    "pointLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "skyBox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getItem",
    "camera",
    "updateSkyboxProjection",
    "getRenderPool",
    "renderableOwner",
    "renderOwner",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/data/BitmapImage2D",
    "undefined",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/renderables/RenderablePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "DepthRender",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "awayjs-renderergl/lib/render/DepthRender",
    "DistanceRender",
    "awayjs-renderergl/lib/render/DistanceRender",
    "Event",
    "ContextGLDrawMode",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "getMainInputTexture",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "Array",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setVertexBufferAt",
    "FLOAT_2",
    "renderToScreenVertexBuffer",
    "setTextureAt",
    "setProgram",
    "getProgram",
    "activate",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "removeEventListener",
    "awayjs-core/lib/events/Event",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RenderableMergeSort",
    "RendererEvent",
    "EntityCollector",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_iCreateEntityCollector",
    "_viewportDirty",
    "_scissorDirty",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "_applyCollector",
    "setRenderTarget",
    "LESS",
    "head",
    "_pOpaqueRenderableHead",
    "first",
    "LESS_EQUAL",
    "_pBlendedRenderableHead",
    "item",
    "entityHead",
    "_pCamera",
    "_iEntryPoint",
    "_pCameraForward",
    "transform",
    "forwardVector",
    "entity",
    "_applyRenderer",
    "next",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderable2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_renderOwner",
    "alphaThreshold",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "_iApplyRenderableOwner",
    "renderId",
    "renderOrderId",
    "cascaded",
    "position",
    "subtract",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "subGeometryVO",
    "subGeometry",
    "numElements",
    "obj",
    "push",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "id",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "awayjs-display/lib/traverse/EntityCollector",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "assetType",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "node",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "mesh",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableSubGeometry",
    "sourceSubGeometry",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationSubGeometry",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationSubGeometries",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationSubGeometry",
    "subMesh",
    "parentMesh",
    "animationSubGeometry",
    "_iGenerateAnimationSubGeometries",
    "initParticleFunc",
    "geometry",
    "newAnimationSubGeometry",
    "localNode",
    "subMeshes",
    "shareAnimationGeometry",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorSubGeometry",
    "getAnimatorSubGeometry",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "SubGeometryEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedSubGeometry",
    "_morphedSubGeometryDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphSubGeometry",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetSubGeometry",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "INDICES_UPDATED",
    "VERTICES_UPDATED",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGeometry",
    "attributesView",
    "uvs",
    "setUVs",
    "secondaryUVs",
    "setSecondaryUVs",
    "awayjs-display/lib/events/SubGeometryEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "SubGeometryVOPool",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_subGeometryVOPool",
    "getPool",
    "_activeVertexState",
    "geometryFlag",
    "currentGeometry",
    "nextGeometry",
    "blendWeight",
    "_iInvalidateRenderableGeometries",
    "subGeom",
    "setNullPose",
    "subGeometries",
    "_iIndex",
    "_indexMappings",
    "indexMappings",
    "activateVertexBufferVO",
    "awayjs-renderergl/lib/vos/SubGeometryVOPool",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticleData",
    "ParticleData",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "sceneTransform",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGeometry",
    "_nextGeometry",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/base/ParticleGeometry",
    "Geometry",
    "ParticleGeometry",
    "apply",
    "arguments",
    "awayjs-display/lib/base/Geometry",
    "message",
    "awayjs-core/lib/errors/Error",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "pAddTask",
    "_textureWidth",
    "_textureHeight",
    "mainTarget",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "ContextGLTextureFormat",
    "Filter3DTaskBase",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "pUpdateTextures",
    "_program3D",
    "pInvalidateProgram",
    "pUpdateProgram",
    "pGetVertexCode",
    "pGetFragmentCode",
    "createTexture",
    "BGRA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/pick/ShaderPicker",
    "Debug",
    "Matrix3DUtils",
    "ContextGLTriangleFace",
    "ShaderPicker",
    "shaderPickingDetails",
    "_onlyMouseEnabled",
    "_interactives",
    "_localHitPosition",
    "_hitUV",
    "_localHitNormal",
    "_rayPos",
    "_rayDir",
    "_shaderPickingDetails",
    "_id",
    "_viewportData",
    "_boundOffsetScale",
    "getViewCollision",
    "view",
    "collector",
    "iEntityCollector",
    "renderer",
    "_context",
    "_projX",
    "_projY",
    "_potentialFound",
    "_blendedRenderableHead",
    "_opaqueRenderableHead",
    "_bitmapImage2D",
    "_hitColor",
    "getPixel",
    "_hitRenderable",
    "_hitEntity",
    "_iIsMouseEnabled",
    "_collisionVO",
    "_iPickingCollisionVO",
    "getHitDetails",
    "localPosition",
    "localNormal",
    "uv",
    "_faceIndex",
    "getSceneCollision",
    "direction",
    "scene",
    "MOUSE_SCISSOR_RECT",
    "_interactiveId",
    "_objectProgram",
    "initObjectProgram",
    "CALCULATION_MATRIX",
    "setCulling",
    "bothSides",
    "NONE",
    "BACK",
    "projection",
    "coordinateSystem",
    "setProgramConstantsFromMatrix",
    "getIndexBufferVO",
    "draw",
    "numIndices",
    "updateRay",
    "getRay",
    "vertexCode",
    "fragmentCode",
    "throwPIR",
    "initTriangleProgram",
    "_triangleProgram",
    "getApproximatePosition",
    "getPreciseDetails",
    "bounds",
    "getBox",
    "col",
    "scX",
    "scY",
    "scZ",
    "offsX",
    "offsY",
    "offsZ",
    "localViewProjection",
    "depth",
    "setScissorRectangle",
    "t1",
    "t2",
    "t3",
    "v0x",
    "v0y",
    "v0z",
    "v1x",
    "v1y",
    "v1z",
    "v2x",
    "v2y",
    "v2z",
    "ni1",
    "ni2",
    "ni3",
    "n1",
    "n2",
    "n3",
    "nLength",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "invDenom",
    "ui1",
    "ui2",
    "ui3",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "_pGetSubGeometry",
    "posDim",
    "dimensions",
    "uvDim",
    "normalDim",
    "getPrecisePosition",
    "invSceneTransform",
    "px",
    "py",
    "pz",
    "rx",
    "ry",
    "rz",
    "RAW_DATA_CONTAINER",
    "copyRawDataTo",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/utils/Debug",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/render/BasicMaterialRender",
    "BlendMode",
    "BasicMaterialPass",
    "RenderBase",
    "BasicMaterialRender",
    "pool",
    "material",
    "renderableClass",
    "_material",
    "_pAddPass",
    "_pass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "NORMAL",
    "alphaBlending",
    "colorTransform",
    "preserveAlpha",
    "setBlendMode",
    "LAYER",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-renderergl/lib/render/RenderBase",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass",
    "RenderPassBase",
    "ShaderBase",
    "_shader",
    "_iIncludeDependencies",
    "projectionDependencies",
    "uvDependencies",
    "_iInitConstantData",
    "_fragmentConstantsIndex",
    "_iGetFragmentCode",
    "registerCache",
    "sharedRegisters",
    "targetReg",
    "dataReg1",
    "getFreeFragmentConstant",
    "dataReg2",
    "getFreeFragmentVectorTemp",
    "projectionFragment",
    "texture",
    "_iInitRegisters",
    "albedo",
    "uvVarying",
    "cutOffReg",
    "removeFragmentTempUsage",
    "awayjs-renderergl/lib/render/RenderPassBase",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "viewDirDependencies",
    "globalPosDependencies",
    "viewDirVarying",
    "far",
    "awayjs-renderergl/lib/render/IRenderClass",
    "MaterialBase",
    "usages",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_passes",
    "_pool",
    "_renderableClass",
    "_onPassChangeDelegate",
    "onPassChange",
    "_updateAnimation",
    "_renderOrderId",
    "useMipmapping",
    "mipmap",
    "useSmoothTextures",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "useBothSides",
    "repeatTextures",
    "repeat",
    "animateUVs",
    "usesColorTransform",
    "useColorTransform",
    "getTextureVO",
    "disposeItem",
    "CHANGE",
    "invalidateRender",
    "invalidatePasses",
    "invalidatePass",
    "invalidateAnimation",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "usesAnimation",
    "invalidateProgram",
    "_pRemovePass",
    "_pClearPasses",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/materials/MaterialBase",
    "invalidateShader",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "_iGetVertexCode",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "awayjs-renderergl/lib/render/RenderPool",
    "BasicMaterial",
    "Skybox",
    "SkyboxRender",
    "RenderPool",
    "renderClass",
    "_renderClass",
    "_iAddRender",
    "getClass",
    "_iRemoveRender",
    "registerClass",
    "assetClass",
    "_classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-renderergl/lib/render/SkyboxRender",
    "skybox",
    "_skybox",
    "_cubeTexture",
    "cubeMap",
    "usesLocalPosFragment",
    "localPositionVarying",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "getFreeFragmentSingleTemp",
    "colorBufferIndex",
    "colorVarying",
    "diffuseInputReg",
    "awayjs-renderergl/lib/render/passes/PassBase",
    "awayjs-renderergl/lib/render/passes/ILightingPass",
    "awayjs-renderergl/lib/render/passes/IPass",
    "_preserveAlpha",
    "_render",
    "awayjs-renderergl/lib/renderables/BillboardRenderable",
    "AttributesBuffer",
    "TriangleSubGeometry",
    "Billboard",
    "RenderableBase",
    "BillboardRenderable",
    "billboard",
    "_billboard",
    "billboardRect",
    "_materialGeometry",
    "globalPositionVertex",
    "viewMatrixReg",
    "viewMatrixIndex",
    "_setRenderState",
    "sceneMatrixIndex",
    "matrix3D",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-renderergl/lib/renderables/RenderableBase",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable",
    "CurveSubMesh",
    "CurveSubMeshRenderable",
    "sd",
    "standardDerivatives",
    "out",
    "curve",
    "curvex",
    "curvey",
    "curvez",
    "free",
    "free1",
    "free2",
    "d2",
    "fixa",
    "fixb",
    "_aa",
    "_0",
    "_1",
    "applyAA",
    "join",
    "_constants",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-renderergl/lib/renderables/IRenderableClass",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable",
    "LineSubGeometry",
    "LineSegment",
    "LineSegmentRenderable",
    "lineSegment",
    "_thickness",
    "_lineSegment",
    "_calcMatrix",
    "_lineGeometry",
    "startPostion",
    "end",
    "endPosition",
    "thickness",
    "setThickness",
    "colorDependencies",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "_pGetOverflowRenderable",
    "indexOffset",
    "awayjs-display/lib/base/LineSubGeometry",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable",
    "LineSubMesh",
    "LineSubMeshRenderable",
    "awayjs-display/lib/base/LineSubMesh",
    "RenderableOwnerEvent",
    "DefaultMaterialManager",
    "_geometryDirty",
    "_onRenderOwnerUpdatedDelegate",
    "_onRenderOwnerUpdated",
    "RENDER_OWNER_UPDATED",
    "getDefaultMaterial",
    "_updateGeometry",
    "_subGeometryVO",
    "invalidateGeometry",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "SkyboxRenderable",
    "TriangleSubMeshRenderable",
    "_objectPools",
    "_iAddRenderable",
    "_iRemoveRenderable",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable",
    "_vertexArray",
    "_geometry",
    "TriangleSubMesh",
    "awayjs-display/lib/base/TriangleSubMesh",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "getImageObject",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "ArgumentError",
    "CompilerBase",
    "TextureVOPool",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "_textureVOPool",
    "_updateProgram",
    "_programData",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvBufferIndex",
    "uvTransformIndex",
    "colorTransformIndex",
    "secondaryUVBufferIndex",
    "normalBufferIndex",
    "tangentBufferIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "uvTransform",
    "_iAssignedColorTransform",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "postAnimationFragmentCode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/vos/TextureVOPool",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pRenderableClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "console",
    "log",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_uvSource",
    "_uvTarget",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compileLocalPositionCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "uvAttributeReg",
    "varying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Mesh",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToMeshes",
    "meshes",
    "_toDispose",
    "_geomVOs",
    "destMesh",
    "subIdx",
    "oldGeom",
    "destGeom",
    "useSubMaterials",
    "sub",
    "vertices",
    "addSubGeometry",
    "m",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getSubGeomData",
    "transformVectors",
    "deltaTransformVectors",
    "GeometryVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform",
    "ParticleGeometryTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper",
    "ParticleGeometryHelper",
    "generateGeometry",
    "geometries",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "sourceSubGeometries",
    "numSubGeometries",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGeometryTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "particleGeometry",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "awayjs-renderergl/lib/vos/CurveSubGeometryVO",
    "CurveSubGeometry",
    "SubGeometryVOBase",
    "CurveSubGeometryVO",
    "curveSubGeometry",
    "_curveSubGeometry",
    "invalidateVertices",
    "curves",
    "disposeVertices",
    "_drawElements",
    "firstIndex",
    "_drawArrays",
    "firstVertex",
    "drawVertices",
    "_pGetOverflowSubGeometry",
    "awayjs-display/lib/base/CurveSubGeometry",
    "awayjs-renderergl/lib/vos/SubGeometryVOBase",
    "awayjs-renderergl/lib/vos/ISubGeometryVOClass",
    "awayjs-renderergl/lib/vos/ITextureVOClass",
    "awayjs-renderergl/lib/vos/LineSubGeometryVO",
    "LineSubGeometryVO",
    "lineSubGeometry",
    "_lineSubGeometry",
    "colors",
    "awayjs-renderergl/lib/vos/Sampler2DVO",
    "SamplerVOBase",
    "Sampler2DVO",
    "sampler2D",
    "_sampler2D",
    "_imageObject",
    "image2D",
    "initProperties",
    "samplerReg",
    "samplerIndex",
    "imageRect",
    "_fragmentReg",
    "_fragmentIndex",
    "getFragmentCode",
    "inputReg",
    "wrap",
    "getFormatString",
    "offsetX",
    "offsetY",
    "awayjs-renderergl/lib/vos/SamplerVOBase",
    "awayjs-renderergl/lib/vos/SamplerCubeVO",
    "SamplerCubeVO",
    "samplerCube",
    "_samplerCube",
    "imageCube",
    "bitmap",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-renderergl/lib/vos/Single2DTextureVO",
    "Single2DTexture",
    "TextureVOBase",
    "Single2DTextureVO",
    "single2DTexture",
    "_single2DTexture",
    "_sampler2DVO",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-renderergl/lib/vos/TextureVOBase",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO",
    "SingleCubeTexture",
    "SingleCubeTextureVO",
    "singleCubeTexture",
    "_singleCubeTexture",
    "_samplerCubeVO",
    "includeInput",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "SubGeometryUtils",
    "_vertices",
    "_vertexBuffers",
    "_verticesDirty",
    "_subGeometry",
    "_onIndicesUpdatedDelegate",
    "_onIndicesUpdated",
    "_onIndicesDisposedDelegate",
    "_onIndicesDisposed",
    "_onVerticesUpdatedDelegate",
    "_onVerticesUpdated",
    "_onVerticesDisposedDelegate",
    "_onVerticesDisposed",
    "INDICES_DISPOSED",
    "VERTICES_DISPOSED",
    "invalidateIndices",
    "_numIndices",
    "_indicesDirty",
    "_updateIndices",
    "getAttributesBufferVO",
    "_indices",
    "getVertexBufferVO",
    "bufferId",
    "_updateVertices",
    "size",
    "disposeIndices",
    "_overflow",
    "invalidate",
    "invalid",
    "getSubIndices",
    "count",
    "getSubVertices",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "TriangleSubGeometryVO",
    "_iAddSubGeometryVO",
    "_iRemoveSubGeometryVO",
    "subGeometryVOClass",
    "classPool",
    "awayjs-renderergl/lib/vos/TriangleSubGeometryVO",
    "_texture",
    "_iAddTextureVO",
    "_iRemoveTextureVO",
    "textureVOClass",
    "triangleSubGeometry",
    "_triangleSubGeometry"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, forceSoftware, profile, mode);\n\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage);\n\t\t\n\t\tif (stage)\n\t\t\tthis._shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tsuper.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar renderable:RenderableBase = this._pRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner);\n\n\t\tvar pass:IPass = render.passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/DepthRender\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DepthRender);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DistanceRender\t\t\t\t= require(\"awayjs-renderergl/lib/render/DistanceRender\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\t\t\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DistanceRender);\n\t\t\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer\n{\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pRenderablePool:RenderablePool;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t}\n\n\tpublic activatePass(renderable:RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderable\n\t\trenderable._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderable:RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderable._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic get renderablePool():RenderablePool\n\t{\n\t\treturn this._pRenderablePool;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderablePool.dispose();\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\tprivate _applyCollector(entityCollector:CollectorBase)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._applyRenderer(this);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(entityCollector);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:CollectorBase)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderable2:RenderableBase;\n\t//\tvar render:RenderBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderable) {\n\t//\t\trenderable2 = renderable;\n\t//\t\trender = renderable.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderable, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderable2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderable2 = renderable2.next;\n\t//\n\t//\t\t} while (renderable2 && renderable2.render == render && !renderable2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderable, pass);\n\t//\n\t//\t\trenderable = renderable2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tpublic drawRenderables(renderable:RenderableBase, entityCollector:CollectorBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderable2:RenderableBase;\n\t\tvar render:RenderBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderable) {\n\t\t\trender = renderable.render;\n\t\t\tpasses = render.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && render._renderOwner.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.render == render);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderable.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderable.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(renderable.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderable2 = renderable;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderable, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderable2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderable2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t\t} while (renderable2 && renderable2.render == render && !(this._activeMasksDirty = this._checkMasksConfig(renderable2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderable, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\tpublic _iApplyRenderableOwner(renderableOwner:IRenderableOwner)\n\t{\n\t\tvar renderable:RenderableBase = this._pRenderablePool.getItem(renderableOwner);\n\t\tvar render:RenderBase = renderable.render;\n\n\t\t//set local vars for faster referencing\n\t\trenderable.renderId = render.renderId;\n\t\trenderable.renderOrderId = render.renderOrderId;\n\n\t\trenderable.cascaded = false;\n\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\t\trenderable.maskId = entity._iAssignedMaskId();\n\t\trenderable.masksConfig = entity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (render.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumElements += renderable.subGeometryVO.subGeometry.numElements;\n\t}\n\n\tprivate _registerMask(obj:RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderable:RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderable = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderable.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(renderable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(renderable:RenderableBase)\n\t{\n\t\tvar render = renderable.render;\n\t\tvar passes = render.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderable, pass, this._pCamera);\n\t\t// only render last pass for now\n\t\trenderable._iRender(pass, this._pCamera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RendererBase;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;",
    "import SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationSubGeometries:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\n\t{\n\t\tvar mesh:Mesh = subMesh.parentMesh;\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\n\t\tif (animationSubGeometry)\n\t\t\treturn animationSubGeometry;\n\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\n\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationSubGeometry:AnimationSubGeometry;\n\t\tvar newAnimationSubGeometry:boolean = false;\n\t\tvar subGeometry:SubGeometryBase;\n\t\tvar subMesh:ISubMesh;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\t\t\tsubGeometry = subMesh.subGeometry;\n\t\t\tif (mesh.shareAnimationGeometry) {\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\n\n\t\t\t\tif (animationSubGeometry)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\n\n\t\t\tif (mesh.shareAnimationGeometry)\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\n\t\t\telse\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\n\n\t\t\tnewAnimationSubGeometry = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationSubGeometry)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationSubGeometry\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGeometry\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!subMesh)\n\t\t\tthrow(new Error(\"Must be subMesh\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator subGeometry\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedSubGeometry:Object = new Object();\n\tprivate _morphedSubGeometryDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\n\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceSubGeometry;\n\n\t\tvar targetSubGeometry:TriangleSubGeometry;\n\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetSubGeometry;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\n\n\t\tvar numVertices:number = sourceSubGeometry.numVertices;\n\t\tvar sourcePositions:Float32Array = sourceSubGeometry.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceSubGeometry.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceSubGeometry.tangents.get(numVertices);\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceSubGeometry.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceSubGeometry.jointWeights.get(numVertices);\n\n\t\tvar targetSubGeometry:TriangleSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\n\n\t\tvar targetPositions:Float32Array = targetSubGeometry.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetSubGeometry.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetSubGeometry.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar len:number /*int*/ = sourcePositions.length;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < len) {\n\t\t\tvertX = sourcePositions[index];\n\t\t\tvertY = sourcePositions[index + 1];\n\t\t\tvertZ = sourcePositions[index + 2];\n\t\t\tnormX = sourceNormals[index];\n\t\t\tnormY = sourceNormals[index + 1];\n\t\t\tnormZ = sourceNormals[index + 2];\n\t\t\ttangX = sourceTangents[index];\n\t\t\ttangY = sourceTangents[index + 1];\n\t\t\ttangZ = sourceTangents[index + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[index] = vx;\n\t\t\ttargetPositions[index + 1] = vy;\n\t\t\ttargetPositions[index + 2] = vz;\n\t\t\ttargetNormals[index] = nx;\n\t\t\ttargetNormals[index + 1] = ny;\n\t\t\ttargetNormals[index + 2] = nz;\n\t\t\ttargetTangents[index] = tx;\n\t\t\ttargetTangents[index + 1] = ty;\n\t\t\ttargetTangents[index + 2] = tz;\n\n\t\t\tindex += 3;\n\t\t}\n\n\t\ttargetSubGeometry.setPositions(targetPositions);\n\t\ttargetSubGeometry.setNormals(targetNormals);\n\t\ttargetSubGeometry.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).setIndices(subGeometry.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase subGeometry.uvs:\n\t\t\t\tmorphGeometry.setUVs(subGeometry.uvs.get(subGeometry.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase subGeometry.secondaryUVs:\n\t\t\t\tmorphGeometry.setSecondaryUVs(subGeometry.secondaryUVs.get(subGeometry.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport SubGeometryVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport SubGeometryVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _subGeometryVOPool:SubGeometryVOPool;\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t\tthis._subGeometryVOPool = SubGeometryVOPool.getPool();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubMesh\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar subGeom:TriangleSubGeometry = subMesh.subGeometry;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, subGeom, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar subGeometryVO:SubGeometryVOBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\tsubGeom = <TriangleSubGeometry> this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\n\n\t\t\tsubGeometryVO = this._subGeometryVOPool.getItem(subGeom);\n\t\t\tsubGeometryVO._indexMappings = this._subGeometryVOPool.getItem(subMesh.subGeometry).indexMappings;\n\n\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeom.positions, stage);\n\n\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeom.normals, stage);\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, subGeometry:TriangleSubGeometry, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar subGeometryVO:SubGeometryVOBase = this._subGeometryVOPool.getItem(subGeometry);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeometry.positions, stage);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeometry.normals, stage);\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\n\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationSubGeometry\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationSubGeometry;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic subGeometry:TriangleSubGeometry;\n}\n\nexport = ParticleData",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Geometry>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationSubGeometry.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Geometry>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGeometry:Geometry;\n\tprivate _nextGeometry:Geometry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGeometry;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGeometry;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGeometry = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * @class away.base.ParticleGeometry\n */\nclass ParticleGeometry extends Geometry\n{\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n}\n\nexport = ParticleGeometry;",
    "import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends Event\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic pAddTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:ITexture;\n\n\tprivate _scaledTextureWidth:number = -1;\n\tprivate _scaledTextureHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():ITexture\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:ITexture)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.pUpdateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic pInvalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic pUpdateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic pGetVertexCode():string\n\t{\n\t\t// TODO: imeplement AGAL <> GLSL\n\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic pGetFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic pUpdateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.pUpdateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLDrawMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport SubGeometryVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport SubGeometryVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.entities.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:RenderableBase;\n\tprivate _blendedRenderableHead:RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapImage2D:BitmapImage2D;\n\tprivate _viewportData:Float32Array;\n\tprivate _boundOffsetScale:Float32Array;\n\tprivate _id:Float32Array;\n\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _subGeometryIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Float32Array(4);\n\t\tthis._viewportData = new Float32Array(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Float32Array(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapImage2D)\n\t\t\tthis._bitmapImage2D = new BitmapImage2D(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\t\tthis._hitColor = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.subGeometryIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderable) {\n\t\t\t// it's possible that the renderable was already removed from the scene\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderable = renderable.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.renderOwner).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\n\t\t\tvar subGeometryVO:SubGeometryVOBase = this._hitRenderable.subGeometryVO;\n\n\t\t\tsubGeometryVO.activateVertexBufferVO(0, (<TriangleSubGeometry> subGeometryVO.subGeometry).positions, this._stage);\n\t\t\tsubGeometryVO.getIndexBufferVO(this._stage).draw(ContextGLDrawMode.TRIANGLES, 0, subGeometryVO.numIndices);\n\n\t\t\trenderable = renderable.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\tvar subGeometryVO:SubGeometryVOBase = this._hitRenderable.subGeometryVO;\n\n\t\tsubGeometryVO.activateVertexBufferVO(0, (<TriangleSubGeometry> subGeometryVO.subGeometry).positions, this._stage);\n\t\tsubGeometryVO.getIndexBufferVO(this._stage).draw(ContextGLDrawMode.TRIANGLES, 0, subGeometryVO.numIndices);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\n\t\tcol = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar subGeom:TriangleSubGeometry = <TriangleSubGeometry> this._hitRenderable._pGetSubGeometry();\n\t\tvar indices:Uint16Array = subGeom.indices.get(subGeom.numElements);\n\n\t\tvar positions:Float32Array = subGeom.positions.get(subGeom.numVertices);\n\t\tvar posDim:number = subGeom.positions.dimensions;\n\n\t\tvar uvs:Float32Array = subGeom.uvs.get(subGeom.numVertices);\n\t\tvar uvDim:number = subGeom.uvs.dimensions;\n\n\t\tvar normals:Float32Array = subGeom.normals.get(subGeom.numVertices);\n\t\tvar normalDim:number = subGeom.normals.dimensions;\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = indices[i]*posDim;\n\t\t\tt2 = indices[j]*posDim;\n\t\t\tt3 = indices[k]*posDim;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = indices[i]*normalDim;\n\t\t\t\t\tni2 = indices[j]*normalDim;\n\t\t\t\t\tni3 = indices[k]*normalDim;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = indices[i]*uvDim\n\t\t\t\t\tui2 = indices[j]*uvDim\n\t\t\t\t\tui3 = indices[k]*uvDim\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back subGeometryIndex value\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapImage2D.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapImage2D = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/render/passes/BasicMaterialPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialRender extends RenderBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(pool:RenderPool, material:BasicMaterial, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, material, renderableClass, stage);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, renderableClass, this._stage));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport = BasicMaterialRender;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * DepthRender forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass DepthRender extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param renderOwner\n\t * @param renderableClass\n\t * @param stage\n\t */\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shader.texture && shader.alphaThreshold > 0) {\n\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture && this._shader.alphaThreshold > 0) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DepthRender;",
    "﻿import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shader.alphaThreshold > 0) {\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._shader.alphaThreshold > 0) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceRender;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n *\n * @class away.pool.Passes\n */\nclass RenderBase extends EventDispatcher implements IRender\n{\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tprivate _pool:RenderPool;\n\tpublic _renderOwner:IRenderOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\n\tpublic renderId:number;\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis.renderId = renderOwner.id;\n\t\tthis._renderOwner = renderOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._renderableClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._renderOwner.alphaThreshold;\n\t\tshader.useMipmapping = this._renderOwner.mipmap;\n\t\tshader.useSmoothTextures = this._renderOwner.smooth;\n\n\t\tif (this._renderOwner instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._renderOwner;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.repeatTextures = material.repeat;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t\tif (material.texture)\n\t\t\t\tshader.texture = shader.getTextureVO(material.texture);\n\t\t\tshader.color = material.color;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this._renderOwner);\n\t\tthis._pool = null;\n\t\tthis._renderOwner = null;\n\t\tthis._renderableClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateRender()\n\t{\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidatePass();\n\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param renderOwner\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the renderOwner.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the renderOwner\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the renderOwner\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateAnimation();\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._renderOwner.animationSet) {\n\t\t\tthis._renderOwner.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderableOwner> = this._renderOwner.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._renderOwner.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RenderBase;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\n\n/**\n * RenderPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass RenderPassBase extends RenderBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = RenderPassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport BasicMaterialRender\t\t\t= require(\"awayjs-renderergl/lib/render/BasicMaterialRender\");\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport SkyboxRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/SkyboxRender\");\n\n/**\n * @class away.pool.RenderPool\n */\nclass RenderPool\n{\n\tprivate static _classPool:Object = new Object();\n\t\n\tprivate _pool:Object = new Object();\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _stage:Stage;\n\tprivate _renderClass:IRenderClass;\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param renderClass\n\t */\n\tconstructor(renderableClass:IRenderableClass, stage:Stage, renderClass:IRenderClass = null)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t\tthis._renderClass = renderClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderOwner:IRenderOwner):RenderBase\n\t{\n\t\treturn (this._pool[renderOwner.id] || (this._pool[renderOwner.id] = renderOwner._iAddRender(new (this._renderClass || RenderPool.getClass(renderOwner))(this, renderOwner, this._renderableClass, this._stage))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t */\n\tpublic disposeItem(renderOwner:IRenderOwner)\n\t{\n\t\trenderOwner._iRemoveRender(this._pool[renderOwner.id]);\n\n\t\tdelete this._pool[renderOwner.id];\n\t}\n\t\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(renderClass:IRenderClass, assetClass:IAssetClass)\n\t{\n\t\tRenderPool._classPool[assetClass.assetType] = renderClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(renderOwner:IRenderOwner):IRenderClass\n\t{\n\t\treturn RenderPool._classPool[renderOwner.assetType];\n\t}\n\t\n\n\tprivate static main = RenderPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tRenderPool.registerClass(BasicMaterialRender, BasicMaterial);\n\t\tRenderPool.registerClass(SkyboxRender, Skybox);\n\t}\n}\n\nexport = RenderPool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\n\n/**\n * SkyboxRender forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass SkyboxRender extends RenderPassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _cubeTexture:TextureVOBase;\n\n\tconstructor(pool:RenderPool, skybox:Skybox, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, renderableClass, stage);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._cubeTexture = this._shader.getTextureVO(this._skybox.cubeMap);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._skybox = null;\n\n\t\tthis._cubeTexture.dispose();\n\t\tthis._cubeTexture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._renderOwner.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._renderOwner.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesLocalPosFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._cubeTexture._iInitRegisters(shader, registerCache);\n\n\t\treturn this._cubeTexture._iGetFragmentCode(shader, sharedRegisters.shadedTarget, registerCache, sharedRegisters.localPositionVarying);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\tthis._cubeTexture.activate(this._shader);\n\t}\n}\n\nexport = SkyboxRender;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(render, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (shader.texture != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (shader.texture != null) {\n\n\t\t\tshader.texture._iInitRegisters(shader, regCache);\n\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, targetReg, regCache, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture != null) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tprivate _render:RenderBase;\n\tpublic _renderOwner:IRenderOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._renderOwner = renderOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._renderOwner = null;\n\t\tthis._renderableClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = PassBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = Billboard;\n\n\tprivate static _materialGeometry:Object = new Object();\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePool, billboard:Billboard, stage:Stage)\n\t{\n\t\tsuper(pool, billboard, billboard, billboard.material, stage);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.setPositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\tgeometry.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.setPositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\t}\n}\n\nexport = BillboardRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport CurveSubMesh\t\t\t\t    = require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport CurveSubGeometry\t\t    \t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\")\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass CurveSubMeshRenderable extends RenderableBase\n{\n\tprivate static _constants:Float32Array = new Float32Array([0, 1, 1, 0.5]);\n\n\tpublic static assetClass:IAssetClass = CurveSubMesh;\n\n\tpublic static vertexAttributesOffset:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:CurveSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:CurveSubMesh, stage:Stage)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subMesh = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():CurveSubGeometry\n\t{\n\t\treturn (this.subMesh.animator)? <CurveSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry) : this.subMesh.subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n        shader.usesLocalPosFragment = true;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \".xyw, \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov v2 va1 \\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\n\t\t} else {\n\t\t\tcode += \"mov v2 va1 \\n\";\n\t\t\tcode += \"m44 op, \" + position + \".xyw, \" + viewMatrixReg + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n    /**\n     * @inheritDoc\n     */\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar sd:boolean = (<ContextWebGL>shader._stage.context).standardDerivatives;\n\t\tvar pos:ShaderRegisterElement = sharedRegisters.localPositionVarying;\n\t\tvar out:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\n\t\tvar curve:string = \"v2\";\n\t\tvar curvex:string = \"v2.x\";\n\t\tvar curvey:string = \"v2.y\";\n\t\tvar curvez:string = pos + \".z\";\n\n\n\t\t//get some free registers\n\t\tvar free:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free, 1);\n\t\tvar free1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free1, 1);\n\t\tvar free2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free2, 1);\n\n\t\t//distance from curve\n\t\tvar d:string = free + \".x\";\n\t\tvar dx:string = free + \".y\";\n\t\tvar dy:string = free + \".z\";\n\t\tvar t:string = free + \".w\";\n\t\tvar d2:string = free1 + \".x\";\n\t\tvar fixa:string = free1 + \".y\";\n\t\tvar fixb:string = free1 + \".z\";\n\n\t\tvar _aa:string = \"fc2.z\";\n\t\tvar _0:string = \"fc2.x\";\n\t\tvar _1:string = \"fc2.y\";\n\n\t\tvar nl:string = \"\\n\";\n\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//distance from curve\n\t\tcode.push(\"mul\",d, curvex, curvex, nl);\n\t\tcode.push(\"sub\",d, d, curvey, nl);\n\t\tcode.push(\"mul\",d, d, curvez, nl);\t//flipper\n\n\t\t//kill based on distance from curve\n\t\tcode.push(\"kil\" ,d, nl);\n\n\t\tvar applyAA:boolean = false;\n\t\tif(applyAA && sd)\n\t\t{\n\n\t\t\t//derivatives\n\t\t\tcode.push(\"ddx\", dx, d, nl);\n\t\t\tcode.push(\"ddy\", dy, d, nl);\n\n\t\t\t//AA\n\t\t\tcode.push(\"mul\",dx, dx, dx, nl);\n\t\t\tcode.push(\"mul\",dy, dy, dy, nl);\n\t\t\tcode.push(\"add\",t, dx, dy, nl);\n\t\t\tcode.push(\"sqt\",t, t, nl);\n\n\t\t\tcode.push(\"mul\",t, t, _aa, nl);\n\t\t\tcode.push(\"div\",d, d, t, nl);\n\n/*\n\t\t\t//code.push(\"sge\", fixa, curvex, _1, nl);\n\t\t\tcode.push(\"slt\", fixb, curvex, _1, nl);\n\t\t\tcode.push(\"sub\", fixa, _1, fixb, nl);\n\t\t\t//code.push(\"sub\", fixb, _1, fixa, nl);\n\n\t\t\tcode.push(\"mul\", d, d, fixb, nl);\n\n*/\n//\t\t\tcode.push(\"abs\", d, d, nl);\n\t\t\tcode.push(\"max\", d, d, _0, nl);\n\t\t\tcode.push(\"min\", d, d, _1, nl);\n\t\t\tcode.push(\"mov\", out+\".w\", d, nl);\n\t\t}\n\n\n\t\tcode.push(\"mov\", out+\".w\", _1, nl);\n\t\treturn code.join(\" \");\n\t}\n\n    /**\n     * @inheritDoc\n     */\n    public _iActivate(pass:PassBase, camera:Camera)\n    {\n        super._iActivate(pass, camera);\n\n        var context:IContextGL = this._stage.context;\n\n        context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 2, CurveSubMeshRenderable._constants, 1);\n\n    }\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\t}\n}\n\nexport = CurveSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSegmentRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = LineSegment;\n\n\tprivate static _lineGeometry:Object = new Object();\n\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment, stage:Stage)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment, lineSegment.material, stage);\n\n\t\tthis._lineSegment = lineSegment;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar geometry:LineSubGeometry = LineSegmentRenderable._lineGeometry[this._lineSegment.id] || (LineSegmentRenderable._lineGeometry[this._lineSegment.id] = new LineSubGeometry());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSegmentRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSegmentRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSegmentRenderable(this._pool, <LineSegment> this.renderableOwner, this._stage);\n\t}\n}\n\nexport = LineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = LineSubMesh;\n\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, stage:Stage)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage);\n\n\t\tthis.subMesh = subMesh;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subMesh = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\treturn this.subMesh.subGeometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSubMeshRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSubMeshRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\t}\n}\n\nexport = LineSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\tprivate _onRenderOwnerUpdatedDelegate:(event:RenderableOwnerEvent) => void;\n\n\tpublic _subGeometryVOPool:SubGeometryVOPool;\n\tpublic _subGeometryVO:SubGeometryVOBase;\n\tprivate _geometryDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePool;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\n\t/**\n\t *\n\t */\n\tpublic renderOwner:IRenderOwner;\n\n\t/**\n\t *\n\t */\n\tpublic render:RenderBase;\n\n\n\tpublic get subGeometryVO():SubGeometryVOBase\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\treturn this._subGeometryVO;\n\t}\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param renderableOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner, renderOwner:IRenderOwner, stage:Stage)\n\t{\n\t\tthis._onRenderOwnerUpdatedDelegate = (event:RenderableOwnerEvent) => this._onRenderOwnerUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\t\tthis._stage = stage;\n\n\t\tthis._subGeometryVOPool = SubGeometryVOPool.getPool();\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\n\t\tthis.renderableOwner.addEventListener(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this._onRenderOwnerUpdatedDelegate);\n\n\t\tthis.renderOwner = renderOwner;\n\n\t\tthis.render = pool.getRenderPool(renderableOwner).getItem(renderOwner || DefaultMaterialManager.getDefaultMaterial(renderableOwner));\n\t\tthis.render.usages++;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\t\tthis._pool = null;\n\t\tthis._stage = null;\n\t\tthis._subGeometryVOPool = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderableOwner.removeEventListener(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this._onRenderOwnerUpdatedDelegate);\n\t\tthis.renderableOwner = null;\n\t\tthis.renderOwner = null;\n\n\t\tthis.render.usages--;\n\n\t\tif (!this.render.usages)\n\t\t\tthis.render.dispose();\n\n\t\tthis.render = null;\n\n\t\tif (this._subGeometryVO) {\n\t\t\tthis._subGeometryVO.usages--;\n\n\t\t\tif (!this._subGeometryVO.usages)\n\t\t\t\tthis._subGeometryVO.dispose();\n\n\t\t\tthis._subGeometryVO = null;\n\t\t}\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection)\n\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._subGeometryVO._iRender(pass.shader, this._stage);\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tif (this._subGeometryVO) {\n\t\t\tthis._subGeometryVO.usages--;\n\n\t\t\tif (!this._subGeometryVO.usages)\n\t\t\t\tthis._subGeometryVO.dispose();\n\t\t}\n\n\t\tthis._subGeometryVO = this._subGeometryVOPool.getItem(this._pGetSubGeometry());\n\t\tthis._subGeometryVO.usages++;\n\n\t\tthis._geometryDirty = false;\n\t}\n\n\tprivate _onRenderOwnerUpdated(event:RenderableOwnerEvent)\n\t{\n\t\tthis.renderOwner = event.renderOwner;\n\n\t\tthis.render.usages--;\n\n\t\tif (!this.render.usages)\n\t\t\tthis.render.dispose();\n\n\t\tthis.render = this._pool.getRenderPool(this.renderableOwner).getItem(this.renderOwner || DefaultMaterialManager.getDefaultMaterial(this.renderableOwner));\n\t\tthis.render.usages++;\n\t}\n}\n\nexport = RenderableBase;",
    "import IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/BillboardRenderable\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSegmentRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSubMeshRenderable\");\nimport CurveSubMeshRenderable\t    = require(\"awayjs-renderergl/lib/renderables/CurveSubMeshRenderable\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport SkyboxRenderable\t\t\t    = require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * RenderablePool forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RenderablePool\n */\nclass RenderablePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _stage:Stage;\n\tprivate _pool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\t\n\t/**\n\t * Creates a new RenderablePool object.\n\t *\n\t * @param stage\n\t * @param renderClass\n\t */\n\tconstructor(stage:Stage, renderClass:IRenderClass = null)\n\t{\n\t\tthis._stage = stage;\n\n\t\tfor (var i in RenderablePool._classPool)\n\t\t\tthis._objectPools[i] = new RenderPool(RenderablePool._classPool[i], this._stage, renderClass);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderableOwner:IRenderableOwner):RenderableBase\n\t{\n\t\treturn this._pool[renderableOwner.id] || (this._pool[renderableOwner.id] = renderableOwner._iAddRenderable(new (RenderablePool.getClass(renderableOwner))(this, renderableOwner, this._stage)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic disposeItem(renderableOwner:IRenderableOwner)\n\t{\n\t\trenderableOwner._iRemoveRenderable(this._pool[renderableOwner.id]);\n\n\t\tdelete this._pool[renderableOwner.id];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderPool\n\t */\n\tpublic getRenderPool(renderableOwner:IRenderableOwner):RenderPool\n\t{\n\t\treturn this._objectPools[renderableOwner.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(renderableClass:IRenderableClass)\n\t{\n\t\tRenderablePool._classPool[renderableClass.assetClass.assetType] = renderableClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(renderableOwner:IRenderableOwner):IRenderableClass\n\t{\n\t\treturn RenderablePool._classPool[renderableOwner.assetType];\n\t}\n\n\t/**\n\t * Disposes the resources used by the RenderablePool.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\tthis._pool[id].dispose();\n\n\t\tthis._pool = null;\n\t}\n\n\n\tprivate static main = RenderablePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tRenderablePool.registerClass(BillboardRenderable);\n\t\tRenderablePool.registerClass(LineSegmentRenderable);\n\t\tRenderablePool.registerClass(LineSubMeshRenderable);\n\t\tRenderablePool.registerClass(TriangleSubMeshRenderable);\n\t\tRenderablePool.registerClass(CurveSubMeshRenderable);\n\t\tRenderablePool.registerClass(SkyboxRenderable);\n\t}\n}\n\nexport = RenderablePool;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = Skybox;\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePool, skybox:Skybox, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, skybox, skybox, stage);\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport = SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = TriangleSubMesh;\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, stage:Stage)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subMesh = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\treturn (this.subMesh.animator)? <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry) : this.subMesh.subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(renderableClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(renderableClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._stage.getImageObject(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], false, this.useSmoothTextures, this.useMipmapping);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._stage.getImageObject(probe.specularMap).activate(this.lightProbeSpecularIndices[i], false, this.useSmoothTextures, this.useMipmapping);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase\n{\n\tprivate _textureVOPool:TextureVOPool;\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:TextureVOBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesLocalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, stage:Stage)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._textureVOPool = new TextureVOPool(this._stage);\n\t}\n\n\tpublic getTextureVO(texture:TextureBase):TextureVOBase\n\t{\n\t\treturn this._textureVOPool.getItem(texture);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param renderableClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(renderableClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesLocalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderableOwner.animator)\n\t\t\t(<AnimatorBase> renderable.renderableOwner.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.renderableOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\t\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this.texture) {\n\t\t\tthis.texture.dispose();\n\t\t\tthis.texture = null;\n\t\t}\n\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._renderableClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n    public localPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pRenderableClass:IRenderableClass;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pRenderableClass = renderableClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = renderableClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tconsole.log(\"uses ct:\",this._pShader.usesColorTransform);\n\t\tif (this._pShader.usesColorTransform)\n\t\t{\n\t\t\tthis.compileColorTransformCode();\n\t\t}else{\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\t\t}\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesLocalPosFragment)\n            this.compileLocalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pRenderableClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderableClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n    private compileLocalPositionCode()\n    {\n        this._pSharedRegisters.localPositionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.localPositionVarying + \", \" + this._pSharedRegisters.localPosition + \"\\n\";\n    }\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(renderableClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = LightingCompiler;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _geomVOs:Array<GeometryVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._geomVOs = new Array<GeometryVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar subIdx:number /*uint*/;\n\t\tvar oldGeom:Geometry;\n\t\tvar destGeom:Geometry;\n\t\tvar useSubMaterials:boolean;\n\n\t\toldGeom = destMesh.geometry;\n\t\tdestGeom = destMesh.geometry = new Geometry();\n\t\tsubIdx = destMesh.subMeshes.length;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\n\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\n\t\t\tvar s:number /*uint*/;\n\t\t\tvar data:GeometryVO;\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\tsub.autoDeriveNormals = false;\n\t\t\tsub.autoDeriveTangents = false;\n\n\t\t\tdata = this._geomVOs[i];\n\t\t\tsub.setIndices(data.indices);\n\t\t\tsub.setPositions(data.vertices);\n\t\t\tsub.setNormals(data.normals);\n\t\t\tsub.setTangents(data.tangents);\n\t\t\tsub.setUVs(data.uvs);\n\n\t\t\tdestGeom.addSubGeometry(sub);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\n\t\t\tdestMesh.material = this._geomVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar m:Mesh;\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++) {\n\t\t\t\tm = this._toDispose[i];\n\t\t\t\tm.geometry.dispose();\n\t\t\t\tm.dispose();\n\t\t\t}\n\n\t\t\t//dispose of the original receiver geometry\n\t\t\toldGeom.dispose();\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tif (mesh.geometry) {\n\t\t\tvar subIdx:number /*uint*/;\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\n\t\t\tvar calc:number /*uint*/;\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\n\t\t\t\tvar i:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\t\tvar indexOffset:number /*uint*/;\n\t\t\t\tvar subGeom:TriangleSubGeometry;\n\t\t\t\tvar vo:GeometryVO;\n\t\t\t\tvar vertices:Array<number>;\n\t\t\t\tvar normals:Array<number>;\n\t\t\t\tvar tangents:Array<number>;\n\t\t\t\tvar ind:Uint16Array, pd:Float32Array, nd:Float32Array, td:Float32Array, ud:Float32Array;\n\n\t\t\t\tsubGeom = subGeometries[subIdx];\n\t\t\t\tpd = subGeom.positions.get(subGeom.numVertices);\n\t\t\t\tnd = subGeom.normals.get(subGeom.numVertices);\n\t\t\t\ttd = subGeom.tangents.get(subGeom.numVertices);\n\t\t\t\tud = subGeom.uvs.get(subGeom.numVertices);\n\n\t\t\t\t// Get (or create) a VO for this material\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\n\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t\t// Copy over vertex attributes\n\t\t\t\tvIdx = vertices.length;\n\t\t\t\tnIdx = normals.length;\n\t\t\t\ttIdx = tangents.length;\n\t\t\t\tuIdx = vo.uvs.length;\n\t\t\t\tlen = subGeom.numVertices;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\n\t\t\t\t\t// Position\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t\t// Normal\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t\t// Tangent\n\t\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t\t// UV\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t\t}\n\n\t\t\t\t// Copy over triangle indices\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\t\tiIdx = vo.indices.length;\n\t\t\t\tlen = subGeom.numElements;\n\t\t\t\tind = subGeom.indices.get(len);\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\t\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!this._objectSpace) {\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\t\tlen = vertices.length;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispose)\n\t\t\t\tthis._toDispose.push(mesh);\n\t\t}\n\t}\n\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\n\t{\n\t\tvar data:GeometryVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._geomVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._geomVOs[i].material == material) {\n\t\t\t\t\tdata = this._geomVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._geomVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._geomVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GeometryVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._geomVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GeometryVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGeometryTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGeometryTransform;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\n\n/**\n * ...\n */\nclass ParticleGeometryHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\n\t\tvar numParticles:number /*uint*/ = geometries.length;\n\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\n\t\tvar numSubGeometries:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar subGeometry:TriangleSubGeometry;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\tsubGeometry = subGeometries[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.subGeometry = subGeometry;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:Float32Array;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:Float32Array;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceSubGeometry.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceSubGeometry.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\n\t\tparticleGeometry.particles = particles;\n\t\tparticleGeometry.numParticles = numParticles;\n\n\t\tnumParticles = subGeometries.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsubGeometry = subGeometries[i];\n\t\t\tsubGeometry.autoDeriveNormals = false;\n\t\t\tsubGeometry.autoDeriveTangents = false;\n\t\t\tsubGeometry.setIndices(indicesVector[i]);\n\t\t\tsubGeometry.setPositions(positionsVector[i]);\n\t\t\tsubGeometry.setNormals(normalsVector[i]);\n\t\t\tsubGeometry.setTangents(tangentsVector[i]);\n\t\t\tsubGeometry.setUVs(uvsVector[i]);\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\n\t\t}\n\n\t\treturn particleGeometry;\n\t}\n}\n\nexport = ParticleGeometryHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport = PerspectiveMatrix3D;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\n\n/**\n *\n * @class away.pool.CurveSubGeometryVO\n */\nclass CurveSubGeometryVO extends SubGeometryVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _curveSubGeometry:CurveSubGeometry;\n\n\tconstructor(pool:SubGeometryVOPool, curveSubGeometry:CurveSubGeometry)\n\t{\n\t\tsuper(pool, curveSubGeometry);\n\n\t\tthis._curveSubGeometry = curveSubGeometry;\n\n\t\tthis.invalidateVertices(this._curveSubGeometry.positions);\n\t\tthis.invalidateVertices(this._curveSubGeometry.curves);\n\t\tthis.invalidateVertices(this._curveSubGeometry.uvs);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.disposeVertices(this._curveSubGeometry.positions);\n\t\tthis.disposeVertices(this._curveSubGeometry.curves);\n\t\tthis.disposeVertices(this._curveSubGeometry.uvs);\n\n\t\tthis._curveSubGeometry = null;\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (shader.uvBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.uvBufferIndex, this._curveSubGeometry.uvs, stage);\n\n\t\tthis.activateVertexBufferVO(0, this._curveSubGeometry.positions, stage);\n\t\tthis.activateVertexBufferVO(1, this._curveSubGeometry.curves, stage);\n\n\t\tsuper._render(shader, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthis.getIndexBufferVO(stage).draw(ContextGLDrawMode.TRIANGLES, firstIndex, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tstage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.CurveSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\treturn new CurveSubGeometryVO(this._pool, this._curveSubGeometry);\n\t}\n}\n\nexport = CurveSubGeometryVO;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\n\n/**\n *\n * @class away.pool.LineSubGeometryVO\n */\nclass LineSubGeometryVO extends SubGeometryVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _lineSubGeometry:LineSubGeometry;\n\n\tconstructor(pool:SubGeometryVOPool, lineSubGeometry:LineSubGeometry)\n\t{\n\t\tsuper(pool, lineSubGeometry);\n\n\t\tthis._lineSubGeometry = lineSubGeometry;\n\n\t\tthis.invalidateVertices(this._lineSubGeometry.positions);\n\t\tthis.invalidateVertices(this._lineSubGeometry.thickness);\n\t\tthis.invalidateVertices(this._lineSubGeometry.colors);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.disposeVertices(this._lineSubGeometry.positions);\n\t\tthis.disposeVertices(this._lineSubGeometry.thickness);\n\t\tthis.disposeVertices(this._lineSubGeometry.colors);\n\n\t\tthis._lineSubGeometry = null;\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.colorBufferIndex, this._lineSubGeometry.colors, stage);\n\n\t\tthis.activateVertexBufferVO(0, this._lineSubGeometry.positions, stage, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineSubGeometry.positions, stage, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineSubGeometry.thickness, stage);\n\n\t\tsuper._render(shader, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthis.getIndexBufferVO(stage).draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tstage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\treturn new LineSubGeometryVO(this._pool, this._lineSubGeometry);\n\t}\n}\n\nexport = LineSubGeometryVO;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport Image2DObject\t\t\t\t= require(\"awayjs-stagegl/lib/pool/Image2DObject\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\n\n/**\n *\n * @class away.pool.Sampler2DVO\n */\nclass Sampler2DVO extends SamplerVOBase\n{\n\tprivate _imageObject:Image2DObject;\n\tprivate _sampler2D:Sampler2D;\n\tprivate _fragmentReg:ShaderRegisterElement;\n\tprivate _fragmentIndex:number;\n\n\tconstructor(stage:Stage, sampler2D:Sampler2D)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._sampler2D = sampler2D;\n\t\tthis._imageObject = this._stage.getImageObject(this._sampler2D.image2D);\n\t\tthis._imageObject.usages++;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._sampler2D = null;\n\n\t\tthis._imageObject.usages--;\n\n\t\tif (!this._imageObject.usages) {\n\t\t\tthis._imageObject.dispose();\n\t\t\tthis._imageObject = null;\n\t\t}\n\t}\n\n\tpublic initProperties(regCache:ShaderRegisterCache)\n\t{\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\n\t\tthis.samplerIndex = this.samplerReg.index;\n\n\t\tif (this._sampler2D.imageRect) {\n\t\t\tthis._fragmentReg = regCache.getFreeFragmentConstant();\n\t\t\tthis._fragmentIndex = this._fragmentReg.index*4;\n\t\t}\n\t}\n\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = (shader.repeatTextures? \"wrap\":\"clamp\");\n\t\tvar format:string = this.getFormatString(this._sampler2D);\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//handles texture atlasing\n\t\tif (this._sampler2D.imageRect) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + this._fragmentReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + this._fragmentReg + \".zw\\n\";\n\t\t} else {\n\t\t\ttemp = inputReg;\n\t\t}\n\n\t\tcode += \"tex \" + targetReg + \", \" + temp + \", \" + this.samplerReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._imageObject.activate(this.samplerIndex, this._sampler2D.repeat || shader.repeatTextures, this._sampler2D.smooth || shader.useSmoothTextures, this._sampler2D.mipmap || shader.useMipmapping);\n\n\t\tif (this._sampler2D.imageRect) {\n\t\t\tvar index:number = this._fragmentIndex;\n\t\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\t\tdata[index] = this._sampler2D.scaleX;\n\t\t\tdata[index + 1] = this._sampler2D.scaleY;\n\t\t\tdata[index + 2] = this._sampler2D.offsetX;\n\t\t\tdata[index + 3] = this._sampler2D.offsetY;\n\t\t}\n\t}\n}\n\nexport = Sampler2DVO;",
    "import SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ImageCubeObject\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ImageCubeObject\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\n\n/**\n *\n * @class away.pool.BitmapObject\n */\nclass SamplerCubeVO extends SamplerVOBase\n{\n\tprivate _imageObject:ImageCubeObject;\n\tprivate _samplerCube:SamplerCube;\n\n\tconstructor(stage:Stage, samplerCube:SamplerCube)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._samplerCube = samplerCube;\n\t\tthis._imageObject = this._stage.getImageObject(this._samplerCube.imageCube);\n\t\tthis._imageObject.usages++;\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._samplerCube = null\n\n\t\tthis._imageObject.usages--;\n\n\t\tif (!this._imageObject.usages) {\n\t\t\tthis._imageObject.dispose();\n\t\t\tthis._imageObject = null;\n\t\t}\n\t}\n\n\tpublic initProperties(regCache:ShaderRegisterCache)\n\t{\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\n\n\t\tthis.samplerIndex = this.samplerReg.index;\n\t}\n\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = this.getFormatString(this._samplerCube);\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + this.samplerReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._imageObject.activate(this.samplerIndex, false, this._samplerCube.smooth || shader.useSmoothTextures, this._samplerCube.mipmap || shader.useMipmapping);\n\t}\n}\n\nexport = SamplerCubeVO;",
    "import SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n *\n * @class away.pool.SamplerVOBase\n */\nclass SamplerVOBase\n{\n\tpublic _stage:Stage;\n\n\tpublic samplerReg:ShaderRegisterElement;\n\n\tpublic samplerIndex:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._stage = null;\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic getFormatString(bitmap:SamplerBase):string\n\t{\n\t\tswitch (bitmap.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = SamplerVOBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport Sampler2DVO\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/Sampler2DVO\");\n\n/**\n *\n * @class away.pool.Single2DTextureVO\n */\nclass Single2DTextureVO extends TextureVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = Single2DTexture;\n\n\tprivate _single2DTexture:Single2DTexture;\n\n\tprivate _sampler2DVO:Sampler2DVO;\n\n\tconstructor(pool:TextureVOPool, single2DTexture:Single2DTexture, stage:Stage)\n\t{\n\t\tsuper(pool, single2DTexture, stage);\n\n\t\tthis._single2DTexture = single2DTexture;\n\n\t\tthis._sampler2DVO = new Sampler2DVO(stage, this._single2DTexture.sampler2D);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._single2DTexture = null;\n\n\t\tthis._sampler2DVO.dispose();\n\t\tthis._sampler2DVO = null;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\t\tthis._sampler2DVO.initProperties(regCache);\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\treturn this._sampler2DVO.getFragmentCode(shader, targetReg, regCache, inputReg);\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._sampler2DVO.activate(shader);\n\t}\n}\n\nexport = Single2DTextureVO;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport SamplerCubeVO\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerCubeVO\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass SingleCubeTextureVO extends TextureVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = SingleCubeTexture;\n\n\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\n\tprivate _samplerCubeVO:SamplerCubeVO;\n\n\tconstructor(pool:TextureVOPool, singleCubeTexture:SingleCubeTexture, stage:Stage)\n\t{\n\t\tsuper(pool, singleCubeTexture, stage);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\n\t\tthis._samplerCubeVO = new SamplerCubeVO(stage, this._singleCubeTexture.samplerCube);\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._singleCubeTexture = null;\n\n\t\tthis._samplerCubeVO.dispose();\n\t\tthis._samplerCubeVO = null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase, includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tshader.usesLocalPosFragment = true;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\t\tthis._samplerCubeVO.initProperties(regCache);\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\treturn this._samplerCubeVO.getFragmentCode(shader, targetReg, regCache, inputReg);\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._samplerCubeVO.activate(shader);\n\t}\n}\n\nexport = SingleCubeTextureVO;",
    "import AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport AttributesBufferVO\t\t\t= require(\"awayjs-stagegl/lib/vos/AttributesBufferVO\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n\n/**\n *\n * @class away.pool.SubGeometryVOBaseBase\n */\nclass SubGeometryVOBase implements ISubGeometryVO\n{\n\tpublic usages:number = 0;\n\tpublic _pool:SubGeometryVOPool;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onIndicesDisposedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesDisposedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _overflow:SubGeometryVOBase;\n\tprivate _indices:AttributesBuffer;\n\tprivate _indexBuffer:AttributesBufferVO;\n\tprivate _indicesDirty:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _vertexBuffers:Object = new Object();\n\tprivate _verticesDirty:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number;\n\n\tprivate _numVertices:number;\n\n\tpublic invalid:boolean;\n\n\tpublic get subGeometry()\n\t{\n\t\treturn this._subGeometry;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tconstructor(pool:SubGeometryVOPool, subGeometry:SubGeometryBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis._subGeometry = subGeometry;\n\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onIndicesDisposedDelegate = (event:SubGeometryEvent) => this._onIndicesDisposed(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\t\tthis._onVerticesDisposedDelegate = (event:SubGeometryEvent) => this._onVerticesDisposed(event);\n\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_DISPOSED, this._onIndicesDisposedDelegate);\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_DISPOSED, this._onVerticesDisposedDelegate);\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\n\t\tthis.invalidateIndices();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get indexMappings():Array<number>\n\t{\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferVO(stage:Stage):AttributesBufferVO\n\t{\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\treturn (this._indexBuffer = stage.getAttributesBufferVO(this._indices));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferVO(attributesView:AttributesView, stage:Stage):AttributesBufferVO\n\t{\n\t\tvar bufferId:number = attributesView.buffer.id;\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\tif (this._verticesDirty[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn (this._vertexBuffers[bufferId] = stage.getAttributesBufferVO(this._vertices[bufferId]));\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, stage:Stage, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferVO(attributesView, stage).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset);\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidateIndices()\n\t{\n\t\tif (!this._subGeometry.indices)\n\t\t\treturn;\n\n\t\tthis._indicesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeIndices()\n\t{\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\n\t\tthis._indices = null;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t */\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._verticesDirty[bufferId] = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic disposeVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (this._vertexBuffers[bufferId]) {\n\t\t\tthis._vertexBuffers[bufferId].dispose();\n\t\t\tdelete this._vertexBuffers[bufferId];\n\t\t}\n\n\t\tthis._vertices = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this._subGeometry);\n\t\tthis._pool = null;\n\n\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_DISPOSED, this._onIndicesDisposedDelegate);\n\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\n\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_DISPOSED, this._onVerticesDisposedDelegate);\n\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\n\t\tthis._subGeometry = null;\n\n\t\tthis.disposeIndices();\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iRender(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\tthis._render(shader, stage);\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow._iRender(shader, stage);\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (this._indices)\n\t\t\tthis._drawElements(0, this._numIndices, stage);\n\t\telse\n\t\t\tthis._drawArrays(0, this._numVertices, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tthis._indices = SubGeometryUtils.getSubIndices(this._subGeometry.indices, this._subGeometry.numVertices, this._indexMappings, indexOffset);\n\n\t\tthis._numIndices = this._indices.count*this._subGeometry.indices.dimensions;\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.count*this._subGeometry.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowSubGeometry();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesDirty = false;\n\t\t\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesDirty)\n\t\t\t\tthis._verticesDirty[key] = true;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = attributesView.count;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = SubGeometryUtils.getSubVertices(attributesView.buffer, this._indexMappings);\n\n\t\tthis._verticesDirty[bufferId] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndices();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesDisposed(event:SubGeometryEvent)\n\t{\n\t\tthis.disposeIndices();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateVertices(event.attributesView);\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesDisposed(event:SubGeometryEvent)\n\t{\n\t\tthis.disposeVertices(event.attributesView);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryVOBase;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\nimport ISubGeometryVOClass\t\t\t= require(\"awayjs-renderergl/lib/vos/ISubGeometryVOClass\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport TriangleSubGeometryVO\t\t= require(\"awayjs-renderergl/lib/vos/TriangleSubGeometryVO\");\nimport LineSubGeometryVO\t\t\t= require(\"awayjs-renderergl/lib/vos/LineSubGeometryVO\");\nimport CurveSubGeometryVO\t\t\t= require(\"awayjs-renderergl/lib/vos/CurveSubGeometryVO\");\n\n/**\n * @class away.pool.SubGeometryVOPool\n */\nclass SubGeometryVOPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static _pool:SubGeometryVOPool;\n\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometryDataClass\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ISubGeometry\n\t */\n\tpublic getItem(subGeometry:SubGeometryBase):SubGeometryVOBase\n\t{\n\t\treturn (this._pool[subGeometry.id] || (this._pool[subGeometry.id] = subGeometry._iAddSubGeometryVO(new (SubGeometryVOPool.getClass(subGeometry))(this, subGeometry))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(subGeometry:SubGeometryBase)\n\t{\n\t\tsubGeometry._iRemoveSubGeometryVO(this._pool[subGeometry.id]);\n\n\t\tdelete this._pool[subGeometry.id];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderPool\n\t */\n\tpublic static getPool():SubGeometryVOPool\n\t{\n\t\treturn (SubGeometryVOPool._pool || (SubGeometryVOPool._pool = new SubGeometryVOPool()));\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subGeometryVOClass:ISubGeometryVOClass)\n\t{\n\t\tSubGeometryVOPool.classPool[subGeometryVOClass.assetClass.assetType] = subGeometryVOClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubGeometryVOClass\n\t{\n\t\treturn SubGeometryVOPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubGeometryVOPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubGeometryVOPool.registerClass(CurveSubGeometryVO);\n\t\tSubGeometryVOPool.registerClass(LineSubGeometryVO);\n\t\tSubGeometryVOPool.registerClass(TriangleSubGeometryVO);\n\t}\n}\n\nexport = SubGeometryVOPool;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ITextureVO\t\t\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\n\n/**\n *\n * @class away.pool.TextureVOBaseBase\n */\nclass TextureVOBase implements ITextureVO\n{\n\tprivate _pool:TextureVOPool;\n\tprivate _texture:TextureBase;\n\n\tpublic _stage:Stage;\n\n\tpublic invalid:boolean;\n\n\tconstructor(pool:TextureVOPool, texture:TextureBase, stage:Stage)\n\t{\n\t\tthis._pool = pool;\n\t\tthis._texture = texture;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this._texture);\n\t\tthis._pool = null;\n\t\tthis._texture = null;\n\t\tthis._stage = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = TextureVOBase;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ITextureVOClass\t\t\t= require(\"awayjs-renderergl/lib/vos/ITextureVOClass\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport Single2DTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/Single2DTextureVO\");\nimport SingleCubeTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/SingleCubeTextureVO\");\n\n/**\n * @class away.pool.TextureVOPool\n */\nclass TextureVOPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic _stage:Stage;\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(texture:TextureBase):TextureVOBase\n\t{\n\t\treturn (this._pool[texture.id] || (this._pool[texture.id] = texture._iAddTextureVO(new (TextureVOPool.getClass(texture))(this, texture, this._stage))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(texture:TextureBase)\n\t{\n\t\ttexture._iRemoveTextureVO(this._pool[texture.id]);\n\n\t\tdelete this._pool[texture.id];\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\tthis._pool[id].dispose();\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(textureVOClass:ITextureVOClass)\n\t{\n\t\tTextureVOPool.classPool[textureVOClass.assetClass.assetType] = textureVOClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(texture:TextureBase):ITextureVOClass\n\t{\n\t\treturn TextureVOPool.classPool[texture.assetType];\n\t}\n\n\tprivate static main = TextureVOPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tTextureVOPool.registerClass(Single2DTextureVO);\n\t\tTextureVOPool.registerClass(SingleCubeTextureVO);\n\t}\n}\n\nexport = TextureVOPool;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\n\n/**\n *\n * @class away.pool.TriangleSubGeometryVO\n */\nclass TriangleSubGeometryVO extends SubGeometryVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _triangleSubGeometry:TriangleSubGeometry;\n\n\tconstructor(pool:SubGeometryVOPool, triangleSubGeometry:TriangleSubGeometry)\n\t{\n\t\tsuper(pool, triangleSubGeometry);\n\n\t\tthis._triangleSubGeometry = triangleSubGeometry;\n\n\t\tthis.invalidateVertices(this._triangleSubGeometry.positions);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.normals);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.tangents);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.uvs);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.secondaryUVs);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.jointIndices);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.jointWeights);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.disposeVertices(this._triangleSubGeometry.positions);\n\t\tthis.disposeVertices(this._triangleSubGeometry.normals);\n\t\tthis.disposeVertices(this._triangleSubGeometry.tangents);\n\t\tthis.disposeVertices(this._triangleSubGeometry.uvs);\n\t\tthis.disposeVertices(this._triangleSubGeometry.secondaryUVs);\n\t\tthis.disposeVertices(this._triangleSubGeometry.jointIndices);\n\t\tthis.disposeVertices(this._triangleSubGeometry.jointWeights);\n\n\t\tthis._triangleSubGeometry = null;\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (shader.uvBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.uvBufferIndex, this._triangleSubGeometry.uvs, stage);\n\n\t\tif (shader.secondaryUVBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.secondaryUVBufferIndex, this._triangleSubGeometry.secondaryUVs, stage);\n\n\t\tif (shader.normalBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.normalBufferIndex, this._triangleSubGeometry.normals, stage);\n\n\t\tif (shader.tangentBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.tangentBufferIndex, this._triangleSubGeometry.tangents, stage);\n\n\t\tif (shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.jointIndexIndex, this._triangleSubGeometry.jointIndices, stage);\n\n\t\tif (shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.jointIndexIndex, this._triangleSubGeometry.jointWeights, stage);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleSubGeometry.positions, stage);\n\n\n\t\tsuper._render(shader, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthis.getIndexBufferVO(stage).draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tstage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\treturn new TriangleSubGeometryVO(this._pool, this._triangleSubGeometry);\n\t}\n}\n\nexport = TriangleSubGeometryVO;"
  ],
  "sourceRoot": ""
}