{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-renderergl/lib/animators/animationsetbase.ts","awayjs-renderergl/lib/animators/animatorbase.ts","awayjs-renderergl/lib/animators/particleanimationset.ts","awayjs-renderergl/lib/animators/particleanimator.ts","awayjs-renderergl/lib/animators/skeletonanimationset.ts","awayjs-renderergl/lib/animators/skeletonanimator.ts","awayjs-renderergl/lib/animators/vertexanimationset.ts","awayjs-renderergl/lib/animators/vertexanimator.ts","awayjs-renderergl/lib/animators/data/animationregistercache.ts","awayjs-renderergl/lib/animators/data/animationsubgeometry.ts","awayjs-renderergl/lib/animators/data/colorsegmentpoint.ts","awayjs-renderergl/lib/animators/data/jointpose.ts","awayjs-renderergl/lib/animators/data/particleanimationdata.ts","awayjs-renderergl/lib/animators/data/particledata.ts","awayjs-renderergl/lib/animators/data/particlepropertiesmode.ts","awayjs-renderergl/lib/animators/data/particleproperties.ts","awayjs-renderergl/lib/animators/data/skeletonjoint.ts","awayjs-renderergl/lib/animators/data/skeletonpose.ts","awayjs-renderergl/lib/animators/data/skeleton.ts","awayjs-renderergl/lib/animators/data/vertexanimationmode.ts","awayjs-renderergl/lib/animators/nodes/animationclipnodebase.ts","awayjs-renderergl/lib/animators/nodes/particleaccelerationnode.ts","awayjs-renderergl/lib/animators/nodes/particlebeziercurvenode.ts","awayjs-renderergl/lib/animators/nodes/particlebillboardnode.ts","awayjs-renderergl/lib/animators/nodes/particlecolornode.ts","awayjs-renderergl/lib/animators/nodes/particlefollownode.ts","awayjs-renderergl/lib/animators/nodes/particleinitialcolornode.ts","awayjs-renderergl/lib/animators/nodes/particlenodebase.ts","awayjs-renderergl/lib/animators/nodes/particleorbitnode.ts","awayjs-renderergl/lib/animators/nodes/particleoscillatornode.ts","awayjs-renderergl/lib/animators/nodes/particlepositionnode.ts","awayjs-renderergl/lib/animators/nodes/particlerotatetoheadingnode.ts","awayjs-renderergl/lib/animators/nodes/particlerotatetopositionnode.ts","awayjs-renderergl/lib/animators/nodes/particlerotationalvelocitynode.ts","awayjs-renderergl/lib/animators/nodes/particlescalenode.ts","awayjs-renderergl/lib/animators/nodes/particlesegmentedcolornode.ts","awayjs-renderergl/lib/animators/nodes/particlespritesheetnode.ts","awayjs-renderergl/lib/animators/nodes/particletimenode.ts","awayjs-renderergl/lib/animators/nodes/particleuvnode.ts","awayjs-renderergl/lib/animators/nodes/particlevelocitynode.ts","awayjs-renderergl/lib/animators/nodes/skeletonbinarylerpnode.ts","awayjs-renderergl/lib/animators/nodes/skeletonclipnode.ts","awayjs-renderergl/lib/animators/nodes/skeletondifferencenode.ts","awayjs-renderergl/lib/animators/nodes/skeletondirectionalnode.ts","awayjs-renderergl/lib/animators/nodes/skeletonnarylerpnode.ts","awayjs-renderergl/lib/animators/nodes/vertexclipnode.ts","awayjs-renderergl/lib/animators/states/animationclipstate.ts","awayjs-renderergl/lib/animators/states/animationstatebase.ts","awayjs-renderergl/lib/animators/states/particleaccelerationstate.ts","awayjs-renderergl/lib/animators/states/particlebeziercurvestate.ts","awayjs-renderergl/lib/animators/states/particlebillboardstate.ts","awayjs-renderergl/lib/animators/states/particlecolorstate.ts","awayjs-renderergl/lib/animators/states/particlefollowstate.ts","awayjs-renderergl/lib/animators/states/particleinitialcolorstate.ts","awayjs-renderergl/lib/animators/states/particleorbitstate.ts","awayjs-renderergl/lib/animators/states/particleoscillatorstate.ts","awayjs-renderergl/lib/animators/states/particlepositionstate.ts","awayjs-renderergl/lib/animators/states/particlerotatetoheadingstate.ts","awayjs-renderergl/lib/animators/states/particlerotatetopositionstate.ts","awayjs-renderergl/lib/animators/states/particlerotationalvelocitystate.ts","awayjs-renderergl/lib/animators/states/particlescalestate.ts","awayjs-renderergl/lib/animators/states/particlesegmentedcolorstate.ts","awayjs-renderergl/lib/animators/states/particlespritesheetstate.ts","awayjs-renderergl/lib/animators/states/particlestatebase.ts","awayjs-renderergl/lib/animators/states/particletimestate.ts","awayjs-renderergl/lib/animators/states/particleuvstate.ts","awayjs-renderergl/lib/animators/states/particlevelocitystate.ts","awayjs-renderergl/lib/animators/states/skeletonbinarylerpstate.ts","awayjs-renderergl/lib/animators/states/skeletonclipstate.ts","awayjs-renderergl/lib/animators/states/skeletondifferencestate.ts","awayjs-renderergl/lib/animators/states/skeletondirectionalstate.ts","awayjs-renderergl/lib/animators/states/skeletonnarylerpstate.ts","awayjs-renderergl/lib/animators/states/vertexclipstate.ts","awayjs-renderergl/lib/animators/transitions/crossfadetransitionnode.ts","awayjs-renderergl/lib/animators/transitions/crossfadetransitionstate.ts","awayjs-renderergl/lib/animators/transitions/crossfadetransition.ts","awayjs-renderergl/lib/base/particlegeometry.ts","awayjs-renderergl/lib/errors/animationseterror.ts","awayjs-renderergl/lib/events/animationstateevent.ts","awayjs-renderergl/lib/events/animatorevent.ts","awayjs-renderergl/lib/events/shadingmethodevent.ts","awayjs-renderergl/lib/managers/rttbuffermanager.ts","awayjs-renderergl/lib/materials/linebasicmaterial.ts","awayjs-renderergl/lib/materials/skyboxmaterial.ts","awayjs-renderergl/lib/materials/stageglmaterialbase.ts","awayjs-renderergl/lib/materials/trianglebasicmaterial.ts","awayjs-renderergl/lib/materials/trianglematerialbase.ts","awayjs-renderergl/lib/materials/trianglematerialmode.ts","awayjs-renderergl/lib/materials/trianglemethodmaterial.ts","awayjs-renderergl/lib/materials/compilation/methodvo.ts","awayjs-renderergl/lib/materials/compilation/registerpool.ts","awayjs-renderergl/lib/materials/compilation/shadercompilerbase.ts","awayjs-renderergl/lib/materials/compilation/shaderlightingcompiler.ts","awayjs-renderergl/lib/materials/compilation/shaderlightingobject.ts","awayjs-renderergl/lib/materials/compilation/shaderobjectbase.ts","awayjs-renderergl/lib/materials/compilation/shaderregistercache.ts","awayjs-renderergl/lib/materials/compilation/shaderregisterdata.ts","awayjs-renderergl/lib/materials/compilation/shaderregisterelement.ts","awayjs-renderergl/lib/materials/methods/ambientbasicmethod.ts","awayjs-renderergl/lib/materials/methods/ambientenvmapmethod.ts","awayjs-renderergl/lib/materials/methods/diffusebasicmethod.ts","awayjs-renderergl/lib/materials/methods/diffusecelmethod.ts","awayjs-renderergl/lib/materials/methods/diffusecompositemethod.ts","awayjs-renderergl/lib/materials/methods/diffusedepthmethod.ts","awayjs-renderergl/lib/materials/methods/diffusegradientmethod.ts","awayjs-renderergl/lib/materials/methods/diffuselightmapmethod.ts","awayjs-renderergl/lib/materials/methods/diffusesubsurfacemethod.ts","awayjs-renderergl/lib/materials/methods/diffusewrapmethod.ts","awayjs-renderergl/lib/materials/methods/effectalphamaskmethod.ts","awayjs-renderergl/lib/materials/methods/effectcolormatrixmethod.ts","awayjs-renderergl/lib/materials/methods/effectcolortransformmethod.ts","awayjs-renderergl/lib/materials/methods/effectenvmapmethod.ts","awayjs-renderergl/lib/materials/methods/effectfogmethod.ts","awayjs-renderergl/lib/materials/methods/effectfresnelenvmapmethod.ts","awayjs-renderergl/lib/materials/methods/effectlightmapmethod.ts","awayjs-renderergl/lib/materials/methods/effectmethodbase.ts","awayjs-renderergl/lib/materials/methods/effectrefractionenvmapmethod.ts","awayjs-renderergl/lib/materials/methods/effectrimlightmethod.ts","awayjs-renderergl/lib/materials/methods/lightingmethodbase.ts","awayjs-renderergl/lib/materials/methods/normalbasicmethod.ts","awayjs-renderergl/lib/materials/methods/normalheightmapmethod.ts","awayjs-renderergl/lib/materials/methods/normalsimplewatermethod.ts","awayjs-renderergl/lib/materials/methods/shadingmethodbase.ts","awayjs-renderergl/lib/materials/methods/shadowcascademethod.ts","awayjs-renderergl/lib/materials/methods/shadowditheredmethod.ts","awayjs-renderergl/lib/materials/methods/shadowfilteredmethod.ts","awayjs-renderergl/lib/materials/methods/shadowhardmethod.ts","awayjs-renderergl/lib/materials/methods/shadowmapmethodbase.ts","awayjs-renderergl/lib/materials/methods/shadowmethodbase.ts","awayjs-renderergl/lib/materials/methods/shadownearmethod.ts","awayjs-renderergl/lib/materials/methods/shadowsoftmethod.ts","awayjs-renderergl/lib/materials/methods/specularanisotropicmethod.ts","awayjs-renderergl/lib/materials/methods/specularbasicmethod.ts","awayjs-renderergl/lib/materials/methods/specularcelmethod.ts","awayjs-renderergl/lib/materials/methods/specularcompositemethod.ts","awayjs-renderergl/lib/materials/methods/specularfresnelmethod.ts","awayjs-renderergl/lib/materials/methods/specularphongmethod.ts","awayjs-renderergl/lib/materials/passes/depthmappass.ts","awayjs-renderergl/lib/materials/passes/distancemappass.ts","awayjs-renderergl/lib/materials/passes/linebasicpass.ts","awayjs-renderergl/lib/materials/passes/materialpassbase.ts","awayjs-renderergl/lib/materials/passes/materialpassmode.ts","awayjs-renderergl/lib/materials/passes/singleobjectdepthpass.ts","awayjs-renderergl/lib/materials/passes/skyboxpass.ts","awayjs-renderergl/lib/materials/passes/trianglebasicpass.ts","awayjs-renderergl/lib/materials/passes/trianglemethodpass.ts","awayjs-renderergl/lib/materials/utils/defaultmaterialmanager.ts","awayjs-renderergl/lib/materials/utils/shadercompilerhelper.ts","awayjs-renderergl/lib/parsers/awdparser.ts","awayjs-renderergl/lib/parsers/md2parser.ts","awayjs-renderergl/lib/parsers/md5animparser.ts","awayjs-renderergl/lib/parsers/md5meshparser.ts","awayjs-renderergl/lib/parsers/max3dsparser.ts","awayjs-renderergl/lib/parsers/objparser.ts","awayjs-renderergl/lib/parsers/parsers.ts","awayjs-renderergl/lib/parsers/data/awdblock.ts","awayjs-renderergl/lib/parsers/data/awdproperties.ts","awayjs-renderergl/lib/parsers/data/baseframedata.ts","awayjs-renderergl/lib/parsers/data/bitflags.ts","awayjs-renderergl/lib/parsers/data/boundsdata.ts","awayjs-renderergl/lib/parsers/data/facevo.ts","awayjs-renderergl/lib/parsers/data/framedata.ts","awayjs-renderergl/lib/parsers/data/hierarchydata.ts","awayjs-renderergl/lib/parsers/data/materialvo.ts","awayjs-renderergl/lib/parsers/data/objectvo.ts","awayjs-renderergl/lib/parsers/data/texturevo.ts","awayjs-renderergl/lib/parsers/data/vertexvo.ts","awayjs-renderergl/lib/pick/jspickingcollider.ts","awayjs-renderergl/lib/pick/pickingcolliderbase.ts","awayjs-renderergl/lib/pick/shaderpicker.ts","awayjs-renderergl/lib/pool/billboardrenderable.ts","awayjs-renderergl/lib/pool/linesubmeshrenderable.ts","awayjs-renderergl/lib/pool/materialdatapool.ts","awayjs-renderergl/lib/pool/materialdata.ts","awayjs-renderergl/lib/pool/materialpassdatapool.ts","awayjs-renderergl/lib/pool/materialpassdata.ts","awayjs-renderergl/lib/pool/renderablebase.ts","awayjs-renderergl/lib/pool/skyboxrenderable.ts","awayjs-renderergl/lib/pool/trianglesubmeshrenderable.ts","awayjs-renderergl/lib/render/defaultrenderer.ts","awayjs-renderergl/lib/render/depthrenderer.ts","awayjs-renderergl/lib/render/filter3drenderer.ts","awayjs-renderergl/lib/render/rendererbase.ts","awayjs-renderergl/lib/tools/commands/merge.ts","awayjs-renderergl/lib/tools/data/particlegeometrytransform.ts","awayjs-renderergl/lib/tools/helpers/particlegeometryhelper.ts","awayjs-renderergl/lib/utils/perspectivematrix3d.ts"],"names":[],"mappings":"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","file":"awayjs-renderergl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends NamedAssetBase implements IAsset\n{\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_SET;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends NamedAssetBase implements IAnimator\n{\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATOR;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilation at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilation\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationSubGeometries:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache = new AnimationRegisterCache(shaderObject.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shaderObject.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shaderObject.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shaderObject.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shaderObject.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shaderObject.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shaderObject.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shaderObject.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shaderObject.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shaderObject.uvSource, shaderObject.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shaderObject, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\n\t{\n\t\tvar mesh:Mesh = subMesh.parentMesh;\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\n\t\tif (animationSubGeometry)\n\t\t\treturn animationSubGeometry;\n\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\n\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationSubGeometry:AnimationSubGeometry;\n\t\tvar newAnimationSubGeometry:boolean = false;\n\t\tvar subGeometry:SubGeometryBase;\n\t\tvar subMesh:ISubMesh;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\t\t\tsubGeometry = subMesh.subGeometry;\n\t\t\tif (mesh.shareAnimationGeometry) {\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\n\n\t\t\t\tif (animationSubGeometry)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\n\n\t\t\tif (mesh.shareAnimationGeometry)\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\n\t\t\telse\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\n\n\t\t\tnewAnimationSubGeometry = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationSubGeometry)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationSubGeometry\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;","import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGeometry\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!subMesh)\n\t\t\tthrow(new Error(\"Must be subMesh\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\n\n\t\t(<IContextStageGL> stage.context).setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\t(<IContextStageGL> stage.context).setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator subGeometry\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shaderObject.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shaderObject.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shaderObject.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shaderObject.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\")\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Array<number>;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedSubGeometry:Object = new Object();\n\tprivate _morphedSubGeometryDirty:Object = new Object();\n\tprivate _condensedMatrices:Array<number>;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Array<number>\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\n\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp, subGeometry.numCondensedJoints);\n\t\t\t(<IContextStageGL> stage.context).setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, subGeometry.numCondensedJoints*3);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\t(<IContextStageGL> stage.context).setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\t(<IContextStageGL> stage.context).activateBuffer(vertexStreamOffset, renderable.getVertexData(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.JOINT_INDEX_FORMAT);\n\t\t(<IContextStageGL> stage.context).activateBuffer(vertexStreamOffset + 1, renderable.getVertexData(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.JOINT_WEIGHT_FORMAT);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shaderObject.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number> /*uint*/, numJoints:number /*uint*/)\n\t{\n\t\tvar i:number /*uint*/ = 0, j:number /*uint*/ = 0;\n\t\tvar len:number /*uint*/;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Array<number>();\n\n\t\tdo {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*4;\n\t\t\tlen = srcIndex + 12;\n\t\t\t// copy into condensed\n\t\t\twhile (srcIndex < len)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t} while (++i < numJoints);\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Array<number>;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceSubGeometry;\n\n\t\tvar targetSubGeometry:TriangleSubGeometry;\n\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetSubGeometry;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\n\n\t\tvar sourcePositions:Array<number> = sourceSubGeometry.positions;\n\t\tvar sourceNormals:Array<number> = sourceSubGeometry.vertexNormals;\n\t\tvar sourceTangents:Array<number> = sourceSubGeometry.vertexTangents;\n\n\t\tvar jointIndices:Array<number> = sourceSubGeometry.jointIndices;\n\t\tvar jointWeights:Array<number> = sourceSubGeometry.jointWeights;\n\n\t\tvar targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\n\n\t\tvar targetPositions:Array<number> = targetSubGeometry.positions;\n\t\tvar targetNormals:Array<number> = targetSubGeometry.vertexNormals;\n\t\tvar targetTangents:Array<number> = targetSubGeometry.vertexTangents;\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar len:number /*int*/ = sourcePositions.length;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < len) {\n\t\t\tvertX = sourcePositions[index];\n\t\t\tvertY = sourcePositions[index + 1];\n\t\t\tvertZ = sourcePositions[index + 2];\n\t\t\tnormX = sourceNormals[index];\n\t\t\tnormY = sourceNormals[index + 1];\n\t\t\tnormZ = sourceNormals[index + 2];\n\t\t\ttangX = sourceTangents[index];\n\t\t\ttangY = sourceTangents[index + 1];\n\t\t\ttangZ = sourceTangents[index + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[index] = vx;\n\t\t\ttargetPositions[index + 1] = vy;\n\t\t\ttargetPositions[index + 2] = vz;\n\t\t\ttargetNormals[index] = nx;\n\t\t\ttargetNormals[index + 1] = ny;\n\t\t\ttargetNormals[index + 2] = nz;\n\t\t\ttargetTangents[index] = tx;\n\t\t\ttargetTangents[index + 1] = ty;\n\t\t\ttargetTangents[index + 2] = tz;\n\n\t\t\tindex += 3;\n\t\t}\n\n\t\ttargetSubGeometry.updatePositions(targetPositions);\n\t\ttargetSubGeometry.updateVertexNormals(targetNormals);\n\t\ttargetSubGeometry.updateVertexTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).updateIndices(subGeometry.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\n\n\t\tswitch(event.dataType) {\n\t\t\tcase TriangleSubGeometry.UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.uvs);\n\t\t\tcase TriangleSubGeometry.SECONDARY_UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.secondaryUVs);\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shaderObject);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shaderObject);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shaderObject.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shaderObject.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shaderObject.animationTargetRegisters[0] + \", \" + shaderObject.animatableAttributes[0] + \"\\n\";\n\t\tif (shaderObject.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[1] + \", \" + shaderObject.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shaderObject.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport VertexDataPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shaderObject, renderable, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\t\t// this type of animation can only be SubMesh\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\t(<IContextStageGL> stage.context).setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tfor (; i < len; ++i) {\n\t\t\tsubGeom = this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\n\n\t\t\t(<IContextStageGL> stage.context).activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.POSITION_DATA), subGeom.getOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\tif (shaderObject.normalDependencies > 0)\n\t\t\t\t(<IContextStageGL> stage.context).activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.NORMAL_DATA), subGeom.getOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t}\n\t}\n\n\tprivate setNullPose(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t(<IContextStageGL> stage.context).setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\t(<IContextStageGL> stage.context).activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\t\tif (shaderObject.normalDependencies > 0)\n\t\t\t\t\t(<IContextStageGL> stage.context).activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t}\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\n\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = VertexAnimator;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Array<number> = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextStageGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationSubGeometry\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextStageGL> = new Array<IContextStageGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationSubGeometry;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;","import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;","import TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic subGeometry:TriangleSubGeometry;\n}\n\nexport = ParticleData","/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;","/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;","/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Array<number>;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;","import AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends NamedAssetBase implements IAsset\n{\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKELETON_POSE;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;","import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends NamedAssetBase implements IAsset\n{\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKELETON;\n\t}\n}\n\nexport = Skeleton;","/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Geometry>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;","import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;","import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;","import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationSubGeometry.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Geometry>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGeometry:Geometry;\n\tprivate _nextGeometry:Geometry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGeometry;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGeometry;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGeometry = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;","import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;","import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * @class away.base.ParticleGeometry\n */\nclass ParticleGeometry extends Geometry\n{\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n}\n\nexport = ParticleGeometry;","import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends Event\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = TextureUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = TextureUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextStageGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport LineBasicPass\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/LineBasicPass\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * LineMaterial is a material exclusively used to render wireframe objects\n *\n * @see away.entities.Lines\n */\nclass LineBasicMaterial extends StageGLMaterialBase\n{\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number;\n\n\tprivate _screenPass:LineBasicPass;\n\n\t/**\n\t * Creates a new LineMaterial object.\n\t *\n\t * @param thickness The thickness of the wireframe lines.\n\t */\n\tconstructor(thickness:number = 1.25)\n\t{\n\t\tsuper();\n\n\t\tthis._thickness = thickness;\n\n\t\tthis.bothSides = true;\n\n\t\tthis._pAddScreenPass(this._screenPass = new LineBasicPass());\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t// test if behind camera near plane\n\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t// n = plane normal (0,0,-1)\n\t\t\t// D = Q1 - Q0\n\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\" + // transform Q0 to clip space\n\n\t\t\t// interpolate color\n\t\t\t\"mov v0, va3\t\t\t\t\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivatePass(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivatePass(pass, renderer, camera);\n\n\t\tvar context:IContextStageGL = renderer.context;\n\t\tvar stage:Stage = renderer.stage;\n\n\t\tthis._constants[0] = this._thickness/((stage.scissorRect)? Math.min(stage.scissorRect.width, stage.scissorRect.height) : Math.min(stage.width, stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineBasicMaterial.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineBasicMaterial.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(LineSubGeometry.START_POSITION_DATA), renderable.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tcontext.activateBuffer(1, renderable.getVertexData(LineSubGeometry.END_POSITION_DATA), renderable.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tcontext.activateBuffer(2, renderable.getVertexData(LineSubGeometry.THICKNESS_DATA), renderable.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\t\tcontext.activateBuffer(3, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\n\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = LineBasicMaterial;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport SkyboxPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/SkyboxPass\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * SkyboxMaterial is a material exclusively used to render skyboxes\n *\n * @see away3d.primitives.Skybox\n */\nclass SkyboxMaterial extends StageGLMaterialBase\n{\n\tprivate _vertexData:Array<number>;\n\tprivate _cubeMap:CubeTextureBase;\n\tprivate _skyboxPass:SkyboxPass;\n\n\t/**\n\t * Creates a new SkyboxMaterial object.\n\t * @param cubeMap The CubeMap to use as the skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase, smooth:boolean = true, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._cubeMap = cubeMap;\n\t\tthis._pAddScreenPass(this._skyboxPass = new SkyboxPass());\n\n\t\tthis._vertexData = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\n\t}\n\n\t/**\n\t * The cube texture to use as the skybox.\n\t */\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.hasMipmaps != this._cubeMap.hasMipmaps || value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidatePasses();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\" +\n\t\t\t\"mov v0, va0\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//var cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\t//this._texturesIndex = cubeMapReg.index;\n\n\t\t//ShaderCompilerHelper.getTexCubeSampleCode(sharedRegisters.shadedTarget, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar mip:string = \",mipnone\";\n\n\t\tif (this._cubeMap.hasMipmaps)\n\t\t\tmip = \",miplinear\";\n\n\t\treturn \"tex ft0, v0, fs0 <cube,\" + ShaderCompilerHelper.getFormatStringForTexture(this._cubeMap) + \"linear,clamp\" + mip + \">\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivatePass(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivatePass(pass, renderer, camera);\n\n\t\tvar context:IContextStageGL = renderer.context;\n\t\tcontext.setSamplerStateAt(0, ContextGLWrapMode.CLAMP, ContextGLTextureFilter.LINEAR, this._cubeMap.hasMipmaps? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\tcontext.activateCubeTexture(0, this._cubeMap);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexData[0] = pos.x;\n\t\tthis._vertexData[1] = pos.y;\n\t\tthis._vertexData[2] = pos.z;\n\t\tthis._vertexData[4] = this._vertexData[5] = this._vertexData[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexData, 2);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = SkyboxMaterial;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\n\nclass StageGLMaterialBase extends MaterialBase\n{\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = StageGLMaterialBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport TriangleMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialBase\");\nimport TriangleBasicPass\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/TriangleBasicPass\");\n\n/**\n * TriangleMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass TriangleBasicMaterial extends TriangleMaterialBase\n{\n\tprivate _screenPass:TriangleBasicPass;\n\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new TriangleMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._screenPass = new TriangleBasicPass();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iUpdateMaterial()\n\t{\n\t\tvar passesInvalid:boolean;\n\n\t\tif (this._pScreenPassesInvalid) {\n\t\t\tthis.pUpdateScreenPasses();\n\t\t\tpassesInvalid = true;\n\t\t}\n\n\t\tif (passesInvalid) {\n\t\t\tthis._pClearScreenPasses();\n\n\t\t\tthis._pAddScreenPass(this._screenPass);\n\t\t}\n\t}\n\n\t/**\n\t * Updates screen passes when they were found to be invalid.\n\t */\n\tpublic pUpdateScreenPasses()\n\t{\n\t\tthis.initPasses();\n\n\t\tthis.setBlendAndCompareModes();\n\n\t\tthis._pScreenPassesInvalid = false;\n\t}\n\n\t/**\n\t * Initializes all the passes and their dependent passes.\n\t */\n\tprivate initPasses()\n\t{\n\t\t//\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tthis._pRequiresBlending = (this._pBlendMode != BlendMode.NORMAL || this._alphaBlending || this._alpha < 1);\n\t\tthis._screenPass.depthCompareMode = this._depthCompareMode;\n\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\tthis._screenPass.setBlendMode((this._pBlendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._pBlendMode);\n\t\tthis._screenPass.forceSeparateMVP = false;\n\t}\n}\n\nexport = TriangleBasicMaterial;","﻿import Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleMaterialBase extends StageGLMaterialBase\n{\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shaderObject.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.sceneMatrixIndex >= 0) {\n\t\t\trenderable.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shaderObject.vertexConstantData, shaderObject.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shaderObject.vertexConstantData, shaderObject.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shaderObject.vertexConstantData, shaderObject.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shaderObject.vertexConstantData, shaderObject.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shaderObject.fragmentConstantData, shaderObject.numUsedFragmentConstants);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = TriangleMaterialBase;","class TriangleMaterialMode\n{\n\t/**\n\t *\n\t */\n\tpublic static SINGLE_PASS:string = \"singlePass\";\n\n\t/**\n\t *\n\t */\n\tpublic static MULTI_PASS:string = \"multiPass\";\n}\n\nexport = TriangleMaterialMode;","﻿import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport TriangleMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialBase\");\nimport TriangleMaterialMode\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialMode\");\nimport AmbientBasicMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport NormalBasicMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassMode\");\nimport TriangleMethodPass\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/TriangleMethodPass\");\n\n/**\n * TriangleMethodMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass TriangleMethodMaterial extends TriangleMaterialBase\n{\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _materialMode:string;\n\tprivate _casterLightPass:TriangleMethodPass;\n\tprivate _nonCasterLightPasses:Array<TriangleMethodPass>;\n\tprivate _screenPass:TriangleMethodPass;\n\n\tprivate _ambientMethod:AmbientBasicMethod = new AmbientBasicMethod();\n\tprivate _shadowMethod:ShadowMapMethodBase;\n\tprivate _diffuseMethod:DiffuseBasicMethod = new DiffuseBasicMethod();\n\tprivate _normalMethod:NormalBasicMethod = new NormalBasicMethod();\n\tprivate _specularMethod:SpecularBasicMethod = new SpecularBasicMethod();\n\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new TriangleMethodMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = TriangleMaterialMode.SINGLE_PASS;\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = (textureColor == null)? 0xFFFFFF : Number(textureColor);\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\n\tpublic get materialMode():string\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(value:string)\n\t{\n\t\tif (this._materialMode == value)\n\t\t\treturn;\n\n\t\tthis._materialMode = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._screenPass.colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._screenPass.colorTransform = value;\n\t}\n\n\t/**\n\t * The texture object to use for the ambient colour.\n\t */\n\tpublic get diffuseTexture():Texture2DBase\n\t{\n\t\treturn this._diffuseMethod.texture;\n\t}\n\n\tpublic set diffuseTexture(value:Texture2DBase)\n\t{\n\t\tthis._diffuseMethod.texture = value;\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._ambientMethod;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._ambientMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._ambientMethod)\n\t\t\tvalue.copyFrom(this._ambientMethod);\n\n\t\tthis._ambientMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._shadowMethod;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._shadowMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._shadowMethod)\n\t\t\tvalue.copyFrom(this._shadowMethod);\n\n\t\tthis._shadowMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._diffuseMethod;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._diffuseMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._diffuseMethod)\n\t\t\tvalue.copyFrom(this._diffuseMethod);\n\n\t\tthis._diffuseMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._specularMethod;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._specularMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._specularMethod)\n\t\t\tvalue.copyFrom(this._specularMethod);\n\n\t\tthis._specularMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._normalMethod;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._normalMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._normalMethod)\n\t\t\tvalue.copyFrom(this._normalMethod);\n\n\t\tthis._normalMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new TriangleMethodPass();\n\n\t\tthis._screenPass.addEffectMethod(method);\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The number of \"effect\" methods added to the material.\n\t */\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._screenPass? this._screenPass.numEffectMethods : 0;\n\t}\n\n\t/**\n\t * Queries whether a given effect method was added to the material.\n\t *\n\t * @param method The method to be queried.\n\t * @return true if the method was added to the material, false otherwise.\n\t */\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\n\t{\n\t\treturn this._screenPass? this._screenPass.hasEffectMethod(method) : false;\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\tif (this._screenPass == null)\n\t\t\treturn null;\n\n\t\treturn this._screenPass.getEffectMethodAt(index);\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new TriangleMethodPass();\n\n\t\tthis._screenPass.addEffectMethodAt(method, index);\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tif (this._screenPass == null)\n\t\t\treturn;\n\n\t\tthis._screenPass.removeEffectMethod(method);\n\n\t\t// reconsider\n\t\tif (this._screenPass.numEffectMethods == 0)\n\t\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The normal map to modulate the direction of the surface for each texel. The default normal method expects\n\t * tangent-space normal maps, but others could expect object-space maps.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._normalMethod.normalMap;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tthis._normalMethod.normalMap = value;\n\t}\n\n\t/**\n\t * A specular map that defines the strength of specular reflections for each texel in the red channel,\n\t * and the gloss factor in the green channel. You can use SpecularBitmapTexture if you want to easily set\n\t * specular and gloss maps from grayscale images, but correctly authored images are preferred.\n\t */\n\tpublic get specularMap():Texture2DBase\n\t{\n\t\treturn this._specularMethod.texture;\n\t}\n\n\tpublic set specularMap(value:Texture2DBase)\n\t{\n\t\tthis._specularMethod.texture = value;\n\t}\n\n\t/**\n\t * The glossiness of the material (sharpness of the specular highlight).\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._specularMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._specularMethod.gloss = value;\n\t}\n\n\t/**\n\t * The strength of the ambient reflection.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambientMethod.ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tthis._ambientMethod.ambient = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular reflection.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specularMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._specularMethod.specular = value;\n\t}\n\n\t/**\n\t * The colour of the ambient reflection.\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._diffuseMethod.ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._diffuseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * The colour of the diffuse reflection.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseMethod.diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis._diffuseMethod.diffuseColor = value;\n\t}\n\n\t/**\n\t * The colour of the specular reflection.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularMethod.specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tthis._specularMethod.specularColor = value;\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iUpdateMaterial()\n\t{\n\t\tif (this._pScreenPassesInvalid) {\n\t\t\t//Updates screen passes when they were found to be invalid.\n\t\t\tthis._pScreenPassesInvalid = false;\n\n\t\t\tthis.initPasses();\n\n\t\t\tthis.setBlendAndCompareModes();\n\n\t\t\tthis._pClearScreenPasses();\n\n\t\t\tif (this._materialMode == TriangleMaterialMode.MULTI_PASS) {\n\t\t\t\tif (this._casterLightPass)\n\t\t\t\t\tthis._pAddScreenPass(this._casterLightPass);\n\n\t\t\t\tif (this._nonCasterLightPasses)\n\t\t\t\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\t\t\t\tthis._pAddScreenPass(this._nonCasterLightPasses[i]);\n\t\t\t}\n\n\t\t\tif (this._screenPass)\n\t\t\t\tthis._pAddScreenPass(this._screenPass);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes all the passes and their dependent passes.\n\t */\n\tprivate initPasses()\n\t{\n\t\t// let the effects pass handle everything if there are no lights, when there are effect methods applied\n\t\t// after shading, or when the material mode is single pass.\n\t\tif (this.numLights == 0 || this.numEffectMethods > 0 || this._materialMode == TriangleMaterialMode.SINGLE_PASS)\n\t\t\tthis.initEffectPass();\n\t\telse if (this._screenPass)\n\t\t\tthis.removeEffectPass();\n\n\t\t// only use a caster light pass if shadows need to be rendered\n\t\tif (this._shadowMethod && this._materialMode == TriangleMaterialMode.MULTI_PASS)\n\t\t\tthis.initCasterLightPass();\n\t\telse if (this._casterLightPass)\n\t\t\tthis.removeCasterLightPass();\n\n\t\t// only use non caster light passes if there are lights that don't cast\n\t\tif (this.numNonCasters > 0 && this._materialMode == TriangleMaterialMode.MULTI_PASS)\n\t\t\tthis.initNonCasterLightPasses();\n\t\telse if (this._nonCasterLightPasses)\n\t\t\tthis.removeNonCasterLightPasses();\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tvar forceSeparateMVP:boolean = Boolean(this._casterLightPass || this._screenPass);\n\n\t\t// caster light pass is always first if it exists, hence it uses normal blending\n\t\tif (this._casterLightPass) {\n\t\t\tthis._casterLightPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\tthis._casterLightPass.setBlendMode(BlendMode.NORMAL);\n\t\t\tthis._casterLightPass.depthCompareMode = this._depthCompareMode;\n\t\t}\n\n\t\tif (this._nonCasterLightPasses) {\n\t\t\tvar firstAdditiveIndex:number = 0;\n\n\t\t\t// if there's no caster light pass, the first non caster light pass will be the first\n\t\t\t// and should use normal blending\n\t\t\tif (!this._casterLightPass) {\n\t\t\t\tthis._nonCasterLightPasses[0].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[0].setBlendMode(BlendMode.NORMAL);\n\t\t\t\tthis._nonCasterLightPasses[0].depthCompareMode = this._depthCompareMode;\n\t\t\t\tfirstAdditiveIndex = 1;\n\t\t\t}\n\n\t\t\t// all lighting passes following the first light pass should use additive blending\n\t\t\tfor (var i:number = firstAdditiveIndex; i < this._nonCasterLightPasses.length; ++i) {\n\t\t\t\tthis._nonCasterLightPasses[i].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[i].setBlendMode(BlendMode.ADD);\n\t\t\t\tthis._nonCasterLightPasses[i].depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t}\n\t\t}\n\n\t\tif (this._casterLightPass || this._nonCasterLightPasses) {\n\t\t\t//cannot be blended by blendmode property if multipass enabled\n\t\t\tthis._pRequiresBlending = false;\n\n\t\t\t// there are light passes, so this should be blended in\n\t\t\tif (this._screenPass) {\n\t\t\t\tthis._screenPass.passMode = MaterialPassMode.EFFECTS;\n\t\t\t\tthis._screenPass.depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t\tthis._screenPass.setBlendMode(BlendMode.LAYER);\n\t\t\t\tthis._screenPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\t}\n\n\t\t} else if (this._screenPass) {\n\t\t\tthis._pRequiresBlending = (this._pBlendMode != BlendMode.NORMAL || this._alphaBlending || (this._colorTransform && this._colorTransform.alphaMultiplier < 1));\n\t\t\t// effects pass is the only pass, so it should just blend normally\n\t\t\tthis._screenPass.passMode = MaterialPassMode.SUPER_SHADER;\n\t\t\tthis._screenPass.depthCompareMode = this._depthCompareMode;\n\t\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\t\tthis._screenPass.colorTransform = this._colorTransform;\n\t\t\tthis._screenPass.setBlendMode((this._pBlendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._pBlendMode);\n\t\t\tthis._screenPass.forceSeparateMVP = false;\n\t\t}\n\t}\n\n\tprivate initCasterLightPass()\n\t{\n\n\t\tif (this._casterLightPass == null)\n\t\t\tthis._casterLightPass = new TriangleMethodPass(MaterialPassMode.LIGHTING);\n\n\t\tthis._casterLightPass.lightPicker = new StaticLightPicker([this._shadowMethod.castingLight]);\n\t\tthis._casterLightPass.shadowMethod = this._shadowMethod;\n\t\tthis._casterLightPass.diffuseMethod = this._diffuseMethod;\n\t\tthis._casterLightPass.ambientMethod = this._ambientMethod;\n\t\tthis._casterLightPass.normalMethod = this._normalMethod;\n\t\tthis._casterLightPass.specularMethod = this._specularMethod;\n\t}\n\n\tprivate removeCasterLightPass()\n\t{\n\t\tthis._casterLightPass.dispose();\n\t\tthis._pRemoveScreenPass(this._casterLightPass);\n\t\tthis._casterLightPass = null;\n\t}\n\n\tprivate initNonCasterLightPasses()\n\t{\n\t\tthis.removeNonCasterLightPasses();\n\t\tvar pass:TriangleMethodPass;\n\t\tvar numDirLights:number = this._pLightPicker.numDirectionalLights;\n\t\tvar numPointLights:number = this._pLightPicker.numPointLights;\n\t\tvar numLightProbes:number = this._pLightPicker.numLightProbes;\n\t\tvar dirLightOffset:number = 0;\n\t\tvar pointLightOffset:number = 0;\n\t\tvar probeOffset:number = 0;\n\n\t\tif (!this._casterLightPass) {\n\t\t\tnumDirLights += this._pLightPicker.numCastingDirectionalLights;\n\t\t\tnumPointLights += this._pLightPicker.numCastingPointLights;\n\t\t}\n\n\t\tthis._nonCasterLightPasses = new Array<TriangleMethodPass>();\n\n\t\twhile (dirLightOffset < numDirLights || pointLightOffset < numPointLights || probeOffset < numLightProbes) {\n\t\t\tpass = new TriangleMethodPass(MaterialPassMode.LIGHTING);\n\t\t\tpass.includeCasters = this._shadowMethod == null;\n\t\t\tpass.directionalLightsOffset = dirLightOffset;\n\t\t\tpass.pointLightsOffset = pointLightOffset;\n\t\t\tpass.lightProbesOffset = probeOffset;\n\t\t\tpass.lightPicker = this._pLightPicker;\n\t\t\tpass.diffuseMethod = this._diffuseMethod;\n\t\t\tpass.ambientMethod = this._ambientMethod;\n\t\t\tpass.normalMethod = this._normalMethod;\n\t\t\tpass.specularMethod = this._specularMethod;\n\t\t\tthis._nonCasterLightPasses.push(pass);\n\n\t\t\tdirLightOffset += pass.iNumDirectionalLights;\n\t\t\tpointLightOffset += pass.iNumPointLights;\n\t\t\tprobeOffset += pass.iNumLightProbes;\n\t\t}\n\t}\n\n\tprivate removeNonCasterLightPasses()\n\t{\n\t\tif (!this._nonCasterLightPasses)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\tthis._pRemoveScreenPass(this._nonCasterLightPasses[i]);\n\n\t\tthis._nonCasterLightPasses = null;\n\t}\n\n\tprivate removeEffectPass()\n\t{\n\t\tif (this._screenPass.ambientMethod != this._ambientMethod)\n\t\t\tthis._screenPass.ambientMethod.dispose();\n\n\t\tif (this._screenPass.diffuseMethod != this._diffuseMethod)\n\t\t\tthis._screenPass.diffuseMethod.dispose();\n\n\t\tif (this._screenPass.specularMethod != this._specularMethod)\n\t\t\tthis._screenPass.specularMethod.dispose();\n\n\t\tif (this._screenPass.normalMethod != this._normalMethod)\n\t\t\tthis._screenPass.normalMethod.dispose();\n\n\t\tthis._pRemoveScreenPass(this._screenPass);\n\t\tthis._screenPass = null;\n\t}\n\n\tprivate initEffectPass()\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new TriangleMethodPass();\n\n\t\tif (this._materialMode == TriangleMaterialMode.SINGLE_PASS) {\n\t\t\tthis._screenPass.ambientMethod = this._ambientMethod;\n\t\t\tthis._screenPass.diffuseMethod = this._diffuseMethod;\n\t\t\tthis._screenPass.specularMethod = this._specularMethod;\n\t\t\tthis._screenPass.normalMethod = this._normalMethod;\n\t\t\tthis._screenPass.shadowMethod = this._shadowMethod;\n\t\t} else if (this._materialMode == TriangleMaterialMode.MULTI_PASS) {\n\t\t\tif (this.numLights == 0) {\n\t\t\t\tthis._screenPass.ambientMethod = this._ambientMethod;\n\t\t\t} else {\n\t\t\t\tthis._screenPass.ambientMethod = null;\n\t\t\t}\n\n\t\t\tthis._screenPass.preserveAlpha = false;\n\t\t\tthis._screenPass.normalMethod = this._normalMethod;\n\t\t}\n\t}\n\n\t/**\n\t * The maximum total number of lights provided by the light picker.\n\t */\n\tprivate get numLights():number\n\t{\n\t\treturn this._pLightPicker? this._pLightPicker.numLightProbes + this._pLightPicker.numDirectionalLights + this._pLightPicker.numPointLights + this._pLightPicker.numCastingDirectionalLights + this._pLightPicker.numCastingPointLights : 0;\n\t}\n\n\t/**\n\t * The amount of lights that don't cast shadows.\n\t */\n\tprivate get numNonCasters():number\n\t{\n\t\treturn this._pLightPicker? this._pLightPicker.numLightProbes + this._pLightPicker.numDirectionalLights + this._pLightPicker.numPointLights : 0;\n\t}\n}\n\nexport = TriangleMethodMaterial;","import ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * MethodVO contains data for a given shader object for the use within a single material.\n * This allows shader methods to be shared across materials while their non-public state differs.\n */\nclass MethodVO\n{\n\tpublic useMethod:boolean = true;\n\n\tpublic method:ShadingMethodBase;\n\n\t// public register indices\n\tpublic texturesIndex:number;\n\tpublic secondaryTexturesIndex:number; // sometimes needed for composites\n\tpublic vertexConstantsIndex:number;\n\tpublic secondaryVertexConstantsIndex:number; // sometimes needed for composites\n\tpublic fragmentConstantsIndex:number;\n\tpublic secondaryFragmentConstantsIndex:number; // sometimes needed for composites\n\n\t// internal stuff for the material to know before assembling code\n\tpublic needsProjection:boolean;\n\tpublic needsView:boolean;\n\tpublic needsNormals:boolean;\n\tpublic needsTangents:boolean;\n\tpublic needsUV:boolean;\n\tpublic needsSecondaryUV:boolean;\n\tpublic needsGlobalVertexPos:boolean;\n\tpublic needsGlobalFragmentPos:boolean;\n\n\tpublic usesTexture:boolean;\n\n\t/**\n\t * Creates a new MethodVO object.\n\t */\n\tconstructor(method:ShadingMethodBase)\n\t{\n\t\tthis.method = method;\n\t}\n\n\t/**\n\t * Resets the values of the value object to their \"unused\" state.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.method.iReset();\n\n\t\tthis.texturesIndex = -1;\n\t\tthis.vertexConstantsIndex = -1;\n\t\tthis.fragmentConstantsIndex = -1;\n\n\t\tthis.needsProjection = false;\n\t\tthis.needsView = false;\n\t\tthis.needsNormals = false;\n\t\tthis.needsTangents = false;\n\t\tthis.needsUV = false;\n\t\tthis.needsSecondaryUV = false;\n\t\tthis.needsGlobalVertexPos = false;\n\t\tthis.needsGlobalFragmentPos = false;\n\t}\n}\n\nexport = MethodVO;\n","import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilation process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n","import AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport IMaterialPassStageGL\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/IMaterialPassStageGL\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassMode\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderCompilerBase\n{\n\tpublic _pShaderObject:ShaderObjectBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pMaterialPass:IMaterialPassStageGL;\n\tpublic _pMaterial:StageGLMaterialBase;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\tpublic _pProfile:string;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(material:StageGLMaterialBase, materialPass:IMaterialPassStageGL, shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._pMaterial = material;\n\t\tthis._pMaterialPass = materialPass;\n\n\t\tthis._pShaderObject = shaderObject;\n\t\tthis._pProfile = shaderObject.profile;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(this._pProfile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = 1;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShaderObject.reset();\n\n\t\tthis.pCalculateDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pMaterialPass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pMaterialPass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShaderObject.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pMaterialPass._iInitConstantData(this._pShaderObject);\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShaderObject.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShaderObject.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShaderObject.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShaderObject.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShaderObject.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pMaterial._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pMaterial._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pMaterialPass._iGetPreLightingVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pMaterialPass._iGetPreLightingFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\n\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShaderObject.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShaderObject.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShaderObject.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\tthis._pSharedRegisters.uvVarying = varying;\n\n\t\tif (this._pShaderObject.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShaderObject.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShaderObject.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShaderObject.viewDirDependencies);\n\n\t\tthis._pShaderObject.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShaderObject.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShaderObject.outputsNormals && !this._pShaderObject.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pMaterialPass._iGetNormalVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShaderObject.outputsNormals || !this._pShaderObject.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShaderObject.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShaderObject.outputsNormals) {\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShaderObject.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShaderObject.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShaderObject.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShaderObject.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShaderObject.tangentDependencies > 0 || this._pShaderObject.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShaderObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\t}\n\n\t/**\n\t * Figure out which named registers are required, and how often.\n\t */\n\tpublic pCalculateDependencies()\n\t{\n\t\tthis._pShaderObject.useAlphaPremultiplied = this._pMaterial.alphaPremultiplied;\n\t\tthis._pShaderObject.useBothSides = this._pMaterial.bothSides;\n\t\tthis._pShaderObject.useMipmapping = this._pMaterial.mipmap;\n\t\tthis._pShaderObject.useSmoothTextures = this._pMaterial.smooth;\n\t\tthis._pShaderObject.repeatTextures = this._pMaterial.repeat;\n\t\tthis._pShaderObject.usesUVTransform = this._pMaterial.animateUVs;\n\t\tthis._pShaderObject.alphaThreshold = this._pMaterial.alphaThreshold;\n\t\tthis._pShaderObject.texture = this._pMaterial.texture;\n\t\tthis._pShaderObject.color = this._pMaterial.color;\n\t\t//TODO: fragment animtion should be compatible with lighting pass\n\t\tthis._pShaderObject.usesFragmentAnimation = Boolean(this._pMaterialPass.passMode == MaterialPassMode.SUPER_SHADER);\n\n\t\tthis._pMaterialPass._iIncludeDependencies(this._pShaderObject);\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = ShaderCompilerBase;","import LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ILightingPassStageGL\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/ILightingPassStageGL\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderLightingCompiler extends ShaderCompilerBase\n{\n\tprivate _materialLightingPass:ILightingPassStageGL;\n\tprivate _shaderLightingObject:ShaderLightingObject;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(material:StageGLMaterialBase, materialPass:ILightingPassStageGL, shaderObject:ShaderLightingObject)\n\t{\n\t\tsuper(material, materialPass, shaderObject);\n\n\t\tthis._materialLightingPass = materialPass;\n\t\tthis._shaderLightingObject = shaderObject;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._materialLightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._materialLightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._materialLightingPass.iNumDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._materialLightingPass.iNumPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._materialLightingPass.iNumLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._materialLightingPass.iNumLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights*3);\n\t\t}\n\t}\n\n\n\t/**\n\t * Figure out which named registers are required, and how often.\n\t */\n\tpublic pCalculateDependencies()\n\t{\n\t\tvar numAllLights:number = this._materialLightingPass.iNumPointLights + this._materialLightingPass.iNumDirectionalLights;\n\t\tvar numLightProbes:number = this._materialLightingPass.iNumLightProbes;\n\t\tvar diffuseLightSources:number = this._pMaterial.diffuseLightSources;\n\t\tvar specularLightSources:number = this._materialLightingPass._iUsesSpecular()? this._pMaterial.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis._shaderLightingObject.usesLightFallOff = this._pMaterial.enableLightFallOff && this._shaderLightingObject.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis._shaderLightingObject.numLights = numAllLights + numLightProbes;\n\t\tthis._shaderLightingObject.numPointLights = this._materialLightingPass.iNumPointLights;\n\t\tthis._shaderLightingObject.numDirectionalLights = this._materialLightingPass.iNumDirectionalLights;\n\t\tthis._shaderLightingObject.numLightProbes = numLightProbes;\n\t\tthis._shaderLightingObject.pointLightsOffset = this._materialLightingPass.pointLightsOffset;\n\t\tthis._shaderLightingObject.directionalLightsOffset = this._materialLightingPass.directionalLightsOffset;\n\t\tthis._shaderLightingObject.lightProbesOffset = this._materialLightingPass.lightProbesOffset;\n\t\tthis._shaderLightingObject.lightPicker = this._materialLightingPass.lightPicker;\n\t\tthis._shaderLightingObject.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesShadows = this._materialLightingPass._iUsesShadows();\n\n\t\tsuper.pCalculateDependencies();\n\t}\n}\n\nexport = ShaderLightingCompiler;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderLightingCompiler\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingCompiler\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ILightingPassStageGL\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/ILightingPassStageGL\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderLightingObject extends ShaderObjectBase\n{\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\tpublic numPointLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numLightProbes:number;\n\tpublic pointLightsOffset:number;\n\tpublic directionalLightsOffset:number;\n\tpublic lightProbesOffset:number;\n\tpublic lightPicker:LightPickerBase;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(profile)\n\t{\n\t\tsuper(profile);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderLightingCompiler}\n\t */\n\tpublic createCompiler(material:StageGLMaterialBase, materialPass:ILightingPassStageGL):ShaderCompilerBase\n\t{\n\t\treturn new ShaderLightingCompiler(material, materialPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.numLights = 0;\n\t\tthis.usesLightFallOff = true;\n\t}\n\n\t/**\n\t * Adds any external world space dependencies, used to force world space calculations.\n\t */\n\tpublic addWorldSpaceDependencies(fragmentLights:boolean)\n\t{\n\t\tsuper.addWorldSpaceDependencies(fragmentLights);\n\n\t\tif (this.numPointLights > 0 && this.usesLights) {\n\t\t\t++this.globalPosDependencies;\n\n\t\t\tif (fragmentLights)\n\t\t\t\tthis.usesGlobalPosFragment = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper.setRenderState(renderable, stage, camera, viewProjection);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes(stage);\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this.lightPicker.directionalLights;\n\t\toffset = this.directionalLightsOffset;\n\t\tlen = this.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this.lightPicker.pointLights;\n\t\toffset = this.pointLightsOffset;\n\t\tlen = this.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes(stage:Stage)\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<IContextStageGL> stage.context).activateCubeTexture(this.lightProbeDiffuseIndices[i], probe.diffuseMap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<IContextStageGL> stage.context).activateCubeTexture(this.lightProbeSpecularIndices[i], probe.specularMap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this.lightProbesOffset + i];\n\t}\n}\n\nexport = ShaderLightingObject;","import Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport IMaterialPassStageGL\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/IMaterialPassStageGL\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderObjectBase\n{\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\tpublic profile:string;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:Texture2DBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the local position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic localPosDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(profile)\n\t{\n\t\tthis.profile = profile;\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderCompilerBase}\n\t */\n\tpublic createCompiler(material:StageGLMaterialBase, materialPass:IMaterialPassStageGL):ShaderCompilerBase\n\t{\n\t\treturn new ShaderCompilerBase(material, materialPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\t/**\n\t * Adds any external world space dependencies, used to force world space calculations.\n\t */\n\tpublic addWorldSpaceDependencies(fragmentLights:boolean)\n\t{\n\t\tif (this.viewDirDependencies > 0)\n\t\t\t++this.globalPosDependencies;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\n\n\t\t//Initializes commonly required constant values.\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(stage:Stage, camera:Camera)\n\t{\n\t\tstage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(stage:Stage)\n\t{\n\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tvar context:IContextStageGL = stage.context;\n\n\t\tif (renderable.materialOwner.animator)\n\t\t\t(<AnimatorBase> renderable.materialOwner.animator).setRenderState(this, renderable, stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.uvBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\n\n\t\tif (this.secondaryUVBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\n\n\t\tif (this.normalBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\n\t\tif (this.tangentBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\n\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.materialOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO uncount associated program data\n\t}\n}\n\nexport = ShaderObjectBase;","import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilation.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;","import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;","/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * AmbientBasicMethod provides the default shading method for uniform ambient lighting.\n */\nclass AmbientBasicMethod extends ShadingMethodBase\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _alpha:number = 1;\n\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambient:number = 1;\n\n\t/**\n\t * Creates a new AmbientBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = Boolean(shaderObject.texture != null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tif (!methodVO.needsUV) {\n\t\t\tthis._color = shaderObject.color;\n\t\t\tthis.updateColor();\n\t\t}\n\t}\n\n\t/**\n\t * The strength of the ambient reflection of the surface.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (this._ambient == value)\n\t\t\treturn;\n\n\t\tthis._ambient = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * The alpha component of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar m:any = method;\n\t\tvar b:AmbientBasicMethod = <AmbientBasicMethod> m;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\n\t\tif (methodVO.needsUV) {\n\t\t\tambientInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = ambientInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, ambientInputRegister, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\t\t\tmethodVO.fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tambientInputRegister = registerCache.getFreeFragmentConstant();\n\t\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + ambientInputRegister + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.needsUV) {\n\t\t\tstage.context.setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR:ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR:ContextGLMipFilter.MIPNONE);\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex, shaderObject.texture);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._colorR;\n\t\t\tdata[index + 1] = this._colorG;\n\t\t\tdata[index + 2] = this._colorB;\n\t\t\tdata[index + 3] = this._alpha;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateColor()\n\t{\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._colorB = (this._color & 0xff)/0xff*this._ambient;\n\t}\n}\n\nexport = AmbientBasicMethod;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/AmbientBasicMethod\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * AmbientEnvMapMethod provides a diffuse shading method that uses a diffuse irradiance environment map to\n * approximate global lighting rather than lights.\n */\nclass AmbientEnvMapMethod extends AmbientBasicMethod\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\t\n\t/**\n\t * Creates a new <code>AmbientEnvMapMethod</code> object.\n\t *\n\t * @param envMap The cube environment map to use for the ambient lighting.\n\t */\n\tconstructor(envMap:CubeTextureBase)\n\t{\n\t\tsuper();\n\t\tthis._cubeTexture = envMap;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsNormals = true;\n\t}\n\t\n\t/**\n\t * The cube environment map to use for the diffuse lighting.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\t\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tstage.context.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\t\tvar cubeMapReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\t\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(targetReg, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, sharedRegisters.normalFragment);\n\n\t\tambientInputRegister = regCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index;\n\t\t\n\t\tcode += \"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + ambientInputRegister + \".xyz\\n\";\n\t\t\n\t\treturn code;\n\t}\n}\n\nexport = AmbientEnvMapMethod;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/LightingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * DiffuseBasicMethod provides the default shading method for Lambert (dot3) diffuse lighting.\n */\nclass DiffuseBasicMethod extends LightingMethodBase\n{\n\tprivate _multiply:boolean = true;\n\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pDiffuseInputRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _ambientR:number = 1;\n\tprivate _ambientG:number = 1;\n\tprivate _ambientB:number = 1;\n\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Set internally if diffuse color component multiplies or replaces the ambient color\n\t */\n\tpublic get multiply():boolean\n\t{\n\t\treturn this._multiply;\n\t}\n\n\tpublic set multiply(value:boolean)\n\t{\n\t\tif (this._multiply == value)\n\t\t\treturn;\n\n\t\tthis._multiply = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * Forces the creation of the texture.\n\t * @param stage The Stage used by the renderer\n\t */\n\tpublic generateMip(stage:Stage)\n\t{\n\t\tif (this._pUseTexture)\n\t\t\tstage.context.activateTexture(0, this._texture);\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tif (this._diffuseColor == value)\n\t\t\treturn;\n\n\t\tthis._diffuseColor = value;\n\n\t\tthis.updateDiffuse();\n\t}\n\n\t/**\n\t * The color of the ambient reflection\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tif (this._ambientColor == value)\n\t\t\treturn;\n\n\t\tthis._ambientColor = value;\n\n\t\tthis.updateAmbient();\n\t}\n\n\n\t/**\n\t * The bitmapData to use to define the diffuse reflection color per texel.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar diff:DiffuseBasicMethod = <DiffuseBasicMethod> method;\n\n\t\tthis.texture = diff.texture;\n\t\tthis.multiply = diff.multiply;\n\t\tthis.diffuseColor = diff.diffuseColor;\n\t\tthis.ambientColor = diff.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pDiffuseInputRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \", \" + sharedRegisters.normalFragment + \"\\n\" +\n\t\t\t\t\"max \" + t + \".w, \" + t + \".x, \" + sharedRegisters.commons + \".y\\n\";\n\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".w, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"tex \" + t + \", \" + sharedRegisters.normalFragment + \", \" + cubeMapReg + \" <cube,linear,miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar albedo:ShaderRegisterElement;\n\t\tvar cutOffReg:ShaderRegisterElement;\n\n\t\t// incorporate input from ambient\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += this.pApplyShadow(shaderObject, methodVO, registerCache, sharedRegisters);\n\n\t\talbedo = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(albedo, 1);\n\n\t\tvar ambientColorRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientColorRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, this._pDiffuseInputRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"mov \" + albedo + \", \" + this._pDiffuseInputRegister + \"\\n\";\n\t\t}\n\n\t\tcode += \"sat \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\"mul \" + albedo + \".xyz, \" + albedo + \", \" + this._pTotalLightColorReg + \"\\n\";\n\n\t\tif (this._multiply) {\n\t\t\tcode += \"add \" + albedo + \".xyz, \" + albedo + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\tregisterCache.removeFragmentTempUsage(albedo);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generate the code that applies the calculated shadow to the diffuse light\n\t * @param methodVO The MethodVO object for which the compilation is currently happening.\n\t * @param regCache The register cache the compiler is currently using for the register management.\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (this._pUseTexture) {\n\t\t\tstage.context.setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex, this._texture);\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index + 4] = this._diffuseR;\n\t\t\tdata[index + 5] = this._diffuseG;\n\t\t\tdata[index + 6] = this._diffuseB;\n\t\t\tdata[index + 7] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the diffuse color data used by the render state.\n\t */\n\tprivate updateDiffuse()\n\t{\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateAmbient()\n\t{\n\t\tthis._ambientR = ((this._ambientColor >> 16) & 0xff)/0xff;\n\t\tthis._ambientG = ((this._ambientColor >> 8) & 0xff)/0xff;\n\t\tthis._ambientB = (this._ambientColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t//TODO move this to Activate (ambientR/G/B currently calc'd in render state)\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = shaderObject.ambientR*this._ambientR;\n\t\t\tdata[index + 1] = shaderObject.ambientG*this._ambientG;\n\t\t\tdata[index + 2] = shaderObject.ambientB*this._ambientB;\n\t\t\tdata[index + 3] = 1;\n\t\t}\n\t}\n}\n\nexport = DiffuseBasicMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseCompositeMethod\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DiffuseCelMethod provides a shading method to add diffuse cel (cartoon) shading.\n */\nclass DiffuseCelMethod extends DiffuseCompositeMethod\n{\n\tprivate _levels:number /*uint*/;\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _smoothness:number = .1;\n\n\t/**\n\t * Creates a new DiffuseCelMethod object.\n\t * @param levels The amount of shadow gradations.\n\t * @param baseMethod An optional diffuse method on which the cartoon shading is based. If omitted, DiffuseBasicMethod is used.\n\t */\n\tconstructor(levels:number /*uint*/ = 3, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampDiffuse(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._levels = levels;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\t\tdata[index + 1] = 1;\n\t\tdata[index + 2] = 0;\n\t}\n\n\t/**\n\t * The amount of shadow gradations.\n\t */\n\tpublic get levels():number /*uint*/\n\t{\n\t\treturn this._levels;\n\t}\n\n\tpublic set levels(value:number /*uint*/)\n\t{\n\t\tthis._levels = value;\n\t}\n\n\t/**\n\t * The smoothness of the edge between 2 shading levels.\n\t */\n\tpublic get smoothness():number\n\t{\n\t\treturn this._smoothness;\n\t}\n\n\tpublic set smoothness(value:number)\n\t{\n\t\tthis._smoothness = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index] = this._levels;\n\t\tdata[index + 3] = this._smoothness;\n\t}\n\n\t/**\n\t * Snaps the diffuse shading of the wrapped method to one of the levels.\n\t * @param vo The MethodVO used to compile the current shader.\n\t * @param t The register containing the diffuse strength in the \"w\" component.\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared register data for this shader.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate clampDiffuse(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".x\\n\" +\n\t\t\t\"frc \" + targetReg + \".z, \" + targetReg + \".w\\n\" +\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\n\t\t\t\"mov \" + targetReg + \".x, \" + this._dataReg + \".x\\n\" +\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + this._dataReg + \".y\\n\" +\n\t\t\t\"rcp \" + targetReg + \".x,\" + targetReg + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\n\n\t\t\t// previous clamped strength\n\t\t\t\"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + targetReg + \".x\\n\" +\n\n\t\t\t// fract/epsilon (so 0 - epsilon will become 0 - 1)\n\t\t\t\"div \" + targetReg + \".z, \" + targetReg + \".z, \" + this._dataReg + \".w\\n\" +\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\n\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".z\\n\" +\n\t\t\t// 1-z\n\t\t\t\"sub \" + targetReg + \".z, \" + this._dataReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\" +\n\t\t\t\"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t}\n}\n\nexport = DiffuseCelMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseCompositeMethod provides a base class for diffuse methods that wrap a diffuse method to alter the\n * calculated diffuse reflection strength.\n */\nclass DiffuseCompositeMethod extends DiffuseBasicMethod\n{\n\tpublic pBaseMethod:DiffuseBasicMethod;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new <code>DiffuseCompositeMethod</code> object.\n\t *\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature clampDiffuse(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the diffuse strength.\n\t * @param baseMethod The base diffuse method on which this method's shading is based.\n\t */\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis.pBaseMethod = baseMethod || new DiffuseBasicMethod();\n\t\tthis.pBaseMethod._iModulateMethod = modulateMethod;\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * The base diffuse method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this.pBaseMethod;\n\t}\n\n\tpublic set baseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this.pBaseMethod == value)\n\t\t\treturn;\n\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.pBaseMethod = value;\n\t\tthis.pBaseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis.pBaseMethod.iInitVO(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis.pBaseMethod.iInitConstants(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.pBaseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis.pBaseMethod.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this.pBaseMethod.texture;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis.pBaseMethod.texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this.pBaseMethod.diffuseColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis.pBaseMethod.diffuseColor = value;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this.pBaseMethod.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis.pBaseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this.pBaseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\n\t\tthis._pTotalLightColorReg = this.pBaseMethod._pTotalLightColorReg;\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis.pBaseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthis.pBaseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis.pBaseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this.pBaseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.pBaseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis.pBaseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = DiffuseCompositeMethod;","import MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DiffuseDepthMethod provides a debug method to visualise depth maps\n */\nclass DiffuseDepthMethod extends DiffuseBasicMethod\n{\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 1/255.0;\n\t\tdata[index + 2] = 1/65025.0;\n\t\tdata[index + 3] = 1/16581375.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement;\n\t\tvar decReg:ShaderRegisterElement;\n\n\t\tif (!this._pUseTexture)\n\t\t\tthrow new Error(\"DiffuseDepthMethod requires texture!\");\n\n\t\t// incorporate input from ambient\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tif (sharedRegisters.shadowTarget)\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t\t\tcode += \"add \" + targetReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\t\"sat \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\t}\n\n\t\ttemp = shaderObject.numLights > 0? registerCache.getFreeFragmentVectorTemp():targetReg;\n\n\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\t\tdecReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pDiffuseInputRegister, this.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"dp4 \" + temp + \".x, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\"mov \" + temp + \".yz, \" + temp + \".xx\t\t\t\\n\" +\n\t\t\t\"mov \" + temp + \".w, \" + decReg + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".xyz, \" + decReg + \".xxx, \" + temp + \".xyz\\n\";\n\n\t\tif (shaderObject.numLights == 0)\n\t\t\treturn code;\n\n\t\tcode += \"mul \" + targetReg + \".xyz, \" + temp + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\"mov \" + targetReg + \".w, \" + temp + \".w\\n\";\n\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseDepthMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DiffuseGradientMethod is an alternative to DiffuseBasicMethod in which the shading can be modulated with a gradient\n * to introduce color-tinted shading as opposed to the single-channel diffuse strength. This can be used as a crude\n * approximation to subsurface scattering (for instance, the mid-range shading for skin can be tinted red to similate\n * scattered light within the skin attributing to the final colour)\n */\nclass DiffuseGradientMethod extends DiffuseBasicMethod\n{\n\tprivate _gradientTextureRegister:ShaderRegisterElement;\n\tprivate _gradient:Texture2DBase;\n\n\t/**\n\t * Creates a new DiffuseGradientMethod object.\n\t * @param gradient A texture that contains the light colour based on the angle. This can be used to change\n\t * the light colour due to subsurface scattering when the surface faces away from the light.\n\t */\n\tconstructor(gradient:Texture2DBase)\n\t{\n\t\tsuper();\n\n\t\tthis._gradient = gradient;\n\t}\n\n\t/**\n\t * A texture that contains the light colour based on the angle. This can be used to change the light colour\n\t * due to subsurface scattering when the surface faces away from the light.\n\t */\n\tpublic get gradient():Texture2DBase\n\t{\n\t\treturn this._gradient;\n\t}\n\n\tpublic set gradient(value:Texture2DBase)\n\t{\n\t\tif (value.hasMipmaps != this._gradient.hasMipmaps || value.format != this._gradient.format)\n\t\t\tthis.iInvalidateShaderProgram();\n\t\tthis._gradient = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._gradientTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tthis._pIsFirstLight = true;\n\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tthis._gradientTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.secondaryTexturesIndex = this._gradientTextureRegister.index;\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight)\n\t\t\tt = this._pTotalLightColorReg;\n\t\telse {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + sharedRegisters.commons + \".x\\n\" +\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\n\t\t\t//\t\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + t + \".w\\n\" +\n\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + lightColReg + \".xyz\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar t:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"mov \" + t + \", \" + sharedRegisters.shadowTarget + \".wwww\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(t, sharedRegisters, this._gradientTextureRegister, this._gradient, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, t, \"clamp\") +\n\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tstage.context.activateTexture(methodVO.secondaryTexturesIndex, this._gradient);\n\t}\n}\n\nexport = DiffuseGradientMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseCompositeMethod\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DiffuseLightMapMethod provides a diffuse shading method that uses a light map to modulate the calculated diffuse\n * lighting. It is different from EffectLightMapMethod in that the latter modulates the entire calculated pixel color, rather\n * than only the diffuse lighting value.\n */\nclass DiffuseLightMapMethod extends DiffuseCompositeMethod\n{\n\t/**\n\t * Indicates the light map should be multiplied with the calculated shading result.\n\t * This can be used to add pre-calculated shadows or occlusion.\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * Indicates the light map should be added into the calculated shading result.\n\t * This can be used to add pre-calculated lighting or global illumination.\n\t */\n\tpublic static ADD:string = \"add\";\n\n\tprivate _lightMapTexture:Texture2DBase;\n\tprivate _blendMode:string;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new DiffuseLightMapMethod method.\n\t *\n\t * @param lightMap The texture containing the light map.\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\n\t */\n\tconstructor(lightMap:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t\tthis._lightMapTexture = lightMap;\n\t\tthis.blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t}\n\n\t/**\n\t * The blend mode with which the light map should be applied to the lighting result.\n\t *\n\t * @see DiffuseLightMapMethod.ADD\n\t * @see DiffuseLightMapMethod.MULTIPLY\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (value != DiffuseLightMapMethod.ADD && value != DiffuseLightMapMethod.MULTIPLY)\n\t\t\tthrow new Error(\"Unknown blendmode!\");\n\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture containing the light map data.\n\t */\n\tpublic get lightMapTexture():Texture2DBase\n\t{\n\t\treturn this._lightMapTexture;\n\t}\n\n\tpublic set lightMapTexture(value:Texture2DBase)\n\t{\n\t\tthis._lightMapTexture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.context.activateTexture(methodVO.secondaryTexturesIndex, this._lightMapTexture);\n\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tmethodVO.secondaryTexturesIndex = lightMapReg.index;\n\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._lightMapTexture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.secondaryUVVarying);\n\n\t\tswitch (this._blendMode) {\n\t\t\tcase DiffuseLightMapMethod.MULTIPLY:\n\t\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase DiffuseLightMapMethod.ADD:\n\t\t\t\tcode += \"add \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcode += super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseLightMapMethod;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport DiffuseCompositeMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseCompositeMethod\");\nimport MaterialPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport SingleObjectDepthPass\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/SingleObjectDepthPass\");\n\n/**\n * DiffuseSubSurfaceMethod provides a depth map-based diffuse shading method that mimics the scattering of\n * light inside translucent surfaces. It allows light to shine through an object and to soften the diffuse shading.\n * It can be used for candle wax, ice, skin, ...\n */\nclass DiffuseSubSurfaceMethod extends DiffuseCompositeMethod\n{\n\tprivate _depthPass:SingleObjectDepthPass;\n\tprivate _lightProjVarying:ShaderRegisterElement;\n\tprivate _propReg:ShaderRegisterElement;\n\tprivate _scattering:number;\n\tprivate _translucency:number = 1;\n\tprivate _lightColorReg:ShaderRegisterElement;\n\tprivate _scatterColor:number /*uint*/ = 0xffffff;\n\tprivate _colorReg:ShaderRegisterElement;\n\tprivate _decReg:ShaderRegisterElement;\n\tprivate _scatterR:number = 1.0;\n\tprivate _scatterG:number = 1.0;\n\tprivate _scatterB:number = 1.0;\n\tprivate _targetReg:ShaderRegisterElement;\n\t\n\t/**\n\t * Creates a new <code>DiffuseSubSurfaceMethod</code> object.\n\t *\n\t * @param depthMapSize The size of the depth map used.\n\t * @param depthMapOffset The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\n\t * @param baseMethod The diffuse method used to calculate the regular diffuse-based lighting.\n\t */\n\tconstructor(depthMapSize:number /*int*/ = 512, depthMapOffset:number = 15, baseMethod:DiffuseBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.pBaseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.scatterLight(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._passes = new Array<MaterialPassBase>();\n\t\tthis._depthPass = new SingleObjectDepthPass();\n\t\tthis._depthPass.textureSize = depthMapSize;\n\t\tthis._depthPass.polyOffset = depthMapOffset;\n\t\tthis._passes.push(this._depthPass);\n\t\tthis._scattering = 0.2;\n\t\tthis._translucency = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar data:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryVertexConstantsIndex;\n\t\tdata[index] = .5;\n\t\tdata[index + 1] = -.5;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t\t\n\t\tdata = shaderObject.fragmentConstantData;\n\t\tindex = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index + 3] = 1.0;\n\t\tdata[index + 4] = 1.0;\n\t\tdata[index + 5] = 1/255;\n\t\tdata[index + 6] = 1/65025;\n\t\tdata[index + 7] = 1/16581375;\n\t\tdata[index + 10] = .5;\n\t\tdata[index + 11] = -.1;\n\t}\n\t\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._lightProjVarying = null;\n\t\tthis._propReg = null;\n\t\tthis._lightColorReg = null;\n\t\tthis._colorReg = null;\n\t\tthis._decReg = null;\n\t\tthis._targetReg = null;\n\t}\n\t\n\t/**\n\t * The amount by which the light scatters. It can be used to set the translucent surface's thickness. Use low\n\t * values for skin.\n\t */\n\tpublic get scattering():number\n\t{\n\t\treturn this._scattering;\n\t}\n\t\n\tpublic set scattering(value:number)\n\t{\n\t\tthis._scattering = value;\n\t}\n\t\n\t/**\n\t * The translucency of the object.\n\t */\n\tpublic get translucency():number\n\t{\n\t\treturn this._translucency;\n\t}\n\t\n\tpublic set translucency(value:number)\n\t{\n\t\tthis._translucency = value;\n\t}\n\t\n\t/**\n\t * The colour of the \"insides\" of the object, ie: the colour the light becomes after leaving the object.\n\t */\n\tpublic get scatterColor():number /*uint*/\n\t{\n\t\treturn this._scatterColor;\n\t}\n\t\n\tpublic set scatterColor(scatterColor:number /*uint*/)\n\t{\n\t\tthis._scatterColor = scatterColor;\n\t\tthis._scatterR = ((scatterColor >> 16) & 0xff)/0xff;\n\t\tthis._scatterG = ((scatterColor >> 8) & 0xff)/0xff;\n\t\tthis._scatterB = (scatterColor & 0xff)/0xff;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tvar lightProjection:ShaderRegisterElement;\n\t\tvar toTexRegister:ShaderRegisterElement;\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\n\t\ttoTexRegister = registerCache.getFreeVertexConstant();\n\t\tmethodVO.secondaryVertexConstantsIndex = toTexRegister.index*4;\n\n\t\tthis._lightProjVarying = registerCache.getFreeVarying();\n\t\tlightProjection = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\t\n\t\tcode += \"m44 \" + temp + \", vt0, \" + lightProjection + \"\\n\" +\n\t\t\t\"div \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xy\\n\" +\n\t\t\t\"add \" + temp + \".xy, \" + temp + \".xy, \" + toTexRegister + \".xx\\n\" +\n\t\t\t\"mov \" + this._lightProjVarying + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\"mov \" + this._lightProjVarying + \".w, va0.w\\n\";\n\t\t\n\t\treturn code;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._colorReg = registerCache.getFreeFragmentConstant();\n\t\tthis._decReg = registerCache.getFreeFragmentConstant();\n\t\tthis._propReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._colorReg.index*4;\n\t\t\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pIsFirstLight = true;\n\t\tthis._lightColorReg = lightColReg;\n\t\treturn super.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\n\t\tcode += \"mul \" + temp + \".xyz, \" + this._lightColorReg + \".xyz, \" + this._targetReg + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + this._colorReg + \".xyz\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t\n\t\tif (this._targetReg != sharedRegisters.viewDirFragment)\n\t\t\tregisterCache.removeFragmentTempUsage(targetReg);\n\t\t\n\t\treturn code;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t\t\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._scatterR;\n\t\tdata[index + 1] = this._scatterG;\n\t\tdata[index + 2] = this._scatterB;\n\t\tdata[index + 8] = this._scattering;\n\t\tdata[index + 9] = this._translucency;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tstage.context.activateTexture(methodVO.secondaryTexturesIndex, this._depthPass._iGetDepthMap(renderable));\n\n\t\tthis._depthPass._iGetProjection(renderable).copyRawDataTo(shaderObject.vertexConstantData, methodVO.secondaryVertexConstantsIndex + 4, true);\n\t}\n\t\n\t/**\n\t * Generates the code for this method\n\t */\n\tprivate scatterLight(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// only scatter first light\n\t\tif (!this._pIsFirstLight)\n\t\t\treturn \"\";\n\n\t\tthis._pIsFirstLight = false;\n\n\t\tvar code:string = \"\";\n\t\tvar depthReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\tif (sharedRegisters.viewDirFragment) {\n\t\t\tthis._targetReg = sharedRegisters.viewDirFragment;\n\t\t} else {\n\t\t\tthis._targetReg = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._targetReg, 1);\n\t\t}\n\n\t\tmethodVO.secondaryTexturesIndex = depthReg.index;\n\t\t\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tcode += \"tex \" + temp + \", \" + this._lightProjVarying + \", \" + depthReg + \" <2d,nearest,clamp>\\n\" +\n\t\t\t// reencode RGBA\n\t\t\t\"dp4 \" + targetReg + \".z, \" + temp + \", \" + this._decReg + \"\\n\";\n\t\t// currentDistanceToLight - closestDistanceToLight\n\t\tcode += \"sub \" + targetReg + \".z, \" + this._lightProjVarying + \".z, \" + targetReg + \".z\\n\" +\n\t\t\t\n\t\t\t\"sub \" + targetReg + \".z, \" + this._propReg + \".x, \" + targetReg + \".z\\n\" +\n\t\t\t\"mul \" + targetReg + \".z, \" + this._propReg + \".y, \" + targetReg + \".z\\n\" +\n\t\t\t\"sat \" + targetReg + \".z, \" + targetReg + \".z\\n\" +\n\t\t\t\n\t\t\t// targetReg.x contains dot(lightDir, normal)\n\t\t\t// modulate according to incident light angle (scatter = scatter*(-.5*dot(light, normal) + .5)\n\t\t\t\"neg \" + targetReg + \".y, \" + targetReg + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".y, \" + this._propReg + \".z\\n\" +\n\t\t\t\"mul \" + this._targetReg + \".w, \" + targetReg + \".z, \" + targetReg + \".y\\n\" +\n\t\t\t\n\t\t\t// blend diffuse: d' = (1-s)*d + s*1\n\t\t\t\"sub \" + targetReg + \".y, \" + this._colorReg + \".w, \" + this._targetReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\t\t\n\t\treturn code;\n\t}\n}\n\nexport = DiffuseSubSurfaceMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\n\n/**\n * DiffuseWrapMethod is an alternative to DiffuseBasicMethod in which the light is allowed to be \"wrapped around\" the normally dark area, to some extent.\n * It can be used as a crude approximation to Oren-Nayar or simple subsurface scattering.\n */\nclass DiffuseWrapMethod extends DiffuseBasicMethod\n{\n\tprivate _wrapDataRegister:ShaderRegisterElement;\n\tprivate _wrapFactor:number;\n\n\t/**\n\t * Creates a new DiffuseWrapMethod object.\n\t * @param wrapFactor A factor to indicate the amount by which the light is allowed to wrap\n\t */\n\tconstructor(wrapFactor:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.wrapFactor = wrapFactor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._wrapDataRegister = null;\n\t}\n\n\t/**\n\t * A factor to indicate the amount by which the light is allowed to wrap.\n\t */\n\tpublic get wrapFactor():number\n\t{\n\t\treturn this._wrapFactor;\n\t}\n\n\tpublic set wrapFactor(value:number)\n\t{\n\t\tthis._wrapFactor = value;\n\t\tthis._wrapFactor = 1/(value + 1);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t\tthis._pIsFirstLight = true;\n\t\tthis._wrapDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._wrapDataRegister.index*4;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"add \" + t + \".y, \" + t + \".x, \" + this._wrapDataRegister + \".x\\n\" +\n\t\t\t\"mul \" + t + \".y, \" + t + \".y, \" + this._wrapDataRegister + \".y\\n\" +\n\t\t\t\"sat \" + t + \".w, \" + t + \".y\\n\" +\n\t\t\t\"mul \" + t + \".xz, \" + t + \".w, \" + lightDirReg + \".wz\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, lightDirReg, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".x, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._wrapFactor;\n\t\tdata[index + 1] = 1/(this._wrapFactor + 1);\n\t}\n}\n\nexport = DiffuseWrapMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * EffectAlphaMaskMethod allows the use of an additional texture to specify the alpha value of the material. When used\n * with the secondary uv set, it allows for a tiled main texture with independently varying alpha (useful for water\n * etc).\n */\nclass EffectAlphaMaskMethod extends EffectMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new EffectAlphaMaskMethod object.\n\t *\n\t * @param texture The texture to use as the alpha mask.\n\t * @param useSecondaryUV Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently.\n\t */\n\tconstructor(texture:Texture2DBase, useSecondaryUV:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._texture = texture;\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t}\n\n\t/**\n\t * Indicated whether or not the secondary uv set for the mask. This allows mapping alpha independently, for\n\t * instance to tile the main texture and normal map while providing untiled alpha, for example to define the\n\t * transparency over a tiled water surface.\n\t */\n\tpublic get useSecondaryUV():boolean\n\t{\n\t\treturn this._useSecondaryUV;\n\t}\n\n\tpublic set useSecondaryUV(value:boolean)\n\t{\n\t\tif (this._useSecondaryUV == value)\n\t\t\treturn;\n\t\tthis._useSecondaryUV = value;\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture to use as the alpha mask.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.context.activateTexture(methodVO.texturesIndex, this._texture);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar textureReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar uvReg:ShaderRegisterElement = this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying;\n\t\tmethodVO.texturesIndex = textureReg.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, textureReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, uvReg) +\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \".x\\n\";\n\t}\n}\n\nexport = EffectAlphaMaskMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\n\n/**\n * EffectColorMatrixMethod provides a shading method that changes the colour of a material analogous to a ColorMatrixFilter.\n */\nclass EffectColorMatrixMethod extends EffectMethodBase\n{\n\tprivate _matrix:Array<number>;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t *\n\t * @param matrix An array of 20 items for 4 x 5 color transform.\n\t */\n\tconstructor(matrix:Array<number>)\n\t{\n\t\tsuper();\n\n\t\tif (matrix.length != 20)\n\t\t\tthrow new Error(\"Matrix length must be 20!\");\n\n\t\tthis._matrix = matrix;\n\t}\n\n\t/**\n\t * The 4 x 5 matrix to transform the color of the material.\n\t */\n\tpublic get colorMatrix():Array<number>\n\t{\n\t\treturn this._matrix;\n\t}\n\n\tpublic set colorMatrix(value:Array<number>)\n\t{\n\t\tthis._matrix = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\t\tregisterCache.getFreeFragmentConstant();\n\n\t\tvar colorOffsetReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\tcode += \"m44 \" + temp + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + temp + \", \" + colorOffsetReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar matrix:Array<number> = this._matrix;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\t// r\n\t\tdata[index] = matrix[0];\n\t\tdata[index + 1] = matrix[1];\n\t\tdata[index + 2] = matrix[2];\n\t\tdata[index + 3] = matrix[3];\n\n\t\t// g\n\t\tdata[index + 4] = matrix[5];\n\t\tdata[index + 5] = matrix[6];\n\t\tdata[index + 6] = matrix[7];\n\t\tdata[index + 7] = matrix[8];\n\n\t\t// b\n\t\tdata[index + 8] = matrix[10];\n\t\tdata[index + 9] = matrix[11];\n\t\tdata[index + 10] = matrix[12];\n\t\tdata[index + 11] = matrix[13];\n\n\t\t// a\n\t\tdata[index + 12] = matrix[15];\n\t\tdata[index + 13] = matrix[16];\n\t\tdata[index + 14] = matrix[17];\n\t\tdata[index + 15] = matrix[18];\n\n\t\t// rgba offset\n\t\tdata[index + 16] = matrix[4];\n\t\tdata[index + 17] = matrix[9];\n\t\tdata[index + 18] = matrix[14];\n\t\tdata[index + 19] = matrix[19];\n\t}\n}\n\nexport = EffectColorMatrixMethod;","import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\n\n/**\n * EffectColorTransformMethod provides a shading method that changes the colour of a material analogous to a\n * ColorTransform object.\n */\nclass EffectColorTransformMethod extends EffectMethodBase\n{\n\tprivate _colorTransform:ColorTransform;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar colorOffsReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\t//TODO: AGAL <> GLSL\n\n\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" + \"add \" + targetReg + \", \" + targetReg + \", \" + colorOffsReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar inv:number = 1/0xff;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._colorTransform.redMultiplier;\n\t\tdata[index + 1] = this._colorTransform.greenMultiplier;\n\t\tdata[index + 2] = this._colorTransform.blueMultiplier;\n\t\tdata[index + 3] = this._colorTransform.alphaMultiplier;\n\t\tdata[index + 4] = this._colorTransform.redOffset*inv;\n\t\tdata[index + 5] = this._colorTransform.greenOffset*inv;\n\t\tdata[index + 6] = this._colorTransform.blueOffset*inv;\n\t\tdata[index + 7] = this._colorTransform.alphaOffset*inv;\n\n\t}\n}\n\nexport = EffectColorTransformMethod;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * EffectEnvMapMethod provides a material method to perform reflection mapping using cube maps.\n */\nclass EffectEnvMapMethod extends EffectMethodBase\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\tprivate _alpha:number;\n\tprivate _mask:Texture2DBase;\n\n\t/**\n\t * Creates an EffectEnvMapMethod object.\n\t * @param envMap The environment map containing the reflected scene.\n\t * @param alpha The reflectivity of the surface.\n\t */\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._cubeTexture = envMap;\n\t\tthis._alpha = alpha;\n\n\t}\n\n\t/**\n\t * An optional texture to modulate the reflectivity of the surface.\n\t */\n\tpublic get mask():Texture2DBase\n\t{\n\t\treturn this._mask;\n\t}\n\n\tpublic set mask(value:Texture2DBase)\n\t{\n\t\tif (value != this._mask || (value && this._mask && (value.hasMipmaps != this._mask.hasMipmaps || value.format != this._mask.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._mask = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsUV = this._mask != null;\n\t}\n\n\t/**\n\t * The cubic environment map containing the reflected scene.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * The reflectivity of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = this._alpha;\n\n\t\tstage.context.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture);\n\t\tif (this._mask)\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex + 1, this._mask);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t// r = I - 2(I.N)*N\n\t\tcode += \"dp3 \" + temp + \".w, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + sharedRegisters.normalFragment + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\" +\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" + // -.5\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\n\n\t\tif (this._mask)\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, registerCache.getFreeTextureReg(), this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\t\"mul \" + temp + \", \" + temp2 + \", \" + temp + \"\\n\";\n\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + dataRegister + \".x\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectEnvMapMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\n\n/**\n * EffectFogMethod provides a method to add distance-based fog to a material.\n */\nclass EffectFogMethod extends EffectMethodBase\n{\n\tprivate _minDistance:number = 0;\n\tprivate _maxDistance:number = 1000;\n\tprivate _fogColor:number /*uint*/;\n\tprivate _fogR:number;\n\tprivate _fogG:number;\n\tprivate _fogB:number;\n\n\t/**\n\t * Creates a new EffectFogMethod object.\n\t * @param minDistance The distance from which the fog starts appearing.\n\t * @param maxDistance The distance at which the fog is densest.\n\t * @param fogColor The colour of the fog.\n\t */\n\tconstructor(minDistance:number, maxDistance:number, fogColor:number /*uint*/ = 0x808080)\n\t{\n\t\tsuper();\n\t\tthis.minDistance = minDistance;\n\t\tthis.maxDistance = maxDistance;\n\t\tthis.fogColor = fogColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index + 3] = 1;\n\t\tdata[index + 6] = 0;\n\t\tdata[index + 7] = 0;\n\t}\n\n\t/**\n\t * The distance from which the fog starts appearing.\n\t */\n\tpublic get minDistance():number\n\t{\n\t\treturn this._minDistance;\n\t}\n\n\tpublic set minDistance(value:number)\n\t{\n\t\tthis._minDistance = value;\n\t}\n\n\t/**\n\t * The distance at which the fog is densest.\n\t */\n\tpublic get maxDistance():number\n\t{\n\t\treturn this._maxDistance;\n\t}\n\n\tpublic set maxDistance(value:number)\n\t{\n\t\tthis._maxDistance = value;\n\t}\n\n\t/**\n\t * The colour of the fog.\n\t */\n\tpublic get fogColor():number /*uint*/\n\t{\n\t\treturn this._fogColor;\n\t}\n\n\tpublic set fogColor(value:number/*uint*/)\n\t{\n\t\tthis._fogColor = value;\n\t\tthis._fogR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._fogG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._fogB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = this._fogR;\n\t\tdata[index + 1] = this._fogG;\n\t\tdata[index + 2] = this._fogB;\n\t\tdata[index + 4] = this._minDistance;\n\t\tdata[index + 5] = 1/(this._maxDistance - this._minDistance);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar fogColor:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar fogData:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tmethodVO.fragmentConstantsIndex = fogColor.index*4;\n\n\t\tcode += \"sub \" + temp2 + \".w, \" + sharedRegisters.projectionFragment + \".z, \" + fogData + \".x\\n\" +\n\t\t\t\t\"mul \" + temp2 + \".w, \" + temp2 + \".w, \" + fogData + \".y\\n\" +\n\t\t\t\t\"sat \" + temp2 + \".w, \" + temp2 + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \", \" + fogColor + \", \" + targetReg + \"\\n\" + // (fogColor- col)\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + temp2 + \".w\\n\" + // (fogColor- col)*fogRatio\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\"; // fogRatio*(fogColor- col) + col\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectFogMethod;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * EffectFresnelEnvMapMethod provides a method to add fresnel-based reflectivity to an object using cube maps, which gets\n * stronger as the viewing angle becomes more grazing.\n */\nclass EffectFresnelEnvMapMethod extends EffectMethodBase\n{\n\tprivate _cubeTexture:CubeTextureBase;\n\tprivate _fresnelPower:number = 5;\n\tprivate _normalReflectance:number = 0;\n\tprivate _alpha:number;\n\tprivate _mask:Texture2DBase;\n\n\t/**\n\t * Creates a new <code>EffectFresnelEnvMapMethod</code> object.\n\t *\n\t * @param envMap The environment map containing the reflected scene.\n\t * @param alpha The reflectivity of the material.\n\t */\n\tconstructor(envMap:CubeTextureBase, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._cubeTexture = envMap;\n\t\tthis._alpha = alpha;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsUV = this._mask != null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\n\t}\n\n\t/**\n\t * An optional texture to modulate the reflectivity of the surface.\n\t */\n\tpublic get mask():Texture2DBase\n\t{\n\t\treturn this._mask;\n\t}\n\n\tpublic set mask(value:Texture2DBase)\n\t{\n\t\tif (Boolean(value) != Boolean(this._mask) ||\n\t\t\t(value && this._mask && (value.hasMipmaps != this._mask.hasMipmaps || value.format != this._mask.format))) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t}\n\t\tthis._mask = value;\n\t}\n\n\t/**\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\n\t */\n\tpublic get fresnelPower():number\n\t{\n\t\treturn this._fresnelPower;\n\t}\n\n\tpublic set fresnelPower(value:number)\n\t{\n\t\tthis._fresnelPower = value;\n\t}\n\n\t/**\n\t * The cubic environment map containing the reflected scene.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._cubeTexture;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._cubeTexture = value;\n\t}\n\n\t/**\n\t * The reflectivity of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\n\t */\n\tpublic get normalReflectance():number\n\t{\n\t\treturn this._normalReflectance;\n\t}\n\n\tpublic set normalReflectance(value:number)\n\t{\n\t\tthis._normalReflectance = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index] = this._alpha;\n\t\tdata[index + 1] = this._normalReflectance;\n\t\tdata[index + 2] = this._fresnelPower;\n\n\t\tstage.context.activateCubeTexture(methodVO.texturesIndex, this._cubeTexture);\n\n\t\tif (this._mask)\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex + 1, this._mask);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t// r = V - 2(V.N)*N\n\t\tcode += \"dp3 \" + temp + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"add \" + temp + \".w, \" + temp + \".w, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + normalReg + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".xyz, \" + temp + \".xyz, \" + viewDirReg + \".xyz\\n\" +\n\t\t\tShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\t\"sub \" + temp2 + \".w, \" + temp + \".w, fc0.x\\n\" +               \t// -.5\n\t\t\t\t\"kil \" + temp2 + \".w\\n\" +\t// used for real time reflection mapping - if alpha is not 1 (mock texture) kil output\n\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + targetReg + \"\\n\";\n\n\t\t// calculate fresnel term\n\t\tcode += \"dp3 \" + viewDirReg + \".w, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +  // dot(V, H)\n\t\t\t\t\"sub \" + viewDirReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +       // base = 1-dot(V, H)\n\t\t\t\t\"pow \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + dataRegister + \".z\\n\" +       // exp = pow(base, 5)\n\t\t\t\t\"sub \" + normalReg + \".w, \" + dataRegister + \".w, \" + viewDirReg + \".w\\n\" +        // 1 - exp\n\t\t\t\t\"mul \" + normalReg + \".w, \" + dataRegister + \".y, \" + normalReg + \".w\\n\" +         // f0*(1 - exp)\n\t\t\t\t\"add \" + viewDirReg + \".w, \" + viewDirReg + \".w, \" + normalReg + \".w\\n\" +          // exp + f0*(1 - exp)\n\n\t\t\t\t// total alpha\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + dataRegister + \".x, \" + viewDirReg + \".w\\n\";\n\n\t\tif (this._mask) {\n\t\t\tvar maskReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(temp2, sharedRegisters, maskReg, this._mask, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\t\"mul \" + viewDirReg + \".w, \" + temp2 + \".x, \" + viewDirReg + \".w\\n\";\n\t\t}\n\n\t\t// blend\n\t\tcode += \"mul \" + temp + \", \" + temp + \", \" + viewDirReg + \".w\\n\" +\n\t\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectFresnelEnvMapMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * EffectLightMapMethod provides a method that allows applying a light map texture to the calculated pixel colour.\n * It is different from DiffuseLightMapMethod in that the latter only modulates the diffuse shading value rather\n * than the whole pixel colour.\n */\nclass EffectLightMapMethod extends EffectMethodBase\n{\n\t/**\n\t * Indicates the light map should be multiplied with the calculated shading result.\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * Indicates the light map should be added into the calculated shading result.\n\t */\n\tpublic static ADD:string = \"add\";\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _blendMode:string;\n\tprivate _useSecondaryUV:boolean;\n\n\t/**\n\t * Creates a new EffectLightMapMethod object.\n\t *\n\t * @param texture The texture containing the light map.\n\t * @param blendMode The blend mode with which the light map should be applied to the lighting result.\n\t * @param useSecondaryUV Indicates whether the secondary UV set should be used to map the light map.\n\t */\n\tconstructor(texture:Texture2DBase, blendMode:string = \"multiply\", useSecondaryUV:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._useSecondaryUV = useSecondaryUV;\n\t\tthis._texture = texture;\n\t\tthis.blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = !this._useSecondaryUV;\n\t\tmethodVO.needsSecondaryUV = this._useSecondaryUV;\n\t}\n\n\t/**\n\t * The blend mode with which the light map should be applied to the lighting result.\n\t *\n\t * @see EffectLightMapMethod.ADD\n\t * @see EffectLightMapMethod.MULTIPLY\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (value != EffectLightMapMethod.ADD && value != EffectLightMapMethod.MULTIPLY)\n\t\t\tthrow new Error(\"Unknown blendmode!\");\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The texture containing the light map.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.context.activateTexture(methodVO.texturesIndex, this._texture);\n\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar lightMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tmethodVO.texturesIndex = lightMapReg.index;\n\n\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, lightMapReg, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, this._useSecondaryUV? sharedRegisters.secondaryUVVarying : sharedRegisters.uvVarying);\n\n\t\tswitch (this._blendMode) {\n\t\t\tcase EffectLightMapMethod.MULTIPLY:\n\t\t\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase EffectLightMapMethod.ADD:\n\t\t\t\tcode += \"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\\n\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectLightMapMethod;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * EffectMethodBase forms an abstract base class for shader methods that are not dependent on light sources,\n * and are in essence post-process effects on the materials.\n */\nclass EffectMethodBase extends ShadingMethodBase implements IAsset\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.EFFECTS_METHOD;\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register that will be containing the method's output.\n\t * @private\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n}\n\nexport = EffectMethodBase;","import CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * EffectRefractionEnvMapMethod provides a method to add refracted transparency based on cube maps.\n */\nclass EffectRefractionEnvMapMethod extends EffectMethodBase\n{\n\tprivate _envMap:CubeTextureBase;\n\n\tprivate _dispersionR:number = 0;\n\tprivate _dispersionG:number = 0;\n\tprivate _dispersionB:number = 0;\n\tprivate _useDispersion:boolean;\n\tprivate _refractionIndex:number;\n\tprivate _alpha:number = 1;\n\n\t/**\n\t * Creates a new EffectRefractionEnvMapMethod object. Example values for dispersion are: dispersionR: -0.03, dispersionG: -0.01, dispersionB: = .0015\n\t *\n\t * @param envMap The environment map containing the refracted scene.\n\t * @param refractionIndex The refractive index of the material.\n\t * @param dispersionR The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\n\t * @param dispersionG The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\n\t * @param dispersionB The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\n\t */\n\tconstructor(envMap:CubeTextureBase, refractionIndex:number = .1, dispersionR:number = 0, dispersionG:number = 0, dispersionB:number = 0)\n\t{\n\t\tsuper();\n\t\tthis._envMap = envMap;\n\t\tthis._dispersionR = dispersionR;\n\t\tthis._dispersionG = dispersionG;\n\t\tthis._dispersionB = dispersionB;\n\t\tthis._useDispersion = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tthis._refractionIndex = refractionIndex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1;\n\t\tdata[index + 5] = 0;\n\t\tdata[index + 7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\t/**\n\t * The cube environment map to use for the refraction.\n\t */\n\tpublic get envMap():CubeTextureBase\n\t{\n\t\treturn this._envMap;\n\t}\n\n\tpublic set envMap(value:CubeTextureBase)\n\t{\n\t\tthis._envMap = value;\n\t}\n\n\t/**\n\t * The refractive index of the material.\n\t */\n\tpublic get refractionIndex():number\n\t{\n\t\treturn this._refractionIndex;\n\t}\n\n\tpublic set refractionIndex(value:number)\n\t{\n\t\tthis._refractionIndex = value;\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the red channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionR():number\n\t{\n\t\treturn this._dispersionR;\n\t}\n\n\tpublic set dispersionR(value:number)\n\t{\n\t\tthis._dispersionR = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the green channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionG():number\n\t{\n\t\treturn this._dispersionG;\n\t}\n\n\tpublic set dispersionG(value:number)\n\t{\n\t\tthis._dispersionG = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of chromatic dispersion of the blue channel. Defaults to 0 (none).\n\t */\n\tpublic get dispersionB():number\n\t{\n\t\treturn this._dispersionB;\n\t}\n\n\tpublic set dispersionB(value:number)\n\t{\n\t\tthis._dispersionB = value;\n\n\t\tvar useDispersion:boolean = !(this._dispersionR == this._dispersionB && this._dispersionR == this._dispersionG);\n\t\tif (this._useDispersion != useDispersion) {\n\t\t\tthis.iInvalidateShaderProgram();\n\t\t\tthis._useDispersion = useDispersion;\n\t\t}\n\t}\n\n\t/**\n\t * The amount of transparency of the object. Warning: the alpha applies to the refracted color, not the actual\n\t * material. A value of 1 will make it appear fully transparent.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._dispersionR + this._refractionIndex;\n\n\t\tif (this._useDispersion) {\n\t\t\tdata[index + 1] = this._dispersionG + this._refractionIndex;\n\t\t\tdata[index + 2] = this._dispersionB + this._refractionIndex;\n\t\t}\n\t\tdata[index + 3] = this._alpha;\n\n\t\tstage.context.activateCubeTexture(methodVO.texturesIndex, this._envMap);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// todo: data2.x could use common reg, so only 1 reg is used\n\t\tvar data:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar data2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar code:string = \"\";\n\t\tvar cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar refractionDir:ShaderRegisterElement;\n\t\tvar refractionColor:ShaderRegisterElement;\n\t\tvar temp:ShaderRegisterElement;\n\n\t\tmethodVO.texturesIndex = cubeMapReg.index;\n\t\tmethodVO.fragmentConstantsIndex = data.index*4;\n\n\t\trefractionDir = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(refractionDir, 1);\n\t\trefractionColor = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(refractionColor, 1);\n\n\t\ttemp = registerCache.getFreeFragmentVectorTemp();\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\n\n\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"mul \" + temp + \".w, \" + data + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\"mul \" + temp + \".x, \" + data + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\"mul \" + refractionDir + \", \" + data + \".x, \" + viewDirReg + \"\\n\" +\n\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(refractionColor, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\"sub \" + refractionColor + \".w, \" + refractionColor + \".w, fc0.x\t\\n\" +\n\t\t\t\"kil \" + refractionColor + \".w\\n\";\n\n\t\tif (this._useDispersion) {\n\t\t\t// GREEN\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".y, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".y, \" + temp + \".x\\n\" +\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".y, \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\t\"mov \" + refractionColor + \".y, \" + temp + \".y\\n\";\n\n\t\t\t// BLUE\n\t\t\tcode += \"dp3 \" + temp + \".x, \" + viewDirReg + \".xyz, \" + normalReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\n\t\t\t\t\"mul \" + temp + \".w, \" + data + \".z, \" + temp + \".w\\n\" +\n\t\t\t\t\"sub \" + temp + \".w, \" + data2 + \".x, \" + temp + \".w\\n\" +\n\t\t\t\t\"sqt \" + temp + \".y, \" + temp + \".w\\n\" +\n\n\t\t\t\t\"mul \" + temp + \".x, \" + data + \".z, \" + temp + \".x\\n\" +\n\t\t\t\t\"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".x, \" + normalReg + \".xyz\\n\" +\n\n\t\t\t\t\"mul \" + refractionDir + \", \" + data + \".z, \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"sub \" + refractionDir + \".xyz, \" + refractionDir + \".xyz, \" + temp + \".xyz\\n\" +\n\t\t\t\t\"nrm \" + refractionDir + \".xyz, \" + refractionDir + \".xyz\\n\";\n\t\t\tcode += ShaderCompilerHelper.getTexCubeSampleCode(temp, cubeMapReg, this._envMap, shaderObject.useSmoothTextures, shaderObject.useMipmapping, refractionDir) +\n\t\t\t\t\"mov \" + refractionColor + \".z, \" + temp + \".z\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(refractionDir);\n\n\t\tcode += \"sub \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\"mul \" + refractionColor + \".xyz, \" + refractionColor + \".xyz, \" + data + \".w\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + refractionColor + \".xyz\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(refractionColor);\n\n\t\t// restore\n\t\tcode += \"neg \" + viewDirReg + \".xyz, \" + viewDirReg + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectRefractionEnvMapMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\n\n/**\n * EffectRimLightMethod provides a method to add rim lighting to a material. This adds a glow-like effect to edges of objects.\n */\nclass EffectRimLightMethod extends EffectMethodBase\n{\n\tpublic static ADD:string = \"add\";\n\tpublic static MULTIPLY:string = \"multiply\";\n\tpublic static MIX:string = \"mix\";\n\n\tprivate _color:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _colorR:number;\n\tprivate _colorG:number;\n\tprivate _colorB:number;\n\tprivate _strength:number;\n\tprivate _power:number;\n\n\t/**\n\t * Creates a new <code>EffectRimLightMethod</code> object.\n\t *\n\t * @param color The colour of the rim light.\n\t * @param strength The strength of the rim light.\n\t * @param power The power of the rim light. Higher values will result in a higher edge fall-off.\n\t * @param blend The blend mode with which to add the light to the object.\n\t */\n\tconstructor(color:number /*uint*/ = 0xffffff, strength:number = .4, power:number = 2, blend:string = \"mix\")\n\t{\n\t\tsuper();\n\n\t\tthis._blendMode = blend;\n\t\tthis._strength = strength;\n\t\tthis._power = power;\n\n\t\tthis.color = color;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsNormals = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\n\t/**\n\t * The blend mode with which to add the light to the object.\n\t *\n\t * EffectRimLightMethod.MULTIPLY multiplies the rim light with the material's colour.\n\t * EffectRimLightMethod.ADD adds the rim light with the material's colour.\n\t * EffectRimLightMethod.MIX provides normal alpha blending.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._blendMode == value)\n\t\t\treturn;\n\n\t\tthis._blendMode = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The color of the rim light.\n\t */\n\tpublic get color():number /*uint*/\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number /*uint*/)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t * The strength of the rim light.\n\t */\n\tpublic get strength():number\n\t{\n\t\treturn this._strength;\n\t}\n\n\tpublic set strength(value:number)\n\t{\n\t\tthis._strength = value;\n\t}\n\n\t/**\n\t * The power of the rim light. Higher values will result in a higher edge fall-off.\n\t */\n\tpublic get power():number\n\t{\n\t\treturn this._power;\n\t}\n\n\tpublic set power(value:number)\n\t{\n\t\tthis._power = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._colorR;\n\t\tdata[index + 1] = this._colorG;\n\t\tdata[index + 2] = this._colorB;\n\t\tdata[index + 4] = this._strength;\n\t\tdata[index + 5] = this._power;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar dataRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataRegister2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = dataRegister.index*4;\n\n\t\tcode += \"dp3 \" + temp + \".x, \" + sharedRegisters.viewDirFragment + \".xyz, \" + sharedRegisters.normalFragment + \".xyz\\n\" +\n\t\t\t\"sat \" + temp + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\n\t\t\t\"pow \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".y\\n\" +\n\t\t\t\"mul \" + temp + \".x, \" + temp + \".x, \" + dataRegister2 + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".x, \" + dataRegister + \".w, \" + temp + \".x\\n\" +\n\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".x\\n\" +\n\t\t\t\"sub \" + temp + \".w, \" + dataRegister + \".w, \" + temp + \".x\\n\";\n\n\t\tif (this._blendMode == EffectRimLightMethod.ADD) {\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t} else if (this._blendMode == EffectRimLightMethod.MULTIPLY) {\n\t\t\tcode += \"mul \" + temp + \".xyz, \" + temp + \".w, \" + dataRegister + \".xyz\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t} else {\n\t\t\tcode += \"sub \" + temp + \".xyz, \" + dataRegister + \".xyz, \" + targetReg + \".xyz\\n\" +\n\t\t\t\t\"mul \" + temp + \".xyz, \" + temp + \".xyz, \" + temp + \".w\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + temp + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = EffectRimLightMethod;","import MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * LightingMethodBase provides an abstract base method for shading methods that uses lights.\n * Used for diffuse and specular shaders only.\n */\nclass LightingMethodBase extends ShadingMethodBase\n{\n\t/**\n\t * A method that is exposed to wrappers in case the strength needs to be controlled\n\t */\n\tpublic _iModulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string;\n\n\t/**\n\t * Creates a new LightingMethodBase.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Get the fragment shader code that will be needed before any per-light code is added.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @private\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param lightDirReg The register containing the light direction vector.\n\t * @param lightColReg The register containing the light colour.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light probe object.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param cubeMapReg The register containing the cube map for the current probe\n\t * @param weightRegister A string representation of the register + component containing the current weight\n\t * @param regCache The register cache providing any necessary registers to the shader\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register containing the final shading output.\n\t * @private\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = LightingMethodBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * NormalBasicMethod is the default method for standard tangent-space normal mapping.\n */\nclass NormalBasicMethod extends ShadingMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useTexture:boolean;\n\tpublic _pNormalTextureRegister:ShaderRegisterElement;\n\n\t/**\n\t * Creates a new NormalBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\tif (!this._useTexture || !shaderObject.normalDependencies)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._useTexture;\n\t}\n\n\t/**\n\t * Indicates whether or not this method outputs normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iOutputsTangentNormals():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar s:any = method;\n\t\tvar bnm:NormalBasicMethod = <NormalBasicMethod> method;\n\n\t\tif (bnm.normalMap != null)\n\t\t\tthis.normalMap = bnm.normalMap;\n\t}\n\n\t/**\n\t * The texture containing the normals per pixel.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._useTexture || (value && this._texture && (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._useTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pNormalTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._texture)\n\t\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.texturesIndex >= 0) {\n\t\t\tstage.context.setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex, this._texture);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \"\\n\";\n\t}\n}\n\nexport = NormalBasicMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/NormalBasicMethod\");\nimport ShadingMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * NormalHeightMapMethod provides a normal map method that uses a height map to calculate the normals.\n */\nclass NormalHeightMapMethod extends NormalBasicMethod\n{\n\tprivate _worldXYRatio:number;\n\tprivate _worldXZRatio:number;\n\n\t/**\n\t * Creates a new NormalHeightMapMethod method.\n\t *\n\t * @param heightMap The texture containing the height data. 0 means low, 1 means high.\n\t * @param worldWidth The width of the 'world'. This is used to map uv coordinates' u component to scene dimensions.\n\t * @param worldHeight The height of the 'world'. This is used to map the height map values to scene dimensions.\n\t * @param worldDepth The depth of the 'world'. This is used to map uv coordinates' v component to scene dimensions.\n\t */\n\tconstructor(heightMap:Texture2DBase, worldWidth:number, worldHeight:number, worldDepth:number)\n\t{\n\t\tsuper();\n\n\t\tthis.normalMap = heightMap;\n\t\tthis._worldXYRatio = worldWidth/worldHeight;\n\t\tthis._worldXZRatio = worldDepth/worldHeight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1/this.normalMap.width;\n\t\tdata[index + 1] = 1/this.normalMap.height;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t\tdata[index + 4] = this._worldXYRatio;\n\t\tdata[index + 5] = this._worldXZRatio;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get tangentSpace():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tsuper.copyFrom(method);\n\n\t\tthis._worldXYRatio = (<NormalHeightMapMethod> method)._worldXYRatio;\n\t\tthis._worldXZRatio = (<NormalHeightMapMethod> method)._worldXZRatio;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, sharedRegisters.uvVarying, \"clamp\") +\n\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".xzzz\\n\" +\n\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\n\n\t\t\t\"sub \" + targetReg + \".x, \" + targetReg + \".x, \" + temp + \".x\\n\" +\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg + \".zyzz\\n\" +\n\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp, \"clamp\") +\n\n\t\t\t\"sub \" + targetReg + \".z, \" + targetReg + \".z, \" + temp + \".x\\n\" +\n\t\t\t\"mov \" + targetReg + \".y, \" + dataReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".xz, \" + targetReg + \".xz, \" + dataReg2 + \".xy\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\\n\";\n\t}\n}\n\nexport = NormalHeightMapMethod;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/NormalBasicMethod\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * NormalSimpleWaterMethod provides a basic normal map method to create water ripples by translating two wave normal maps.\n */\nclass NormalSimpleWaterMethod extends NormalBasicMethod\n{\n\tprivate _texture2:Texture2DBase;\n\tprivate _normalTextureRegister2:ShaderRegisterElement;\n\tprivate _useSecondNormalMap:boolean = false;\n\tprivate _water1OffsetX:number = 0;\n\tprivate _water1OffsetY:number = 0;\n\tprivate _water2OffsetX:number = 0;\n\tprivate _water2OffsetY:number = 0;\n\n\t/**\n\t * Creates a new NormalSimpleWaterMethod object.\n\t * @param waveMap1 A normal map containing one layer of a wave structure.\n\t * @param waveMap2 A normal map containing a second layer of a wave structure.\n\t */\n\tconstructor(waveMap1:Texture2DBase, waveMap2:Texture2DBase)\n\t{\n\t\tsuper();\n\t\tthis.normalMap = waveMap1;\n\t\tthis.secondaryNormalMap = waveMap2;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = .5;\n\t\tdata[index + 1] = 0;\n\t\tdata[index + 2] = 0;\n\t\tdata[index + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tthis._useSecondNormalMap = this.normalMap != this.secondaryNormalMap;\n\t}\n\n\t/**\n\t * The translation of the first wave layer along the X-axis.\n\t */\n\tpublic get water1OffsetX():number\n\t{\n\t\treturn this._water1OffsetX;\n\t}\n\n\tpublic set water1OffsetX(value:number)\n\t{\n\t\tthis._water1OffsetX = value;\n\t}\n\n\t/**\n\t * The translation of the first wave layer along the Y-axis.\n\t */\n\tpublic get water1OffsetY():number\n\t{\n\t\treturn this._water1OffsetY;\n\t}\n\n\tpublic set water1OffsetY(value:number)\n\t{\n\t\tthis._water1OffsetY = value;\n\t}\n\n\t/**\n\t * The translation of the second wave layer along the X-axis.\n\t */\n\tpublic get water2OffsetX():number\n\t{\n\t\treturn this._water2OffsetX;\n\t}\n\n\tpublic set water2OffsetX(value:number)\n\t{\n\t\tthis._water2OffsetX = value;\n\t}\n\n\t/**\n\t * The translation of the second wave layer along the Y-axis.\n\t */\n\tpublic get water2OffsetY():number\n\t{\n\t\treturn this._water2OffsetY;\n\t}\n\n\tpublic set water2OffsetY(value:number)\n\t{\n\t\tthis._water2OffsetY = value;\n\t}\n\n\t/**\n\t * A second normal map that will be combined with the first to create a wave-like animation pattern.\n\t */\n\tpublic get secondaryNormalMap():Texture2DBase\n\t{\n\t\treturn this._texture2;\n\t}\n\n\tpublic set secondaryNormalMap(value:Texture2DBase)\n\t{\n\t\tthis._texture2 = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._normalTextureRegister2 = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t\tthis._texture2 = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\n\t\tdata[index + 4] = this._water1OffsetX;\n\t\tdata[index + 5] = this._water1OffsetY;\n\t\tdata[index + 6] = this._water2OffsetX;\n\t\tdata[index + 7] = this._water2OffsetY;\n\n\t\t//if (this._useSecondNormalMap >= 0)\n\t\tif (this._useSecondNormalMap)\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex + 1, this._texture2);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\t\tthis._normalTextureRegister2 = this._useSecondNormalMap? registerCache.getFreeTextureReg():this._pNormalTextureRegister;\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\tmethodVO.fragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn \"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".xyxy\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this.normalMap, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\"add \" + temp + \", \" + sharedRegisters.uvVarying + \", \" + dataReg2 + \".zwzw\\n\" +\n\t\t\tShaderCompilerHelper.getTex2DSampleCode(temp, sharedRegisters, this._normalTextureRegister2, this._texture2, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping, temp) +\n\t\t\t\"add \" + targetReg + \", \" + targetReg + \", \" + temp + \"\t\t\\n\" +\n\t\t\t\"mul \" + targetReg + \", \" + targetReg + \", \" + dataReg + \".x\t\\n\" +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\t\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \".xyz\t\t\t\t\t\t\t\\n\";\n\t}\n}\n\nexport = NormalSimpleWaterMethod;","import NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\n\n\n/**\n * ShadingMethodBase provides an abstract base method for shading methods, used by compiled passes to compile\n * the final shading program.\n */\nclass ShadingMethodBase extends NamedAssetBase\n{\n\tpublic _passes:Array<MaterialPassBase>; // should be protected\n\n\t/**\n\t * Create a new ShadingMethodBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Initializes the properties for a MethodVO, including register and texture indices.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t}\n\n\t/**\n\t * Initializes unchanging shader constants using the data from a MethodVO.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\n\t}\n\n\t/**\n\t * Indicates whether or not this method expects normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iUsesTangentSpace():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Any passes required that render to a texture used by this method.\n\t */\n\tpublic get passes():Array<MaterialPassBase>\n\t{\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\t/**\n\t * Resets the compilation state of the method.\n\t *\n\t * @internal\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Resets the method's state for compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t}\n\n\t/**\n\t * Get the vertex shader code for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the render state for this method.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Sets the render state for a single renderable.\n\t *\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param renderable The renderable currently being rendered.\n\t * @param stage The Stage object currently used for rendering.\n\t * @param camera The camera from which the scene is currently rendered.\n\t *\n\t * @internal\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\n\t}\n\n\t/**\n\t * Clears the render state for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @internal\n\t */\n\tpublic iInvalidateShaderProgram()\n\t{\n\t\tthis.dispatchEvent(new ShadingMethodEvent(ShadingMethodEvent.SHADER_INVALIDATED));\n\t}\n\n\t/**\n\t * Copies the state from a ShadingMethodBase object into the current object.\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t}\n}\n\nexport = ShadingMethodBase;","import Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport CascadeShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMapMethodBase\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\nimport ShaderCompilerHelper\t\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * ShadowCascadeMethod is a shadow map method to apply cascade shadow mapping on materials.\n * Must be used with a DirectionalLight with a CascadeShadowMapper assigned to its shadowMapper property.\n *\n * @see away.lights.CascadeShadowMapper\n */\nclass ShadowCascadeMethod extends ShadowMapMethodBase\n{\n\tprivate _baseMethod:ShadowMethodBase;\n\tprivate _cascadeShadowMapper:CascadeShadowMapper;\n\tprivate _depthMapCoordVaryings:Array<ShaderRegisterElement>;\n\tprivate _cascadeProjections:Array<ShaderRegisterElement>;\n\n\t/**\n\t * Creates a new ShadowCascadeMethod object.\n\t *\n\t * @param shadowMethodBase The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\n\t */\n\tconstructor(shadowMethodBase:ShadowMethodBase)\n\t{\n\t\tsuper(shadowMethodBase.castingLight);\n\n\t\tthis._baseMethod = shadowMethodBase;\n\t\tif (!(this._pCastingLight instanceof DirectionalLight))\n\t\t\tthrow new Error(\"ShadowCascadeMethod is only compatible with DirectionalLight\");\n\n\t\tthis._cascadeShadowMapper = <CascadeShadowMapper> this._pCastingLight.shadowMapper;\n\n\t\tif (!this._cascadeShadowMapper)\n\t\t\tthrow new Error(\"ShadowCascadeMethod requires a light that has a CascadeShadowMapper instance assigned to shadowMapper.\");\n\n\t\tthis._cascadeShadowMapper.addEventListener(Event.CHANGE, (event:Event) => this.onCascadeChange(event));\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\t}\n\n\t/**\n\t * The shadow map sampling method used to sample individual cascades. These are typically those used in conjunction\n\t * with a DirectionalShadowMapper.\n\t *\n\t * @see ShadowHardMethod\n\t * @see ShadowSoftMethod\n\t */\n\tpublic get baseMethod():ShadowMethodBase\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:ShadowMethodBase)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, (event:ShadingMethodEvent) => this.onShaderInvalidated(event));\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tvar tempVO:MethodVO = new MethodVO(this._baseMethod);\n\t\tthis._baseMethod.iInitVO(shaderObject, tempVO);\n\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = .5;\n\t\tfragmentData[index + 7] = -.5;\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tvertexData[index] = .5;\n\t\tvertexData[index + 1] = -.5;\n\t\tvertexData[index + 2] = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._cascadeProjections = null;\n\t\tthis._depthMapCoordVaryings = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\n\t\tthis.initProjectionsRegs(registerCache);\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\n\t\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + this._cascadeProjections[i] + \"\\n\" +\n\t\t\t\t\"add \" + this._depthMapCoordVaryings[i] + \", \" + temp + \", \" + dataReg + \".zzwz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Creates the registers for the cascades' projection coordinates.\n\t */\n\tprivate initProjectionsRegs(registerCache:ShaderRegisterCache)\n\t{\n\t\tthis._cascadeProjections = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\n\t\tthis._depthMapCoordVaryings = new Array<ShaderRegisterElement>(this._cascadeShadowMapper.numCascades);\n\n\t\tfor (var i:number = 0; i < this._cascadeShadowMapper.numCascades; ++i) {\n\t\t\tthis._depthMapCoordVaryings[i] = registerCache.getFreeVarying();\n\t\t\tthis._cascadeProjections[i] = registerCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\n\t\tvar depthMapRegister:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar planeDistanceReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar planeDistances:Array<string> = Array<string>( planeDistanceReg + \".x\", planeDistanceReg + \".y\", planeDistanceReg + \".z\", planeDistanceReg + \".w\" );\n\t\tvar code:string;\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tvar inQuad:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(inQuad, 1);\n\t\tvar uvCoord:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(uvCoord, 1);\n\n\t\t// assume lowest partition is selected, will be overwritten later otherwise\n\t\tcode = \"mov \" + uvCoord + \", \" + this._depthMapCoordVaryings[numCascades - 1] + \"\\n\";\n\n\t\tfor (var i:number = numCascades - 2; i >= 0; --i) {\n\t\t\tvar uvProjection:ShaderRegisterElement = this._depthMapCoordVaryings[i];\n\n\t\t\t// calculate if in texturemap (result == 0 or 1, only 1 for a single partition)\n\t\t\tcode += \"slt \" + inQuad + \".z, \" + sharedRegisters.projectionFragment + \".z, \" + planeDistances[i] + \"\\n\"; // z = x > minX, w = y > minY\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\n\t\t\t// linearly interpolate between old and new uv coords using predicate value == conditional toggle to new value if predicate == 1 (true)\n\t\t\tcode += \"sub \" + temp + \", \" + uvProjection + \", \" + uvCoord + \"\\n\" +\n\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + inQuad + \".z\\n\" +\n\t\t\t\t\"add \" + uvCoord + \", \" + uvCoord + \", \" + temp + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(inQuad);\n\n\t\tcode += \"div \" + uvCoord + \", \" + uvCoord + \", \" + uvCoord + \".w\\n\" +\n\t\t\t\"mul \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zw\\n\" +\n\t\t\t\"add \" + uvCoord + \".xy, \" + uvCoord + \".xy, \" + dataReg + \".zz\\n\";\n\n\t\tcode += this._baseMethod._iGetCascadeFragmentCode(shaderObject, methodVO, decReg, depthMapRegister, uvCoord, targetReg, registerCache, sharedRegisters) +\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + dataReg + \".y\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(uvCoord);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tstage.context.activateTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap);\n\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar vertexIndex:number = methodVO.vertexConstantsIndex;\n\n\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/(this._cascadeShadowMapper.depth*this._pEpsilon);\n\n\t\tvar numCascades:number = this._cascadeShadowMapper.numCascades;\n\t\tvertexIndex += 4;\n\t\tfor (var k:number = 0; k < numCascades; ++k) {\n\t\t\tthis._cascadeShadowMapper.getDepthProjections(k).copyRawDataTo(vertexData, vertexIndex, true);\n\t\t\tvertexIndex += 16;\n\t\t}\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar fragmentIndex:number = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[fragmentIndex + 5] = 1 - this._pAlpha;\n\n\t\tvar nearPlaneDistances:Array<number> = this._cascadeShadowMapper._iNearPlaneDistances;\n\n\t\tfragmentIndex += 8;\n\t\tfor (var i:number = 0; i < numCascades; ++i)\n\t\t\tfragmentData[fragmentIndex + i] = nearPlaneDistances[i];\n\n\t\tthis._baseMethod.iActivateForCascade(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t}\n\n\t/**\n\t * Called when the shadow mappers cascade configuration changes.\n\t */\n\tprivate onCascadeChange(event:Event)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = ShadowCascadeMethod;","import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\n\n/**\n * ShadowDitheredMethod provides a soft shadowing technique by randomly distributing sample points differently for each fragment.\n */\nclass ShadowDitheredMethod extends ShadowMethodBase\n{\n\tprivate static _grainTexture:BitmapTexture;\n\tprivate static _grainUsages:number /*int*/;\n\tprivate static _grainBitmapData:BitmapData;\n\tprivate _depthMapSize:number /*int*/;\n\tprivate _range:number;\n\tprivate _numSamples:number /*int*/;\n\n\t/**\n\t * Creates a new ShadowDitheredMethod object.\n\t * @param castingLight The light casting the shadows\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 24.\n\t */\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 4, range:number = 1)\n\t{\n\t\tsuper(castingLight);\n\n\t\tthis._depthMapSize = this._pCastingLight.shadowMapper.depthMapSize;\n\n\t\tthis.numSamples = numSamples;\n\t\tthis.range = range;\n\n\t\t++ShadowDitheredMethod._grainUsages;\n\n\t\tif (!ShadowDitheredMethod._grainTexture)\n\t\t\tthis.initGrainTexture();\n\t}\n\n\t/**\n\t * The amount of samples to take for dithering. Minimum 1, maximum 24. The actual maximum may depend on the\n\t * complexity of the shader.\n\t */\n\tpublic get numSamples():number /*int*/\n\t{\n\t\treturn this._numSamples;\n\t}\n\n\tpublic set numSamples(value:number /*int*/)\n\t{\n\t\tthis._numSamples = value;\n\t\tif (this._numSamples < 1)\n\t\t\tthis._numSamples = 1; else if (this._numSamples > 24)\n\t\t\tthis._numSamples = 24;\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index + 8] = 1/this._numSamples;\n\t}\n\n\t/**\n\t * The range in the shadow map in which to distribute the samples.\n\t */\n\tpublic get range():number\n\t{\n\t\treturn this._range*2;\n\t}\n\n\tpublic set range(value:number)\n\t{\n\t\tthis._range = value/2;\n\t}\n\n\t/**\n\t * Creates a texture containing the dithering noise texture.\n\t */\n\tprivate initGrainTexture()\n\t{\n\t\tShadowDitheredMethod._grainBitmapData = new BitmapData(64, 64, false);\n\t\tvar vec:Array<number> /*uint*/ = new Array<number>();\n\t\tvar len:number /*uint*/ = 4096;\n\t\tvar step:number = 1/(this._depthMapSize*this._range);\n\t\tvar r:number, g:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tr = 2*(Math.random() - .5);\n\t\t\tg = 2*(Math.random() - .5);\n\t\t\tif (r < 0)\n\t\t\t\tr -= step; else\n\t\t\t\tr += step;\n\t\t\tif (g < 0)\n\t\t\t\tg -= step; else\n\t\t\t\tg += step;\n\t\t\tif (r > 1)\n\t\t\t\tr = 1; else if (r < -1)\n\t\t\t\tr = -1;\n\t\t\tif (g > 1)\n\t\t\t\tg = 1; else if (g < -1)\n\t\t\t\tg = -1;\n\t\t\tvec[i] = (Math.floor((r*.5 + .5)*0xff) << 16) | (Math.floor((g*.5 + .5)*0xff) << 8);\n\t\t}\n\n\t\tShadowDitheredMethod._grainBitmapData.setVector(ShadowDitheredMethod._grainBitmapData.rect, vec);\n\t\tShadowDitheredMethod._grainTexture = new BitmapTexture(ShadowDitheredMethod._grainBitmapData);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (--ShadowDitheredMethod._grainUsages == 0) {\n\t\t\tShadowDitheredMethod._grainTexture.dispose();\n\t\t\tShadowDitheredMethod._grainBitmapData.dispose();\n\t\t\tShadowDitheredMethod._grainTexture = null;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex;\n\t\tdata[index + 9] = (stage.width - 1)/63;\n\t\tdata[index + 10] = (stage.height - 1)/63;\n\t\tdata[index + 11] = 2*this._range/this._depthMapSize;\n\n\t\tstage.context.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn this.getSampleCode(customDataReg, depthMapRegister, decReg, targetReg, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Get the actual shader code for shadow mapping\n\t * @param regCache The register cache managing the registers.\n\t * @param depthMapRegister The texture register containing the depth map.\n\t * @param decReg The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the shadow coverage.\n\t */\n\tprivate getSampleCode(customDataReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar grainRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar uvReg:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar numSamples:number /*int*/ = this._numSamples;\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\tvar projectionReg:ShaderRegisterElement = sharedRegisters.projectionFragment;\n\n\t\tcode += \"div \" + uvReg + \", \" + projectionReg + \", \" + projectionReg + \".w\\n\" + \"mul \" + uvReg + \".xy, \" + uvReg + \".xy, \" + customDataReg + \".yz\\n\";\n\n\t\twhile (numSamples > 0) {\n\t\t\tif (numSamples == this._numSamples)\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \", \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\n\t\t\telse\n\t\t\t\tcode += \"tex \" + uvReg + \", \" + uvReg + \".zwxy, \" + grainRegister + \" <2d,nearest,repeat,mipnone>\\n\";\n\n\t\t\t// keep grain in uvReg.zw\n\t\t\tcode += \"sub \" + uvReg + \".zw, \" + uvReg + \".xy, fc0.xx\\n\" + // uv-.5\n\t\t\t\t\"mul \" + uvReg + \".zw, \" + uvReg + \".zw, \" + customDataReg + \".w\\n\"; // (tex unpack scale and tex scale in one)\n\n\t\t\tif (numSamples == this._numSamples) {\n\t\t\t\t// first sample\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".zw, \" + this._pDepthMapCoordReg + \".xy\\n\" +\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t\t\t} else {\n\t\t\t\tcode += this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\t\t\t}\n\n\t\t\tif (numSamples > 4)\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 1)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 5)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".zw\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 2) {\n\t\t\t\tcode += \"neg \" + uvReg + \".w, \" + uvReg + \".w\\n\"; // will be rotated 90 degrees when being accessed as wz\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".wz, \" + this._pDepthMapCoordReg + \".xy\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\t\t\t}\n\n\t\t\tif (numSamples > 6)\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 3)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tif (numSamples > 7)\n\t\t\t\tcode += \"sub \" + uvReg + \".xy, \" + uvReg + \".xy, \" + uvReg + \".wz\\n\" + this.addSample(uvReg, depthMapRegister, decReg, targetReg, regCache);\n\n\t\t\tnumSamples -= 8;\n\t\t}\n\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\t\tcode += \"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + customDataReg + \".x\\n\"; // average\n\t\treturn code;\n\t}\n\n\t/**\n\t * Adds the code for another tap to the shader code.\n\t * @param uvReg The uv register for the tap.\n\t * @param depthMapRegister The texture register containing the depth map.\n\t * @param decReg The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the tap comparison result.\n\t * @param regCache The register cache managing the registers.\n\t * @return\n\t */\n\tprivate addSample(uvReg:ShaderRegisterElement, depthMapRegister:ShaderRegisterElement, decReg:ShaderRegisterElement, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache):string\n\t{\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\treturn \"tex \" + temp + \", \" + uvReg + \", \" + depthMapRegister + \" <2d,nearest,clamp,mipnone>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + temp + \".z, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\n\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \".z\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tdata[index] = 1/this._numSamples;\n\t\tdata[index + 1] = (stage.width - 1)/63;\n\t\tdata[index + 2] = (stage.height - 1)/63;\n\t\tdata[index + 3] = 2*this._range/this._depthMapSize;\n\n\t\tstage.context.activateTexture(methodVO.texturesIndex + 1, ShadowDitheredMethod._grainTexture);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pDepthMapCoordReg = depthProjection;\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn this.getSampleCode(dataReg, depthTexture, decodeRegister, targetRegister, registerCache, sharedRegisters);\n\t}\n}\n\nexport = ShadowDitheredMethod;","import DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\n\n/**\n * ShadowFilteredMethod provides a softened shadowing technique by bilinearly interpolating shadow comparison\n * results of neighbouring pixels.\n */\nclass ShadowFilteredMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t *\n\t * @param castingLight The light casting the shadow\n\t */\n\tconstructor(castingLight:DirectionalLight)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index + 8] = .5;\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\n\t\tfragmentData[index + 9] = size;\n\t\tfragmentData[index + 10] = 1/size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t// TODO: not used\n\t\tdataReg = dataReg;\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar uvReg:ShaderRegisterElement;\n\t\tvar code:string = \"\";\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\n\t\tregCache.addFragmentTempUsages(depthCol, 1);\n\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tcode += \"mov \" + uvReg + \", \" + this._pDepthMapCoordReg + \"\\n\" +\n\n\t\t\t\"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" + \t// (1, 0)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\n\n\t\t\t\"mov \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x\\n\" + \"add \" + uvReg + \".y, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".z\\n\" +\t// (0, 1)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t\"add \" + uvReg + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".z\\n\" +\t// (1, 1)\n\t\t\t\"tex \" + depthCol + \", \" + uvReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" + \"slt \" + uvReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\" +   // 0 if in shadow\n\n\t\t\t// recalculate fraction, since we ran out of registers :(\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".x, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + uvReg + \".z\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + uvReg + \".w, \" + uvReg + \".z, \" + uvReg + \".w\\n\" +\n\n\t\t\t\"mul \" + depthCol + \".x, \" + this._pDepthMapCoordReg + \".y, \" + customDataReg + \".y\\n\" + \"frc \" + depthCol + \".x, \" + depthCol + \".x\\n\" + \"sub \" + uvReg + \".w, \" + uvReg + \".w, \" + targetReg + \".w\\n\" + \"mul \" + uvReg + \".w, \" + uvReg + \".w, \" + depthCol + \".x\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + uvReg + \".w\\n\";\n\n\t\tregCache.removeFragmentTempUsage(depthCol);\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar size:number /*int*/ = this.castingLight.shadowMapper.depthMapSize;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = size;\n\t\tdata[index + 1] = 1/size;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp, 1);\n\t\tvar predicate:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(predicate, 1);\n\n\t\tcode = \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".x, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"add \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".z, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"add \" + depthProjection + \".y, \" + depthProjection + \".y, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"sub \" + depthProjection + \".x, \" + depthProjection + \".x, \" + dataReg + \".y\\n\" + \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" + \"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" + \"slt \" + predicate + \".y, \" + depthProjection + \".z, \" + temp + \".z\\n\" +\n\n\t\t\t\"mul \" + temp + \".xy, \" + depthProjection + \".xy, \" + dataReg + \".x\\n\" + \"frc \" + temp + \".xy, \" + temp + \".xy\\n\" +\n\n\t\t\t// some strange register juggling to prevent agal bugging out\n\t\t\t\"sub \" + depthProjection + \", \" + predicate + \".xyzw, \" + predicate + \".zwxy\\n\" + \"mul \" + depthProjection + \", \" + depthProjection + \", \" + temp + \".x\\n\" +\n\n\t\t\t\"add \" + predicate + \".xy, \" + predicate + \".xy, \" + depthProjection + \".zw\\n\" +\n\n\t\t\t\"sub \" + predicate + \".y, \" + predicate + \".y, \" + predicate + \".x\\n\" + \"mul \" + predicate + \".y, \" + predicate + \".y, \" + temp + \".y\\n\" + \"add \" + targetRegister + \".w, \" + predicate + \".x, \" + predicate + \".y\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp);\n\t\tregisterCache.removeFragmentTempUsage(predicate);\n\t\treturn code;\n\t}\n}\n\nexport = ShadowFilteredMethod;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\n\n/**\n * ShadowHardMethod provides the cheapest shadow map method by using a single tap without any filtering.\n */\nclass ShadowHardMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new ShadowHardMethod object.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t// needs to be reserved anyway. DO NOT REMOVE\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\"; // 0 if in shadow\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar epsReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar posReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthSampleCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(depthSampleCol, 1);\n\t\tvar lightDir:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"sub \" + lightDir + \", \" + sharedRegisters.globalPositionVarying + \", \" + posReg + \"\\n\" +\n\t\t\t\"dp3 \" + lightDir + \".w, \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\t\t\t\"mul \" + lightDir + \".w, \" + lightDir + \".w, \" + posReg + \".w\\n\" +\n\t\t\t\"nrm \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\n\t\t\t\"tex \" + depthSampleCol + \", \" + lightDir + \", \" + depthMapRegister + \" <cube, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthSampleCol + \".z, \" + depthSampleCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + lightDir + \".w, \" + epsReg + \".x\\n\" +    // offset by epsilon\n\n\t\t\t\"slt \" + targetReg + \".w, \" + targetReg + \".w, \" + depthSampleCol + \".z\\n\"; // 0 if in shadow\n\n\t\tregCache.removeFragmentTempUsage(depthSampleCol);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\"slt \" + targetRegister + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t}\n}\n\nexport = ShadowHardMethod;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * ShadowMapMethodBase provides an abstract base method for shadow map methods.\n */\nclass ShadowMapMethodBase extends ShadingMethodBase implements IAsset\n{\n\tpublic _pCastingLight:LightBase;\n\tpublic _pShadowMapper:ShadowMapperBase;\n\n\tpublic _pEpsilon:number = .02;\n\tpublic _pAlpha:number = 1;\n\n\t/**\n\t * Creates a new ShadowMapMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper();\n\t\tthis._pCastingLight = castingLight;\n\t\tcastingLight.castsShadows = true;\n\t\tthis._pShadowMapper = castingLight.shadowMapper;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SHADOW_MAP_METHOD;\n\t}\n\n\t/**\n\t * The \"transparency\" of the shadows. This allows making shadows less strong.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._pAlpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._pAlpha = value;\n\t}\n\n\t/**\n\t * The light casting the shadows.\n\t */\n\tpublic get castingLight():LightBase\n\t{\n\t\treturn this._pCastingLight;\n\t}\n\n\t/**\n\t * A small value to counter floating point precision errors when comparing values in the shadow map with the\n\t * calculated depth value. Increase this if shadow banding occurs, decrease it if the shadow seems to be too detached.\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._pEpsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._pEpsilon = value;\n\t}\n}\n\nexport = ShadowMapMethodBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMapMethodBase\");\n\n/**\n * ShadowMethodBase provides an abstract method for simple (non-wrapping) shadow map methods.\n */\nclass ShadowMethodBase extends ShadowMapMethodBase\n{\n\tpublic _pDepthMapCoordReg:ShaderRegisterElement;\n\tpublic _pUsePoint:boolean;\n\n\t/**\n\t * Creates a new ShadowMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tthis._pUsePoint = (castingLight instanceof PointLight);\n\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsGlobalFragmentPos = this._pUsePoint;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = 0;\n\t\tfragmentData[index + 7] = 1;\n\n\t\tif (this._pUsePoint) {\n\t\t\tfragmentData[index + 8] = 0;\n\t\t\tfragmentData[index + 9] = 0;\n\t\t\tfragmentData[index + 10] = 0;\n\t\t\tfragmentData[index + 11] = 1;\n\t\t}\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tif (index != -1) {\n\t\t\tvertexData[index] = .5;\n\t\t\tvertexData[index + 1] = .5;\n\t\t\tvertexData[index + 2] = 0.0;\n\t\t\tvertexData[index + 3] = 1.0;\n\t\t}\n\t}\n\n\t/**\n\t * Wrappers that override the vertex shader need to set this explicitly\n\t */\n\tpublic get _iDepthMapCoordReg():ShaderRegisterElement\n\t{\n\t\treturn this._pDepthMapCoordReg;\n\t}\n\n\tpublic set _iDepthMapCoordReg(value:ShaderRegisterElement)\n\t{\n\t\tthis._pDepthMapCoordReg = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pDepthMapCoordReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._pUsePoint? this._pGetPointVertexCode(methodVO, regCache, sharedRegisters):this.pGetPlanarVertexCode(methodVO, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a point light.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic _pGetPointVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tmethodVO.vertexConstantsIndex = -1;\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a planar shadow map (fe: directional lights).\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic pGetPlanarVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeVertexVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tvar depthMapProj:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tthis._pDepthMapCoordReg = regCache.getFreeVarying();\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\t// todo: can epsilon be applied here instead of fragment shader?\n\n\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + depthMapProj + \"\\n\" + \"div \" + temp + \", \" + temp + \", \" + temp + \".w\\n\" + \"mul \" + temp + \".xy, \" + temp + \".xy, \" + dataReg + \".xy\\n\" + \"add \" + this._pDepthMapCoordReg + \", \" + temp + \", \" + dataReg + \".xxwz\\n\";\n\t\t//\"sub \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._pUsePoint? this._pGetPointFragmentCode(methodVO, targetReg, registerCache, sharedRegisters):this._pGetPlanarFragmentCode(methodVO, targetReg, registerCache, sharedRegisters);\n\t\tcode += \"add \" + targetReg + \".w, \" + targetReg + \".w, fc\" + (methodVO.fragmentConstantsIndex/4 + 1) + \".y\\n\" + \"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a planar shadow map.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a point light.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tif (!this._pUsePoint)\n\t\t\t(<DirectionalShadowMapper> this._pShadowMapper).iDepthProjection.copyRawDataTo(shaderObject.vertexConstantData, methodVO.vertexConstantsIndex + 4, true);\n\t}\n\n\t/**\n\t * Gets the fragment code for combining this method with a cascaded shadow map method.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param decodeRegister The register containing the data to decode the shadow map depth value.\n\t * @param depthTexture The texture containing the shadow map.\n\t * @param depthProjection The projection of the fragment relative to the light.\n\t * @param targetRegister The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\n\t\tif (this._pUsePoint)\n\t\t\tfragmentData[index + 4] = -Math.pow(1/((<PointLight> this._pCastingLight).fallOff*this._pEpsilon), 2);\n\t\telse\n\t\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/((<DirectionalShadowMapper> this._pShadowMapper).depth*this._pEpsilon);\n\n\t\tfragmentData[index + 5] = 1 - this._pAlpha;\n\n\t\tif (this._pUsePoint) {\n\t\t\tvar pos:Vector3D = this._pCastingLight.scenePosition;\n\t\t\tfragmentData[index + 8] = pos.x;\n\t\t\tfragmentData[index + 9] = pos.y;\n\t\t\tfragmentData[index + 10] = pos.z;\n\t\t\t// used to decompress distance\n\t\t\tvar f:number = (<PointLight> this._pCastingLight).fallOff;\n\t\t\tfragmentData[index + 11] = 1/(2*f*f);\n\t\t}\n\n\t\tif (!this._pUsePoint)\n\t\t\tstage.context.activateRenderTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap);\n\t\t//else\n\t\t//\tstage.context.activateCubeRenderTexture(methodVO.texturesIndex, <CubeTextureBase> this._pCastingLight.shadowMapper.depthMap);\n\t}\n\n\t/**\n\t * Sets the method state for cascade shadow mapping.\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n}\n\nexport = ShadowMethodBase;","import NearDirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\n\n// TODO: shadow mappers references in materials should be an interface so that this class should NOT extend ShadowMapMethodBase just for some delegation work\n/**\n * ShadowNearMethod provides a shadow map method that restricts the shadowed area near the camera to optimize\n * shadow map usage. This method needs to be used in conjunction with a NearDirectionalShadowMapper.\n *\n * @see away.lights.NearDirectionalShadowMapper\n */\nclass ShadowNearMethod extends ShadowMethodBase\n{\n\tprivate _baseMethod:ShadowMethodBase;\n\n\tprivate _fadeRatio:number;\n\tprivate _nearShadowMapper:NearDirectionalShadowMapper;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new ShadowNearMethod object.\n\t * @param baseMethod The shadow map sampling method used to sample individual cascades (fe: ShadowHardMethod, ShadowSoftMethod)\n\t * @param fadeRatio The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\n\t */\n\tconstructor(baseMethod:ShadowMethodBase, fadeRatio:number = .1)\n\t{\n\t\tsuper(baseMethod.castingLight);\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis._baseMethod = baseMethod;\n\t\tthis._fadeRatio = fadeRatio;\n\t\tthis._nearShadowMapper = <NearDirectionalShadowMapper> this._pCastingLight.shadowMapper;\n\t\tif (!this._nearShadowMapper)\n\t\t\tthrow new Error(\"ShadowNearMethod requires a light that has a NearDirectionalShadowMapper instance assigned to shadowMapper.\");\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * The base shadow map method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():ShadowMethodBase\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:ShadowMethodBase)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index + 2] = 0;\n\t\tfragmentData[index + 3] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\n\n\t\tmethodVO.needsProjection = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._baseMethod.alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._baseMethod.alpha = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._baseMethod.epsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._baseMethod.epsilon = value;\n\t}\n\n\t/**\n\t * The amount of shadow fading to the outer shadow area. A value of 1 would mean the shadows start fading from the camera's near plane.\n\t */\n\tpublic get fadeRatio():number\n\t{\n\t\treturn this._fadeRatio;\n\t}\n\n\tpublic set fadeRatio(value:number)\n\t{\n\t\tthis._fadeRatio = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._baseMethod.iGetFragmentCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentSingleTemp();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\tcode += \"abs \" + temp + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n\t\t\t\"sub \" + temp + \", \" + temp + \", \" + dataReg + \".x\\n\" +\n\t\t\t\"mul \" + temp + \", \" + temp + \", \" + dataReg + \".y\\n\" +\n\t\t\t\"sat \" + temp + \", \" + temp + \"\\n\" +\n\t\t\t\"sub \" + temp + \", \" + dataReg + \".w,\" + temp + \"\\n\" +\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \"\\n\" +\n\t\t\t\"sub \" + targetReg + \".w, \" + dataReg + \".w,\" + targetReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// todo: move this to activate (needs camera)\n\t\tvar near:number = camera.projection.near;\n\t\tvar d:number = camera.projection.far - near;\n\t\tvar maxDistance:number = this._nearShadowMapper.coverageRatio;\n\t\tvar minDistance:number = maxDistance*(1 - this._fadeRatio);\n\n\t\tmaxDistance = near + maxDistance*d;\n\t\tminDistance = near + minDistance*d;\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index] = minDistance;\n\t\tfragmentData[index + 1] = 1/(maxDistance - minDistance);\n\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis._baseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._baseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = ShadowNearMethod;","import PoissonLookup\t\t\t\t\t= require(\"awayjs-core/lib/geom/PoissonLookup\");\n\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\n\n/**\n * ShadowSoftMethod provides a soft shadowing technique by randomly distributing sample points.\n */\nclass ShadowSoftMethod extends ShadowMethodBase\n{\n\tprivate _range:number = 1;\n\tprivate _numSamples:number /*int*/;\n\tprivate _offsets:Array<number>;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t *\n\t * @param castingLight The light casting the shadows\n\t * @param numSamples The amount of samples to take for dithering. Minimum 1, maximum 32.\n\t */\n\tconstructor(castingLight:DirectionalLight, numSamples:number /*int*/ = 5, range:number = 1)\n\t{\n\t\tsuper(castingLight);\n\n\t\tthis.numSamples = numSamples;\n\t\tthis.range = range;\n\t}\n\n\t/**\n\t * The amount of samples to take for dithering. Minimum 1, maximum 32. The actual maximum may depend on the\n\t * complexity of the shader.\n\t */\n\tpublic get numSamples():number /*int*/\n\t{\n\t\treturn this._numSamples;\n\t}\n\n\tpublic set numSamples(value:number /*int*/)\n\t{\n\t\tthis._numSamples = value;\n\t\t\n\t\tif (this._numSamples < 1)\n\t\t\tthis._numSamples = 1;\n\t\telse if (this._numSamples > 32)\n\t\t\tthis._numSamples = 32;\n\n\t\tthis._offsets = PoissonLookup.getDistribution(this._numSamples);\n\t\t\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The range in the shadow map in which to distribute the samples.\n\t */\n\tpublic get range():number\n\t{\n\t\treturn this._range;\n\t}\n\n\tpublic set range(value:number)\n\t{\n\t\tthis._range = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tsuper.iInitConstants(shaderObject, methodVO);\n\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 8] = 1/this._numSamples;\n\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex + 9] = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar texRange:number = .5*this._range/this._pCastingLight.shadowMapper.depthMapSize;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.fragmentConstantsIndex + 10;\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t// todo: move some things to super\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar customDataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\treturn this.getSampleCode(regCache, depthMapRegister, decReg, targetReg, customDataReg);\n\t}\n\n\t/**\n\t * Adds the code for another tap to the shader code.\n\t * @param uv The uv register for the tap.\n\t * @param texture The texture register containing the depth map.\n\t * @param decode The register containing the depth map decoding data.\n\t * @param target The target register to add the tap comparison result.\n\t * @param regCache The register cache managing the registers.\n\t * @return\n\t */\n\tprivate addSample(uv:ShaderRegisterElement, texture:ShaderRegisterElement, decode:ShaderRegisterElement, target:ShaderRegisterElement, regCache:ShaderRegisterCache):string\n\t{\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + uv + \", \" + texture + \" <2d,nearest,clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decode + \"\\n\" +\n\t\t\t\"slt \" + uv + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\" + // 0 if in shadow\n\t\t\t\"add \" + target + \".w, \" + target + \".w, \" + uv + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar texRange:number = this._range/this._pCastingLight.shadowMapper.depthMapSize;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*uint*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar len:number /*uint*/ = this._numSamples << 1;\n\t\tdata[index] = 1/this._numSamples;\n\t\tdata[index + 1] = 0;\n\t\tindex += 2;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i)\n\t\t\tdata[index + i] = this._offsets[i]*texRange;\n\n\t\tif (len%4 == 0) {\n\t\t\tdata[index + len] = 0;\n\t\t\tdata[index + len + 1] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pDepthMapCoordReg = depthProjection;\n\n\t\tvar dataReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = dataReg.index*4;\n\n\t\treturn this.getSampleCode(registerCache, depthTexture, decodeRegister, targetRegister, dataReg);\n\t}\n\n\t/**\n\t * Get the actual shader code for shadow mapping\n\t * @param regCache The register cache managing the registers.\n\t * @param depthTexture The texture register containing the depth map.\n\t * @param decodeRegister The register containing the depth map decoding data.\n\t * @param targetReg The target register to add the shadow coverage.\n\t * @param dataReg The register containing additional data.\n\t */\n\tprivate getSampleCode(regCache:ShaderRegisterCache, depthTexture:ShaderRegisterElement, decodeRegister:ShaderRegisterElement, targetRegister:ShaderRegisterElement, dataReg:ShaderRegisterElement):string\n\t{\n\t\tvar uvReg:ShaderRegisterElement;\n\t\tvar code:string;\n\t\tvar offsets:Array<string> = new Array<string>(dataReg + \".zw\");\n\t\tuvReg = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(uvReg, 1);\n\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\n\t\tvar numRegs:number /*int*/ = this._numSamples >> 1;\n\t\tfor (var i:number /*int*/ = 0; i < numRegs; ++i) {\n\t\t\tvar reg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\toffsets.push(reg + \".xy\");\n\t\t\toffsets.push(reg + \".zw\");\n\t\t}\n\n\t\tfor (i = 0; i < this._numSamples; ++i) {\n\t\t\tif (i == 0) {\n\t\t\t\tcode = \"add \" + uvReg + \", \" + this._pDepthMapCoordReg + \", \" + dataReg + \".zwyy\\n\" +\n\t\t\t\t\t\"tex \" + temp + \", \" + uvReg + \", \" + depthTexture + \" <2d,nearest,clamp>\\n\" +\n\t\t\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\t\t\"slt \" + targetRegister + \".w, \" + this._pDepthMapCoordReg + \".z, \" + temp + \".z\\n\"; // 0 if in shadow;\n\t\t\t} else {\n\t\t\t\tcode += \"add \" + uvReg + \".xy, \" + this._pDepthMapCoordReg + \".xy, \" + offsets[i] + \"\\n\" +\n\t\t\t\t\tthis.addSample(uvReg, depthTexture, decodeRegister, targetRegister, regCache);\n\t\t\t}\n\t\t}\n\n\t\tregCache.removeFragmentTempUsage(uvReg);\n\n\t\tcode += \"mul \" + targetRegister + \".w, \" + targetRegister + \".w, \" + dataReg + \".x\\n\"; // average\n\n\t\treturn code;\n\t}\n}\n\nexport = ShadowSoftMethod;","import MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\n\n/**\n * SpecularAnisotropicMethod provides a specular method resulting in anisotropic highlights. These are typical for\n * surfaces with microfacet details such as tiny grooves. In particular, this uses the Heidrich-Seidel distrubution.\n * The tangent vectors are used as the surface groove directions.\n */\nclass SpecularAnisotropicMethod extends SpecularBasicMethod\n{\n\t/**\n\t * Creates a new SpecularAnisotropicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsTangents = true;\n\t\tmethodVO.needsView = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight)\n\t\t\tt = this._pTotalLightColorReg;\n\t\telse {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\t// (sin(l,t) * sin(v,t) - cos(l,t)*cos(v,t)) ^ k\n\n\t\tcode += \"nrm \" + t + \".xyz, \" + sharedRegisters.tangentVarying + \".xyz\\n\" +\n\t\t\t\"dp3 \" + t + \".w, \" + t + \".xyz, \" + lightDirReg + \".xyz\\n\" +\n\t\t\t\"dp3 \" + t + \".z, \" + t + \".xyz, \" + sharedRegisters.viewDirFragment + \".xyz\\n\";\n\n\t\t// (sin(t.w) * sin(t.z) - cos(t.w)*cos(t.z)) ^ k\n\t\tcode += \"sin \" + t + \".x, \" + t + \".w\\n\" +\n\t\t\t\"sin \" + t + \".y, \" + t + \".z\\n\" +\n\t\t\t// (t.x * t.y - cos(t.w)*cos(t.z)) ^ k\n\t\t\t\"mul \" + t + \".x, \" + t + \".x, \" + t + \".y\\n\" +\n\t\t\t// (t.x - cos(t.w)*cos(t.z)) ^ k\n\t\t\t\"cos \" + t + \".z, \" + t + \".z\\n\" +\n\t\t\t\"cos \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t// (t.x - t.w*t.z) ^ k\n\t\t\t\"mul \" + t + \".w, \" + t + \".w, \" + t + \".z\\n\" +\n\t\t\t// (t.x - t.w) ^ k\n\t\t\t\"sub \" + t + \".w, \" + t + \".x, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\n\t\t// attenuate\n\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n}\n\nexport = SpecularAnisotropicMethod;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/LightingMethodBase\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * SpecularBasicMethod provides the default shading method for Blinn-Phong specular highlights (an optimized but approximated\n * version of Phong specularity).\n */\nclass SpecularBasicMethod extends LightingMethodBase\n{\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pSpecularTextureRegister:ShaderRegisterElement;\n\tpublic _pSpecularTexData:ShaderRegisterElement;\n\tpublic _pSpecularDataRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _gloss:number = 50;\n\tprivate _specular:number = 1;\n\tprivate _specularColor:number = 0xffffff;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new SpecularBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t\tmethodVO.needsView = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * The sharpness of the specular highlight.\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._gloss = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular highlights.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value == this._specular)\n\t\t\treturn;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The colour of the specular reflection of the surface.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tif (this._specularColor == value)\n\t\t\treturn;\n\n\t\t// specular is now either enabled or disabled\n\t\tif (this._specularColor == 0 || value == 0)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._specularColor = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The bitmapData that encodes the specular highlight strength per texel in the red channel, and the sharpness\n\t * in the green channel. You can use SpecularBitmapTexture if you want to easily set specular and gloss maps\n\t * from grayscale images, but prepared images are preferred.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = ( value != null );\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\n\t\tvar m:any = method;\n\t\tvar bsm:SpecularBasicMethod = <SpecularBasicMethod> method;\n\n\t\tvar spec:SpecularBasicMethod = bsm;//SpecularBasicMethod(method);\n\t\tthis.texture = spec.texture;\n\t\tthis.specular = spec.specular;\n\t\tthis.specularColor = spec.specularColor;\n\t\tthis.gloss = spec.gloss;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pSpecularTextureRegister = null;\n\t\tthis._pSpecularTexData = null;\n\t\tthis._pSpecularDataRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pSpecularDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = this._pSpecularDataRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\n\t\t\tthis._pSpecularTexData = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._pSpecularTexData, 1);\n\t\t\tthis._pSpecularTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.texturesIndex = this._pSpecularTextureRegister.index;\n\t\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(this._pSpecularTexData, sharedRegisters, this._pSpecularTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\n\t\t\tthis._pSpecularTextureRegister = null;\n\t\t}\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\t// blinn-phong half vector model\n\t\tcode += \"add \" + t + \", \" + lightDirReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"nrm \" + t + \".xyz, \" + t + \"\\n\" +\n\t\t\t\t\"dp3 \" + t + \".w, \" + normalReg + \", \" + t + \"\\n\" +\n\t\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else {\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\t\t}\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \", \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\n\t\tcode += \"dp3 \" + t + \".w, \" + normalReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t\t\"mul \" + t + \", \" + t + \".w, \" + normalReg + \"\\n\" +\n\t\t\t\t\"sub \" + t + \", \" + t + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"tex \" + t + \", \" + t + \", \" + cubeMapReg + \" <cube,\" + (shaderObject.useSmoothTextures? \"linear\":\"nearest\") + \",miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply strength modulation from texture\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularTexData + \".x\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pSpecularTexData);\n\t\t}\n\n\t\t// apply material's specular reflection\n\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularDataRegister + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\";\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (this._pUseTexture) {\n\t\t\tstage.context.setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR:ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR:ContextGLMipFilter.MIPNONE);\n\t\t\tstage.context.activateTexture(methodVO.texturesIndex, this._texture);\n\t\t}\n\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._iSpecularR;\n\t\tdata[index + 1] = this._iSpecularG;\n\t\tdata[index + 2] = this._iSpecularB;\n\t\tdata[index + 3] = this._gloss;\n\t}\n\n\t/**\n\t * Updates the specular color data used by the render state.\n\t */\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = (( this._specularColor >> 16) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularG = (( this._specularColor >> 8) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularB = ( this._specularColor & 0xff)/0xff*this._specular;\n\t}\n}\n\nexport = SpecularBasicMethod;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularCompositeMethod\");\n\n/**\n * SpecularCelMethod provides a shading method to add specular cel (cartoon) shading.\n */\nclass SpecularCelMethod extends SpecularCompositeMethod\n{\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _smoothness:number = .1;\n\tprivate _specularCutOff:number = .1;\n\n\t/**\n\t * Creates a new SpecularCelMethod object.\n\t * @param specularCutOff The threshold at which the specular highlight should be shown.\n\t * @param baseMethod An optional specular method on which the cartoon shading is based. If ommitted, SpecularBasicMethod is used.\n\t */\n\tconstructor(specularCutOff:number = .5, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.clampSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._specularCutOff = specularCutOff;\n\t}\n\n\t/**\n\t * The smoothness of the highlight edge.\n\t */\n\tpublic get smoothness():number\n\t{\n\t\treturn this._smoothness;\n\t}\n\n\tpublic set smoothness(value:number)\n\t{\n\t\tthis._smoothness = value;\n\t}\n\n\t/**\n\t * The threshold at which the specular highlight should be shown.\n\t */\n\tpublic get specularCutOff():number\n\t{\n\t\treturn this._specularCutOff;\n\t}\n\n\tpublic set specularCutOff(value:number)\n\t{\n\t\tthis._specularCutOff = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar index:number /*int*/ = methodVO.secondaryFragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._smoothness;\n\t\tdata[index + 1] = this._specularCutOff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * Snaps the specular shading strength of the wrapped method to zero or one, depending on whether or not it exceeds the specularCutOff\n\t * @param vo The MethodVO used to compile the current shader.\n\t * @param t The register containing the specular strength in the \"w\" component, and either the half-vector or the reflection vector in \"xyz\".\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared register data for this shader.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate clampSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"sub \" + targetReg + \".y, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" + // x - cutoff\n\t\t\t\"div \" + targetReg + \".y, \" + targetReg + \".y, \" + this._dataReg + \".x\\n\" + // (x - cutoff)/epsilon\n\t\t\t\"sat \" + targetReg + \".y, \" + targetReg + \".y\\n\" +\n\t\t\t\"sge \" + targetReg + \".w, \" + targetReg + \".w, \" + this._dataReg + \".y\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n}\n\nexport = SpecularCelMethod;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\nimport MaterialPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * SpecularCompositeMethod provides a base class for specular methods that wrap a specular method to alter the\n * calculated specular reflection strength.\n */\nclass SpecularCompositeMethod extends SpecularBasicMethod\n{\n\tprivate _baseMethod:SpecularBasicMethod;\n\n\tprivate _onShaderInvalidatedDelegate:Function;\n\n\t/**\n\t * Creates a new <code>SpecularCompositeMethod</code> object.\n\t *\n\t * @param modulateMethod The method which will add the code to alter the base method's strength. It needs to have the signature modSpecular(t:ShaderRegisterElement, regCache:ShaderRegisterCache):string, in which t.w will contain the specular strength and t.xyz will contain the half-vector or the reflection vector.\n\t * @param baseMethod The base specular method on which this method's shading is based.\n\t */\n\tconstructor(modulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\n\t\tthis._baseMethod = baseMethod || new SpecularBasicMethod();\n\t\tthis._baseMethod._iModulateMethod = modulateMethod;\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitVO(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tthis._baseMethod.iInitConstants(shaderObject, methodVO);\n\t}\n\n\t/**\n\t * The base specular method on which this method's shading is based.\n\t */\n\tpublic get baseMethod():SpecularBasicMethod\n\t{\n\t\treturn this._baseMethod;\n\t}\n\n\tpublic set baseMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._baseMethod == value)\n\t\t\treturn;\n\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis._baseMethod = value;\n\n\t\tthis._baseMethod.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._baseMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._baseMethod.gloss = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._baseMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._baseMethod.specular = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get passes():Array<MaterialPassBase>\n\t{\n\t\treturn this._baseMethod.passes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._baseMethod.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis._baseMethod.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._baseMethod.texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tthis._baseMethod.texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iActivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthis._baseMethod.iSetRenderState(shaderObject, methodVO, renderable, stage, camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthis._baseMethod.iDeactivate(shaderObject, methodVO, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetVertexCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentCodePerLight(shaderObject, methodVO, lightDirReg, lightColReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @return\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentCodePerProbe(shaderObject, methodVO, cubeMapReg, weightRegister, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._baseMethod.iGetFragmentPostLightingCode(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iReset()\n\t{\n\t\tthis._baseMethod.iReset();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._baseMethod.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Called when the base method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis.iInvalidateShaderProgram();\n\t}\n}\n\nexport = SpecularCompositeMethod;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\nimport SpecularCompositeMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularCompositeMethod\");\n\n/**\n * SpecularFresnelMethod provides a specular shading method that causes stronger highlights on grazing view angles.\n */\nclass SpecularFresnelMethod extends SpecularCompositeMethod\n{\n\tprivate _dataReg:ShaderRegisterElement;\n\tprivate _incidentLight:boolean;\n\tprivate _fresnelPower:number = 5;\n\tprivate _normalReflectance:number = .028; // default value for skin\n\n\t/**\n\t * Creates a new SpecularFresnelMethod object.\n\t * @param basedOnSurface Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\n\t * @param baseMethod The specular method to which the fresnel equation. Defaults to SpecularBasicMethod.\n\t */\n\tconstructor(basedOnSurface:boolean = true, baseMethod:SpecularBasicMethod = null)\n\t{\n\t\t// may want to offer diff speculars\n\t\tsuper(null, baseMethod);\n\n\t\tthis.baseMethod._iModulateMethod = (shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => this.modulateSpecular(shaderObject, methodVO, targetReg, registerCache, sharedRegisters);\n\n\t\tthis._incidentLight = !basedOnSurface;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\n\t\tshaderObject.fragmentConstantData[index + 2] = 1;\n\t\tshaderObject.fragmentConstantData[index + 3] = 0;\n\t}\n\n\t/**\n\t * Defines whether the fresnel effect should be based on the view angle on the surface (if true), or on the angle between the light and the view.\n\t */\n\tpublic get basedOnSurface():boolean\n\t{\n\t\treturn !this._incidentLight;\n\t}\n\n\tpublic set basedOnSurface(value:boolean)\n\t{\n\t\tif (this._incidentLight != value)\n\t\t\treturn;\n\n\t\tthis._incidentLight = !value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\t/**\n\t * The power used in the Fresnel equation. Higher values make the fresnel effect more pronounced. Defaults to 5.\n\t */\n\tpublic get fresnelPower():number\n\t{\n\t\treturn this._fresnelPower;\n\t}\n\n\tpublic set fresnelPower(value:number)\n\t{\n\t\tthis._fresnelPower = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._dataReg = null;\n\t}\n\n\t/**\n\t * The minimum amount of reflectance, ie the reflectance when the view direction is normal to the surface or light direction.\n\t */\n\tpublic get normalReflectance():number\n\t{\n\t\treturn this._normalReflectance;\n\t}\n\n\tpublic set normalReflectance(value:number)\n\t{\n\t\tthis._normalReflectance = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tsuper.iActivate(shaderObject, methodVO, stage);\n\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tvar index:number = methodVO.secondaryFragmentConstantsIndex;\n\t\tfragmentData[index] = this._normalReflectance;\n\t\tfragmentData[index + 1] = this._fresnelPower;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._dataReg = registerCache.getFreeFragmentConstant();\n\n\t\tconsole.log('SpecularFresnelMethod', 'iGetFragmentPreLightingCode', this._dataReg);\n\n\t\tmethodVO.secondaryFragmentConstantsIndex = this._dataReg.index*4;\n\n\t\treturn super.iGetFragmentPreLightingCode(shaderObject, methodVO, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Applies the fresnel effect to the specular strength.\n\t *\n\t * @param vo The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param target The register containing the specular strength in the \"w\" component, and the half-vector/reflection vector in \"xyz\".\n\t * @param regCache The register cache used for the shader compilation.\n\t * @param sharedRegisters The shared registers created by the compiler.\n\t * @return The AGAL fragment code for the method.\n\t */\n\tprivate modulateSpecular(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\n\t\tcode = \"dp3 \" + targetReg + \".y, \" + sharedRegisters.viewDirFragment + \".xyz, \" + (this._incidentLight? targetReg : sharedRegisters.normalFragment) + \".xyz\\n\" +   // dot(V, H)\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // base = 1-dot(V, H)\n\t\t\t\"pow \" + targetReg + \".x, \" + targetReg + \".y, \" + this._dataReg + \".y\\n\" +             // exp = pow(base, 5)\n\t\t\t\"sub \" + targetReg + \".y, \" + this._dataReg + \".z, \" + targetReg + \".y\\n\" +             // 1 - exp\n\t\t\t\"mul \" + targetReg + \".y, \" + this._dataReg + \".x, \" + targetReg + \".y\\n\" +             // f0*(1 - exp)\n\t\t\t\"add \" + targetReg + \".y, \" + targetReg + \".x, \" + targetReg + \".y\\n\" +          // exp + f0*(1 - exp)\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".y\\n\";\n\n\n\t\tconsole.log('SpecularFresnelMethod', 'modulateSpecular', code);\n\n\t\treturn code;\n\t}\n\n}\n\nexport = SpecularFresnelMethod;","import MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\n\n/**\n * SpecularPhongMethod provides a specular method that provides Phong highlights.\n */\nclass SpecularPhongMethod extends SpecularBasicMethod\n{\n\t/**\n\t * Creates a new SpecularPhongMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement =sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement =sharedRegisters.normalFragment;\n\n\t\t// phong model\n\t\tcode += \"dp3 \" + t + \".w, \" + lightDirReg + \", \" + normalReg + \"\\n\" + // sca1 = light.normal\n\n\t\t\t//find the reflected light vector R\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" + // sca1 = sca1*2\n\t\t\t\"mul \" + t + \".xyz, \" + normalReg + \", \" + t + \".w\\n\" + // vec1 = normal*sca1\n\t\t\t\"sub \" + t + \".xyz, \" + t + \", \" + lightDirReg + \"\\n\" + // vec1 = vec1 - light (light vector is negative)\n\n\t\t\t//smooth the edge as incidence angle approaches 90\n\t\t\t\"add \" + t + \".w, \" + t + \".w, \" +sharedRegisters.commons + \".w\\n\" + // sca1 = sca1 + smoothtep;\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\" + // sca1 range 0 - 1\n\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + t + \".w\\n\" + // vec1 = vec1*sca1\n\n\t\t\t//find the dot product between R and V\n\t\t\t\"dp3 \" + t + \".w, \" + t + \", \" + viewDirReg + \"\\n\" + // sca1 = vec1.view\n\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" + \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \".xyz, \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \".xyz, \" + t + \".xyz\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n}\n\nexport = SpecularPhongMethod;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * DepthMapPass is a pass that writes depth values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render shadow maps, depth maps, etc.\n */\nclass DepthMapPass extends MaterialPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DepthMapPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.projectionDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//this.setRenderState(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar context:IContextStageGL = renderer.context;\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tcontext.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\tcontext.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tshaderObject.fragmentConstantData[this._fragmentConstantsIndex + 8] = pass.shaderObject.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DepthMapPass;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * DistanceMapPass is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceMapPass extends MaterialPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DistanceMapPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.projectionDependencies++;\n\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tshaderObject.addWorldSpaceDependencies(false);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant()\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t   \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t   \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t   \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar context:IContextStageGL = renderer.context;\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tcontext.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\tcontext.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tdata[index + 8] = pass.shaderObject.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceMapPass;","﻿import ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * LineBasicPass is a material pass that draws wireframe segments.\n */\nclass LineBasicPass extends MaterialPassBase\n{\n\t/**\n\t * Creates a new SegmentPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\treturn \"mov \" + targetReg + \", v0\\n\";\n\t}\n}\n\nexport = LineBasicPass;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport IMaterialPassStageGL\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/IMaterialPassStageGL\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassMode\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n\n/**\n * MaterialPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass MaterialPassBase extends NamedAssetBase implements IMaterialPass, IMaterialPassStageGL\n{\n\tprivate _materialPassData:Array<MaterialPassData> = new Array<MaterialPassData>();\n\tprivate _maxLights:number = 3;\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _includeCasters:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tprivate _directionalLightsOffset:number = 0;\n\tprivate _pointLightsOffset:number = 0;\n\tprivate _lightProbesOffset:number = 0;\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\tpublic _pNumLights:number = 0;\n\n\tprivate _passMode:number;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tpublic _pEnableBlending:boolean = false;\n\n\tpublic  _pLightPicker:LightPickerBase;\n\n\tprivate _writeDepth:boolean = true;\n\tprivate _onLightsChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether or not shadow casting lights need to be included.\n\t */\n\tpublic get includeCasters():boolean\n\t{\n\t\treturn this._includeCasters;\n\t}\n\n\tpublic set includeCasters(value:boolean)\n\t{\n\t\tif (this._includeCasters == value)\n\t\t\treturn;\n\n\t\tthis._includeCasters = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\t/**\n\t * Indicates the offset in the light picker's directional light vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get directionalLightsOffset():number\n\t{\n\t\treturn this._directionalLightsOffset;\n\t}\n\n\tpublic set directionalLightsOffset(value:number)\n\t{\n\t\tthis._directionalLightsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the offset in the light picker's point light vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get pointLightsOffset():number\n\t{\n\t\treturn this._pointLightsOffset;\n\t}\n\n\tpublic set pointLightsOffset(value:number)\n\t{\n\t\tthis._pointLightsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the offset in the light picker's light probes vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get lightProbesOffset():number\n\t{\n\t\treturn this._lightProbesOffset;\n\t}\n\n\tpublic set lightProbesOffset(value:number)\n\t{\n\t\tthis._lightProbesOffset = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get passMode():number\n\t{\n\t\treturn this._passMode;\n\t}\n\n\tpublic set passMode(value:number)\n\t{\n\t\tthis._passMode = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Creates a new MaterialPassBase object.\n\t */\n\tconstructor(passMode:number = 0x03)\n\t{\n\t\tsuper();\n\n\t\tthis._passMode = passMode;\n\n\t\tthis._onLightsChangeDelegate = (event:Event) => this.onLightsChange(event);\n\t}\n\n\t/**\n\t * Factory method to create a concrete shader object for this pass.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tpublic createShaderObject(profile:string):ShaderObjectBase\n\t{\n\t\treturn new ShaderObjectBase(profile);\n\t}\n\n\t/**\n\t * Indicate whether this pass should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic get writeDepth():boolean\n\t{\n\t\treturn this._writeDepth;\n\t}\n\n\tpublic set writeDepth(value:boolean)\n\t{\n\t\tthis._writeDepth = value;\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tthis._depthCompareMode = value;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\twhile (this._materialPassData.length)\n\t\t\tthis._materialPassData[0].dispose();\n\n\t\tthis._materialPassData = null;\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis.setRenderState(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass.shaderObject.setRenderState(renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\n\t\t\tcase BlendMode.NORMAL:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._pEnableBlending = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\n\t\t}\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\trenderer.context.setDepthTest(( this._writeDepth && !this._pEnableBlending ), this._depthCompareMode);\n\n\t\tif (this._pEnableBlending)\n\t\t\trenderer.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\trenderer.activateMaterialPass(pass, camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:MaterialPassData, renderer:RendererBase)\n\t{\n\t\trenderer.deactivateMaterialPass(pass);\n\n\t\trenderer.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL); // TODO : imeplement\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic _pInvalidatePass()\n\t{\n\t\tvar len:number = this._materialPassData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].invalidate();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see away.materials.LightPickerBase\n\t * @see away.materials.StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis.pUpdateLights();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changes.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis.pUpdateLights();\n\t}\n\n\t/**\n\t * Implemented by subclasses if the pass uses lights to update the shader.\n\t */\n\tpublic pUpdateLights()\n\t{\n\t\tvar numDirectionalLightsOld:number = this._pNumDirectionalLights;\n\t\tvar numPointLightsOld:number = this._pNumPointLights;\n\t\tvar numLightProbesOld:number = this._pNumLightProbes;\n\n\t\tif (this._pLightPicker && (this._passMode & MaterialPassMode.LIGHTING)) {\n\t\t\tthis._pNumDirectionalLights = this.calculateNumDirectionalLights(this._pLightPicker.numDirectionalLights);\n\t\t\tthis._pNumPointLights = this.calculateNumPointLights(this._pLightPicker.numPointLights);\n\t\t\tthis._pNumLightProbes = this.calculateNumProbes(this._pLightPicker.numLightProbes);\n\n\t\t\tif (this._includeCasters) {\n\t\t\t\tthis._pNumDirectionalLights += this._pLightPicker.numCastingDirectionalLights;\n\t\t\t\tthis._pNumPointLights += this._pLightPicker.numCastingPointLights;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._pNumDirectionalLights = 0;\n\t\t\tthis._pNumPointLights = 0;\n\t\t\tthis._pNumLightProbes = 0;\n\t\t}\n\n\t\tthis._pNumLights = this._pNumDirectionalLights + this._pNumPointLights;\n\n\t\tif (numDirectionalLightsOld != this._pNumDirectionalLights || numPointLightsOld != this._pNumPointLights || numLightProbesOld != this._pNumLightProbes)\n\t\t\tthis._pInvalidatePass();\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tif (this._forceSeparateMVP)\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\tshaderObject.outputsNormals = this._pOutputsNormals(shaderObject);\n\t\tshaderObject.outputsTangentNormals = shaderObject.outputsNormals && this._pOutputsTangentNormals(shaderObject);\n\t\tshaderObject.usesTangentSpace = shaderObject.outputsTangentNormals && this._pUsesTangentSpace(shaderObject);\n\n\t\tif (!shaderObject.usesTangentSpace)\n\t\t\tshaderObject.addWorldSpaceDependencies(Boolean(this._passMode & MaterialPassMode.EFFECTS));\n\t}\n\n\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * The amount of point lights that need to be supported.\n\t */\n\tpublic get iNumPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The amount of directional lights that need to be supported.\n\t */\n\tpublic get iNumDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of light probes that need to be supported.\n\t */\n\tpublic get iNumLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated at all.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Calculates the amount of directional lights this material will support.\n\t * @param numDirectionalLights The maximum amount of directional lights to support.\n\t * @return The amount of directional lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumDirectionalLights(numDirectionalLights:number):number\n\t{\n\t\treturn Math.min(numDirectionalLights - this._directionalLightsOffset, this._maxLights);\n\t}\n\n\t/**\n\t * Calculates the amount of point lights this material will support.\n\t * @param numDirectionalLights The maximum amount of point lights to support.\n\t * @return The amount of point lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumPointLights(numPointLights:number):number\n\t{\n\t\tvar numFree:number = this._maxLights - this._pNumDirectionalLights;\n\t\treturn Math.min(numPointLights - this._pointLightsOffset, numFree);\n\t}\n\n\t/**\n\t * Calculates the amount of light probes this material will support.\n\t * @param numDirectionalLights The maximum amount of light probes to support.\n\t * @return The amount of light probes this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumProbes(numLightProbes:number):number\n\t{\n\t\tvar numChannels:number = 0;\n\t\t//\t\t\tif ((this._pSpecularLightSources & LightSources.PROBES) != 0)\n\t\t//\t\t\t\t++numChannels;\n\t\t//\n\t\t//\t\t\tif ((this._pDiffuseLightSources & LightSources.PROBES) != 0)\n\t\t//\t\t\t\t++numChannels;\n\n\t\t// 4 channels available\n\t\treturn Math.min(numLightProbes - this._lightProbesOffset, (4/numChannels) | 0);\n\t}\n\n\tpublic _iAddMaterialPassData(materialPassData:MaterialPassData):MaterialPassData\n\t{\n\t\tthis._materialPassData.push(materialPassData);\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic _iRemoveMaterialPassData(materialPassData:MaterialPassData):MaterialPassData\n\t{\n\t\tthis._materialPassData.splice(this._materialPassData.indexOf(materialPassData), 1);\n\n\t\treturn materialPassData;\n\t}\n}\n\nexport = MaterialPassBase;","class MaterialPassMode\n{\n\tpublic static EFFECTS:number = 0x01\n\t/**\n\t *\n\t */\n\tpublic static LIGHTING:number = 0x02;\n\t/**\n\t *\n\t */\n\tpublic static SUPER_SHADER:number = 0x03;\n}\n\nexport = MaterialPassMode;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport RenderTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\n\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport MaterialPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * The SingleObjectDepthPass provides a material pass that renders a single object to a depth map from the point\n * of view from a light.\n */\nclass SingleObjectDepthPass extends MaterialPassBase\n{\n\tprivate _textures:Object;\n\tprivate _projections:Object;\n\tprivate _textureSize:number /*uint*/ = 512;\n\tprivate _polyOffset:Array<number> = Array<number>(15, 0, 0, 0);\n\tprivate _enc:Array<number>;\n\tprivate _projectionTexturesInvalid:Boolean = true;\n\n\t/**\n\t * The size of the depth map texture to render to.\n\t */\n\tpublic get textureSize():number\n\t{\n\t\treturn this._textureSize;\n\t}\n\n\tpublic set textureSize(value:number)\n\t{\n\t\tthis._textureSize = value;\n\t}\n\n\t/**\n\t * The amount by which the rendered object will be inflated, to prevent depth map rounding errors.\n\t */\n\tpublic get polyOffset():number\n\t{\n\t\treturn this._polyOffset[0];\n\t}\n\n\tpublic set polyOffset(value:number)\n\t{\n\t\tthis._polyOffset[0] = value;\n\t}\n\n\t/**\n\t * Creates a new SingleObjectDepthPass object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//this._pNumUsedStreams = 2;\n\t\t//this._pNumUsedVertexConstants = 7;\n\t\t//this._enc = Array<number>(1.0, 255.0, 65025.0, 16581375.0, 1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n\t\t//\n\t\t//this._pAnimatableAttributes = Array<string>(\"va0\", \"va1\");\n\t\t//this._pAnimationTargetRegisters = Array<string>(\"vt0\", \"vt1\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._textures) {\n\t\t\tfor (var key in this._textures) {\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\n\t\t\t\ttexture.dispose();\n\t\t\t}\n\t\t\tthis._textures = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the projection textures used to contain the depth renders.\n\t */\n\tprivate updateProjectionTextures()\n\t{\n\t\tif (this._textures) {\n\t\t\tfor (var key in this._textures) {\n\t\t\t\tvar texture:RenderTexture = this._textures[key];\n\t\t\t\ttexture.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._textures = new Object();\n\t\tthis._projections = new Object();\n\t\tthis._projectionTexturesInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode():string\n\t{\n\t\tvar code:string;\n\t\t// offset\n\t\tcode = \"mul vt7, vt1, vc4.x\t\\n\" +\n\t\t\t\t\"add vt7, vt7, vt0\\n\" +\n\t\t\t\t\"mov vt7.w, vt0.w\\n\";\n\t\t// project\n\t\tcode += \"m44 vt2, vt7, vc0\\n\" +\n\t\t\t\t\"mov op, vt2\\n\";\n\n\t\t// perspective divide\n\t\tcode += \"div v0, vt2, vt2.w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t// encode float -> rgba\n\t\tcode += \"mul ft0, fc0, v0.z\\n\" +\n\t\t\t\t\"frc ft0, ft0\\n\" +\n\t\t\t\t\"mul ft1, ft0.yzww, fc1\\n\" +\n\t\t\t\t\"sub ft0, ft0, ft1\\n\" +\n\t\t\t\t\"mov oc, ft0\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the depth maps rendered for this object from all lights.\n\t * @param renderable The renderable for which to retrieve the depth maps.\n\t * @param stage3DProxy The Stage3DProxy object currently used for rendering.\n\t * @return A list of depth map textures for all supported lights.\n\t */\n\tpublic _iGetDepthMap(renderable:RenderableBase):RenderTexture\n\t{\n\t\treturn this._textures[renderable.materialOwner.id];\n\t}\n\n\t/**\n\t * Retrieves the depth map projection maps for all lights.\n\t * @param renderable The renderable for which to retrieve the projection maps.\n\t * @return A list of projection maps for all supported lights.\n\t */\n\tpublic _iGetProjection(renderable:RenderableBase):Matrix3D\n\t{\n\t\treturn this._projections[renderable.materialOwner.id];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tvar len:number /*uint*/;\n\t\tvar light:LightBase;\n\t\tvar lights:Array<LightBase> = this._pLightPicker.allPickedLights;\n\t\tvar rId:number = renderable.materialOwner.id;\n\n\t\tif (!this._textures[rId])\n\t\t\tthis._textures[rId] = new RenderTexture(this._textureSize, this._textureSize);\n\n\t\tif (!this._projections[rId])\n\t\t\tthis._projections[rId] = new Matrix3D();\n\n\t\tlen = lights.length;\n\n\t\t// local position = enough\n\t\tlight = lights[0];\n\n\t\tmatrix = light.iGetObjectProjectionMatrix(renderable.sourceEntity, camera, this._projections[rId]);\n\n\t\tcontext.setRenderTarget(this._textures[rId], true);\n\t\tcontext.clear(1.0, 1.0, 1.0);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._enc, 2);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.activateBuffer(1, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tif (this._projectionTexturesInvalid)\n\t\t\tthis.updateProjectionTextures();\n\n\t\t// never scale\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\trenderer.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._polyOffset, 1);\n\t}\n}\n\nexport = SingleObjectDepthPass;","import ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * SkyboxPass provides a material pass exclusively used to render sky boxes from a cube texture.\n */\nclass SkyboxPass extends MaterialPassBase\n{\n\t/**\n\t * Creates a new SkyboxPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\n\t{\n\t\tshaderObject.useMipmapping = false;\n\t}\n}\n\nexport = SkyboxPass;","﻿import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\n\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/ShaderCompilerHelper\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleBasicPass extends MaterialPassBase\n{\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * The alpha component of the diffuse reflection.\n\t */\n\tpublic get diffuseAlpha():number\n\t{\n\t\treturn this._diffuseA;\n\t}\n\n\tpublic set diffuseAlpha(value:number)\n\t{\n\t\tthis._diffuseA = value;\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(diffuseColor:number)\n\t{\n\t\tthis._diffuseColor = diffuseColor;\n\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\tdiffuseInputReg = regCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedReg, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tdiffuseInputReg = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic _iIncludeDependencies(dependencyCounter:ShaderObjectBase)\n\t{\n\t\tif (dependencyCounter.texture != null)\n\t\t\tdependencyCounter.uvDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\trenderer.context.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\trenderer.context.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[this._fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = TriangleBasicPass;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport MaterialPassData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\nimport AmbientBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseBasicMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectColorTransformMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport LightingMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/LightingMethodBase\");\nimport NormalBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\nimport ILightingPassStageGL\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/ILightingPassStageGL\");\nimport MaterialPassBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport MaterialPassMode\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassMode\");\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleMethodPass extends MaterialPassBase implements ILightingPassStageGL\n{\n\tpublic _iColorTransformMethodVO:MethodVO;\n\tpublic _iNormalMethodVO:MethodVO;\n\tpublic _iAmbientMethodVO:MethodVO;\n\tpublic _iShadowMethodVO:MethodVO;\n\tpublic _iDiffuseMethodVO:MethodVO;\n\tpublic _iSpecularMethodVO:MethodVO;\n\tpublic _iMethodVOs:Array<MethodVO> = new Array<MethodVO>();\n\n\tpublic _numEffectDependencies:number = 0;\n\n\tprivate _onShaderInvalidatedDelegate:(event:ShadingMethodEvent) => void;\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(passMode:number = 0x03)\n\t{\n\t\tsuper(passMode);\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\t}\n\n\t/**\n\t * Factory method to create a concrete shader object for this pass.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tpublic createShaderObject(profile:string):ShaderObjectBase\n\t{\n\t\tif (this._pLightPicker && (this.passMode & MaterialPassMode.LIGHTING))\n\t\t\treturn new ShaderLightingObject(profile);\n\n\t\treturn new ShaderObjectBase(profile);\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\t//Updates method constants if they have changed.\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].method.iInitConstants(shaderObject, this._iMethodVOs[i]);\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this.colorTransformMethod? this.colorTransformMethod.colorTransform : null;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tif (value) {\n\t\t\tif (this.colorTransformMethod == null)\n\t\t\t\tthis.colorTransformMethod = new EffectColorTransformMethod();\n\n\t\t\tthis.colorTransformMethod.colorTransform = value;\n\n\t\t} else if (!value) {\n\t\t\tif (this.colorTransformMethod)\n\t\t\t\tthis.colorTransformMethod = null;\n\t\t}\n\t}\n\n\t/**\n\t * The EffectColorTransformMethod object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransformMethod():EffectColorTransformMethod\n\t{\n\t\treturn this._iColorTransformMethodVO? <EffectColorTransformMethod> this._iColorTransformMethodVO.method : null;\n\t}\n\n\tpublic set colorTransformMethod(value:EffectColorTransformMethod)\n\t{\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iColorTransformMethodVO) {\n\t\t\tthis._removeDependency(this._iColorTransformMethodVO);\n\t\t\tthis._iColorTransformMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iColorTransformMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iColorTransformMethodVO);\n\t\t}\n\t}\n\n\tprivate _removeDependency(methodVO:MethodVO, effectsDependency:boolean = false)\n\t{\n\t\tvar index:number = this._iMethodVOs.indexOf(methodVO);\n\n\t\tif (!effectsDependency)\n\t\t\tthis._numEffectDependencies--;\n\n\t\tmethodVO.method.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis._iMethodVOs.splice(index, 1);\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\tprivate _addDependency(methodVO:MethodVO, effectsDependency:boolean = false, index:number = -1)\n\t{\n\t\tmethodVO.method.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tif (effectsDependency) {\n\t\t\tif (index != -1)\n\t\t\t\tthis._iMethodVOs.splice(index + this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t\telse\n\t\t\t\tthis._iMethodVOs.push(methodVO);\n\t\t\tthis._numEffectDependencies++;\n\t\t} else {\n\t\t\tthis._iMethodVOs.splice(this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t}\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true);\n\t}\n\n\t/**\n\t * The number of \"effect\" methods added to the material.\n\t */\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._numEffectDependencies;\n\t}\n\n\t/**\n\t * Queries whether a given effects method was added to the material.\n\t *\n\t * @param method The method to be queried.\n\t * @return true if the method was added to the material, false otherwise.\n\t */\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\n\t{\n\t\treturn this.getDependencyForMethod(method) != null;\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\n\t\t\treturn null;\n\n\t\treturn <EffectMethodBase> this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies].method;\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true, index);\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tvar methodVO:MethodVO = this.getDependencyForMethod(method);\n\n\t\tif (methodVO != null)\n\t\t\tthis._removeDependency(methodVO, true);\n\t}\n\n\n\tprivate getDependencyForMethod(method:EffectMethodBase):MethodVO\n\t{\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._iMethodVOs[i].method == method)\n\t\t\t\treturn this._iMethodVOs[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._iNormalMethodVO? <NormalBasicMethod> this._iNormalMethodVO.method : null;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._iNormalMethodVO && this._iNormalMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iNormalMethodVO) {\n\t\t\tthis._removeDependency(this._iNormalMethodVO);\n\t\t\tthis._iNormalMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iNormalMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iNormalMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._iAmbientMethodVO? <AmbientBasicMethod> this._iAmbientMethodVO.method : null;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iAmbientMethodVO) {\n\t\t\tthis._removeDependency(this._iAmbientMethodVO);\n\t\t\tthis._iAmbientMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iAmbientMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iAmbientMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._iShadowMethodVO? <ShadowMapMethodBase> this._iShadowMethodVO.method : null;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._iShadowMethodVO && this._iShadowMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iShadowMethodVO) {\n\t\t\tthis._removeDependency(this._iShadowMethodVO);\n\t\t\tthis._iShadowMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iShadowMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iShadowMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._iDiffuseMethodVO? <DiffuseBasicMethod> this._iDiffuseMethodVO.method : null;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iDiffuseMethodVO) {\n\t\t\tthis._removeDependency(this._iDiffuseMethodVO);\n\t\t\tthis._iDiffuseMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iDiffuseMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iDiffuseMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._iSpecularMethodVO? <SpecularBasicMethod> this._iSpecularMethodVO.method : null;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iSpecularMethodVO) {\n\t\t\tthis._removeDependency(this._iSpecularMethodVO);\n\t\t\tthis._iSpecularMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iSpecularMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iSpecularMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\twhile (this._iMethodVOs.length)\n\t\t\tthis._removeDependency(this._iMethodVOs[0]);\n\n\t\tthis._iMethodVOs = null;\n\t}\n\n\t/**\n\t * Called when any method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis._pInvalidatePass();\n\t}\n\n\t// RENDER LOOP\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, renderer:RendererBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, renderer, camera);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iActivate(pass.shaderObject, methodVO, renderer.stage);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper.setRenderState(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iSetRenderState(pass.shaderObject, methodVO, renderable, stage, camera);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate(pass:MaterialPassData, renderer:RendererBase)\n\t{\n\t\tsuper._iDeactivate(pass, renderer);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iDeactivate(pass.shaderObject, methodVO, renderer.stage);\n\t\t}\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\n\t{\n\t\tvar i:number;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.setupAndCountDependencies(shaderObject, this._iMethodVOs[i]);\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].useMethod = this._iMethodVOs[i].method.iIsUsed(shaderObject);\n\n\t\tsuper._iIncludeDependencies(shaderObject);\n\t}\n\n\n\t/**\n\t * Counts the dependencies for a given method.\n\t * @param method The method to count the dependencies for.\n\t * @param methodVO The method's data for this material.\n\t */\n\tprivate setupAndCountDependencies(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.reset();\n\n\t\tmethodVO.method.iInitVO(shaderObject, methodVO);\n\n\t\tif (methodVO.needsProjection)\n\t\t\tshaderObject.projectionDependencies++;\n\n\t\tif (methodVO.needsGlobalVertexPos) {\n\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\t\tif (methodVO.needsGlobalFragmentPos)\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\n\n\t\t} else if (methodVO.needsGlobalFragmentPos) {\n\t\t\tshaderObject.globalPosDependencies++;\n\t\t\tshaderObject.usesGlobalPosFragment = true;\n\t\t}\n\n\t\tif (methodVO.needsNormals)\n\t\t\tshaderObject.normalDependencies++;\n\n\t\tif (methodVO.needsTangents)\n\t\t\tshaderObject.tangentDependencies++;\n\n\t\tif (methodVO.needsView)\n\t\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (methodVO.needsUV)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tif (methodVO.needsSecondaryUV)\n\t\t\tshaderObject.secondaryUVDependencies++;\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod)\n\t\t\tcode += this._iAmbientMethodVO.method.iGetVertexCode(shaderObject, this._iAmbientMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += this._iDiffuseMethodVO.method.iGetVertexCode(shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += this._iSpecularMethodVO.method.iGetVertexCode(shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod) {\n\t\t\tcode += this._iAmbientMethodVO.method.iGetFragmentCode(shaderObject, this._iAmbientMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\tif (this._iAmbientMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iAmbientMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPerLightDiffuseFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, diffuseColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iDiffuseMethodVO, lightDirReg, diffuseColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerLightSpecularFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, specularColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iSpecularMethodVO, lightDirReg, specularColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeDiffuseFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iDiffuseMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeSpecularFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iSpecularMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPostLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetVertexCode(shaderObject, this._iShadowMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPostLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (shaderObject.useAlphaPremultiplied && this._pEnableBlending) {\n\t\t\tcode += \"add \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\t\"div \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \", \" + sharedRegisters.shadedTarget + \".w\\n\" +\n\t\t\t\t\"sub \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\t\"sat \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \"\\n\";\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetFragmentCode(shaderObject, this._iShadowMethodVO, sharedRegisters.shadowTarget, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iDiffuseMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\t// resolve other dependencies as well?\n\t\t\tif (this._iDiffuseMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iDiffuseMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iSpecularMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\t\t\tif (this._iSpecularMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\t\t\tif (this._iSpecularMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.shadowTarget);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (shaderObject.usesProbes)\n\t\t\treturn false;\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod && !methodVO.method.iUsesTangentSpace())\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn (<NormalBasicMethod> this._iNormalMethodVO.method).iOutputsTangentNormals();\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output by the pass.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn this._iNormalMethodVO && this._iNormalMethodVO.useMethod;\n\t}\n\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._iNormalMethodVO.method.iGetVertexCode(shaderObject, this._iNormalMethodVO, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._iNormalMethodVO.method.iGetFragmentCode(shaderObject, this._iNormalMethodVO, sharedRegisters.normalFragment, registerCache, sharedRegisters);\n\n\t\tif (this._iNormalMethodVO.needsView)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\n\t\tif (this._iNormalMethodVO.needsGlobalFragmentPos || this._iNormalMethodVO.needsGlobalVertexPos)\n\t\t\tregisterCache.removeVertexTempUsage(sharedRegisters.globalPositionVertex);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetVertexCode(shaderObject, methodVO, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsGlobalVertexPos || methodVO.needsGlobalFragmentPos)\n\t\t\t\t\tregCache.removeVertexTempUsage(sharedReg.globalPositionVertex);\n\t\t\t}\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetVertexCode(shaderObject, this._iColorTransformMethodVO, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar alphaReg:ShaderRegisterElement;\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\talphaReg = regCache.getFreeFragmentSingleTemp();\n\t\t\tregCache.addFragmentTempUsages(alphaReg, 1);\n\t\t\tcode += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n\t\t}\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetFragmentCode(shaderObject, methodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsNormals)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.normalFragment);\n\n\t\t\t\tif (methodVO.needsView)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.viewDirFragment);\n\n\t\t\t}\n\t\t}\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\tcode += \"mov \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n\t\t\tregCache.removeFragmentTempUsage(alphaReg);\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetFragmentCode(shaderObject, this._iColorTransformMethodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\t/**\n\t * Indicates whether the shader uses any shadows.\n\t */\n\tpublic _iUsesShadows():boolean\n\t{\n\t\treturn Boolean(this._iShadowMethodVO || this.lightPicker.castingDirectionalLights.length > 0 || this.lightPicker.castingPointLights.length > 0);\n\t}\n\n\t/**\n\t * Indicates whether the shader uses any specular component.\n\t */\n\tpublic _iUsesSpecular():boolean\n\t{\n\t\treturn Boolean(this._iSpecularMethodVO);\n\t}\n}\n\nexport = TriangleMethodPass;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\n\nimport LineBasicMaterial\t\t\t= require(\"awayjs-renderergl/lib/materials/LineBasicMaterial\");\nimport TriangleBasicMaterial\t\t= require(\"awayjs-renderergl/lib/materials/TriangleBasicMaterial\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:TriangleBasicMaterial;\n\tprivate static _defaultLineMaterial:LineBasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(materialOwner:IMaterialOwner = null):StageGLMaterialBase\n\t{\n\t\tif (materialOwner != null && materialOwner.assetType == AssetType.LINE_SUB_MESH) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(materialOwner:IMaterialOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData, true);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new TriangleBasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new LineBasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultSegmentMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderRegisterElement\");\n\nclass ShaderCompilerHelper\n{\n\t/**\n\t * A helper method that generates standard code for sampling from a texture using the normal uv coordinates.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param sharedReg The shared register object for the shader.\n\t * @param inputReg The texture stream register.\n\t * @param texture The texture which will be assigned to the given slot.\n\t * @param uvReg An optional uv register if coordinates different from the primary uv coordinates are to be used.\n\t * @param forceWrap If true, texture wrapping is enabled regardless of the material setting.\n\t * @return The fragment code that performs the sampling.\n\t *\n\t * @protected\n\t */\n\tpublic static getTex2DSampleCode(targetReg:ShaderRegisterElement, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, repeat:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement = null, forceWrap:string = null):string\n\t{\n\t\tvar wrap:string = forceWrap || (repeat? \"wrap\":\"clamp\");\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar enableMipMaps:boolean = mipmaps && texture.hasMipmaps;\n\t\tvar filter:string = (smooth)? (enableMipMaps? \"linear,miplinear\" : \"linear\") : (enableMipMaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tif (uvReg == null)\n\t\t\tuvReg = sharedReg.uvVarying;\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t}\n\n\n\t/**\n\t * A helper method that generates standard code for sampling from a cube texture.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param inputReg The texture stream register.\n\t * @param texture The cube map which will be assigned to the given slot.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t *\n\t * @protected\n\t */\n\tpublic static getTexCubeSampleCode(targetReg:ShaderRegisterElement, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar enableMipMaps:boolean = mipmaps && texture.hasMipmaps;\n\t\tvar filter:string = (smooth)? (enableMipMaps? \"linear,miplinear\" : \"linear\") : (enableMipMaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic static getFormatStringForTexture(texture:TextureProxyBase):string\n\t{\n\t\tswitch (texture.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = ShaderCompilerHelper;","import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport ProjectionBase\t\t\t\t\t= require(\"awayjs-core/lib/projections/ProjectionBase\");\nimport PerspectiveProjection\t\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nimport OrthographicProjection\t\t\t= require(\"awayjs-core/lib/projections/OrthographicProjection\");\nimport OrthographicOffCenterProjection\t= require(\"awayjs-core/lib/projections/OrthographicOffCenterProjection\");\nimport BitmapCubeTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapCubeTexture\");\nimport BitmapTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport CubeTextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport ImageCubeTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageCubeTexture\");\nimport ImageTexture\t\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport BlendMode\t\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport LightBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport DirectionalLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Skybox\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport LightPickerBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport StaticLightPicker\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport CubeMapShadowMapper\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\nimport DirectionalShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport ShadowMapperBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport PrefabBase\t\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport PrimitiveCapsulePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\");\nimport PrimitiveConePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveConePrefab\");\nimport PrimitiveCubePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitivePlanePrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\");\nimport PrimitiveSpherePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport SkyboxMaterial\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/SkyboxMaterial\");\nimport TriangleMaterialMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialMode\");\nimport TriangleMethodMaterial\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMethodMaterial\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/DefaultMaterialManager\");\nimport AmbientEnvMapMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/AmbientEnvMapMethod\");\nimport DiffuseDepthMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseDepthMethod\");\nimport DiffuseCelMethod\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseCelMethod\");\nimport DiffuseGradientMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseGradientMethod\");\nimport DiffuseLightMapMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseLightMapMethod\");\nimport DiffuseWrapMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/DiffuseWrapMethod\");\nimport EffectAlphaMaskMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectAlphaMaskMethod\");\nimport EffectColorMatrixMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectColorMatrixMethod\");\nimport EffectColorTransformMethod\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectColorTransformMethod\");\nimport EffectEnvMapMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectEnvMapMethod\");\nimport EffectFogMethod\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectFogMethod\");\nimport EffectFresnelEnvMapMethod\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectFresnelEnvMapMethod\");\nimport EffectLightMapMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectLightMapMethod\");\nimport EffectMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectMethodBase\");\nimport EffectRimLightMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/EffectRimLightMethod\");\nimport NormalSimpleWaterMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/NormalSimpleWaterMethod\");\nimport ShadowDitheredMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowDitheredMethod\");\nimport ShadowFilteredMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowFilteredMethod\");\nimport ShadowMethodBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowMethodBase\");\nimport SpecularFresnelMethod\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularFresnelMethod\");\nimport ShadowHardMethod\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowHardMethod\");\nimport SpecularAnisotropicMethod\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularAnisotropicMethod\");\nimport SpecularCelMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularCelMethod\");\nimport SpecularPhongMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularPhongMethod\");\nimport ShadowNearMethod\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowNearMethod\");\nimport ShadowSoftMethod\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/ShadowSoftMethod\");\n\n/**\n * AWDParser provides a parser for the AWD data type.\n */\nclass AWDParser extends ParserBase\n{\n\t//set to \"true\" to have some console.logs in the Console\n\tprivate _debug:boolean = false;\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean = false;\n\tprivate _cur_block_id:number;\n\tprivate _blocks:Array<AWDBlock>;\n\tprivate _newBlockBytes:ByteArray;\n\tprivate _version:Array<number>;\n\tprivate _compression:number;\n\tprivate _accuracyOnBlocks:boolean;\n\tprivate _accuracyMatrix:boolean;\n\tprivate _accuracyGeo:boolean;\n\tprivate _accuracyProps:boolean;\n\tprivate _matrixNrType:number;\n\tprivate _geoNrType:number;\n\tprivate _propsNrType:number;\n\tprivate _streaming:boolean;\n\tprivate _texture_users:Object = {};\n\tprivate _parsed_header:boolean = false;\n\tprivate _body:ByteArray;\n\tprivate _defaultTexture:BitmapTexture;     // HTML IMAGE TEXTURE >? !\n\tprivate _cubeTextures:Array<any>;\n\tprivate _defaultBitmapMaterial:TriangleMethodMaterial;\n\tprivate _defaultCubeTexture:BitmapCubeTexture;\n\n\tpublic static COMPRESSIONMODE_LZMA:string = \"lzma\";\n\tpublic static UNCOMPRESSED:number = 0;\n\tpublic static DEFLATE:number = 1;\n\tpublic static LZMA:number = 2;\n\tpublic static INT8:number = 1;\n\tpublic static INT16:number = 2;\n\tpublic static INT32:number = 3;\n\tpublic static UINT8:number = 4;\n\tpublic static UINT16:number = 5;\n\tpublic static UINT32:number = 6;\n\tpublic static FLOAT32:number = 7;\n\tpublic static FLOAT64:number = 8;\n\tpublic static BOOL:number = 21;\n\tpublic static COLOR:number = 22;\n\tpublic static BADDR:number = 23;\n\tpublic static AWDSTRING:number = 31;\n\tpublic static AWDBYTEARRAY:number = 32;\n\tpublic static VECTOR2x1:number = 41;\n\tpublic static VECTOR3x1:number = 42;\n\tpublic static VECTOR4x1:number = 43;\n\tpublic static MTX3x2:number = 44;\n\tpublic static MTX3x3:number = 45;\n\tpublic static MTX4x3:number = 46;\n\tpublic static MTX4x4:number = 47;\n\n\tprivate blendModeDic:Array<string>;\n\tprivate _depthSizeDic:Array<number>;\n\n\t/**\n\t * Creates a new AWDParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor()\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._blocks = new Array<AWDBlock>();\n\t\tthis._blocks[0] = new AWDBlock();\n\t\tthis._blocks[0].data = null; // Zero address means null in AWD\n\n\t\tthis.blendModeDic = new Array<string>(); // used to translate ints to blendMode-strings\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.ADD);\n\t\tthis.blendModeDic.push(BlendMode.ALPHA);\n\t\tthis.blendModeDic.push(BlendMode.DARKEN);\n\t\tthis.blendModeDic.push(BlendMode.DIFFERENCE);\n\t\tthis.blendModeDic.push(BlendMode.ERASE);\n\t\tthis.blendModeDic.push(BlendMode.HARDLIGHT);\n\t\tthis.blendModeDic.push(BlendMode.INVERT);\n\t\tthis.blendModeDic.push(BlendMode.LAYER);\n\t\tthis.blendModeDic.push(BlendMode.LIGHTEN);\n\t\tthis.blendModeDic.push(BlendMode.MULTIPLY);\n\t\tthis.blendModeDic.push(BlendMode.NORMAL);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\t\tthis.blendModeDic.push(BlendMode.SCREEN);\n\t\tthis.blendModeDic.push(BlendMode.SHADER);\n\t\tthis.blendModeDic.push(BlendMode.OVERLAY);\n\n\t\tthis._depthSizeDic = new Array<number>(); // used to translate ints to depthSize-values\n\t\tthis._depthSizeDic.push(256);\n\t\tthis._depthSizeDic.push(512);\n\t\tthis._depthSizeDic.push(2048);\n\t\tthis._depthSizeDic.push(1024);\n\t\tthis._version = Array<number>(); // will contain 2 int (major-version, minor-version) for awd-version-check\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"awd\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 3) == 'AWD');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\t// this will be called when Dependency has finished loading.\n\t\t// the Assets waiting for this Bitmap, can be Texture or CubeTexture.\n\t\t// if the Bitmap is awaited by a CubeTexture, we need to check if its the last Bitmap of the CubeTexture,\n\t\t// so we know if we have to finalize the Asset (CubeTexture) or not.\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar isCubeTextureArray:Array<string> = resourceDependency.id.split(\"#\");\n\t\t\tvar ressourceID:string = isCubeTextureArray[0];\n\t\t\tvar asset:TextureProxyBase;\n\t\t\tvar thisBitmapTexture:Texture2DBase;\n\t\t\tvar block:AWDBlock;\n\n\t\t\tif (isCubeTextureArray.length == 1) // Not a cube texture\n\t\t\t{\n\t\t\t\tasset = <Texture2DBase> resourceDependency.assets[0];\n\t\t\t\tif (asset) {\n\t\t\t\t\tvar mat:TriangleMethodMaterial;\n\t\t\t\t\tvar users:Array<string>;\n\n\t\t\t\t\tblock = this._blocks[ resourceDependency.id ];\n\t\t\t\t\tblock.data = asset; // Store finished asset\n\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t\t\t\tblock.name = asset.name;\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap for texture\");\n\t\t\t\t\t\tconsole.log(\"Parsed texture: Name = \" + block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isCubeTextureArray.length > 1) // Cube Texture\n\t\t\t{\n\t\t\t\tthisBitmapTexture = <BitmapTexture> resourceDependency.assets[0];\n\n\t\t\t\tvar tx:ImageTexture = <ImageTexture> thisBitmapTexture;\n\n\t\t\t\tthis._cubeTextures[ isCubeTextureArray[1] ] = tx.htmlImageElement; // ?\n\t\t\t\tthis._texture_users[ressourceID].push(1);\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"Successfully loaded Bitmap \" + this._texture_users[ressourceID].length + \" / 6 for Cubetexture\");\n\t\t\t\t}\n\t\t\t\tif (this._texture_users[ressourceID].length == this._cubeTextures.length) {\n\n\t\t\t\t\tvar posX:any = this._cubeTextures[0];\n\t\t\t\t\tvar negX:any = this._cubeTextures[1];\n\t\t\t\t\tvar posY:any = this._cubeTextures[2];\n\t\t\t\t\tvar negY:any = this._cubeTextures[3];\n\t\t\t\t\tvar posZ:any = this._cubeTextures[4];\n\t\t\t\t\tvar negZ:any = this._cubeTextures[5];\n\n\t\t\t\t\tasset = <TextureProxyBase> new ImageCubeTexture(posX, negX, posY, negY, posZ, negZ);\n\t\t\t\t\tblock = this._blocks[ressourceID];\n\t\t\t\t\tblock.data = asset; // Store finished asset\n\n\t\t\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t\t\t\tblock.name = asset.name;\n\t\t\t\t\t// Finalize texture asset to dispatch texture event, which was\n\t\t\t\t\t// previously suppressed while the dependency was loaded.\n\t\t\t\t\tthis._pFinalizeAsset(<IAsset> asset);\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"Parsed CubeTexture: Name = \" + block.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t//not used - if a dependcy fails, the awaiting Texture or CubeTexture will never be finalized, and the default-bitmaps will be used.\n\t\t// this means, that if one Bitmap of a CubeTexture fails, the CubeTexture will have the DefaultTexture applied for all six Bitmaps.\n\t}\n\n\t/**\n\t * Resolve a dependency name\n\t *\n\t * @param resourceDependency The dependency to be resolved.\n\t */\n\tpublic _iResolveDependencyName(resourceDependency:ResourceDependency, asset:IAsset):string\n\t{\n\t\tvar oldName:string = asset.name;\n\n\t\tif (asset) {\n\t\t\tvar block:AWDBlock = this._blocks[parseInt(resourceDependency.id)];\n\t\t\t// Reset name of texture to the one defined in the AWD file,\n\t\t\t// as opposed to whatever the image parser came up with.\n\t\t\tasset.resetAssetPath(block.name, null, true);\n\t\t}\n\n\t\tvar newName:string = asset.name;\n\n\t\tasset.name = oldName;\n\n\t\treturn newName;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();//getByteData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\tif (!this._parsed_header) {\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Parse header and decompress body if needed\n\t\t\tthis.parseHeader();\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\t\t\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AWDParser.UNCOMPRESSED:\n\t\t\t\t\tthis._body = this._byteData;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// Compressed AWD Formats not yet supported\n\t\t\t\t//----------------------------------------------------------------------------\n\n\t\t\t\t/*\n\t\t\t\t case AWDParser.DEFLATE:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress();\n\n\t\t\t\t break;\n\t\t\t\t case AWDParser.LZMA:\n\n\t\t\t\t this._body = new ByteArray();\n\t\t\t\t this._byteData.readBytes(this._body, 0, this._byteData.getBytesAvailable());\n\t\t\t\t this._body.uncompress(COMPRESSIONMODE_LZMA);\n\n\t\t\t\t break;\n\t\t\t\t //*/\n\n\t\t\t}\n\n\t\t\tthis._parsed_header = true;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._body.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t}\n\n\t\tif (this._body) {\n\n\t\t\twhile (this._body.getBytesAvailable() > 0 && !this.parsingPaused) //&& this._pHasTime() )\n\t\t\t{\n\t\t\t\tthis.parseNextBlock();\n\n\t\t\t}\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// Return complete status\n\t\t\tif (this._body.getBytesAvailable() == 0) {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn  ParserBase.PARSING_DONE;\n\t\t\t} else {\n\t\t\t\treturn  ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\t\t} else {\n\n\t\t\tswitch (this._compression) {\n\n\t\t\t\tcase AWDParser.DEFLATE:\n\t\t\t\tcase AWDParser.LZMA:\n\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"(!) AWDParser Error: Compressed AWD formats not yet supported (!)\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t// Error - most likely _body not set because we do not support compression.\n\t\t\treturn  ParserBase.PARSING_DONE;\n\n\t\t}\n\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate dispose():void\n\t{\n\n\t\tfor (var c in this._blocks) {\n\n\t\t\tvar b:AWDBlock = <AWDBlock> this._blocks[ c ];\n\t\t\tb.dispose();\n\n\t\t}\n\n\t}\n\n\tprivate parseNextBlock():void\n\t{\n\t\tvar block:AWDBlock;\n\t\tvar assetData:IAsset;\n\t\tvar isParsed:boolean = false;\n\t\tvar ns:number;\n\t\tvar type:number;\n\t\tvar flags:number;\n\t\tvar len:number;\n\n\t\tthis._cur_block_id = this._body.readUnsignedInt();\n\n\t\tns = this._body.readUnsignedByte();\n\t\ttype = this._body.readUnsignedByte();\n\t\tflags = this._body.readUnsignedByte();\n\t\tlen = this._body.readUnsignedInt();\n\n\t\tvar blockCompression:boolean = BitFlags.test(flags, BitFlags.FLAG4);\n\t\tvar blockCompressionLZMA:boolean = BitFlags.test(flags, BitFlags.FLAG5);\n\n\t\tif (this._accuracyOnBlocks) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG1);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._geoNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyGeo) {\n\t\t\t\tthis._geoNrType = AWDParser.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._matrixNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyMatrix) {\n\t\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\n\t\t\t}\n\n\t\t\tthis._propsNrType = AWDParser.FLOAT32;\n\n\t\t\tif (this._accuracyProps) {\n\t\t\t\tthis._propsNrType = AWDParser.FLOAT64;\n\t\t\t}\n\t\t}\n\n\t\tvar blockEndAll:number = this._body.position + len;\n\n\t\tif (len > this._body.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 block length is bigger than the bytes that are available!');\n\t\t\tthis._body.position += this._body.getBytesAvailable();\n\t\t\treturn;\n\t\t}\n\t\tthis._newBlockBytes = new ByteArray();\n\n\n\t\tthis._body.readBytes(this._newBlockBytes, 0, len);\n\n\t\t//----------------------------------------------------------------------------\n\t\t// Compressed AWD Formats not yet supported\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\n\t\t\t/*\n\t\t\t if (blockCompressionLZMA)\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress(AWDParser.COMPRESSIONMODE_LZMA);\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t this._newBlockBytes.uncompress();\n\t\t\t }\n\t\t\t */\n\n\t\t}\n\n\t\t//----------------------------------------------------------------------------\n\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t//----------------------------------------------------------------------------\n\t\t//this._newBlockBytes.endian = Endian.LITTLE_ENDIAN;\n\t\t//----------------------------------------------------------------------------\n\n\t\tthis._newBlockBytes.position = 0;\n\t\tblock = new AWDBlock();\n\t\tblock.len = this._newBlockBytes.position + len;\n\t\tblock.id = this._cur_block_id;\n\n\t\tvar blockEndBlock:number = this._newBlockBytes.position + len;\n\n\t\tif (blockCompression) {\n\t\t\tthis._pDieWithError('Compressed AWD formats not yet supported');\n\t\t\t//blockEndBlock   = this._newBlockBytes.position + this._newBlockBytes.length;\n\t\t\t//block.len       = blockEndBlock;\n\t\t}\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"AWDBlock:  ID = \" + this._cur_block_id + \" | TypeID = \" + type + \" | Compression = \" + blockCompression + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\tthis._blocks[this._cur_block_id] = block;\n\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.parsePrimitves(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 31:\n\t\t\t\t\tthis.parseSkyboxInstance(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 41:\n\t\t\t\t\tthis.parseLight(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 42:\n\t\t\t\t\tthis.parseCamera(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  case 43:\n\t\t\t\t//      parseTextureProjector(_cur_block_id);\n\t\t\t\t//      isParsed = true;\n\t\t\t\t//      break;\n\n\t\t\t\tcase 51:\n\t\t\t\t\tthis.parseLightPicker(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial_v1(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 83:\n\t\t\t\t\tthis.parseCubeTexture(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 91:\n\t\t\t\t\tthis.parseSharedMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 92:\n\t\t\t\t\tthis.parseShadowMethodBlock(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 111:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id, true);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 112:\n\t\t\t\t\tthis.parseMeshPoseAnimation(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 113:\n\t\t\t\t\tthis.parseVertexAnimationSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 122:\n\t\t\t\t\tthis.parseAnimatorSet(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 253:\n\t\t\t\t\tthis.parseCommand(this._cur_block_id);\n\t\t\t\t\tisParsed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//*/\n\t\t}\n\t\t//*\n\t\tif (isParsed == false) {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.parseTriangleGeometrieBlock(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 22:\n\t\t\t\t\tthis.parseContainer(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 23:\n\t\t\t\t\tthis.parseMeshInstance(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 81:\n\t\t\t\t\tthis.parseMaterial(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 82:\n\t\t\t\t\tthis.parseTexture(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 101:\n\t\t\t\t\tthis.parseSkeleton(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 102:\n\t\t\t\t\tthis.parseSkeletonPose(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 103:\n\t\t\t\t\tthis.parseSkeletonAnimation(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 121:\n\t\t\t\t\t//this.parseUVAnimation(this._cur_block_id);\n\t\t\t\t\t//break;\n\t\t\t\tcase 254:\n\t\t\t\t\tthis.parseNameSpace(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 255:\n\t\t\t\t\tthis.parseMetaData(this._cur_block_id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tconsole.log(\"AWDBlock:   Unknown BlockType  (BlockID = \" + this._cur_block_id + \") - Skip \" + len + \" bytes\");\n\t\t\t\t\t}\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//*/\n\n\t\tvar msgCnt:number = 0;\n\t\tif (this._newBlockBytes.position == blockEndBlock) {\n\t\t\tif (this._debug) {\n\t\t\t\tif (block.errorMessages) {\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t\t\t\tmsgCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._debug) {\n\t\t\t\tconsole.log(\"\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._debug) {\n\n\t\t\t\tconsole.log(\"  (!)(!)(!) Error while reading AWDBlock ID \" + this._cur_block_id + \" = skip to next block\");\n\n\t\t\t\tif (block.errorMessages) {\n\t\t\t\t\twhile (msgCnt < block.errorMessages.length) {\n\t\t\t\t\t\tconsole.log(\"        (!) Error: \" + block.errorMessages[msgCnt] + \" (!)\");\n\t\t\t\t\t\tmsgCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._body.position = blockEndAll;\n\t\tthis._newBlockBytes = null;\n\n\t}\n\n\n\t//--Parser Blocks---------------------------------------------------------------------------\n\n\t//Block ID = 1\n\tprivate parseTriangleGeometrieBlock(blockID:number):void\n\t{\n\n\t\tvar geom:Geometry = new Geometry();\n\n\t\t// Read name and sub count\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_subs:number = this._newBlockBytes.readUnsignedShort();\n\n\t\t// Read optional properties\n\t\tvar props:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\n\t\tvar geoScaleU:number = props.get(1, 1);\n\t\tvar geoScaleV:number = props.get(2, 1);\n\n\t\t// Loop through sub meshes\n\t\tvar subs_parsed:number = 0;\n\t\twhile (subs_parsed < num_subs) {\n\t\t\tvar i:number;\n\t\t\tvar sm_len:number, sm_end:number;\n\t\t\tvar sub_geom:TriangleSubGeometry;\n\t\t\tvar w_indices:Array<number>;\n\t\t\tvar weights:Array<number>;\n\n\t\t\tsm_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tsm_end = this._newBlockBytes.position + sm_len;\n\n\t\t\t// Ignore for now\n\t\t\tvar subProps:AWDProperties = this.parseProperties({1:this._geoNrType, 2:this._geoNrType});\n\t\t\t// Loop through data streams\n\t\t\twhile (this._newBlockBytes.position < sm_end) {\n\t\t\t\tvar idx:number = 0;\n\t\t\t\tvar str_ftype:number, str_type:number, str_len:number, str_end:number;\n\n\t\t\t\t// Type, field type, length\n\t\t\t\tstr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_ftype = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\n\t\t\t\tvar x:number, y:number, z:number;\n\n\t\t\t\tif (str_type == 1) {\n\t\t\t\t\tvar verts:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t// TODO: Respect stream field type\n\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 2) {\n\t\t\t\t\tvar indices:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t// TODO: Respect stream field type\n\t\t\t\t\t\tindices[idx++] = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 3) {\n\t\t\t\t\tvar uvs:Array<number> = new Array<number>();\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tuvs[idx++] = this.readNumber(this._accuracyGeo);\n\n\t\t\t\t\t}\n\t\t\t\t} else if (str_type == 4) {\n\n\t\t\t\t\tvar normals:Array<number> = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tnormals[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 6) {\n\t\t\t\t\tw_indices = Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tw_indices[idx++] = this._newBlockBytes.readUnsignedShort()*3; // TODO: Respect stream field type\n\t\t\t\t\t}\n\n\t\t\t\t} else if (str_type == 7) {\n\n\t\t\t\t\tweights = new Array<number>();\n\n\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\tweights[idx++] = this.readNumber(this._accuracyGeo);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.parseUserAttributes(); // Ignore sub-mesh attributes for now\n\n\t\t\tsub_geom = new TriangleSubGeometry(true);\n\t\t\tif (weights)\n\t\t\t\tsub_geom.jointsPerVertex = weights.length/(verts.length/3);\n\t\t\tif (normals)\n\t\t\t\tsub_geom.autoDeriveNormals = false;\n\t\t\tif (uvs)\n\t\t\t\tsub_geom.autoDeriveUVs = false;\n\t\t\tsub_geom.updateIndices(indices);\n\t\t\tsub_geom.updatePositions(verts);\n\t\t\tsub_geom.updateVertexNormals(normals);\n\t\t\tsub_geom.updateUVs(uvs);\n\t\t\tsub_geom.updateVertexTangents(null);\n\t\t\tsub_geom.updateJointWeights(weights);\n\t\t\tsub_geom.updateJointIndices(w_indices);\n\n\t\t\tvar scaleU:number = subProps.get(1, 1);\n\t\t\tvar scaleV:number = subProps.get(2, 1);\n\t\t\tvar setSubUVs:boolean = false; //this should remain false atm, because in AwayBuilder the uv is only scaled by the geometry\n\n\t\t\tif ((geoScaleU != scaleU) || (geoScaleV != scaleV)) {\n\t\t\t\tsetSubUVs = true;\n\t\t\t\tscaleU = geoScaleU/scaleU;\n\t\t\t\tscaleV = geoScaleV/scaleV;\n\t\t\t}\n\n\t\t\tif (setSubUVs)\n\t\t\t\tsub_geom.scaleUV(scaleU, scaleV);\n\n\t\t\tgeom.addSubGeometry(sub_geom);\n\n\t\t\t// TODO: Somehow map in-sub to out-sub indices to enable look-up\n\t\t\t// when creating meshes (and their material assignments.)\n\n\t\t\tsubs_parsed++;\n\t\t}\n\t\tif ((geoScaleU != 1) || (geoScaleV != 1))\n\t\t\tgeom.scaleUV(geoScaleU, geoScaleV);\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> geom, name);\n\t\tthis._blocks[blockID].data = geom;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a TriangleGeometry: Name = \" + name + \"| Id = \" + sub_geom.id);\n\t\t}\n\n\t}\n\n\t//Block ID = 11\n\tprivate parsePrimitves(blockID:number):void\n\t{\n\t\tvar name:string;\n\t\tvar prefab:PrefabBase;\n\t\tvar primType:number;\n\t\tvar subs_parsed:number;\n\t\tvar props:AWDProperties;\n\t\tvar bsm:Matrix3D;\n\n\t\t// Read name and sub count\n\t\tname = this.parseVarStr();\n\t\tprimType = this._newBlockBytes.readUnsignedByte();\n\t\tprops = this.parseProperties({101:this._geoNrType, 102:this._geoNrType, 103:this._geoNrType, 110:this._geoNrType, 111:this._geoNrType, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 303:AWDParser.UINT16, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 703:AWDParser.BOOL, 704:AWDParser.BOOL});\n\n\t\tvar primitiveTypes:Array<string> = [\"Unsupported Type-ID\", \"PrimitivePlanePrefab\", \"PrimitiveCubePrefab\", \"PrimitiveSpherePrefab\", \"PrimitiveCylinderPrefab\", \"PrimitivesConePrefab\", \"PrimitivesCapsulePrefab\", \"PrimitivesTorusPrefab\"]\n\n\t\tswitch (primType) {\n\t\t\t// to do, not all properties are set on all primitives\n\n\t\t\tcase 1:\n\t\t\t\tprefab = new PrimitivePlanePrefab(props.get(101, 100), props.get(102, 100), props.get(301, 1), props.get(302, 1), props.get(701, true), props.get(702, false));\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tprefab = new PrimitiveCubePrefab(props.get(101, 100), props.get(102, 100), props.get(103, 100), props.get(301, 1), props.get(302, 1), props.get(303, 1), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tprefab = new PrimitiveSpherePrefab(props.get(101, 50), props.get(301, 16), props.get(302, 12), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 4:\n\t\t\t\tprefab = new PrimitiveCylinderPrefab(props.get(101, 50), props.get(102, 50), props.get(103, 100), props.get(301, 16), props.get(302, 1), true, true, true); // bool701, bool702, bool703, bool704);\n\t\t\t\tif (!props.get(701, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).topClosed = false;\n\t\t\t\tif (!props.get(702, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).bottomClosed = false;\n\t\t\t\tif (!props.get(703, true))\n\t\t\t\t\t(<PrimitiveCylinderPrefab>prefab).yUp = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\t\tprefab = new PrimitiveConePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 1), props.get(701, true), props.get(702, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 6:\n\t\t\t\tprefab = new PrimitiveCapsulePrefab(props.get(101, 50), props.get(102, 100), props.get(301, 16), props.get(302, 15), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tcase 7:\n\t\t\t\tprefab = new PrimitiveTorusPrefab(props.get(101, 50), props.get(102, 50), props.get(301, 16), props.get(302, 8), props.get(701, true));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprefab = new PrefabBase();\n\t\t\t\tconsole.log(\"ERROR: UNSUPPORTED PREFAB_TYPE\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ((props.get(110, 1) != 1) || (props.get(111, 1) != 1)) {\n\t\t\t//geom.subGeometries;\n\t\t\t//geom.scaleUV(props.get(110, 1), props.get(111, 1)); //TODO add back scaling to prefabs\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\t\tprefab.name = name;\n\t\tthis._pFinalizeAsset(prefab, name);\n\t\tthis._blocks[blockID].data = prefab;\n\n\t\tif (this._debug) {\n\t\t\tif ((primType < 0) || (primType > 7)) {\n\t\t\t\tprimType = 0;\n\t\t\t}\n\t\t\tconsole.log(\"Parsed a Primivite: Name = \" + name + \"| type = \" + primitiveTypes[primType]);\n\t\t}\n\t}\n\n\t// Block ID = 22\n\tprivate parseContainer(blockID:number):void\n\t{\n\t\tvar name:string;\n\t\tvar par_id:number;\n\t\tvar mtx:Matrix3D;\n\t\tvar ctr:DisplayObjectContainer;\n\t\tvar parent:DisplayObjectContainer;\n\n\t\tpar_id = this._newBlockBytes.readUnsignedInt();\n\t\tmtx = this.parseMatrix3D();\n\t\tname = this.parseVarStr();\n\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tctr = new DisplayObjectContainer();\n\t\tctr.transform.matrix3D = mtx;\n\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\n\n\t\tif (returnedArray[0]) {\n\t\t\tvar obj:DisplayObject = (<DisplayObjectContainer> returnedArray[1]).addChild(ctr);\n\t\t\tparentName = (<DisplayObjectContainer> returnedArray[1]).name;\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[ blockID ].addError(\"Could not find a parent for this ObjectContainer3D\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(ctr);\n\t\t}\n\n\t\t// in AWD version 2.1 we read the Container properties\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\t\t\tctr.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t}\n\t\t// in other versions we do not read the Container properties\n\t\telse {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\t// the extraProperties should only be set for AWD2.1-Files, but is read for both versions\n\t\tctr.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> ctr, name);\n\t\tthis._blocks[blockID].data = ctr;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Container: Name = '\" + name + \"' | Parent-Name = \" + parentName);\n\t\t}\n\t}\n\n\t// Block ID = 23\n\tprivate parseMeshInstance(blockID:number):void\n\t{\n\t\tvar num_materials:number;\n\t\tvar materials_parsed:number;\n\t\tvar parent:DisplayObjectContainer;\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar data_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar geom:Geometry;\n\t\tvar returnedArrayGeometry:Array<any> = this.getAssetByID(data_id, [AssetType.GEOMETRY])\n\n\t\tif (returnedArrayGeometry[0]) {\n\t\t\tgeom = <Geometry> returnedArrayGeometry[1];\n\t\t} else {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a Geometry for this Mesh. A empty Geometry is created!\");\n\t\t\tgeom = new Geometry();\n\t\t}\n\n\t\tthis._blocks[blockID].geoID = data_id;\n\t\tvar materials:Array<MaterialBase> = new Array<MaterialBase>();\n\t\tnum_materials = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar materialNames:Array<string> = new Array<string>();\n\t\tmaterials_parsed = 0;\n\n\t\tvar returnedArrayMaterial:Array<any>;\n\n\t\twhile (materials_parsed < num_materials) {\n\t\t\tvar mat_id:number;\n\t\t\tmat_id = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayMaterial = this.getAssetByID(mat_id, [AssetType.MATERIAL])\n\t\t\tif ((!returnedArrayMaterial[0]) && (mat_id > 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find Material Nr \" + materials_parsed + \" (ID = \" + mat_id + \" ) for this Mesh\");\n\t\t\t}\n\n\t\t\tvar m:MaterialBase = <MaterialBase> returnedArrayMaterial[1];\n\n\t\t\tmaterials.push(m);\n\t\t\tmaterialNames.push(m.name);\n\n\t\t\tmaterials_parsed++;\n\t\t}\n\n\t\tvar mesh:Mesh = new Mesh(geom, null);\n\t\tmesh.transform.matrix3D = mtx;\n\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\n\n\t\tif (returnedArrayParent[0]) {\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\n\t\t\tobjC.addChild(mesh);\n\t\t\tparentName = objC.name;\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Mesh\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\t\t}\n\n\t\tif (materials.length >= 1 && mesh.subMeshes.length == 1) {\n\t\t\tmesh.material = materials[0];\n\t\t} else if (materials.length > 1) {\n\t\t\tvar i:number;\n\n\t\t\t// Assign each sub-mesh in the mesh a material from the list. If more sub-meshes\n\t\t\t// than materials, repeat the last material for all remaining sub-meshes.\n\t\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\t\tmesh.subMeshes[i].material = materials[Math.min(materials.length - 1, i)];\n\t\t\t}\n\t\t}\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tvar props:AWDProperties = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8, 5:AWDParser.BOOL});\n\t\t\tmesh.pivot = new Vector3D(<number>props.get(1, 0), <number>props.get(2, 0), <number> props.get(3, 0));\n\t\t\tmesh.castsShadows = props.get(5, true);\n\t\t} else {\n\t\t\tthis.parseProperties(null);\n\t\t}\n\n\t\tmesh.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(<IAsset> mesh, name);\n\t\tthis._blocks[blockID].data = mesh;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Mesh: Name = '\" + name + \"' | Parent-Name = \" + parentName + \"| Geometry-Name = \" + geom.name + \" | SubMeshes = \" + mesh.subMeshes.length + \" | Mat-Names = \" + materialNames.toString());\n\t\t}\n\t}\n\n\n\t//Block ID 31\n\tprivate parseSkyboxInstance(blockID:number):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar cubeTexAddr:number = this._newBlockBytes.readUnsignedInt();\n\n\t\tvar returnedArrayCubeTex:Array<any> = this.getAssetByID(cubeTexAddr, [AssetType.TEXTURE], \"CubeTexture\");\n\t\tif ((!returnedArrayCubeTex[0]) && (cubeTexAddr != 0))\n\t\t\tthis._blocks[blockID].addError(\"Could not find the Cubetexture (ID = \" + cubeTexAddr + \" ) for this Skybox\");\n\t\tvar asset:Skybox = new Skybox(new SkyboxMaterial(<ImageCubeTexture> returnedArrayCubeTex[1]));\n\n\t\tthis.parseProperties(null)\n\t\tasset.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(asset, name);\n\t\tthis._blocks[blockID].data = asset;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skybox: Name = '\" + name + \"' | CubeTexture-Name = \" + (<ImageCubeTexture> returnedArrayCubeTex[1]).name);\n\n\t}\n\n\t//Block ID = 41\n\tprivate parseLight(blockID:number):void\n\t{\n\t\tvar light:LightBase;\n\t\tvar newShadowMapper:ShadowMapperBase;\n\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar lightType:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties({1:this._propsNrType, 2:this._propsNrType, 3:AWDParser.COLOR, 4:this._propsNrType, 5:this._propsNrType, 6:AWDParser.BOOL, 7:AWDParser.COLOR, 8:this._propsNrType, 9:AWDParser.UINT8, 10:AWDParser.UINT8, 11:this._propsNrType, 12:AWDParser.UINT16, 21:this._matrixNrType, 22:this._matrixNrType, 23:this._matrixNrType});\n\t\tvar shadowMapperType:number = props.get(9, 0);\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar lightTypes:Array<string> = [\"Unsupported LightType\", \"PointLight\", \"DirectionalLight\"];\n\t\tvar shadowMapperTypes:Array<string> = [\"No ShadowMapper\", \"DirectionalShadowMapper\", \"NearDirectionalShadowMapper\", \"CascadeShadowMapper\", \"CubeMapShadowMapper\"];\n\n\t\tif (lightType == 1) {\n\t\t\tlight = new PointLight();\n\n\t\t\t(<PointLight> light).radius = props.get(1, 90000);\n\t\t\t(<PointLight> light).fallOff = props.get(2, 100000);\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 4) {\n\t\t\t\t\tnewShadowMapper = new CubeMapShadowMapper();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.transform.matrix3D = mtx;\n\n\t\t}\n\n\t\tif (lightType == 2) {\n\n\t\t\tlight = new DirectionalLight(props.get(21, 0), props.get(22, -1), props.get(23, 1));\n\n\t\t\tif (shadowMapperType > 0) {\n\t\t\t\tif (shadowMapperType == 1) {\n\t\t\t\t\tnewShadowMapper = new DirectionalShadowMapper();\n\t\t\t\t}\n\n\t\t\t\t//if (shadowMapperType == 2)\n\t\t\t\t//  newShadowMapper = new NearDirectionalShadowMapper(props.get(11, 0.5));\n\t\t\t\t//if (shadowMapperType == 3)\n\t\t\t\t//   newShadowMapper = new CascadeShadowMapper(props.get(12, 3));\n\n\t\t\t}\n\n\t\t}\n\t\tlight.color = props.get(3, 0xffffff);\n\t\tlight.specular = props.get(4, 1.0);\n\t\tlight.diffuse = props.get(5, 1.0);\n\t\tlight.ambientColor = props.get(7, 0xffffff);\n\t\tlight.ambient = props.get(8, 0.0);\n\n\t\t// if a shadowMapper has been created, adjust the depthMapSize if needed, assign to light and set castShadows to true\n\t\tif (newShadowMapper) {\n\t\t\tif (newShadowMapper instanceof CubeMapShadowMapper) {\n\t\t\t\tif (props.get(10, 1) != 1) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 1)];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (props.get(10, 2) != 2) {\n\t\t\t\t\tnewShadowMapper.depthMapSize = this._depthSizeDic[props.get(10, 2)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight.shadowMapper = newShadowMapper;\n\t\t\tlight.castsShadows = true;\n\t\t}\n\n\t\tif (par_id != 0) {\n\n\t\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\n\n\t\t\tif (returnedArrayParent[0]) {\n\t\t\t\t(<DisplayObjectContainer> returnedArrayParent[1]).addChild(light);\n\t\t\t\tparentName = (<DisplayObjectContainer> returnedArrayParent[1]).name;\n\t\t\t} else {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Light\");\n\t\t\t}\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(light);\n\t\t}\n\n\t\tthis.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(< IAsset> light, name);\n\n\t\tthis._blocks[blockID].data = light;\n\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Light: Name = '\" + name + \"' | Type = \" + lightTypes[lightType] + \" | Parent-Name = \" + parentName + \" | ShadowMapper-Type = \" + shadowMapperTypes[shadowMapperType]);\n\n\t}\n\n\t//Block ID = 43\n\tprivate parseCamera(blockID:number):void\n\t{\n\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\t\tvar parentName:string = \"Root (TopLevel)\";\n\t\tvar projection:ProjectionBase;\n\n\t\tthis._newBlockBytes.readUnsignedByte(); //set as active camera\n\t\tthis._newBlockBytes.readShort(); //lengthof lenses - not used yet\n\n\t\tvar projectiontype:number = this._newBlockBytes.readShort();\n\t\tvar props:AWDProperties = this.parseProperties({101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType});\n\n\t\tswitch (projectiontype) {\n\t\t\tcase 5001:\n\t\t\t\tprojection = new PerspectiveProjection(props.get(101, 60));\n\t\t\t\tbreak;\n\t\t\tcase 5002:\n\t\t\t\tprojection = new OrthographicProjection(props.get(101, 500));\n\t\t\t\tbreak;\n\t\t\tcase 5003:\n\t\t\t\tprojection = new OrthographicOffCenterProjection(props.get(101, -400), props.get(102, 400), props.get(103, -300), props.get(104, 300));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unsupportedLenstype\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar camera:Camera = new Camera(projection);\n\t\tcamera.transform.matrix3D = mtx;\n\n\t\tvar returnedArrayParent:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH])\n\n\t\tif (returnedArrayParent[0]) {\n\n\t\t\tvar objC:DisplayObjectContainer = <DisplayObjectContainer> returnedArrayParent[1];\n\t\t\tobjC.addChild(camera);\n\n\t\t\tparentName = objC.name;\n\n\t\t} else if (par_id > 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find a parent for this Camera\");\n\t\t} else {\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(camera);\n\t\t}\n\n\t\tcamera.name = name;\n\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\t\tcamera.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\tcamera.extra = this.parseUserAttributes();\n\n\t\tthis._pFinalizeAsset(camera, name);\n\n\t\tthis._blocks[blockID].data = camera\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a Camera: Name = '\" + name + \"' | Projectiontype = \" + projection + \" | Parent-Name = \" + parentName);\n\t\t}\n\n\t}\n\n\t//Block ID = 51\n\tprivate parseLightPicker(blockID:number):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar numLights:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar lightsArray:Array<LightBase> = new Array<LightBase>();\n\t\tvar k:number = 0;\n\t\tvar lightID:number = 0;\n\n\t\tvar returnedArrayLight:Array<any>;\n\t\tvar lightsArrayNames:Array<string> = new Array<string>();\n\n\t\tfor (k = 0; k < numLights; k++) {\n\t\t\tlightID = this._newBlockBytes.readUnsignedInt();\n\t\t\treturnedArrayLight = this.getAssetByID(lightID, [AssetType.LIGHT])\n\n\t\t\tif (returnedArrayLight[0]) {\n\t\t\t\tlightsArray.push(<LightBase> returnedArrayLight[1]);\n\t\t\t\tlightsArrayNames.push(( <LightBase> returnedArrayLight[1]).name);\n\n\t\t\t} else {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find a Light Nr \" + k + \" (ID = \" + lightID + \" ) for this LightPicker\");\n\t\t\t}\n\t\t}\n\n\t\tif (lightsArray.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this LightPicker, cause no Light was found.\");\n\t\t\tthis.parseUserAttributes();\n\t\t\treturn; //return without any more parsing for this block\n\t\t}\n\n\t\tvar lightPick:LightPickerBase = new StaticLightPicker(lightsArray);\n\t\tlightPick.name = name;\n\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> lightPick, name);\n\n\t\tthis._blocks[blockID].data = lightPick\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a StaticLightPicker: Name = '\" + name + \"' | Texture-Name = \" + lightsArrayNames.toString());\n\t\t}\n\t}\n\n\t//Block ID = 81\n\tprivate parseMaterial(blockID:number):void\n\t{\n\t\t// TODO: not used\n\t\t////blockLength = block.len;\n\t\tvar name:string;\n\t\tvar type:number;\n\t\tvar props:AWDProperties;\n\t\tvar mat:TriangleMethodMaterial;\n\t\tvar attributes:Object;\n\t\tvar finalize:boolean;\n\t\tvar num_methods:number;\n\t\tvar methods_parsed:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tname = this.parseVarStr();\n\t\ttype = this._newBlockBytes.readUnsignedByte();\n\t\tnum_methods = this._newBlockBytes.readUnsignedByte();\n\n\t\t// Read material numerical properties\n\t\t// (1=color, 2=bitmap url, 10=alpha, 11=alpha_blending, 12=alpha_threshold, 13=repeat)\n\t\tprops = this.parseProperties({ 1:AWDParser.INT32, 2:AWDParser.BADDR, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL});\n\n\t\tmethods_parsed = 0;\n\t\twhile (methods_parsed < num_methods) {\n\t\t\tvar method_type:number;\n\n\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tmethods_parsed += 1;\n\t\t}\n\t\tvar debugString:string = \"\";\n\t\tattributes = this.parseUserAttributes();\n\t\tif (type === 1) { // Color material\n\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\tvar color:number;\n\t\t\tcolor = props.get(1, 0xffffff);\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat = new TriangleMethodMaterial(color, props.get(10, 1.0));\n\t\t\t} else {\n\t\t\t\tmat = new TriangleMethodMaterial(color);\n\t\t\t\tmat.materialMode = TriangleMaterialMode.MULTI_PASS;\n\t\t\t}\n\t\t} else if (type === 2) {\n\t\t\tvar tex_addr:number = props.get(2, 0);\n\n\t\t\treturnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\n\n\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffsueTexture (ID = \" + tex_addr + \" ) for this Material\");\n\n\t\t\tmat = new TriangleMethodMaterial(<Texture2DBase> returnedArray[1]);\n\n\t\t\tif (this.materialMode < 2) {\n\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\tdebugString += \"Parsed a TriangleMethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t} else {\n\t\t\t\tmat.materialMode = TriangleMaterialMode.MULTI_PASS;\n\t\t\t\tdebugString += \"Parsed a TriangleMethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + mat.name;\n\t\t\t}\n\t\t}\n\n\t\tmat.extra = attributes;\n\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\tmat.repeat = props.get(13, false);\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\t\tthis._blocks[blockID].data = mat;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(debugString);\n\n\t\t}\n\t}\n\n\t// Block ID = 81 AWD2.1\n\tprivate parseMaterial_v1(blockID:number):void\n\t{\n\t\tvar mat:TriangleMethodMaterial;\n\t\tvar normalTexture:Texture2DBase;\n\t\tvar specTexture:Texture2DBase;\n\t\tvar returnedArray:Array<any>;\n\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar num_methods:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 4:AWDParser.UINT8, 5:AWDParser.BOOL, 6:AWDParser.BOOL, 7:AWDParser.BOOL, 8:AWDParser.BOOL, 9:AWDParser.UINT8, 10:this._propsNrType, 11:AWDParser.BOOL, 12:this._propsNrType, 13:AWDParser.BOOL, 15:this._propsNrType, 16:AWDParser.UINT32, 17:AWDParser.BADDR, 18:this._propsNrType, 19:this._propsNrType, 20:AWDParser.UINT32, 21:AWDParser.BADDR, 22:AWDParser.BADDR});\n\t\tvar spezialType:number = props.get(4, 0);\n\t\tvar debugString:string = \"\";\n\n\t\tif (spezialType >= 2) {//this is no supported material\n\t\t\tthis._blocks[blockID].addError(\"Material-spezialType '\" + spezialType + \"' is not supported, can only be 0:singlePass, 1:MultiPass !\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.materialMode == 1)\n\t\t\tspezialType = 0;\n\t\telse if (this.materialMode == 2)\n\t\t\tspezialType = 1;\n\n\t\tif (spezialType < 2) {//this is SinglePass or MultiPass\n\n\t\t\tif (type == 1) {// Color material\n\t\t\t\tvar color:number = props.get(1, 0xcccccc);//TODO temporarily swapped so that diffuse color goes to ambient\n\n\t\t\t\tif (spezialType == 1) {//\tMultiPassMaterial\n\t\t\t\t\tmat = new TriangleMethodMaterial(color);\n\t\t\t\t\tmat.materialMode = TriangleMaterialMode.MULTI_PASS;\n\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(MultiPass): Name = '\" + name + \"' | \";\n\n\t\t\t\t} else { //\tSinglePassMaterial\n\t\t\t\t\tmat = new TriangleMethodMaterial(color, props.get(10, 1.0));\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\t\t\t\t\tdebugString += \"Parsed a ColorMaterial(SinglePass): Name = '\" + name + \"' | \";\n\t\t\t\t}\n\n\t\t\t} else if (type == 2) {// texture material\n\t\t\t\tvar tex_addr:number = props.get(2, 0);//TODO temporarily swapped so that diffuse texture goes to ambient\n\t\t\t\treturnedArray = this.getAssetByID(tex_addr, [AssetType.TEXTURE]);\n\n\t\t\t\tif ((!returnedArray[0]) && (tex_addr > 0))\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AmbientTexture (ID = \" + tex_addr + \" ) for this TriangleMethodMaterial\");\n\n\t\t\t\tvar texture:Texture2DBase = returnedArray[1];\n\n\t\t\t\tmat = new TriangleMethodMaterial(texture);\n\n\t\t\t\tif (spezialType == 1) {// MultiPassMaterial\n\t\t\t\t\tmat.materialMode = TriangleMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tdebugString += \"Parsed a TriangleMethodMaterial(MultiPass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\n\t\t\t\t} else {//\tSinglePassMaterial\n\t\t\t\t\tmat.alpha = props.get(10, 1.0);\n\t\t\t\t\tmat.alphaBlending = props.get(11, false);\n\n\t\t\t\t\tdebugString += \"Parsed a TriangleMethodMaterial(SinglePass): Name = '\" + name + \"' | Texture-Name = \" + texture.name;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar diffuseTexture:Texture2DBase;\n\t\t\tvar diffuseTex_addr:number = props.get(17, 0);\n\n\t\t\treturnedArray = this.getAssetByID(diffuseTex_addr, [AssetType.TEXTURE]);\n\n\t\t\tif ((!returnedArray[0]) && (diffuseTex_addr != 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the DiffuseTexture (ID = \" + diffuseTex_addr + \" ) for this TriangleMethodMaterial\");\n\t\t\t}\n\n\t\t\tif (returnedArray[0])\n\t\t\t\tdiffuseTexture = returnedArray[1];\n\n\t\t\tif (diffuseTexture) {\n\t\t\t\tmat.diffuseTexture = diffuseTexture;\n\t\t\t\tdebugString += \" | DiffuseTexture-Name = \" + diffuseTexture.name;\n\t\t\t}\n\n\t\t\tvar normalTex_addr:number = props.get(3, 0);\n\n\t\t\treturnedArray = this.getAssetByID(normalTex_addr, [AssetType.TEXTURE]);\n\n\t\t\tif ((!returnedArray[0]) && (normalTex_addr != 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the NormalTexture (ID = \" + normalTex_addr + \" ) for this TriangleMethodMaterial\");\n\t\t\t}\n\n\t\t\tif (returnedArray[0]) {\n\t\t\t\tnormalTexture = returnedArray[1];\n\t\t\t\tdebugString += \" | NormalTexture-Name = \" + normalTexture.name;\n\t\t\t}\n\n\t\t\tvar specTex_addr:number = props.get(21, 0);\n\t\t\treturnedArray = this.getAssetByID(specTex_addr, [AssetType.TEXTURE]);\n\n\t\t\tif ((!returnedArray[0]) && (specTex_addr != 0)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SpecularTexture (ID = \" + specTex_addr + \" ) for this TriangleMethodMaterial\");\n\t\t\t}\n\t\t\tif (returnedArray[0]) {\n\t\t\t\tspecTexture = returnedArray[1];\n\t\t\t\tdebugString += \" | SpecularTexture-Name = \" + specTexture.name;\n\t\t\t}\n\n\t\t\tvar lightPickerAddr:number = props.get(22, 0);\n\t\t\treturnedArray = this.getAssetByID(lightPickerAddr, [AssetType.LIGHT_PICKER])\n\n\t\t\tif ((!returnedArray[0]) && (lightPickerAddr)) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightPicker (ID = \" + lightPickerAddr + \" ) for this TriangleMethodMaterial\");\n\t\t\t} else {\n\t\t\t\tmat.lightPicker = <LightPickerBase> returnedArray[1];\n\t\t\t\t//debugString+=\" | Lightpicker-Name = \"+LightPickerBase(returnedArray[1]).name;\n\t\t\t}\n\n\t\t\tmat.smooth = props.get(5, true);\n\t\t\tmat.mipmap = props.get(6, true);\n\t\t\tmat.bothSides = props.get(7, false);\n\t\t\tmat.alphaPremultiplied = props.get(8, false);\n\t\t\tmat.blendMode = this.blendModeDic[props.get(9, 0)];\n\t\t\tmat.repeat = props.get(13, false);\n\n\t\t\tif (normalTexture)\n\t\t\t\tmat.normalMap = normalTexture;\n\n\t\t\tif (specTexture)\n\t\t\t\tmat.specularMap = specTexture;\n\n\t\t\tmat.alphaThreshold = props.get(12, 0.0);\n\t\t\tmat.ambient = props.get(15, 1.0);\n\t\t\tmat.diffuseColor = props.get(16, 0xffffff);\n\t\t\tmat.specular = props.get(18, 1.0);\n\t\t\tmat.gloss = props.get(19, 50);\n\t\t\tmat.specularColor = props.get(20, 0xffffff);\n\n\t\t\tvar methods_parsed:number = 0;\n\t\t\tvar targetID:number;\n\n\t\t\twhile (methods_parsed < num_methods) {\n\t\t\t\tvar method_type:number;\n\t\t\t\tmethod_type = this._newBlockBytes.readUnsignedShort();\n\n\t\t\t\tprops = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\n\n\t\t\t\tswitch (method_type) {\n\t\t\t\t\tcase 999: //wrapper-Methods that will load a previous parsed EffektMethod returned\n\n\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.EFFECTS_METHOD]);\n\n\t\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EffectMethod (ID = \" + targetID + \" ) for this Material\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmat.addEffectMethod(returnedArray[1]);\n\n\t\t\t\t\t\t\tdebugString += \" | EffectMethod-Name = \" + (<EffectMethodBase> returnedArray[1]).name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 998: //wrapper-Methods that will load a previous parsed ShadowMapMethod\n\n\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\n\n\t\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowMethod (ID = \" + targetID + \" ) for this Material\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmat.shadowMethod = returnedArray[1];\n\t\t\t\t\t\t\tdebugString += \" | ShadowMethod-Name = \" + (<ShadowMethodBase> returnedArray[1]).name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: //EnvMapAmbientMethod\n\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\n\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapAmbientMethodMaterial\");\n\t\t\t\t\t\tmat.ambientMethod = new AmbientEnvMapMethod(returnedArray[1]);\n\t\t\t\t\t\tdebugString += \" | AmbientEnvMapMethod | EnvMap-Name =\" + (<CubeTextureBase> returnedArray[1]).name;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 51: //DepthDiffuseMethod\n\t\t\t\t\t\tmat.diffuseMethod = new DiffuseDepthMethod();\n\t\t\t\t\t\tdebugString += \" | DiffuseDepthMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 52: //GradientDiffuseMethod\n\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the GradientDiffuseTexture (ID = \" + targetID + \" ) for this GradientDiffuseMethod\");\n\t\t\t\t\t\tmat.diffuseMethod = new DiffuseGradientMethod(returnedArray[1]);\n\t\t\t\t\t\tdebugString += \" | DiffuseGradientMethod | GradientDiffuseTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 53: //WrapDiffuseMethod\n\t\t\t\t\t\tmat.diffuseMethod = new DiffuseWrapMethod(props.get(101, 5));\n\t\t\t\t\t\tdebugString += \" | DiffuseWrapMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 54: //LightMapDiffuseMethod\n\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapDiffuseMethod\");\n\t\t\t\t\t\tmat.diffuseMethod = new DiffuseLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)], false, mat.diffuseMethod);\n\t\t\t\t\t\tdebugString += \" | DiffuseLightMapMethod | LightMapTexture-Name =\" + (<Texture2DBase> returnedArray[1]).name;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 55: //CelDiffuseMethod\n\t\t\t\t\t\tmat.diffuseMethod = new DiffuseCelMethod(props.get(401, 3), mat.diffuseMethod);\n\t\t\t\t\t\t(<DiffuseCelMethod> mat.diffuseMethod).smoothness = props.get(101, 0.1);\n\t\t\t\t\t\tdebugString += \" | DiffuseCelMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 56: //SubSurfaceScatteringMethod\n//\t\t\t\t\t\t\tmat.diffuseMethod = new DiffuseSubSurfaceMethod(); //depthMapSize and depthMapOffset ?\n//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scattering = props.get(101, 0.2);\n//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).translucency = props.get(102, 1);\n//\t\t\t\t\t\t\t(<DiffuseSubSurfaceMethod> mat.diffuseMethod).scatterColor = props.get(601, 0xffffff);\n//\t\t\t\t\t\t\tdebugString += \" | DiffuseSubSurfaceMethod\";\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 101: //AnisotropicSpecularMethod\n\t\t\t\t\t\tmat.specularMethod = new SpecularAnisotropicMethod();\n\t\t\t\t\t\tdebugString += \" | SpecularAnisotropicMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 102: //SpecularPhongMethod\n\t\t\t\t\t\tmat.specularMethod = new SpecularPhongMethod();\n\t\t\t\t\t\tdebugString += \" | SpecularPhongMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 103: //CellSpecularMethod\n\t\t\t\t\t\tmat.specularMethod = new SpecularCelMethod(props.get(101, 0.5), mat.specularMethod);\n\t\t\t\t\t\t(<SpecularCelMethod> mat.specularMethod).smoothness = props.get(102, 0.1);\n\t\t\t\t\t\tdebugString += \" | SpecularCelMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 104: //SpecularFresnelMethod\n\t\t\t\t\t\tmat.specularMethod = new SpecularFresnelMethod(props.get(701, true), mat.specularMethod);\n\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).fresnelPower = props.get(101, 5);\n\t\t\t\t\t\t(<SpecularFresnelMethod> mat.specularMethod).normalReflectance = props.get(102, 0.1);\n\t\t\t\t\t\tdebugString += \" | SpecularFresnelMethod\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 151://HeightMapNormalMethod - thios is not implemented for now, but might appear later\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 152: //SimpleWaterNormalMethod\n\t\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SecoundNormalMap (ID = \" + targetID + \" ) for this SimpleWaterNormalMethod\");\n\t\t\t\t\t\tif (!mat.normalMap)\n\t\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find a normal Map on this Material to use with this SimpleWaterNormalMethod\");\n\n\t\t\t\t\t\tmat.normalMap = returnedArray[1];\n\t\t\t\t\t\tmat.normalMethod = new NormalSimpleWaterMethod(mat.normalMap, returnedArray[1]);\n\t\t\t\t\t\tdebugString += \" | NormalSimpleWaterMethod | Second-NormalTexture-Name = \" + (<Texture2DBase> returnedArray[1]).name;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.parseUserAttributes();\n\t\t\t\tmethods_parsed += 1;\n\t\t\t}\n\t\t}\n\t\tmat.extra = this.parseUserAttributes();\n\t\tthis._pFinalizeAsset(<IAsset> mat, name);\n\n\t\tthis._blocks[blockID].data = mat;\n\t\tif (this._debug) {\n\t\t\tconsole.log(debugString);\n\t\t}\n\t}\n\n\t//Block ID = 82\n\tprivate parseTexture(blockID:number):void\n\t{\n\n\t\tvar asset:Texture2DBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar data_len:number;\n\n\t\tthis._texture_users[this._cur_block_id.toString()] = [];\n\n\t\t// External\n\t\tif (type == 0) {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar url:string;\n\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), new URLRequest(url), false, null, true);\n\n\t\t} else {\n\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\tvar data:ByteArray;\n\t\t\tdata = new ByteArray();\n\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t//\n\t\t\t// AWDParser - Fix for FireFox Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=715075 .\n\t\t\t//\n\t\t\t// Converting data to image here instead of parser - fix FireFox bug where image width / height is 0 when created from data\n\t\t\t// This gives the browser time to initialise image width / height.\n\n\t\t\tthis._pAddDependency(this._cur_block_id.toString(), null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t//this._pAddDependency(this._cur_block_id.toString(), null, false, data, true);\n\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing a \" + textureStylesNames[type] + \" Bitmap for Texture\");\n\t\t}\n\n\t}\n\n\t//Block ID = 83\n\tprivate parseCubeTexture(blockID:number):void\n\t{\n\t\t//blockLength = block.len;\n\t\tvar data_len:number;\n\t\tvar asset:CubeTextureBase;\n\t\tvar i:number;\n\n\t\tthis._cubeTextures = new Array<any>();\n\t\tthis._texture_users[ this._cur_block_id.toString() ] = [];\n\n\t\tvar type:number = this._newBlockBytes.readUnsignedByte();\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tthis._texture_users[this._cur_block_id.toString()] = [];\n\t\t\tthis._cubeTextures.push(null);\n\n\t\t\t// External\n\t\t\tif (type == 0) {\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar url:string;\n\t\t\t\turl = this._newBlockBytes.readUTFBytes(data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, new URLRequest(url), false, null, true);\n\t\t\t} else {\n\n\t\t\t\tdata_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tvar data:ByteArray;\n\t\t\t\tdata = new ByteArray();\n\n\t\t\t\tthis._newBlockBytes.readBytes(data, 0, data_len);\n\n\t\t\t\tthis._pAddDependency(this._cur_block_id.toString() + \"#\" + i, null, false, ParserUtils.byteArrayToImage(data), true);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore for now\n\t\tthis.parseProperties(null);\n\t\tthis._blocks[blockID].extras = this.parseUserAttributes();\n\t\tthis._pPauseAndRetrieveDependencies();\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tvar textureStylesNames:Array<string> = [\"external\", \"embed\"]\n\t\t\tconsole.log(\"Start parsing 6 \" + textureStylesNames[type] + \" Bitmaps for CubeTexture\");\n\t\t}\n\t}\n\n\t//Block ID = 91\n\tprivate parseSharedMethodBlock(blockID:number):void\n\t{\n\t\tvar asset:EffectMethodBase;\n\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\t\tasset = this.parseSharedMethodList(blockID);\n\t\tthis.parseUserAttributes();\n\t\tthis._blocks[blockID].data = asset;\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a EffectMethod: Name = \" + asset.name + \" Type = \" + asset);\n\t\t}\n\t}\n\n\t//Block ID = 92\n\tprivate parseShadowMethodBlock(blockID:number):void\n\t{\n\t\tvar type:number;\n\t\tvar data_len:number;\n\t\tvar asset:ShadowMethodBase;\n\t\tvar shadowLightID:number;\n\t\tthis._blocks[blockID].name = this.parseVarStr();\n\n\t\tshadowLightID = this._newBlockBytes.readUnsignedInt();\n\t\tvar returnedArray:Array<any> = this.getAssetByID(shadowLightID, [AssetType.LIGHT]);\n\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the TargetLight (ID = \" + shadowLightID + \" ) for this ShadowMethod - ShadowMethod not created\");\n\t\t\treturn;\n\t\t}\n\n\t\tasset = this.parseShadowMethodList(<LightBase> returnedArray[1], blockID);\n\n\t\tif (!asset)\n\t\t\treturn;\n\n\t\tthis.parseUserAttributes(); // Ignore for now\n\t\tthis._pFinalizeAsset(<IAsset> asset, this._blocks[blockID].name);\n\t\tthis._blocks[blockID].data = asset;\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a ShadowMapMethodMethod: Name = \" + asset.name + \" | Type = \" + asset + \" | Light-Name = \", ( <LightBase> returnedArray[1] ).name);\n\t\t}\n\t}\n\n\n\t//Block ID = 253\n\tprivate parseCommand(blockID:number):void\n\t{\n\t\tvar hasBlocks:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tvar par_id:number = this._newBlockBytes.readUnsignedInt();\n\t\tvar mtx:Matrix3D = this.parseMatrix3D();\n\t\tvar name:string = this.parseVarStr();\n\n\t\tvar parentObject:DisplayObjectContainer;\n\t\tvar targetObject:DisplayObjectContainer;\n\n\t\tvar returnedArray:Array<any> = this.getAssetByID(par_id, [AssetType.CONTAINER, AssetType.LIGHT, AssetType.MESH]);\n\n\t\tif (returnedArray[0]) {\n\t\t\tparentObject = <DisplayObjectContainer> returnedArray[1];\n\t\t}\n\n\t\tvar numCommands:number = this._newBlockBytes.readShort();\n\t\tvar typeCommand:number = this._newBlockBytes.readShort();\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\n\n\t\tswitch (typeCommand) {\n\t\t\tcase 1:\n\n\t\t\t\tvar targetID:number = props.get(1, 0);\n\t\t\t\tvar returnedArrayTarget:Array<any> = this.getAssetByID(targetID, [AssetType.LIGHT, AssetType.TEXTURE_PROJECTOR]); //for no only light is requested!!!!\n\n\t\t\t\tif ((!returnedArrayTarget[0]) && (targetID != 0)) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the light (ID = \" + targetID + \" ( for this CommandBock!\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttargetObject = returnedArrayTarget[1];\n\n\t\t\t\tif (parentObject) {\n\t\t\t\t\tparentObject.addChild(targetObject);\n\t\t\t\t}\n\n\t\t\t\ttargetObject.transform.matrix3D = mtx;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetObject) {\n\t\t\tprops = this.parseProperties({1:this._matrixNrType, 2:this._matrixNrType, 3:this._matrixNrType, 4:AWDParser.UINT8});\n\n\t\t\ttargetObject.pivot = new Vector3D(props.get(1, 0), props.get(2, 0), props.get(3, 0));\n\t\t\ttargetObject.extra = this.parseUserAttributes();\n\n\t\t}\n\t\tthis._blocks[blockID].data = targetObject\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a CommandBlock: Name = '\" + name);\n\t\t}\n\n\t}\n\n\t//blockID 255\n\tprivate parseMetaData(blockID:number):void\n\t{\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT32, 2:AWDParser.AWDSTRING, 3:AWDParser.AWDSTRING, 4:AWDParser.AWDSTRING, 5:AWDParser.AWDSTRING});\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Parsed a MetaDataBlock: TimeStamp         = \" + props.get(1, 0));\n\t\t\tconsole.log(\"                        EncoderName       = \" + props.get(2, \"unknown\"));\n\t\t\tconsole.log(\"                        EncoderVersion    = \" + props.get(3, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorName     = \" + props.get(4, \"unknown\"));\n\t\t\tconsole.log(\"                        GeneratorVersion  = \" + props.get(5, \"unknown\"));\n\t\t}\n\t}\n\n\t//blockID 254\n\tprivate parseNameSpace(blockID:number):void\n\t{\n\t\tvar id:number = this._newBlockBytes.readUnsignedByte();\n\t\tvar nameSpaceString:string = this.parseVarStr();\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a NameSpaceBlock: ID = \" + id + \" | String = \" + nameSpaceString);\n\t}\n\n\t//--Parser UTILS---------------------------------------------------------------------------\n\n\t// this functions reads and creates a ShadowMethodMethod\n\tprivate parseShadowMethodList(light:LightBase, blockID:number):ShadowMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar shadowMethod:ShadowMethodBase;\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL, 801:AWDParser.MTX4x4});\n\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>\n\t\tswitch (methodType) {\n\t\t\t//\t\t\t\tcase 1001: //CascadeShadowMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0]) {\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this CascadeShadowMapMethod - ShadowMethod not created\");\n\t\t\t//\t\t\t\t\t\treturn shadowMethod;\n\t\t\t//\t\t\t\t\t}\n\t\t\t//\t\t\t\t\tshadowMethod = new CascadeShadowMapMethod(returnedArray[1]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 1002: //ShadowNearMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.SHADOW_MAP_METHOD]);\n\t\t\t\tif (!returnedArray[0]) {\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the ShadowBaseMethod (ID = \" + targetID + \" ) for this ShadowNearMethod - ShadowMethod not created\");\n\t\t\t\t\treturn shadowMethod;\n\t\t\t\t}\n\t\t\t\tshadowMethod = new ShadowNearMethod(<ShadowMethodBase> returnedArray[1]);\n\t\t\t\tbreak;\n\t\t\tcase 1101: //ShadowFilteredMethod\n\n\t\t\t\tshadowMethod = new ShadowFilteredMethod(<DirectionalLight> light);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowFilteredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t\tcase 1102: //ShadowDitheredMethod\n\n\n\t\t\t\tshadowMethod = new ShadowDitheredMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowDitheredMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1103: //ShadowSoftMethod\n\n\t\t\t\tshadowMethod = new ShadowSoftMethod(<DirectionalLight> light, <number> props.get(201, 5));\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\t(<ShadowSoftMethod> shadowMethod).range = props.get(103, 1);\n\n\t\t\t\tbreak;\n\t\t\tcase 1104: //ShadowHardMethod\n\t\t\t\tshadowMethod = new ShadowHardMethod(light);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).alpha = props.get(101, 1);\n\t\t\t\t(<ShadowHardMethod> shadowMethod).epsilon = props.get(102, 0.002);\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn shadowMethod;\n\t}\n\n\t//Block ID 101\n\tprivate parseSkeleton(blockID:number /*uint*/):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar skeleton:Skeleton = new Skeleton();\n\t\tthis.parseProperties(null); // Discard properties for now\t\t\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint:SkeletonJoint;\n\t\t\tvar ibp:Matrix3D;\n\t\t\t// Ignore joint id\n\t\t\tthis._newBlockBytes.readUnsignedShort();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.parentIndex = this._newBlockBytes.readUnsignedShort() - 1; // 0=null in AWD\n\t\t\tjoint.name = this.parseVarStr();\n\n\t\t\tibp = this.parseMatrix3D();\n\t\t\tjoint.inverseBindPose = ibp.rawData;\n\t\t\t// Ignore joint props/attributes for now\n\t\t\tthis.parseProperties(null);\n\t\t\tthis.parseUserAttributes();\n\t\t\tskeleton.joints.push(joint);\n\t\t\tjoints_parsed++;\n\t\t}\n\n\t\t// Discard attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(skeleton, name);\n\t\tthis._blocks[blockID].data = skeleton;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Skeleton: Name = \" + skeleton.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//Block ID = 102\n\tprivate parseSkeletonPose(blockID:number /*uint*/):void\n\t{\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_joints:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar pose:SkeletonPose = new SkeletonPose();\n\n\t\tvar joints_parsed:number /*uint*/ = 0;\n\t\twhile (joints_parsed < num_joints) {\n\t\t\tvar joint_pose:JointPose;\n\t\t\tvar has_transform:number /*uint*/;\n\t\t\tjoint_pose = new JointPose();\n\t\t\thas_transform = this._newBlockBytes.readUnsignedByte();\n\t\t\tif (has_transform == 1) {\n\t\t\t\tvar mtx_data:Array<number> = this.parseMatrix43RawData();\n\n\t\t\t\tvar mtx:Matrix3D = new Matrix3D(mtx_data);\n\t\t\t\tjoint_pose.orientation.fromMatrix(mtx);\n\t\t\t\tjoint_pose.translation.copyFrom(mtx.position);\n\n\t\t\t\tpose.jointPoses[joints_parsed] = joint_pose;\n\t\t\t}\n\t\t\tjoints_parsed++;\n\t\t}\n\t\t// Skip attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(pose, name);\n\t\tthis._blocks[blockID].data = pose;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonPose: Name = \" + pose.name + \" | Number of Joints = \" + joints_parsed);\n\t}\n\n\t//blockID 103\n\tprivate parseSkeletonAnimation(blockID:number /*uint*/):void\n\t{\n\t\tvar frame_dur:number;\n\t\tvar pose_addr:number /*uint*/;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar clip:SkeletonClipNode = new SkeletonClipNode();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tthis.parseProperties(null); // Ignore properties for now\n\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar returnedArray:Array<any>;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tpose_addr = this._newBlockBytes.readUnsignedInt();\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\treturnedArray = this.getAssetByID(pose_addr, [AssetType.SKELETON_POSE]);\n\t\t\tif (!returnedArray[0])\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the SkeletonPose Frame # \" + frames_parsed + \" (ID = \" + pose_addr + \" ) for this SkeletonClipNode\");\n\t\t\telse\n\t\t\t\tclip.addFrame(<SkeletonPose> this._blocks[pose_addr].data, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif (clip.frames.length == 0) {\n\t\t\tthis._blocks[blockID].addError(\"Could not this SkeletonClipNode, because no Frames where set.\");\n\t\t\treturn;\n\t\t}\n\t\t// Ignore attributes for now\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\t\tthis._blocks[blockID].data = clip;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a SkeletonClipNode: Name = \" + clip.name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\t//Block ID = 111 /  Block ID = 112\n\tprivate parseMeshPoseAnimation(blockID:number /*uint*/, poseOnly:boolean = false):void\n\t{\n\t\tvar num_frames:number /*uint*/ = 1;\n\t\tvar num_submeshes:number /*uint*/;\n\t\tvar frames_parsed:number /*uint*/;\n\t\tvar subMeshParsed:number /*uint*/;\n\t\tvar frame_dur:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar str_len:number;\n\t\tvar str_end:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar idx:number /*int*/ = 0;\n\t\tvar clip:VertexClipNode = new VertexClipNode();\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar verts:Array<number>;\n\t\tvar num_Streams:number /*int*/ = 0;\n\t\tvar streamsParsed:number /*int*/ = 0;\n\t\tvar streamtypes:Array<number> /*int*/ = new Array<number>() /*int*/;\n\t\tvar props:AWDProperties;\n\t\tvar thisGeo:Geometry;\n\t\tvar name:string = this.parseVarStr();\n\t\tvar geoAdress:number /*int*/ = this._newBlockBytes.readUnsignedInt();\n\t\tvar returnedArray:Array<any> = this.getAssetByID(geoAdress, [AssetType.GEOMETRY]);\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the target-Geometry-Object \" + geoAdress + \" ) for this VertexClipNode\");\n\t\t\treturn;\n\t\t}\n\t\tvar uvs:Array<Array<number>> = this.getUVForVertexAnimation(geoAdress);\n\t\tif (!poseOnly)\n\t\t\tnum_frames = this._newBlockBytes.readUnsignedShort();\n\n\t\tnum_submeshes = this._newBlockBytes.readUnsignedShort();\n\t\tnum_Streams = this._newBlockBytes.readUnsignedShort();\n\t\tstreamsParsed = 0;\n\t\twhile (streamsParsed < num_Streams) {\n\t\t\tstreamtypes.push(this._newBlockBytes.readUnsignedShort());\n\t\t\tstreamsParsed++;\n\t\t}\n\t\tprops = this.parseProperties({1:AWDParser.BOOL, 2:AWDParser.BOOL});\n\n\t\tclip.looping = props.get(1, true);\n\t\tclip.stitchFinalFrame = props.get(2, false);\n\n\t\tframes_parsed = 0;\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tframe_dur = this._newBlockBytes.readUnsignedShort();\n\t\t\tgeometry = new Geometry();\n\t\t\tsubMeshParsed = 0;\n\t\t\twhile (subMeshParsed < num_submeshes) {\n\t\t\t\tstreamsParsed = 0;\n\t\t\t\tstr_len = this._newBlockBytes.readUnsignedInt();\n\t\t\t\tstr_end = this._newBlockBytes.position + str_len;\n\t\t\t\twhile (streamsParsed < num_Streams) {\n\t\t\t\t\tif (streamtypes[streamsParsed] == 1) {\n\t\t\t\t\t\tindices = (<Geometry> returnedArray[1]).subGeometries[subMeshParsed].indices;\n\t\t\t\t\t\tverts = new Array<number>();\n\t\t\t\t\t\tidx = 0;\n\t\t\t\t\t\twhile (this._newBlockBytes.position < str_end) {\n\t\t\t\t\t\t\tx = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\ty = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\tz = this.readNumber(this._accuracyGeo)\n\t\t\t\t\t\t\tverts[idx++] = x;\n\t\t\t\t\t\t\tverts[idx++] = y;\n\t\t\t\t\t\t\tverts[idx++] = z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsubGeom = new TriangleSubGeometry(true);\n\t\t\t\t\t\tsubGeom.updateIndices(indices);\n\t\t\t\t\t\tsubGeom.updatePositions(verts);\n\t\t\t\t\t\tsubGeom.updateUVs(uvs[subMeshParsed]);\n\t\t\t\t\t\tsubGeom.updateVertexNormals(null);\n\t\t\t\t\t\tsubGeom.updateVertexTangents(null);\n\t\t\t\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\t\t\t\tsubGeom.autoDeriveTangents = false;\n\t\t\t\t\t\tsubMeshParsed++;\n\t\t\t\t\t\tgeometry.addSubGeometry(subGeom)\n\t\t\t\t\t} else\n\t\t\t\t\t\tthis._newBlockBytes.position = str_end;\n\t\t\t\t\tstreamsParsed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclip.addFrame(geometry, frame_dur);\n\t\t\tframes_parsed++;\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tthis._pFinalizeAsset(clip, name);\n\n\t\tthis._blocks[blockID].data = clip;\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a VertexClipNode: Name = \" + clip.name + \" | Target-Geometry-Name = \" + (<Geometry> returnedArray[1]).name + \" | Number of Frames = \" + clip.frames.length);\n\t}\n\n\t//BlockID 113\n\tprivate parseVertexAnimationSet(blockID:number /*uint*/):void\n\t{\n\t\tvar poseBlockAdress:number /*int*/\n\t\tvar outputString:string = \"\";\n\t\tvar name:string = this.parseVarStr();\n\t\tvar num_frames:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.UINT16});\n\t\tvar frames_parsed:number /*uint*/ = 0;\n\t\tvar skeletonFrames:Array<SkeletonClipNode> = new Array<SkeletonClipNode>();\n\t\tvar vertexFrames:Array<VertexClipNode> = new Array<VertexClipNode>();\n\t\twhile (frames_parsed < num_frames) {\n\t\t\tposeBlockAdress = this._newBlockBytes.readUnsignedInt();\n\t\t\tvar returnedArray:Array<any> = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\n\t\t\tif (!returnedArray[0])\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationClipNode Nr \" + frames_parsed + \" ( \" + poseBlockAdress + \" ) for this AnimationSet\");\n\t\t\telse {\n\t\t\t\tif (returnedArray[1] instanceof VertexClipNode)\n\t\t\t\tvertexFrames.push(returnedArray[1])\n\t\t\t\tif (returnedArray[1] instanceof SkeletonClipNode)\n\t\t\t\tskeletonFrames.push(returnedArray[1])\n\t\t\t}\n\t\t\tframes_parsed++;\n\t\t}\n\t\tif ((vertexFrames.length == 0) && (skeletonFrames.length == 0)) {\n\t\t\tthis._blocks[blockID].addError(\"Could not create this AnimationSet, because it contains no animations\");\n\t\t\treturn;\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\tif (vertexFrames.length > 0) {\n\t\t\tvar newVertexAnimationSet:VertexAnimationSet = new VertexAnimationSet();\n\t\t\tfor (var i:number /*int*/ = 0; i < vertexFrames.length; i++)\n\t\t\t\tnewVertexAnimationSet.addAnimation(vertexFrames[i]);\n\t\t\tthis._pFinalizeAsset(newVertexAnimationSet, name);\n\t\t\tthis._blocks[blockID].data = newVertexAnimationSet;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a VertexAnimationSet: Name = \" + name + \" | Animations = \" + newVertexAnimationSet.animations.length + \" | Animation-Names = \" + newVertexAnimationSet.animationNames.toString());\n\n\t\t} else if (skeletonFrames.length > 0) {\n\t\t\treturnedArray = this.getAssetByID(poseBlockAdress, [AssetType.ANIMATION_NODE]);\n\t\t\tvar newSkeletonAnimationSet:SkeletonAnimationSet = new SkeletonAnimationSet(props.get(1, 4)); //props.get(1,4));\n\t\t\tfor (var i:number /*int*/ = 0; i < skeletonFrames.length; i++)\n\t\t\t\tnewSkeletonAnimationSet.addAnimation(skeletonFrames[i]);\n\t\t\tthis._pFinalizeAsset(newSkeletonAnimationSet, name);\n\t\t\tthis._blocks[blockID].data = newSkeletonAnimationSet;\n\t\t\tif (this._debug)\n\t\t\t\tconsole.log(\"Parsed a SkeletonAnimationSet: Name = \" + name + \" | Animations = \" + newSkeletonAnimationSet.animations.length + \" | Animation-Names = \" + newSkeletonAnimationSet.animationNames.toString());\n\n\t\t}\n\t}\n\n\t//BlockID 122\n\tprivate parseAnimatorSet(blockID:number /*uint*/):void\n\t{\n\t\tvar targetMesh:Mesh;\n\t\tvar animSetBlockAdress:number /*int*/\n\t\tvar targetAnimationSet:AnimationSetBase;\n\t\tvar outputString:string = \"\";\n\t\tvar name:string = this.parseVarStr();\n\t\tvar type:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR});\n\n\t\tanimSetBlockAdress = this._newBlockBytes.readUnsignedInt();\n\t\tvar targetMeshLength:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar meshAdresses:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tfor (var i:number /*int*/ = 0; i < targetMeshLength; i++)\n\t\t\tmeshAdresses.push(this._newBlockBytes.readUnsignedInt());\n\n\t\tvar activeState:number /*uint*/ = this._newBlockBytes.readUnsignedShort();\n\t\tvar autoplay:boolean = ( this._newBlockBytes.readUnsignedByte() == 1 );\n\t\tthis.parseUserAttributes();\n\t\tthis.parseUserAttributes();\n\n\t\tvar returnedArray:Array<any>;\n\t\tvar targetMeshes:Array<Mesh> = new Array<Mesh>();\n\n\t\tfor (i = 0; i < meshAdresses.length; i++) {\n\t\t\treturnedArray = this.getAssetByID(meshAdresses[i], [AssetType.MESH]);\n\t\t\tif (returnedArray[0])\n\t\t\t\ttargetMeshes.push(<Mesh> returnedArray[1]);\n\t\t}\n\t\treturnedArray = this.getAssetByID(animSetBlockAdress, [AssetType.ANIMATION_SET]);\n\t\tif (!returnedArray[0]) {\n\t\t\tthis._blocks[blockID].addError(\"Could not find the AnimationSet ( \" + animSetBlockAdress + \" ) for this Animator\");;\n\t\t\treturn\n\t\t}\n\t\ttargetAnimationSet = <AnimationSetBase> returnedArray[1];\n\t\tvar thisAnimator:AnimatorBase;\n\t\tif (type == 1) {\n\n\t\t\treturnedArray = this.getAssetByID(props.get(1, 0), [AssetType.SKELETON]);\n\t\t\tif (!returnedArray[0]) {\n\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Skeleton ( \" + props.get(1, 0) + \" ) for this Animator\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthisAnimator = new SkeletonAnimator(<SkeletonAnimationSet> targetAnimationSet, <Skeleton> returnedArray[1]);\n\n\t\t} else if (type == 2)\n\t\t\tthisAnimator = new VertexAnimator(<VertexAnimationSet> targetAnimationSet);\n\n\t\tthis._pFinalizeAsset(thisAnimator, name);\n\t\tthis._blocks[blockID].data = thisAnimator;\n\t\tfor (i = 0; i < targetMeshes.length; i++) {\n\t\t\tif (type == 1)\n\t\t\t\ttargetMeshes[i].animator = (<SkeletonAnimator> thisAnimator);\n\t\t\tif (type == 2)\n\t\t\t\ttargetMeshes[i].animator = (<VertexAnimator> thisAnimator);\n\n\t\t}\n\t\tif (this._debug)\n\t\t\tconsole.log(\"Parsed a Animator: Name = \" + name);\n\t}\n\t\n\t// this functions reads and creates a EffectMethod\n\tprivate parseSharedMethodList(blockID:number):EffectMethodBase\n\t{\n\n\t\tvar methodType:number = this._newBlockBytes.readUnsignedShort();\n\t\tvar effectMethodReturn:EffectMethodBase;\n\n\t\tvar props:AWDProperties = this.parseProperties({1:AWDParser.BADDR, 2:AWDParser.BADDR, 3:AWDParser.BADDR, 101:this._propsNrType, 102:this._propsNrType, 103:this._propsNrType, 104:this._propsNrType, 105:this._propsNrType, 106:this._propsNrType, 107:this._propsNrType, 201:AWDParser.UINT32, 202:AWDParser.UINT32, 301:AWDParser.UINT16, 302:AWDParser.UINT16, 401:AWDParser.UINT8, 402:AWDParser.UINT8, 601:AWDParser.COLOR, 602:AWDParser.COLOR, 701:AWDParser.BOOL, 702:AWDParser.BOOL});\n\t\tvar targetID:number;\n\t\tvar returnedArray:Array<any>;\n\n\t\tswitch (methodType) {\n\t\t\t// Effect Methods\n\t\t\tcase 401: //ColorMatrix\n\t\t\t\teffectMethodReturn = new EffectColorMatrixMethod(props.get(101, new Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)));\n\t\t\t\tbreak;\n\t\t\tcase 402: //ColorTransform\n\t\t\t\teffectMethodReturn = new EffectColorTransformMethod();\n\t\t\t\tvar offCol:number /*uint*/ = props.get(601, 0x00000000);\n\t\t\t\t(<EffectColorTransformMethod> effectMethodReturn).colorTransform = new ColorTransform(props.get(102, 1), props.get(103, 1), props.get(104, 1), props.get(101, 1), ((offCol >> 16) & 0xFF), ((offCol >> 8) & 0xFF), (offCol & 0xFF), ((offCol >> 24) & 0xFF));\n\t\t\t\tbreak;\n\t\t\tcase 403: //EnvMap\n\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\tconsole.log('ENV MAP', targetID);\n\n\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [ AssetType.TEXTURE ], \"CubeTexture\");\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this EnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectEnvMapMethod(<CubeTextureBase> returnedArray[1], <number> props.get(101, 1));\n\t\t\t\ttargetID = props.get(2, 0);\n\t\t\t\tif (targetID > 0) {\n\t\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Mask-texture (ID = \" + targetID + \" ) for this EnvMapMethod\");\n\n\t\t\t\t\t// Todo: test mask with EnvMapMethod\n\t\t\t\t\t//(<EnvMapMethod> effectMethodReturn).mask = <Texture2DBase> returnedArray[1];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 404: //LightMapMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the LightMap (ID = \" + targetID + \" ) for this LightMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectLightMapMethod(returnedArray[1], this.blendModeDic[props.get(401, 10)]); //usesecondaryUV not set\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 405: //ProjectiveTextureMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE_PROJECTOR]);\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the TextureProjector (ID = \" + targetID + \" ) for this ProjectiveTextureMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new ProjectiveTextureMethod(returnedArray[1], blendModeDic[props.get(401, 10)]);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 406: //RimLightMethod\n\t\t\t\teffectMethodReturn = new EffectRimLightMethod(props.get(601, 0xffffff), props.get(101, 0.4), props.get(101, 2)); //blendMode\n\t\t\t\tbreak;\n\t\t\tcase 407: //AlphaMaskMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE]);\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the Alpha-texture (ID = \" + targetID + \" ) for this AlphaMaskMethod\");\n\t\t\t\teffectMethodReturn = new EffectAlphaMaskMethod(returnedArray[1], props.get(701, false));\n\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 408: //RefractionEnvMapMethod\n\t\t\t//\t\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t//\t\t\t\t\treturnedArray = getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\n\t\t\t//\t\t\t\t\tif (!returnedArray[0])\n\t\t\t//\t\t\t\t\t\t_blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this RefractionEnvMapMethod\");\n\t\t\t//\t\t\t\t\teffectMethodReturn = new RefractionEnvMapMethod(returnedArray[1], props.get(101, 0.1), props.get(102, 0.01), props.get(103, 0.01), props.get(104, 0.01));\n\t\t\t//\t\t\t\t\tRefractionEnvMapMethod(effectMethodReturn).alpha = props.get(104, 1);\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\t//\t\t\t\tcase 409: //OutlineMethod\n\t\t\t//\t\t\t\t\teffectMethodReturn = new OutlineMethod(props.get(601, 0x00000000), props.get(101, 1), props.get(701, true), props.get(702, false));\n\t\t\t//\t\t\t\t\tbreak;\n\t\t\tcase 410: //FresnelEnvMapMethod\n\t\t\t\ttargetID = props.get(1, 0);\n\t\t\t\treturnedArray = this.getAssetByID(targetID, [AssetType.TEXTURE], \"CubeTexture\");\n\t\t\t\tif (!returnedArray[0])\n\t\t\t\t\tthis._blocks[blockID].addError(\"Could not find the EnvMap (ID = \" + targetID + \" ) for this FresnelEnvMapMethod\");\n\t\t\t\teffectMethodReturn = new EffectFresnelEnvMapMethod(returnedArray[1], props.get(101, 1));\n\t\t\t\tbreak;\n\t\t\tcase 411: //FogMethod\n\t\t\t\teffectMethodReturn = new EffectFogMethod(props.get(101, 0), props.get(102, 1000), props.get(601, 0x808080));\n\t\t\t\tbreak;\n\n\t\t}\n\t\tthis.parseUserAttributes();\n\t\treturn effectMethodReturn;\n\n\t}\n\n\tprivate parseUserAttributes():Object\n\t{\n\t\tvar attributes:Object;\n\t\tvar list_len:number;\n\t\tvar attibuteCnt:number;\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\n\t\tif (list_len > 0) {\n\n\t\t\tvar list_end:number;\n\n\t\t\tattributes = {};\n\n\t\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar ns_id:number;\n\t\t\t\tvar attr_key:string;\n\t\t\t\tvar attr_type:number;\n\t\t\t\tvar attr_len:number;\n\t\t\t\tvar attr_val:any;\n\n\t\t\t\t// TODO: Properly tend to namespaces in attributes\n\t\t\t\tns_id = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_key = this.parseVarStr();\n\t\t\t\tattr_type = this._newBlockBytes.readUnsignedByte();\n\t\t\t\tattr_len = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + attr_len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading attribute # \" + attibuteCnt + \" = skipped to end of attribute-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn attributes;\n\t\t\t\t}\n\n\t\t\t\tswitch (attr_type) {\n\t\t\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUTFBytes(attr_len);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.INT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.BOOL:\n\t\t\t\t\tcase AWDParser.UINT8:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedByte();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT16:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedShort();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.UINT32:\n\t\t\t\t\tcase AWDParser.BADDR:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readUnsignedInt();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readFloat();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\t\t\tattr_val = this._newBlockBytes.readDouble();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tattr_val = 'unimplemented attribute type ' + attr_type;\n\t\t\t\t\t\tthis._newBlockBytes.position += attr_len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tconsole.log(\"attribute = name: \" + attr_key + \"  / value = \" + attr_val);\n\t\t\t\t}\n\n\t\t\t\tattributes[attr_key] = attr_val;\n\t\t\t\tattibuteCnt += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tprivate parseProperties(expected:Object):AWDProperties\n\t{\n\t\tvar list_end:number;\n\t\tvar list_len:number;\n\t\tvar propertyCnt:number = 0;\n\t\tvar props:AWDProperties = new AWDProperties();\n\n\t\tlist_len = this._newBlockBytes.readUnsignedInt();\n\t\tlist_end = this._newBlockBytes.position + list_len;\n\n\t\tif (expected) {\n\n\t\t\twhile (this._newBlockBytes.position < list_end) {\n\t\t\t\tvar len:number;\n\t\t\t\tvar key:number;\n\t\t\t\tvar type:number;\n\n\t\t\t\tkey = this._newBlockBytes.readUnsignedShort();\n\t\t\t\tlen = this._newBlockBytes.readUnsignedInt();\n\n\t\t\t\tif ((this._newBlockBytes.position + len) > list_end) {\n\t\t\t\t\tconsole.log(\"           Error in reading property # \" + propertyCnt + \" = skipped to end of propertie-list\");\n\t\t\t\t\tthis._newBlockBytes.position = list_end;\n\t\t\t\t\treturn props;\n\t\t\t\t}\n\n\t\t\t\tif (expected.hasOwnProperty(key.toString())) {\n\t\t\t\t\ttype = expected[key];\n\t\t\t\t\tprops.set(key, this.parseAttrValue(type, len));\n\t\t\t\t} else {\n\t\t\t\t\tthis._newBlockBytes.position += len;\n\t\t\t\t}\n\n\t\t\t\tpropertyCnt += 1;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis._newBlockBytes.position = list_end;\n\t\t}\n\n\t\treturn props;\n\n\t}\n\n\tprivate parseAttrValue(type:number, len:number):any\n\t{\n\t\tvar elem_len:number;\n\t\tvar read_func:Function;\n\n\t\tswitch (type) {\n\n\t\t\tcase AWDParser.BOOL:\n\t\t\tcase AWDParser.INT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.INT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT8:\n\t\t\t\telem_len = 1;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedByte;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT16:\n\t\t\t\telem_len = 2;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedShort;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.UINT32:\n\t\t\tcase AWDParser.COLOR:\n\t\t\tcase AWDParser.BADDR:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readUnsignedInt;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT32:\n\t\t\t\telem_len = 4;\n\t\t\t\tread_func = this._newBlockBytes.readFloat;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.FLOAT64:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t\tcase AWDParser.AWDSTRING:\n\t\t\t\treturn this._newBlockBytes.readUTFBytes(len);\n\n\t\t\tcase AWDParser.VECTOR2x1:\n\t\t\tcase AWDParser.VECTOR3x1:\n\t\t\tcase AWDParser.VECTOR4x1:\n\t\t\tcase AWDParser.MTX3x2:\n\t\t\tcase AWDParser.MTX3x3:\n\t\t\tcase AWDParser.MTX4x3:\n\t\t\tcase AWDParser.MTX4x4:\n\t\t\t\telem_len = 8;\n\t\t\t\tread_func = this._newBlockBytes.readDouble;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif (elem_len < len) {\n\t\t\tvar list:Array<any> = [];\n\t\t\tvar num_read:number = 0;\n\t\t\tvar num_elems:number = len/elem_len;\n\n\t\t\twhile (num_read < num_elems) {\n\t\t\t\tlist.push(read_func.apply(this._newBlockBytes)); // list.push(read_func());\n\t\t\t\tnum_read++;\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} else {\n\n\t\t\tvar val:any = read_func.apply(this._newBlockBytes);//read_func();\n\t\t\treturn val;\n\t\t}\n\t}\n\n\tprivate parseHeader():void\n\t{\n\t\tvar flags:number;\n\t\tvar body_len:number;\n\n\t\tthis._byteData.position = 3; // Skip magic string and parse version\n\n\t\tthis._version[0] = this._byteData.readUnsignedByte();\n\t\tthis._version[1] = this._byteData.readUnsignedByte();\n\n\t\tflags = this._byteData.readUnsignedShort(); // Parse bit flags\n\n\t\tthis._streaming = BitFlags.test(flags, BitFlags.FLAG1);\n\n\t\tif ((this._version[0] == 2) && (this._version[1] == 1)) {\n\t\t\tthis._accuracyMatrix = BitFlags.test(flags, BitFlags.FLAG2);\n\t\t\tthis._accuracyGeo = BitFlags.test(flags, BitFlags.FLAG3);\n\t\t\tthis._accuracyProps = BitFlags.test(flags, BitFlags.FLAG4);\n\t\t}\n\n\t\t// if we set _accuracyOnBlocks, the precision-values are read from each block-header.\n\n\t\t// set storagePrecision types\n\t\tthis._geoNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyGeo) {\n\t\t\tthis._geoNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._matrixNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyMatrix) {\n\t\t\tthis._matrixNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._propsNrType = AWDParser.FLOAT32;\n\n\t\tif (this._accuracyProps) {\n\t\t\tthis._propsNrType = AWDParser.FLOAT64;\n\t\t}\n\n\t\tthis._compression = this._byteData.readUnsignedByte(); // compression\n\n\t\tif (this._debug) {\n\t\t\tconsole.log(\"Import AWDFile of version = \" + this._version[0] + \" - \" + this._version[1]);\n\t\t\tconsole.log(\"Global Settings = Compression = \" + this._compression + \" | Streaming = \" + this._streaming + \" | Matrix-Precision = \" + this._accuracyMatrix + \" | Geometry-Precision = \" + this._accuracyGeo + \" | Properties-Precision = \" + this._accuracyProps);\n\t\t}\n\n\t\t// Check file integrity\n\t\tbody_len = this._byteData.readUnsignedInt();\n\t\tif (!this._streaming && body_len != this._byteData.getBytesAvailable()) {\n\t\t\tthis._pDieWithError('AWD2 body length does not match header integrity field');\n\t\t}\n\n\t}\n\t// Helper - functions\n\tprivate getUVForVertexAnimation(meshID:number /*uint*/):Array<Array<number>>\n\t{\n\t\tif (this._blocks[meshID].data instanceof Mesh)\n\t\tmeshID = this._blocks[meshID].geoID;\n\t\tif (this._blocks[meshID].uvsForVertexAnimation)\n\t\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t\tvar geometry:Geometry = (<Geometry> this._blocks[meshID].data);\n\t\tvar geoCnt:number /*int*/ = 0;\n\t\tvar ud:Array<number>;\n\t\tvar uStride:number /*uint*/;\n\t\tvar uOffs:number /*uint*/;\n\t\tvar numPoints:number /*uint*/;\n\t\tvar i:number /*int*/;\n\t\tvar newUvs:Array<number>;\n\t\tvar sub_geom:TriangleSubGeometry;\n\t\tthis._blocks[meshID].uvsForVertexAnimation = new Array<Array<number>>();\n\t\twhile (geoCnt < geometry.subGeometries.length) {\n\t\t\tnewUvs = new Array<number>();\n\t\t\tsub_geom = <TriangleSubGeometry> geometry.subGeometries[geoCnt];\n\t\t\tnumPoints = sub_geom.numVertices;\n\t\t\tud = sub_geom.uvs;\n\t\t\tuStride = sub_geom.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\tuOffs = sub_geom.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tfor (i = 0; i < numPoints; i++) {\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 0]);\n\t\t\t\tnewUvs.push(ud[uOffs + i*uStride + 1]);\n\t\t\t}\n\t\t\tthis._blocks[meshID].uvsForVertexAnimation.push(newUvs);\n\t\t\tgeoCnt++;\n\t\t}\n\t\treturn this._blocks[meshID].uvsForVertexAnimation;\n\t}\n\t\n\tprivate parseVarStr():string\n\t{\n\n\t\tvar len:number = this._newBlockBytes.readUnsignedShort();\n\t\treturn this._newBlockBytes.readUTFBytes(len);\n\t}\n\n\tprivate getAssetByID(assetID:number, assetTypesToGet:Array<string>, extraTypeInfo:string = \"SingleTexture\"):Array<any>\n\t{\n\t\tvar returnArray:Array<any> = new Array<any>();\n\t\tvar typeCnt:number = 0;\n\t\tif (assetID > 0) {\n\t\t\tif (this._blocks[assetID]) {\n\t\t\t\tif (this._blocks[assetID].data) {\n\t\t\t\t\twhile (typeCnt < assetTypesToGet.length) {\n\n\t\t\t\t\t\tvar iasset:IAsset = <IAsset> this._blocks[assetID].data;\n\n\t\t\t\t\t\tif (iasset.assetType == assetTypesToGet[typeCnt]) {\n\t\t\t\t\t\t\t//if the right assetType was found\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"CubeTexture\")) {\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageCubeTexture) {\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\t\treturn returnArray;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.TEXTURE) && (extraTypeInfo == \"SingleTexture\")) {\n\t\t\t\t\t\t\t\tif (this._blocks[assetID].data instanceof ImageTexture) {\n\t\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\t\treturn returnArray;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\t\treturnArray.push(this._blocks[assetID].data);\n\t\t\t\t\t\t\t\treturn returnArray;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//if ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (IAsset(_blocks[assetID].data).assetType == AssetType.MESH)) {\n\t\t\t\t\t\tif ((assetTypesToGet[typeCnt] == AssetType.GEOMETRY) && (iasset.assetType == AssetType.MESH)) {\n\n\t\t\t\t\t\t\tvar mesh:Mesh = <Mesh> this._blocks[assetID].data\n\n\t\t\t\t\t\t\treturnArray.push(true);\n\t\t\t\t\t\t\treturnArray.push(mesh.geometry);\n\t\t\t\t\t\t\treturn returnArray;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttypeCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if the has not returned anything yet, the asset is not found, or the found asset is not the right type.\n\t\treturnArray.push(false);\n\t\treturnArray.push(this.getDefaultAsset(assetTypesToGet[0], extraTypeInfo));\n\t\treturn returnArray;\n\t}\n\n\tprivate getDefaultAsset(assetType:string, extraTypeInfo:string):IAsset\n\t{\n\t\tswitch (true) {\n\t\t\tcase (assetType == AssetType.TEXTURE):\n\t\t\t\tif (extraTypeInfo == \"CubeTexture\")\n\t\t\t\t\treturn this.getDefaultCubeTexture();\n\t\t\t\tif (extraTypeInfo == \"SingleTexture\")\n\t\t\t\t\treturn this.getDefaultTexture();\n\t\t\t\tbreak;\n\t\t\tcase (assetType == AssetType.MATERIAL):\n\t\t\t\treturn this.getDefaultMaterial()\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getDefaultMaterial():IAsset\n\t{\n\t\tif (!this._defaultBitmapMaterial)\n\t\t\tthis._defaultBitmapMaterial = <TriangleMethodMaterial> DefaultMaterialManager.getDefaultMaterial();\n\n\t\treturn  <IAsset>  this._defaultBitmapMaterial;\n\t}\n\n\tprivate getDefaultTexture():IAsset\n\t{\n\t\tif (!this._defaultTexture)\n\t\t\tthis._defaultTexture = DefaultMaterialManager.getDefaultTexture();\n\n\t\treturn <IAsset> this._defaultTexture;\n\n\t}\n\n\tprivate getDefaultCubeTexture():IAsset\n\t{\n\t\tif (!this._defaultCubeTexture) {\n\t\t\tvar defaultBitmap:BitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\n\t\t\tthis._defaultCubeTexture = new BitmapCubeTexture(defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap, defaultBitmap);\n\t\t\tthis._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t\t}\n\n\t\treturn <IAsset> this._defaultCubeTexture;\n\t}\n\n\tprivate readNumber(precision:boolean = false):number\n\t{\n\t\tif (precision)\n\t\t\treturn this._newBlockBytes.readDouble();\n\t\treturn this._newBlockBytes.readFloat();\n\n\t}\n\n\tprivate parseMatrix3D():Matrix3D\n\t{\n\t\treturn new Matrix3D(this.parseMatrix43RawData());\n\t}\n\n\tprivate parseMatrix32RawData():Array<number>\n\t{\n\t\tvar i:number;\n\t\tvar mtx_raw:Array<number> = new Array<number>(6);\n\t\tfor (i = 0; i < 6; i++) {\n\t\t\tmtx_raw[i] = this._newBlockBytes.readFloat();\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n\tprivate parseMatrix43RawData():Array<number>\n\t{\n\t\tvar mtx_raw:Array<number> = new Array<number>(16);\n\n\t\tmtx_raw[0] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[1] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[2] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[3] = 0.0;\n\t\tmtx_raw[4] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[5] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[6] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[7] = 0.0;\n\t\tmtx_raw[8] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[9] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[10] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[11] = 0.0;\n\t\tmtx_raw[12] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[13] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[14] = this.readNumber(this._accuracyMatrix);\n\t\tmtx_raw[15] = 1.0;\n\n\t\t//TODO: fix max exporter to remove NaN values in joint 0 inverse bind pose\n\n\t\tif (isNaN(mtx_raw[0])) {\n\t\t\tmtx_raw[0] = 1;\n\t\t\tmtx_raw[1] = 0;\n\t\t\tmtx_raw[2] = 0;\n\t\t\tmtx_raw[4] = 0;\n\t\t\tmtx_raw[5] = 1;\n\t\t\tmtx_raw[6] = 0;\n\t\t\tmtx_raw[8] = 0;\n\t\t\tmtx_raw[9] = 0;\n\t\t\tmtx_raw[10] = 1;\n\t\t\tmtx_raw[12] = 0;\n\t\t\tmtx_raw[13] = 0;\n\t\t\tmtx_raw[14] = 0;\n\n\t\t}\n\n\t\treturn mtx_raw;\n\t}\n\n}\n\nexport = AWDParser;\n\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic data:any;\n\tpublic len:any;\n\tpublic geoID:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\n\nclass AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\n\n/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}","import BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport TriangleMethodMaterial\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMethodMaterial\");\nimport TriangleMaterialMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialMode\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/DefaultMaterialManager\");\n\n/**\n * MD2Parser provides a parser for the MD2 data type.\n */\nclass MD2Parser extends ParserBase\n{\n\tpublic static FPS:number /*int*/ = 6;\n\n\tprivate _clipNodes:Object = new Object();\n\tprivate _byteData:ByteArray;\n\tprivate _startedParsing:boolean;\n\tprivate _parsedHeader:boolean;\n\tprivate _parsedUV:boolean;\n\tprivate _parsedFaces:boolean;\n\tprivate _parsedFrames:boolean;\n\n\tprivate _ident:number /*uint*/;\n\tprivate _version:number /*uint*/;\n\tprivate _skinWidth:number /*uint*/;\n\tprivate _skinHeight:number /*uint*/;\n\t//private _frameSize : number /*uint*/;\n\tprivate _numSkins:number /*uint*/;\n\tprivate _numVertices:number /*uint*/;\n\tprivate _numST:number /*uint*/;\n\tprivate _numTris:number /*uint*/;\n\t//private _numGlCmds : number /*uint*/;\n\tprivate _numFrames:number /*uint*/;\n\tprivate _offsetSkins:number /*uint*/;\n\tprivate _offsetST:number /*uint*/;\n\tprivate _offsetTris:number /*uint*/;\n\tprivate _offsetFrames:number /*uint*/;\n\t//private _offsetGlCmds : number /*uint*/;\n\tprivate _offsetEnd:number /*uint*/;\n\n\tprivate _uvIndices:Array<number>;\n\tprivate _indices:Array<number> /*uint*/;\n\tprivate _vertIndices:Array<number>;\n\n\t// the current subgeom being built\n\tprivate _animationSet:VertexAnimationSet = new VertexAnimationSet();\n\tprivate _firstSubGeom:TriangleSubGeometry;\n\tprivate _uvs:Array<number>;\n\tprivate _finalUV:Array<number>;\n\n\tprivate _materialNames:Array<string>;\n\tprivate _textureType:string;\n\tprivate _ignoreTexturePath:boolean;\n\tprivate _mesh:Mesh;\n\tprivate _geometry:Geometry;\n\n\tprivate materialFinal:boolean = false;\n\tprivate geoCreated:boolean = false;\n\n\t/**\n\t * Creates a new MD2Parser object.\n\t * @param textureType The extension of the texture (e.g. jpg/png/...)\n\t * @param ignoreTexturePath If true, the path of the texture is ignored\n\t */\n\tconstructor(textureType:string = \"jpg\", ignoreTexturePath:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\t\tthis._textureType = textureType;\n\t\tthis._ignoreTexturePath = ignoreTexturePath;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md2\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn (ParserUtils.toString(data, 4) == 'IDP2');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length != 1)\n\t\t\treturn;\n\n\t\tvar asset:Texture2DBase = <Texture2DBase> resourceDependency.assets[0];\n\n\t\tif (asset) {\n\t\t\tvar material:TriangleMethodMaterial = new TriangleMethodMaterial(asset);\n\n\t\t\tif (this.materialMode >= 2)\n\t\t\t\tmaterial.materialMode = TriangleMaterialMode.MULTI_PASS;\n\n\t\t\t//add to the content property\n\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\tmaterial.name = this._mesh.material.name;\n\t\t\tthis._mesh.material = material;\n\t\t\tthis._pFinalizeAsset(material);\n\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t}\n\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// apply system default\n\t\tif (this.materialMode < 2) {\n\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t} else {\n\t\t\tthis._mesh.material = new TriangleMethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t(<TriangleMethodMaterial> this._mesh.material).materialMode = TriangleMaterialMode.MULTI_PASS;\n\t\t}\n\n\t\t//add to the content property\n\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\tthis._pFinalizeAsset(this._mesh);\n\t\tthis.materialFinal = true;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._startedParsing) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._startedParsing = true;\n\n\t\t\t// Reset bytearray read position (which may have been\n\t\t\t// moved forward by the supportsData() function.)\n\t\t\tthis._byteData.position = 0;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\tif (!this._parsedHeader) {\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t\t//----------------------------------------------------------------------------\n\t\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;\n\n\t\t\t\t// TODO: Create a mesh only when encountered (if it makes sense\n\t\t\t\t// for this file format) and return it using this._pFinalizeAsset()\n\t\t\t\tthis._geometry = new Geometry();\n\t\t\t\tthis._mesh = new Mesh(this._geometry, null);\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tthis._mesh.material = DefaultMaterialManager.getDefaultMaterial();\n\t\t\t\t} else {\n\t\t\t\t\tthis._mesh.material = new TriangleMethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\t\t\t\t\t(<TriangleMethodMaterial> this._mesh.material).materialMode = TriangleMaterialMode.MULTI_PASS;\n\t\t\t\t}\n\n\t\t\t\t//_geometry.animation = new VertexAnimation(2, VertexAnimationMode.ABSOLUTE);\n\t\t\t\t//_animator = new VertexAnimator(VertexAnimationState(_mesh.animationState));\n\n\t\t\t\t// Parse header and decompress body\n\t\t\t\tthis.parseHeader();\n\t\t\t\tthis.parseMaterialNames();\n\t\t\t} else if (!this._parsedUV) {\n\t\t\t\tthis.parseUV();\n\t\t\t} else if (!this._parsedFaces) {\n\t\t\t\tthis.parseFaces();\n\t\t\t} else if (!this._parsedFrames) {\n\t\t\t\tthis.parseFrames();\n\t\t\t} else if ((this.geoCreated) && (this.materialFinal)) {\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t} else if (!this.geoCreated) {\n\t\t\t\tthis.geoCreated = true;\n\t\t\t\t//create default subgeometry\n\t\t\t\tthis._geometry.addSubGeometry(this._firstSubGeom.clone());\n\t\t\t\t// Force name to be chosen by this._pFinalizeAsset()\n\t\t\t\tthis._mesh.name = \"\";\n\t\t\t\tif (this.materialFinal) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh.geometry);\n\t\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\t}\n\n\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t}\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\t/**\n\t * Reads in all that MD2 Header data that is declared as private variables.\n\t * I know its a lot, and it looks ugly, but only way to do it in Flash\n\t */\n\tprivate parseHeader():void\n\t{\n\t\tthis._ident = this._byteData.readInt();\n\t\tthis._version = this._byteData.readInt();\n\t\tthis._skinWidth = this._byteData.readInt();\n\t\tthis._skinHeight = this._byteData.readInt();\n\t\t//skip this._frameSize\n\t\tthis._byteData.readInt();\n\t\tthis._numSkins = this._byteData.readInt();\n\t\tthis._numVertices = this._byteData.readInt();\n\t\tthis._numST = this._byteData.readInt();\n\t\tthis._numTris = this._byteData.readInt();\n\t\t//skip this._numGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._numFrames = this._byteData.readInt();\n\t\tthis._offsetSkins = this._byteData.readInt();\n\t\tthis._offsetST = this._byteData.readInt();\n\t\tthis._offsetTris = this._byteData.readInt();\n\t\tthis._offsetFrames = this._byteData.readInt();\n\t\t//skip this._offsetGlCmds\n\t\tthis._byteData.readInt();\n\t\tthis._offsetEnd = this._byteData.readInt();\n\n\t\tthis._parsedHeader = true;\n\t}\n\n\t/**\n\t * Parses the file names for the materials.\n\t */\n\tprivate parseMaterialNames():void\n\t{\n\t\tvar url:string;\n\t\tvar name:string;\n\t\tvar extIndex:number /*int*/;\n\t\tvar slashIndex:number /*int*/;\n\t\tthis._materialNames = new Array<string>();\n\t\tthis._byteData.position = this._offsetSkins;\n\n\t\tvar regExp:RegExp = new RegExp(\"[^a-zA-Z0-9\\\\_\\/.]\", \"g\");\n\t\tfor (var i:number /*uint*/ = 0; i < this._numSkins; ++i) {\n\t\t\tname = this._byteData.readUTFBytes(64);\n\t\t\tname = name.replace(regExp, \"\");\n\t\t\textIndex = name.lastIndexOf(\".\");\n\t\t\tif (this._ignoreTexturePath)\n\t\t\t\tslashIndex = name.lastIndexOf(\"/\");\n\t\t\tif (name.toLowerCase().indexOf(\".jpg\") == -1 && name.toLowerCase().indexOf(\".png\") == -1) {\n\t\t\t\tname = name.substring(slashIndex + 1, extIndex);\n\t\t\t\turl = name + \".\" + this._textureType;\n\t\t\t} else {\n\t\t\t\turl = name;\n\t\t\t}\n\n\t\t\tthis._materialNames[i] = name;\n\n\t\t\t// only support 1 skin TODO: really?\n\t\t\tif (this.dependencies.length == 0)\n\t\t\t\tthis._pAddDependency(name, new URLRequest(url));\n\t\t}\n\n\t\tif (this._materialNames.length > 0)\n\t\t\tthis._mesh.material.name = this._materialNames[0]; else\n\t\t\tthis.materialFinal = true;\n\t}\n\n\t/**\n\t * Parses the uv data for the mesh.\n\t */\n\tprivate parseUV():void\n\t{\n\t\tvar j:number /*uint*/ = 0;\n\n\t\tthis._uvs = new Array<number>(this._numST*2);\n\t\tthis._byteData.position = this._offsetST;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numST; i++) {\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinWidth;\n\t\t\tthis._uvs[j++] = this._byteData.readShort()/this._skinHeight;\n\t\t}\n\n\t\tthis._parsedUV = true;\n\t}\n\n\t/**\n\t * Parses unique indices for the faces.\n\t */\n\tprivate parseFaces():void\n\t{\n\t\tvar a:number /*uint*/, b:number /*uint*/, c:number /*uint*/, ta:number /*uint*/, tb:number /*uint*/, tc:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\n\t\tthis._vertIndices = new Array<number>();\n\t\tthis._uvIndices = new Array<number>();\n\t\tthis._indices = new Array<number>() /*uint*/;\n\n\t\tthis._byteData.position = this._offsetTris;\n\n\t\tfor (i = 0; i < this._numTris; i++) {\n\t\t\t//collect vertex indices\n\t\t\ta = this._byteData.readUnsignedShort();\n\t\t\tb = this._byteData.readUnsignedShort();\n\t\t\tc = this._byteData.readUnsignedShort();\n\n\t\t\t//collect uv indices\n\t\t\tta = this._byteData.readUnsignedShort();\n\t\t\ttb = this._byteData.readUnsignedShort();\n\t\t\ttc = this._byteData.readUnsignedShort();\n\n\t\t\tthis.addIndex(a, ta);\n\t\t\tthis.addIndex(b, tb);\n\t\t\tthis.addIndex(c, tc);\n\t\t}\n\n\t\tvar len:number /*uint*/ = this._uvIndices.length;\n\t\tthis._finalUV = new Array<number>(len*2);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._finalUV[i << 1] = this._uvs[this._uvIndices[i] << 1];\n\t\t\tthis._finalUV[(i << 1) + 1] = this._uvs[(this._uvIndices[i] << 1) + 1];\n\t\t}\n\n\t\tthis._parsedFaces = true;\n\t}\n\n\t/**\n\t * Adds a face index to the list if it doesn't exist yet, based on vertexIndex and uvIndex, and adds the\n\t * corresponding vertex and uv data in the correct location.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t */\n\tprivate addIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.findIndex(vertexIndex, uvIndex);\n\n\t\tif (index == -1) {\n\t\t\tthis._indices.push(this._vertIndices.length);\n\t\t\tthis._vertIndices.push(vertexIndex);\n\t\t\tthis._uvIndices.push(uvIndex);\n\t\t} else\n\t\t\tthis._indices.push(index);\n\t}\n\n\t/**\n\t * Finds the final index corresponding to the original MD2's vertex and uv indices. Returns -1 if it wasn't added yet.\n\t * @param vertexIndex The original index in the vertex list.\n\t * @param uvIndex The original index in the uv list.\n\t * @return The index of the final mesh corresponding to the original vertex and uv index. -1 if it doesn't exist yet.\n\t */\n\tprivate findIndex(vertexIndex:number /*uint*/, uvIndex:number /*uint*/):number /*int*/\n\t{\n\t\tvar len:number /*uint*/ = this._vertIndices.length;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tif (this._vertIndices[i] == vertexIndex && this._uvIndices[i] == uvIndex)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Parses all the frame geometries.\n\t */\n\tprivate parseFrames():void\n\t{\n\t\tvar sx:number, sy:number, sz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar geometry:Geometry;\n\t\tvar subGeom:TriangleSubGeometry;\n\t\tvar vertLen:number /*uint*/ = this._vertIndices.length;\n\t\tvar fvertices:Array<number>;\n\t\tvar tvertices:Array<number>;\n\t\tvar i:number /*uint*/, j:number /*int*/, k:number /*uint*/;\n\t\t//var ch : number /*uint*/;\n\t\tvar name:string = \"\";\n\t\tvar prevClip:VertexClipNode = null;\n\n\t\tthis._byteData.position = this._offsetFrames;\n\n\t\tfor (i = 0; i < this._numFrames; i++) {\n\n\t\t\ttvertices = new Array<number>();\n\t\t\tfvertices = new Array<number>(vertLen*3);\n\n\t\t\tsx = this._byteData.readFloat();\n\t\t\tsy = this._byteData.readFloat();\n\t\t\tsz = this._byteData.readFloat();\n\n\t\t\ttx = this._byteData.readFloat();\n\t\t\tty = this._byteData.readFloat();\n\t\t\ttz = this._byteData.readFloat();\n\n\t\t\tname = this.readFrameName();\n\n\t\t\t// Note, the extra data.position++ in the for loop is there\n\t\t\t// to skip over a byte that holds the \"vertex normal index\"\n\t\t\tfor (j = 0; j < this._numVertices; j++, this._byteData.position++)\n\t\t\t\ttvertices.push(sx*this._byteData.readUnsignedByte() + tx, sy*this._byteData.readUnsignedByte() + ty, sz*this._byteData.readUnsignedByte() + tz);\n\n\t\t\tk = 0;\n\t\t\tfor (j = 0; j < vertLen; j++) {\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 2];\n\t\t\t\tfvertices[k++] = tvertices[this._vertIndices[j]*3 + 1];\n\t\t\t}\n\n\t\t\tsubGeom = new TriangleSubGeometry(true);\n\n\t\t\tif (this._firstSubGeom == null)\n\t\t\t\tthis._firstSubGeom = subGeom;\n\n\t\t\tgeometry = new Geometry();\n\t\t\tgeometry.addSubGeometry(subGeom);\n\n\t\t\tsubGeom.updateIndices(this._indices);\n\t\t\tsubGeom.updatePositions(fvertices);\n\t\t\tsubGeom.updateUVs(this._finalUV);\n\t\t\tsubGeom.vertexNormals;\n\t\t\tsubGeom.vertexTangents;\n\t\t\tsubGeom.autoDeriveNormals = false;\n\t\t\tsubGeom.autoDeriveTangents = false;\n\n\t\t\tvar clip:VertexClipNode = this._clipNodes[name];\n\n\t\t\tif (!clip) {\n\t\t\t\t// If another sequence was parsed before this one, starting\n\t\t\t\t// a new state means the previous one is complete and can\n\t\t\t\t// hence be finalized.\n\t\t\t\tif (prevClip) {\n\t\t\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t\t\t}\n\n\t\t\t\tclip = new VertexClipNode();\n\t\t\t\tclip.name = name;\n\t\t\t\tclip.stitchFinalFrame = true;\n\n\t\t\t\tthis._clipNodes[name] = clip;\n\n\t\t\t\tprevClip = clip;\n\t\t\t}\n\t\t\tclip.addFrame(geometry, 1000/MD2Parser.FPS);\n\t\t}\n\n\t\t// Finalize the last state\n\t\tif (prevClip) {\n\t\t\tthis._pFinalizeAsset(prevClip);\n\t\t\tthis._animationSet.addAnimation(prevClip);\n\t\t}\n\n\t\t// Force this._pFinalizeAsset() to decide name\n\t\tthis._pFinalizeAsset(this._animationSet);\n\n\t\tthis._parsedFrames = true;\n\t}\n\n\tprivate readFrameName():string\n\t{\n\t\tvar name:string = \"\";\n\t\tvar k:number /*uint*/ = 0;\n\t\tfor (var j:number /*uint*/ = 0; j < 16; j++) {\n\t\t\tvar ch:number /*uint*/ = this._byteData.readUnsignedByte();\n\n\t\t\tif (Math.floor(ch) > 0x39 && Math.floor(ch) <= 0x7A && k == 0)\n\t\t\t\tname += String.fromCharCode(ch);\n\n\t\t\tif (Math.floor(ch) >= 0x30 && Math.floor(ch) <= 0x39)\n\t\t\t\tk++;\n\t\t}\n\t\treturn name;\n\t}\n}\n\nexport = MD2Parser;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport BaseFrameData\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/data/BaseFrameData\");\nimport BoundsData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/data/BoundsData\");\nimport FrameData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/data/FrameData\");\nimport HierarchyData\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/data/HierarchyData\");\n\n/**\n * MD5AnimParser provides a parser for the md5anim data type, providing an animation sequence for the md5 format.\n *\n * todo: optimize\n */\nclass MD5AnimParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_FRAMES_TOKEN:string = \"numFrames\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static FRAME_RATE_TOKEN:string = \"frameRate\";\n\tpublic static NUM_ANIMATED_COMPONENTS_TOKEN:string = \"numAnimatedComponents\";\n\n\tpublic static HIERARCHY_TOKEN:string = \"hierarchy\";\n\tpublic static BOUNDS_TOKEN:string = \"bounds\";\n\tpublic static BASE_FRAME_TOKEN:string = \"baseframe\";\n\tpublic static FRAME_TOKEN:string = \"frame\";\n\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _frameRate:number /*int*/;\n\tprivate _numFrames:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numAnimatedComponents:number /*int*/;\n\n\tprivate _hierarchy:Array<HierarchyData>;\n\tprivate _bounds:Array<BoundsData>;\n\tprivate _frameData:Array<FrameData>;\n\tprivate _baseFrameData:Array<BaseFrameData>;\n\n\tprivate _rotationQuat:Quaternion;\n\tprivate _clip:SkeletonClipNode;\n\n\t/**\n\t * Creates a new MD5AnimParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\t\tvar t1:Quaternion = new Quaternion();\n\t\tvar t2:Quaternion = new Quaternion();\n\n\t\tt1.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\t\tt2.fromAxisAngle(Vector3D.Y_AXIS, -Math.PI*.5);\n\n\t\tthis._rotationQuat.multiply(t2, t1);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tthis._rotationQuat.multiply(t2, t1);\n\t\t\tt1.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(t1, this._rotationQuat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5anim\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5AnimParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"\":\n\t\t\t\t\t// can occur at the end of a file\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_FRAMES_TOKEN:\n\t\t\t\t\tthis._numFrames = this.getNextInt();\n\t\t\t\t\tthis._bounds = new Array<BoundsData>();\n\t\t\t\t\tthis._frameData = new Array<FrameData>();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._hierarchy = new Array<HierarchyData>(this._numJoints);\n\t\t\t\t\tthis._baseFrameData = new Array<BaseFrameData>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_RATE_TOKEN:\n\t\t\t\t\tthis._frameRate = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.NUM_ANIMATED_COMPONENTS_TOKEN:\n\t\t\t\t\tthis._numAnimatedComponents = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.HIERARCHY_TOKEN:\n\t\t\t\t\tthis.parseHierarchy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BOUNDS_TOKEN:\n\t\t\t\t\tthis.parseBounds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.BASE_FRAME_TOKEN:\n\t\t\t\t\tthis.parseBaseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5AnimParser.FRAME_TOKEN:\n\t\t\t\t\tthis.parseFrame();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis._clip = new SkeletonClipNode();\n\t\t\t\tthis.translateClip();\n\t\t\t\tthis._pFinalizeAsset(this._clip);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\t/**\n\t * Converts all key frame data to an SkinnedAnimationSequence.\n\t */\n\tprivate translateClip():void\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < this._numFrames; ++i)\n\t\t\tthis._clip.addFrame(this.translatePose(this._frameData[i]), 1000/this._frameRate);\n\t}\n\n\t/**\n\t * Converts a single key frame data to a SkeletonPose.\n\t * @param frameData The actual frame data.\n\t * @return A SkeletonPose containing the frame data's pose.\n\t */\n\tprivate translatePose(frameData:FrameData):SkeletonPose\n\t{\n\t\tvar hierarchy:HierarchyData;\n\t\tvar pose:JointPose;\n\t\tvar base:BaseFrameData;\n\t\tvar flags:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar translate:Vector3D = new Vector3D();\n\t\tvar orientation:Quaternion = new Quaternion();\n\t\tvar components:Array<number> = frameData.components;\n\t\tvar skelPose:SkeletonPose = new SkeletonPose();\n\t\tvar jointPoses:Array<JointPose> = skelPose.jointPoses;\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numJoints; ++i) {\n\t\t\tj = 0;\n\t\t\tpose = new JointPose();\n\t\t\thierarchy = this._hierarchy[i];\n\t\t\tbase = this._baseFrameData[i];\n\t\t\tflags = hierarchy.flags;\n\t\t\ttranslate.x = base.position.x;\n\t\t\ttranslate.y = base.position.y;\n\t\t\ttranslate.z = base.position.z;\n\t\t\torientation.x = base.orientation.x;\n\t\t\torientation.y = base.orientation.y;\n\t\t\torientation.z = base.orientation.z;\n\n\t\t\tif (flags & 1)\n\t\t\t\ttranslate.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 2)\n\t\t\t\ttranslate.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 4)\n\t\t\t\ttranslate.z = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 8)\n\t\t\t\torientation.x = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 16)\n\t\t\t\torientation.y = components[hierarchy.startIndex + (j++)];\n\t\t\tif (flags & 32)\n\t\t\t\torientation.z = components[hierarchy.startIndex + (j++)];\n\n\t\t\tvar w:number = 1 - orientation.x*orientation.x - orientation.y*orientation.y - orientation.z*orientation.z;\n\t\t\torientation.w = w < 0? 0 : -Math.sqrt(w);\n\n\t\t\tif (hierarchy.parentIndex < 0) {\n\t\t\t\tpose.orientation.multiply(this._rotationQuat, orientation);\n\t\t\t\tpose.translation = this._rotationQuat.rotatePoint(translate);\n\t\t\t} else {\n\t\t\t\tpose.orientation.copyFrom(orientation);\n\t\t\t\tpose.translation.x = translate.x;\n\t\t\t\tpose.translation.y = translate.y;\n\t\t\t\tpose.translation.z = translate.z;\n\t\t\t}\n\t\t\tpose.orientation.y = -pose.orientation.y;\n\t\t\tpose.orientation.z = -pose.orientation.z;\n\t\t\tpose.translation.x = -pose.translation.x;\n\n\t\t\tjointPoses[i] = pose;\n\t\t}\n\n\t\treturn skelPose;\n\t}\n\n\t/**\n\t * Parses the skeleton's hierarchy data.\n\t */\n\tprivate parseHierarchy():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:HierarchyData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new HierarchyData();\n\t\t\tdata.name = this.parseLiteralstring();\n\t\t\tdata.parentIndex = this.getNextInt();\n\t\t\tdata.flags = this.getNextInt();\n\t\t\tdata.startIndex = this.getNextInt();\n\t\t\tthis._hierarchy[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses frame bounds.\n\t */\n\tprivate parseBounds():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BoundsData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BoundsData();\n\t\t\tdata.min = this.parseVector3D();\n\t\t\tdata.max = this.parseVector3D();\n\t\t\tthis._bounds[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses the base frame.\n\t */\n\tprivate parseBaseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:BaseFrameData;\n\t\tvar token:string = this.getNextToken();\n\t\tvar i:number /*int*/ = 0;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new BaseFrameData();\n\t\t\tdata.position = this.parseVector3D();\n\t\t\tdata.orientation = this.parseQuaternion();\n\t\t\tthis._baseFrameData[i++] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Parses a single frame.\n\t */\n\tprivate parseFrame():void\n\t{\n\t\tvar ch:string;\n\t\tvar data:FrameData;\n\t\tvar token:string;\n\t\tvar frameIndex:number /*int*/;\n\n\t\tframeIndex = this.getNextInt();\n\n\t\ttoken = this.getNextToken();\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tdata = new FrameData();\n\t\t\tdata.components = new Array<number>(this._numAnimatedComponents);\n\n\t\t\tfor (var i:number /*int*/ = 0; i < this._numAnimatedComponents; ++i)\n\t\t\t\tdata.components[i] = this.getNextNumber();\n\n\t\t\tthis._frameData[frameIndex] = data;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5AnimParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex == this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = this.getNextNumber();\n\t\tquat.z = this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - (quat.x*quat.x) - (quat.y*quat.y) - (quat.z*quat.z);\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn quat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5AnimParser;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\n// todo: create animation system, parse skeleton\n\n/**\n * MD5MeshParser provides a parser for the md5mesh data type, providing the geometry of the md5 format.\n *\n * todo: optimize\n */\nclass MD5MeshParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tpublic static VERSION_TOKEN:string = \"MD5Version\";\n\tpublic static COMMAND_LINE_TOKEN:string = \"commandline\";\n\tpublic static NUM_JOINTS_TOKEN:string = \"numJoints\";\n\tpublic static NUM_MESHES_TOKEN:string = \"numMeshes\";\n\tpublic static COMMENT_TOKEN:string = \"//\";\n\tpublic static JOINTS_TOKEN:string = \"joints\";\n\tpublic static MESH_TOKEN:string = \"mesh\";\n\n\tpublic static MESH_SHADER_TOKEN:string = \"shader\";\n\tpublic static MESH_NUM_VERTS_TOKEN:string = \"numverts\";\n\tpublic static MESH_VERT_TOKEN:string = \"vert\";\n\tpublic static MESH_NUM_TRIS_TOKEN:string = \"numtris\";\n\tpublic static MESH_TRI_TOKEN:string = \"tri\";\n\tpublic static MESH_NUM_WEIGHTS_TOKEN:string = \"numweights\";\n\tpublic static MESH_WEIGHT_TOKEN:string = \"weight\";\n\n\tprivate _parseIndex:number /*int*/ = 0;\n\tprivate _reachedEOF:boolean;\n\tprivate _line:number /*int*/ = 0;\n\tprivate _charLineIndex:number /*int*/ = 0;\n\tprivate _version:number /*int*/;\n\tprivate _numJoints:number /*int*/;\n\tprivate _numMeshes:number /*int*/;\n\n\tprivate _mesh:Mesh;\n\tprivate _shaders:Array<string>;\n\n\tprivate _maxJointCount:number /*int*/;\n\tprivate _meshData:Array<MeshData>;\n\tprivate _bindPoses:Array<Matrix3D>;\n\tprivate _geometry:Geometry;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _animationSet:SkeletonAnimationSet;\n\n\tprivate _rotationQuat:Quaternion;\n\n\t/**\n\t * Creates a new MD5MeshParser object.\n\t */\n\tconstructor(additionalRotationAxis:Vector3D = null, additionalRotationRadians:number = 0)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._rotationQuat = new Quaternion();\n\n\t\tthis._rotationQuat.fromAxisAngle(Vector3D.X_AXIS, -Math.PI*.5);\n\n\t\tif (additionalRotationAxis) {\n\t\t\tvar quat:Quaternion = new Quaternion();\n\t\t\tquat.fromAxisAngle(additionalRotationAxis, additionalRotationRadians);\n\t\t\tthis._rotationQuat.multiply(this._rotationQuat, quat);\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"md5mesh\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar token:string;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\tthis._startedParsing = true;\n\t\t}\n\n\t\twhile (this._pHasTime()) {\n\t\t\ttoken = this.getNextToken();\n\t\t\tswitch (token) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.VERSION_TOKEN:\n\t\t\t\t\tthis._version = this.getNextInt();\n\t\t\t\t\tif (this._version != 10)\n\t\t\t\t\t\tthrow new Error(\"Unknown version number encountered!\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.COMMAND_LINE_TOKEN:\n\t\t\t\t\tthis.parseCMD();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_JOINTS_TOKEN:\n\t\t\t\t\tthis._numJoints = this.getNextInt();\n\t\t\t\t\tthis._bindPoses = new Array<Matrix3D>(this._numJoints);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.NUM_MESHES_TOKEN:\n\t\t\t\t\tthis._numMeshes = this.getNextInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.JOINTS_TOKEN:\n\t\t\t\t\tthis.parseJoints();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TOKEN:\n\t\t\t\t\tthis.parseMesh();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!this._reachedEOF)\n\t\t\t\t\t\tthis.sendUnknownKeywordError();\n\t\t\t}\n\n\t\t\tif (this._reachedEOF) {\n\t\t\t\tthis.calculateMaxJointCount();\n\t\t\t\tthis._animationSet = new SkeletonAnimationSet(this._maxJointCount);\n\n\t\t\t\tthis._mesh = new Mesh(new Geometry(), null);\n\t\t\t\tthis._geometry = this._mesh.geometry;\n\n\t\t\t\tfor (var i:number /*int*/ = 0; i < this._meshData.length; ++i)\n\t\t\t\t\tthis._geometry.addSubGeometry(this.translateGeom(this._meshData[i].vertexData, this._meshData[i].weightData, this._meshData[i].indices));\n\n\t\t\t\t//_geometry.animation = _animation;\n\t\t\t\t//\t\t\t\t\t_mesh.animationController = _animationController;\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(this._mesh);\n\n\t\t\t\tthis._pFinalizeAsset(this._geometry);\n\t\t\t\tthis._pFinalizeAsset(this._mesh);\n\t\t\t\tthis._pFinalizeAsset(this._skeleton);\n\t\t\t\tthis._pFinalizeAsset(this._animationSet);\n\t\t\t\treturn ParserBase.PARSING_DONE;\n\t\t\t}\n\t\t}\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate calculateMaxJointCount():void\n\t{\n\t\tthis._maxJointCount = 0;\n\n\t\tvar numMeshData:number /*int*/ = this._meshData.length;\n\t\tfor (var i:number /*int*/ = 0; i < numMeshData; ++i) {\n\t\t\tvar meshData:MeshData = this._meshData[i];\n\t\t\tvar vertexData:Array<VertexData> = meshData.vertexData;\n\t\t\tvar numVerts:number /*int*/ = vertexData.length;\n\n\t\t\tfor (var j:number /*int*/ = 0; j < numVerts; ++j) {\n\t\t\t\tvar zeroWeights:number /*int*/ = this.countZeroWeightJoints(vertexData[j], meshData.weightData);\n\t\t\t\tvar totalJoints:number /*int*/ = vertexData[j].countWeight - zeroWeights;\n\t\t\t\tif (totalJoints > this._maxJointCount)\n\t\t\t\t\tthis._maxJointCount = totalJoints;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate countZeroWeightJoints(vertex:VertexData, weights:Array<JointData>):number /*int*/\n\t{\n\t\tvar start:number /*int*/ = vertex.startWeight;\n\t\tvar end:number /*int*/ = vertex.startWeight + vertex.countWeight;\n\t\tvar count:number /*int*/ = 0;\n\t\tvar weight:number;\n\n\t\tfor (var i:number /*int*/ = start; i < end; ++i) {\n\t\t\tweight = weights[i].bias;\n\t\t\tif (weight == 0)\n\t\t\t\t++count;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Parses the skeleton's joints.\n\t */\n\tprivate parseJoints():void\n\t{\n\t\tvar ch:string;\n\t\tvar joint:SkeletonJoint;\n\t\tvar pos:Vector3D;\n\t\tvar quat:Quaternion;\n\t\tvar i:number /*int*/ = 0;\n\t\tvar token:string = this.getNextToken();\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tthis._skeleton = new Skeleton();\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tjoint = new SkeletonJoint();\n\t\t\tjoint.name = this.parseLiteralstring();\n\t\t\tjoint.parentIndex = this.getNextInt();\n\t\t\tpos = this.parseVector3D();\n\t\t\tpos = this._rotationQuat.rotatePoint(pos);\n\t\t\tquat = this.parseQuaternion();\n\n\t\t\t// todo: check if this is correct, or maybe we want to actually store it as quats?\n\t\t\tthis._bindPoses[i] = quat.toMatrix3D();\n\t\t\tthis._bindPoses[i].appendTranslation(pos.x, pos.y, pos.z);\n\t\t\tvar inv:Matrix3D = this._bindPoses[i].clone();\n\t\t\tinv.invert();\n\t\t\tjoint.inverseBindPose = inv.rawData;\n\n\t\t\tthis._skeleton.joints[i++] = joint;\n\n\t\t\tch = this.getNextChar();\n\n\t\t\tif (ch == \"/\") {\n\t\t\t\tthis.putBack();\n\t\t\t\tch = this.getNextToken();\n\t\t\t\tif (ch == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\tch = this.getNextChar();\n\n\t\t\t}\n\n\t\t\tif (ch != \"}\")\n\t\t\t\tthis.putBack();\n\t\t} while (ch != \"}\");\n\t}\n\n\t/**\n\t * Puts back the last read character into the data stream.\n\t */\n\tprivate putBack():void\n\t{\n\t\tthis._parseIndex--;\n\t\tthis._charLineIndex--;\n\t\tthis._reachedEOF = this._parseIndex >= this._textData.length;\n\t}\n\n\t/**\n\t * Parses the mesh geometry.\n\t */\n\tprivate parseMesh():void\n\t{\n\t\tvar token:string = this.getNextToken();\n\t\tvar ch:string;\n\t\tvar vertexData:Array<VertexData>;\n\t\tvar weights:Array<JointData>;\n\t\tvar indices:Array<number> /*uint*/;\n\n\t\tif (token != \"{\")\n\t\t\tthis.sendUnknownKeywordError();\n\n\t\tif (this._shaders == null)\n\t\t\tthis._shaders = new Array<string>();\n\n\t\twhile (ch != \"}\") {\n\t\t\tch = this.getNextToken();\n\t\t\tswitch (ch) {\n\t\t\t\tcase MD5MeshParser.COMMENT_TOKEN:\n\t\t\t\t\tthis.ignoreLine();\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_SHADER_TOKEN:\n\t\t\t\t\tthis._shaders.push(this.parseLiteralstring());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_VERTS_TOKEN:\n\t\t\t\t\tvertexData = new Array<VertexData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_TRIS_TOKEN:\n\t\t\t\t\tindices = new Array<number>(this.getNextInt()*3) /*uint*/;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_NUM_WEIGHTS_TOKEN:\n\t\t\t\t\tweights = new Array<JointData>(this.getNextInt());\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_VERT_TOKEN:\n\t\t\t\t\tthis.parseVertex(vertexData);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_TRI_TOKEN:\n\t\t\t\t\tthis.parseTri(indices);\n\t\t\t\t\tbreak;\n\t\t\t\tcase MD5MeshParser.MESH_WEIGHT_TOKEN:\n\t\t\t\t\tthis.parseJoint(weights);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._meshData == null)\n\t\t\tthis._meshData = new Array<MeshData>();\n\n\t\tvar i:number /*uint*/ = this._meshData.length;\n\t\tthis._meshData[i] = new MeshData();\n\t\tthis._meshData[i].vertexData = vertexData;\n\t\tthis._meshData[i].weightData = weights;\n\t\tthis._meshData[i].indices = indices;\n\t}\n\n\t/**\n\t * Converts the mesh data to a SkinnedSub instance.\n\t * @param vertexData The mesh's vertices.\n\t * @param weights The joint weights per vertex.\n\t * @param indices The indices for the faces.\n\t * @return A SubGeometry instance containing all geometrical data for the current mesh.\n\t */\n\tprivate translateGeom(vertexData:Array<VertexData>, weights:Array<JointData>, indices:Array<number> /*uint*/):TriangleSubGeometry\n\t{\n\t\tvar len:number /*int*/ = vertexData.length;\n\t\tvar v1:number /*int*/, v2:number /*int*/, v3:number /*int*/;\n\t\tvar vertex:VertexData;\n\t\tvar weight:JointData;\n\t\tvar bindPose:Matrix3D;\n\t\tvar pos:Vector3D;\n\t\tvar subGeom:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\tvar uvs:Array<number> = new Array<number>(len*2);\n\t\tvar vertices:Array<number> = new Array<number>(len*3);\n\t\tvar jointIndices:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar jointWeights:Array<number> = new Array<number>(len*this._maxJointCount);\n\t\tvar l:number /*int*/ = 0;\n\t\tvar nonZeroWeights:number /*int*/;\n\n\t\tfor (var i:number /*int*/ = 0; i < len; ++i) {\n\t\t\tvertex = vertexData[i];\n\t\t\tv1 = vertex.index*3;\n\t\t\tv2 = v1 + 1;\n\t\t\tv3 = v1 + 2;\n\t\t\tvertices[v1] = vertices[v2] = vertices[v3] = 0;\n\n\t\t\tnonZeroWeights = 0;\n\t\t\tfor (var j:number /*int*/ = 0; j < vertex.countWeight; ++j) {\n\t\t\t\tweight = weights[vertex.startWeight + j];\n\t\t\t\tif (weight.bias > 0) {\n\t\t\t\t\tbindPose = this._bindPoses[weight.joint];\n\t\t\t\t\tpos = bindPose.transformVector(weight.pos);\n\t\t\t\t\tvertices[v1] += pos.x*weight.bias;\n\t\t\t\t\tvertices[v2] += pos.y*weight.bias;\n\t\t\t\t\tvertices[v3] += pos.z*weight.bias;\n\n\t\t\t\t\t// indices need to be multiplied by 3 (amount of matrix registers)\n\t\t\t\t\tjointIndices[l] = weight.joint*3;\n\t\t\t\t\tjointWeights[l++] = weight.bias;\n\t\t\t\t\t++nonZeroWeights;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = nonZeroWeights; j < this._maxJointCount; ++j) {\n\t\t\t\tjointIndices[l] = 0;\n\t\t\t\tjointWeights[l++] = 0;\n\t\t\t}\n\n\t\t\tv1 = vertex.index << 1;\n\t\t\tuvs[v1++] = vertex.s;\n\t\t\tuvs[v1] = vertex.t;\n\t\t}\n\n\t\tsubGeom.jointsPerVertex = this._maxJointCount;\n\t\tsubGeom.updateIndices(indices);\n\t\tsubGeom.updatePositions(vertices);\n\t\tsubGeom.updateUVs(uvs);\n\t\tsubGeom.updateJointIndices(jointIndices);\n\t\tsubGeom.updateJointWeights(jointWeights);\n\t\t// cause explicit updates\n\t\tsubGeom.vertexNormals;\n\t\tsubGeom.vertexTangents;\n\t\t// turn auto updates off because they may be animated and set explicitly\n\t\tsubGeom.autoDeriveTangents = false;\n\t\tsubGeom.autoDeriveNormals = false;\n\n\t\treturn subGeom;\n\t}\n\n\t/**\n\t * Retrieve the next triplet of vertex indices that form a face.\n\t * @param indices The index list in which to store the read data.\n\t */\n\tprivate parseTri(indices:Array<number> /*uint*/):void\n\t{\n\t\tvar index:number /*int*/ = this.getNextInt()*3;\n\t\tindices[index] = this.getNextInt();\n\t\tindices[index + 1] = this.getNextInt();\n\t\tindices[index + 2] = this.getNextInt();\n\t}\n\n\t/**\n\t * Reads a new joint data set for a single joint.\n\t * @param weights the target list to contain the weight data.\n\t */\n\tprivate parseJoint(weights:Array<JointData>):void\n\t{\n\t\tvar weight:JointData = new JointData();\n\t\tweight.index = this.getNextInt();\n\t\tweight.joint = this.getNextInt();\n\t\tweight.bias = this.getNextNumber();\n\t\tweight.pos = this.parseVector3D();\n\t\tweights[weight.index] = weight;\n\t}\n\n\t/**\n\t * Reads the data for a single vertex.\n\t * @param vertexData The list to contain the vertex data.\n\t */\n\tprivate parseVertex(vertexData:Array<VertexData>):void\n\t{\n\t\tvar vertex:VertexData = new VertexData();\n\t\tvertex.index = this.getNextInt();\n\t\tthis.parseUV(vertex);\n\t\tvertex.startWeight = this.getNextInt();\n\t\tvertex.countWeight = this.getNextInt();\n\t\t//\t\t\tif (vertex.countWeight > _maxJointCount) _maxJointCount = vertex.countWeight;\n\t\tvertexData[vertex.index] = vertex;\n\t}\n\n\t/**\n\t * Reads the next uv coordinate.\n\t * @param vertexData The vertexData to contain the UV coordinates.\n\t */\n\tprivate parseUV(vertexData:VertexData):void\n\t{\n\t\tvar ch:string = this.getNextToken();\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvertexData.s = this.getNextNumber();\n\t\tvertexData.t = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\t}\n\n\t/**\n\t * Gets the next token in the data stream.\n\t */\n\tprivate getNextToken():string\n\t{\n\t\tvar ch:string;\n\t\tvar token:string = \"\";\n\n\t\twhile (!this._reachedEOF) {\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch == \" \" || ch == \"\\r\" || ch == \"\\n\" || ch == \"\\t\") {\n\t\t\t\tif (token != MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\t\tthis.skipWhiteSpace();\n\t\t\t\tif (token != \"\")\n\t\t\t\t\treturn token;\n\t\t\t} else\n\t\t\t\ttoken += ch;\n\n\t\t\tif (token == MD5MeshParser.COMMENT_TOKEN)\n\t\t\t\treturn token;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Skips all whitespace in the data stream.\n\t */\n\tprivate skipWhiteSpace():void\n\t{\n\t\tvar ch:string;\n\n\t\tdo\n\t\t\tch = this.getNextChar(); while (ch == \"\\n\" || ch == \" \" || ch == \"\\r\" || ch == \"\\t\");\n\n\t\tthis.putBack();\n\t}\n\n\t/**\n\t * Skips to the next line.\n\t */\n\tprivate ignoreLine():void\n\t{\n\t\tvar ch:string;\n\t\twhile (!this._reachedEOF && ch != \"\\n\")\n\t\t\tch = this.getNextChar();\n\t}\n\n\t/**\n\t * Retrieves the next single character in the data stream.\n\t */\n\tprivate getNextChar():string\n\t{\n\t\tvar ch:string = this._textData.charAt(this._parseIndex++);\n\n\t\tif (ch == \"\\n\") {\n\t\t\t++this._line;\n\t\t\tthis._charLineIndex = 0;\n\t\t} else if (ch != \"\\r\")\n\t\t\t++this._charLineIndex;\n\n\t\tif (this._parseIndex >= this._textData.length)\n\t\t\tthis._reachedEOF = true;\n\n\t\treturn ch;\n\t}\n\n\t/**\n\t * Retrieves the next integer in the data stream.\n\t */\n\tprivate getNextInt():number /*int*/\n\t{\n\t\tvar i:number = parseInt(this.getNextToken());\n\t\tif (isNaN(i))\n\t\t\tthis.sendParseError(\"int type\");\n\t\treturn i;\n\t}\n\n\t/**\n\t * Retrieves the next floating point number in the data stream.\n\t */\n\tprivate getNextNumber():number\n\t{\n\t\tvar f:number = parseFloat(this.getNextToken());\n\t\tif (isNaN(f))\n\t\t\tthis.sendParseError(\"float type\");\n\t\treturn f;\n\t}\n\n\t/**\n\t * Retrieves the next 3d vector in the data stream.\n\t */\n\tprivate parseVector3D():Vector3D\n\t{\n\t\tvar vec:Vector3D = new Vector3D();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tvec.x = -this.getNextNumber();\n\t\tvec.y = this.getNextNumber();\n\t\tvec.z = this.getNextNumber();\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\treturn vec;\n\t}\n\n\t/**\n\t * Retrieves the next quaternion in the data stream.\n\t */\n\tprivate parseQuaternion():Quaternion\n\t{\n\t\tvar quat:Quaternion = new Quaternion();\n\t\tvar ch:string = this.getNextToken();\n\n\t\tif (ch != \"(\")\n\t\t\tthis.sendParseError(\"(\");\n\t\tquat.x = this.getNextNumber();\n\t\tquat.y = -this.getNextNumber();\n\t\tquat.z = -this.getNextNumber();\n\n\t\t// quat supposed to be unit length\n\t\tvar t:number = 1 - quat.x*quat.x - quat.y*quat.y - quat.z*quat.z;\n\t\tquat.w = t < 0? 0 : -Math.sqrt(t);\n\n\t\tif (this.getNextToken() != \")\")\n\t\t\tthis.sendParseError(\")\");\n\n\t\tvar rotQuat:Quaternion = new Quaternion();\n\t\trotQuat.multiply(this._rotationQuat, quat);\n\t\treturn rotQuat;\n\t}\n\n\t/**\n\t * Parses the command line data.\n\t */\n\tprivate parseCMD():void\n\t{\n\t\t// just ignore the command line property\n\t\tthis.parseLiteralstring();\n\t}\n\n\t/**\n\t * Retrieves the next literal string in the data stream. A literal string is a sequence of characters bounded\n\t * by double quotes.\n\t */\n\tprivate parseLiteralstring():string\n\t{\n\t\tthis.skipWhiteSpace();\n\n\t\tvar ch:string = this.getNextChar();\n\t\tvar str:string = \"\";\n\n\t\tif (ch != \"\\\"\")\n\t\t\tthis.sendParseError(\"\\\"\");\n\n\t\tdo {\n\t\t\tif (this._reachedEOF)\n\t\t\t\tthis.sendEOFError();\n\t\t\tch = this.getNextChar();\n\t\t\tif (ch != \"\\\"\")\n\t\t\t\tstr += ch;\n\t\t} while (ch != \"\\\"\");\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Throws an end-of-file error when a premature end of file was encountered.\n\t */\n\tprivate sendEOFError():void\n\t{\n\t\tthrow new Error(\"Unexpected end of file\");\n\t}\n\n\t/**\n\t * Throws an error when an unexpected token was encountered.\n\t * @param expected The token type that was actually expected.\n\t */\n\tprivate sendParseError(expected:string):void\n\t{\n\t\tthrow new Error(\"Unexpected token at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \" + expected + \" expected, but \" + this._textData.charAt(this._parseIndex - 1) + \" encountered\");\n\t}\n\n\t/**\n\t * Throws an error when an unknown keyword was encountered.\n\t */\n\tprivate sendUnknownKeywordError():void\n\t{\n\t\tthrow new Error(\"Unknown keyword at line \" + (this._line + 1) + \", character \" + this._charLineIndex + \". \");\n\t}\n}\n\nexport = MD5MeshParser;\n\n\nclass VertexData\n{\n\tpublic index:number /*int*/;\n\tpublic s:number;\n\tpublic t:number;\n\tpublic startWeight:number /*int*/;\n\tpublic countWeight:number /*int*/;\n}\n\nclass JointData\n{\n\tpublic index:number /*int*/;\n\tpublic joint:number /*int*/;\n\tpublic bias:number;\n\tpublic pos:Vector3D;\n}\n\nclass MeshData\n{\n\tpublic vertexData:Array<VertexData>;\n\tpublic weightData:Array<JointData>;\n\tpublic indices:Array<number> /*uint*/;\n}\n","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureProxyBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/DefaultMaterialManager\");\nimport TriangleMethodMaterial\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMethodMaterial\");\nimport TriangleMaterialMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialMode\");\n\n/**\n * Max3DSParser provides a parser for the 3ds data type.\n */\nclass Max3DSParser extends ParserBase\n{\n\tprivate _byteData:ByteArray;\n\n\tprivate _textures:Object;\n\tprivate _materials:Object;\n\tprivate _unfinalized_objects:Object;\n\n\tprivate _cur_obj_end:number;\n\tprivate _cur_obj:ObjectVO;\n\n\tprivate _cur_mat_end:number;\n\tprivate _cur_mat:MaterialVO;\n\tprivate _useSmoothingGroups:boolean;\n\n\t/**\n\t * Creates a new <code>Max3DSParser</code> object.\n\t *\n\t * @param useSmoothingGroups Determines whether the parser looks for smoothing groups in the 3ds file or assumes uniform smoothing. Defaults to true.\n\t */\n\tconstructor(useSmoothingGroups:boolean = true)\n\t{\n\t\tsuper(URLLoaderDataFormat.ARRAY_BUFFER);\n\n\t\tthis._useSmoothingGroups = useSmoothingGroups;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"3ds\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar ba:ByteArray;\n\n\t\tba = ParserUtils.toByteArray(data);\n\t\tif (ba) {\n\t\t\tba.position = 0;\n\t\t\tif (ba.readShort() == 0x4d4d)\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency):void\n\t{\n\t\tif (resourceDependency.assets.length == 1) {\n\t\t\tvar asset:IAsset;\n\n\t\t\tasset = resourceDependency.assets[0];\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\n\t\t\t\tvar tex:TextureVO;\n\n\t\t\t\ttex = this._textures[resourceDependency.id];\n\t\t\t\ttex.texture = <Texture2DBase> asset;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency):void\n\t{\n\t\t// TODO: Implement\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tif (!this._byteData) {\n\t\t\tthis._byteData = this._pGetByteData();\n\t\t\tthis._byteData.position = 0;\n\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t// LITTLE_ENDIAN - Default for ArrayBuffer / Not implemented in ByteArray\n\t\t\t//----------------------------------------------------------------------------\n\t\t\t//this._byteData.endian = Endian.LITTLE_ENDIAN;// Should be default\n\t\t\t//----------------------------------------------------------------------------\n\n\t\t\tthis._textures = {};\n\t\t\tthis._materials = {};\n\t\t\tthis._unfinalized_objects = {};\n\t\t}\n\n\t\t// TODO: With this construct, the loop will run no-op for as long\n\t\t// as there is time once file has finished reading. Consider a nice\n\t\t// way to stop loop when byte array is empty, without putting it in\n\t\t// the while-conditional, which will prevent finalizations from\n\t\t// happening after the last chunk.\n\t\twhile (this._pHasTime()) {\n\n\t\t\t// If we are currently working on an object, and the most recent chunk was\n\t\t\t// the last one in that object, finalize the current object.\n\t\t\tif (this._cur_mat && this._byteData.position >= this._cur_mat_end)\n\t\t\t\tthis.finalizeCurrentMaterial();\n\t\t\telse if (this._cur_obj && this._byteData.position >= this._cur_obj_end) {\n\t\t\t\t// Can't finalize at this point, because we have to wait until the full\n\t\t\t\t// animation section has been parsed for any potential pivot definitions\n\t\t\t\tthis._unfinalized_objects[this._cur_obj.name] = this._cur_obj;\n\t\t\t\tthis._cur_obj_end = Number.MAX_VALUE /*uint*/;\n\t\t\t\tthis._cur_obj = null;\n\t\t\t}\n\n\t\t\tif (this._byteData.getBytesAvailable() > 0) {\n\t\t\t\tvar cid:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar end:number /*uint*/;\n\n\t\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\t\tswitch (cid) {\n\t\t\t\t\tcase 0x4D4D: // MAIN3DS\n\t\t\t\t\tcase 0x3D3D: // EDIT3DS\n\t\t\t\t\tcase 0xB000: // KEYF3DS\n\t\t\t\t\t\t// This types are \"container chunks\" and contain only\n\t\t\t\t\t\t// sub-chunks (no data on their own.) This means that\n\t\t\t\t\t\t// there is nothing more to parse at this point, and\n\t\t\t\t\t\t// instead we should progress to the next chunk, which\n\t\t\t\t\t\t// will be the first sub-chunk of this one.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xAFFF: // MATERIAL\n\t\t\t\t\t\tthis._cur_mat_end = end;\n\t\t\t\t\t\tthis._cur_mat = this.parseMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4000: // EDIT_OBJECT\n\t\t\t\t\t\tthis._cur_obj_end = end;\n\t\t\t\t\t\tthis._cur_obj = new ObjectVO();\n\t\t\t\t\t\tthis._cur_obj.name = this.readNulTermstring();\n\t\t\t\t\t\tthis._cur_obj.materials = new Array<string>();\n\t\t\t\t\t\tthis._cur_obj.materialFaces = {};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4100: // OBJ_TRIMESH\n\t\t\t\t\t\tthis._cur_obj.type = AssetType.MESH;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4110: // TRI_VERTEXL\n\t\t\t\t\t\tthis.parseVertexList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4120: // TRI_FACELIST\n\t\t\t\t\t\tthis.parseFaceList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4140: // TRI_MAPPINGCOORDS\n\t\t\t\t\t\tthis.parseUVList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4130: // Face materials\n\t\t\t\t\t\tthis.parseFaceMaterialList();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4160: // Transform\n\t\t\t\t\t\tthis._cur_obj.transform = this.readTransform();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0xB002: // Object animation (including pivot)\n\t\t\t\t\t\tthis.parseObjectAnimation(end);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0x4150: // Smoothing groups\n\t\t\t\t\t\tthis.parseSmoothingGroups();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Skip this (unknown) chunk\n\t\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Pause parsing if there were any dependencies found during this\n\t\t\t\t// iteration (i.e. if there are any dependencies that need to be\n\t\t\t\t// retrieved at this time.)\n\t\t\t\tif (this.dependencies.length) {\n\t\t\t\t\tthis._pPauseAndRetrieveDependencies();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// More parsing is required if the entire byte array has not yet\n\t\t// been read, or if there is a currently non-finalized object in\n\t\t// the pipeline.\n\t\tif (this._byteData.getBytesAvailable() || this._cur_obj || this._cur_mat) {\n\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t} else {\n\t\t\tvar name:string;\n\n\t\t\t// Finalize any remaining objects before ending.\n\t\t\tfor (name in this._unfinalized_objects) {\n\t\t\t\tvar obj:DisplayObjectContainer;\n\t\t\t\tobj = this.constructObject(this._unfinalized_objects[name]);\n\t\t\t\tif (obj) {\n\t\t\t\t\t//add to the content property\n\t\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\t\tthis._pFinalizeAsset(obj, name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\tprivate parseMaterial():MaterialVO\n\t{\n\t\tvar mat:MaterialVO;\n\n\t\tmat = new MaterialVO();\n\n\t\twhile (this._byteData.position < this._cur_mat_end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar end:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\t\t\tend = this._byteData.position + (len - 6);\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA000: // Material name\n\t\t\t\t\tmat.name = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA010: // Ambient color\n\t\t\t\t\tmat.ambientColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA020: // Diffuse color\n\t\t\t\t\tmat.diffuseColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA030: // Specular color\n\t\t\t\t\tmat.specularColor = this.readColor();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA081: // Two-sided, existence indicates \"true\"\n\t\t\t\t\tmat.twoSided = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA200: // Main (color) texture\n\t\t\t\t\tmat.colorMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xA204: // Specular map\n\t\t\t\t\tmat.specularMap = this.parseTexture(end);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position = end;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn mat;\n\t}\n\n\tprivate parseTexture(end:number /*uint*/):TextureVO\n\t{\n\t\tvar tex:TextureVO;\n\n\t\ttex = new TextureVO();\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xA300:\n\t\t\t\t\ttex.url = this.readNulTermstring();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Skip this unknown texture sub-chunk\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._textures[tex.url] = tex;\n\t\tthis._pAddDependency(tex.url, new URLRequest(tex.url));\n\n\t\treturn tex;\n\t}\n\n\tprivate parseVertexList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.verts = new Array<number>(count*3);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.verts.length;\n\t\twhile (i < len) {\n\t\t\tvar x:number, y:number, z:number;\n\n\t\t\tx = this._byteData.readFloat();\n\t\t\ty = this._byteData.readFloat();\n\t\t\tz = this._byteData.readFloat();\n\n\t\t\tthis._cur_obj.verts[i++] = x;\n\t\t\tthis._cur_obj.verts[i++] = z;\n\t\t\tthis._cur_obj.verts[i++] = y;\n\t\t}\n\t}\n\n\tprivate parseFaceList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.indices = new Array<number>(count*3) /*uint*/;\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.indices.length;\n\t\twhile (i < len) {\n\t\t\tvar i0:number /*uint*/, i1:number /*uint*/, i2:number /*uint*/;\n\n\t\t\ti0 = this._byteData.readUnsignedShort();\n\t\t\ti1 = this._byteData.readUnsignedShort();\n\t\t\ti2 = this._byteData.readUnsignedShort();\n\n\t\t\tthis._cur_obj.indices[i++] = i0;\n\t\t\tthis._cur_obj.indices[i++] = i2;\n\t\t\tthis._cur_obj.indices[i++] = i1;\n\n\t\t\t// Skip \"face info\", irrelevant in Away3D\n\t\t\tthis._byteData.position += 2;\n\t\t}\n\n\t\tthis._cur_obj.smoothingGroups = new Array<number>(count) /*uint*/;\n\t}\n\n\tprivate parseSmoothingGroups():void\n\t{\n\t\tvar len:number /*uint*/ = this._cur_obj.indices.length/3;\n\t\tvar i:number /*uint*/ = 0;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.smoothingGroups[i] = this._byteData.readUnsignedInt();\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate parseUVList():void\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/;\n\t\tvar count:number /*uint*/;\n\n\t\tcount = this._byteData.readUnsignedShort();\n\t\tthis._cur_obj.uvs = new Array<number>(count*2);\n\n\t\ti = 0;\n\t\tlen = this._cur_obj.uvs.length;\n\t\twhile (i < len) {\n\t\t\tthis._cur_obj.uvs[i++] = this._byteData.readFloat();\n\t\t\tthis._cur_obj.uvs[i++] = 1.0 - this._byteData.readFloat();\n\t\t}\n\t}\n\n\tprivate parseFaceMaterialList():void\n\t{\n\t\tvar mat:string;\n\t\tvar count:number /*uint*/;\n\t\tvar i:number /*uint*/;\n\t\tvar faces:Array<number> /*uint*/;\n\n\t\tmat = this.readNulTermstring();\n\t\tcount = this._byteData.readUnsignedShort();\n\n\t\tfaces = new Array<number>(count) /*uint*/;\n\t\ti = 0;\n\t\twhile (i < faces.length)\n\t\t\tfaces[i++] = this._byteData.readUnsignedShort();\n\n\t\tthis._cur_obj.materials.push(mat);\n\t\tthis._cur_obj.materialFaces[mat] = faces;\n\t}\n\n\tprivate parseObjectAnimation(end:number):void\n\t{\n\t\tvar vo:ObjectVO;\n\t\tvar obj:DisplayObjectContainer;\n\t\tvar pivot:Vector3D;\n\t\tvar name:string;\n\t\tvar hier:number /*uint*/;\n\n\t\t// Pivot defaults to origin\n\t\tpivot = new Vector3D;\n\n\t\twhile (this._byteData.position < end) {\n\t\t\tvar cid:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tcid = this._byteData.readUnsignedShort();\n\t\t\tlen = this._byteData.readUnsignedInt();\n\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0xb010: // Name/hierarchy\n\t\t\t\t\tname = this.readNulTermstring();\n\t\t\t\t\tthis._byteData.position += 4;\n\t\t\t\t\thier = this._byteData.readShort();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0xb013: // Pivot\n\t\t\t\t\tpivot.x = this._byteData.readFloat();\n\t\t\t\t\tpivot.z = this._byteData.readFloat();\n\t\t\t\t\tpivot.y = this._byteData.readFloat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If name is \"$$$DUMMY\" this is an empty object (e.g. a container)\n\t\t// and will be ignored in this version of the parser\n\t\t// TODO: Implement containers in 3DS parser.\n\t\tif (name != '$$$DUMMY' && this._unfinalized_objects.hasOwnProperty(name)) {\n\t\t\tvo = this._unfinalized_objects[name];\n\t\t\tobj = this.constructObject(vo, pivot);\n\n\t\t\tif (obj) {\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(obj);\n\n\t\t\t\tthis._pFinalizeAsset(obj, vo.name);\n\t\t\t}\n\n\n\t\t\tdelete this._unfinalized_objects[name];\n\t\t}\n\t}\n\n\tprivate constructObject(obj:ObjectVO, pivot:Vector3D = null):DisplayObjectContainer\n\t{\n\t\tif (obj.type == AssetType.MESH) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar sub:TriangleSubGeometry;\n\t\t\tvar geom:Geometry;\n\t\t\tvar mat:MaterialBase;\n\t\t\tvar mesh:Mesh;\n\t\t\tvar mtx:Matrix3D;\n\t\t\tvar vertices:Array<VertexVO>;\n\t\t\tvar faces:Array<FaceVO>;\n\n\t\t\tif (obj.materials.length > 1)\n\t\t\t\tconsole.log(\"The Away3D 3DS parser does not support multiple materials per mesh at this point.\");\n\n\t\t\t// Ignore empty objects\n\t\t\tif (!obj.indices || obj.indices.length == 0)\n\t\t\t\treturn null;\n\n\t\t\tvertices = new Array<VertexVO>(obj.verts.length/3);\n\t\t\tfaces = new Array<FaceVO>(obj.indices.length/3);\n\n\t\t\tthis.prepareData(vertices, faces, obj);\n\n\t\t\tif (this._useSmoothingGroups)\n\t\t\t\tthis.applySmoothGroups(vertices, faces);\n\n\t\t\tobj.verts = new Array<number>(vertices.length*3);\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tobj.verts[i*3] = vertices[i].x;\n\t\t\t\tobj.verts[i*3 + 1] = vertices[i].y;\n\t\t\t\tobj.verts[i*3 + 2] = vertices[i].z;\n\t\t\t}\n\t\t\tobj.indices = new Array<number>(faces.length*3) /*uint*/;\n\n\t\t\tfor (i = 0; i < faces.length; i++) {\n\t\t\t\tobj.indices[i*3] = faces[i].a;\n\t\t\t\tobj.indices[i*3 + 1] = faces[i].b;\n\t\t\t\tobj.indices[i*3 + 2] = faces[i].c;\n\t\t\t}\n\n\t\t\tif (obj.uvs) {\n\t\t\t\t// If the object had UVs to start with, use UVs generated by\n\t\t\t\t// smoothing group splitting algorithm. Otherwise those UVs\n\t\t\t\t// will be nonsense and should be skipped.\n\t\t\t\tobj.uvs = new Array<number>(vertices.length*2);\n\t\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\t\tobj.uvs[i*2] = vertices[i].u;\n\t\t\t\t\tobj.uvs[i*2 + 1] = vertices[i].v;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeom = new Geometry();\n\n\t\t\t// Construct sub-geometries (potentially splitting buffers)\n\t\t\t// and add them to geometry.\n\t\t\tsub = new TriangleSubGeometry(true);\n\t\t\tsub.updateIndices(obj.indices);\n\t\t\tsub.updatePositions(obj.verts);\n\t\t\tsub.updateUVs(obj.uvs);\n\n\t\t\tgeom.addSubGeometry(sub);\n\n\t\t\tif (obj.materials.length > 0) {\n\t\t\t\tvar mname:string;\n\t\t\t\tmname = obj.materials[0];\n\t\t\t\tmat = this._materials[mname].material;\n\t\t\t}\n\n\t\t\t// Apply pivot translation to geometry if a pivot was\n\t\t\t// found while parsing the keyframe chunk earlier.\n\t\t\tif (pivot) {\n\t\t\t\tif (obj.transform) {\n\t\t\t\t\t// If a transform was found while parsing the\n\t\t\t\t\t// object chunk, use it to find the local pivot vector\n\t\t\t\t\tvar dat:Array<number> = obj.transform.concat();\n\t\t\t\t\tdat[12] = 0;\n\t\t\t\t\tdat[13] = 0;\n\t\t\t\t\tdat[14] = 0;\n\t\t\t\t\tmtx = new Matrix3D(dat);\n\t\t\t\t\tpivot = mtx.transformVector(pivot);\n\t\t\t\t}\n\n\t\t\t\tpivot.scaleBy(-1);\n\n\t\t\t\tmtx = new Matrix3D();\n\t\t\t\tmtx.appendTranslation(pivot.x, pivot.y, pivot.z);\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Apply transformation to geometry if a transformation\n\t\t\t// was found while parsing the object chunk earlier.\n\t\t\tif (obj.transform) {\n\t\t\t\tmtx = new Matrix3D(obj.transform);\n\t\t\t\tmtx.invert();\n\t\t\t\tgeom.applyTransformation(mtx);\n\t\t\t}\n\n\t\t\t// Final transform applied to geometry. Finalize the geometry,\n\t\t\t// which will no longer be modified after this point.\n\t\t\tthis._pFinalizeAsset(geom, obj.name.concat('_geom'));\n\n\t\t\t// Build mesh and return it\n\t\t\tmesh = new Mesh(geom, mat);\n\t\t\tmesh.transform.matrix3D = new Matrix3D(obj.transform);\n\t\t\treturn mesh;\n\t\t}\n\n\t\t// If reached, unknown\n\t\treturn null;\n\t}\n\n\tprivate prepareData(vertices:Array<VertexVO>, faces:Array<FaceVO>, obj:ObjectVO):void\n\t{\n\t\t// convert raw ObjectVO's data to structured VertexVO and FaceVO\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar len:number /*int*/ = obj.verts.length;\n\t\tfor (i = 0, j = 0, k = 0; i < len;) {\n\t\t\tvar v:VertexVO = new VertexVO;\n\t\t\tv.x = obj.verts[i++];\n\t\t\tv.y = obj.verts[i++];\n\t\t\tv.z = obj.verts[i++];\n\t\t\tif (obj.uvs) {\n\t\t\t\tv.u = obj.uvs[j++];\n\t\t\t\tv.v = obj.uvs[j++];\n\t\t\t}\n\t\t\tvertices[k++] = v;\n\t\t}\n\t\tlen = obj.indices.length;\n\t\tfor (i = 0, k = 0; i < len;) {\n\t\t\tvar f:FaceVO = new FaceVO();\n\t\t\tf.a = obj.indices[i++];\n\t\t\tf.b = obj.indices[i++];\n\t\t\tf.c = obj.indices[i++];\n\t\t\tf.smoothGroup = obj.smoothingGroups[k] || 0;\n\t\t\tfaces[k++] = f;\n\t\t}\n\t}\n\n\tprivate applySmoothGroups(vertices:Array<VertexVO>, faces:Array<FaceVO>):void\n\t{\n\t\t// clone vertices according to following rule:\n\t\t// clone if vertex's in faces from groups 1+2 and 3\n\t\t// don't clone if vertex's in faces from groups 1+2, 3 and 1+3\n\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar k:number /*int*/;\n\t\tvar l:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar numVerts:number /*uint*/ = vertices.length;\n\t\tvar numFaces:number /*uint*/ = faces.length;\n\n\t\t// extract groups data for vertices\n\t\tvar vGroups:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++)\n\t\t\tvGroups[i] = new Array<number>() /*uint*/;\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tvar face:FaceVO = faces[i];\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tvar groups:Array<number> /*uint*/ = vGroups[(j == 0)? face.a : ((j == 1)? face.b : face.c)];\n\t\t\t\tvar group:number /*uint*/ = face.smoothGroup;\n\t\t\t\tfor (k = groups.length - 1; k >= 0; k--) {\n\t\t\t\t\tif ((group & groups[k]) > 0) {\n\t\t\t\t\t\tgroup |= groups[k];\n\t\t\t\t\t\tgroups.splice(k, 1);\n\t\t\t\t\t\tk = groups.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgroups.push(group);\n\t\t\t}\n\t\t}\n\t\t// clone vertices\n\t\tvar vClones:Array<Array<number>> /*uint*/ = new Array<Array<number>>(numVerts) /*uint*/;\n\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\tif ((len = vGroups[i].length) < 1)\n\t\t\t\tcontinue;\n\t\t\tvar clones:Array<number> /*uint*/ = new Array<number>(len) /*uint*/;\n\t\t\tvClones[i] = clones;\n\t\t\tclones[0] = i;\n\t\t\tvar v0:VertexVO = vertices[i];\n\t\t\tfor (j = 1; j < len; j++) {\n\t\t\t\tvar v1:VertexVO = new VertexVO;\n\t\t\t\tv1.x = v0.x;\n\t\t\t\tv1.y = v0.y;\n\t\t\t\tv1.z = v0.z;\n\t\t\t\tv1.u = v0.u;\n\t\t\t\tv1.v = v0.v;\n\t\t\t\tclones[j] = vertices.length;\n\t\t\t\tvertices.push(v1);\n\t\t\t}\n\t\t}\n\t\tnumVerts = vertices.length;\n\n\t\tfor (i = 0; i < numFaces; i++) {\n\t\t\tface = faces[i];\n\t\t\tgroup = face.smoothGroup;\n\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\tk = (j == 0)? face.a : ((j == 1)? face.b : face.c);\n\t\t\t\tgroups = vGroups[k];\n\t\t\t\tlen = groups.length;\n\t\t\t\tclones = vClones[k];\n\t\t\t\tfor (l = 0; l < len; l++) {\n\t\t\t\t\tif (((group == 0) && (groups[l] == 0)) || ((group & groups[l]) > 0)) {\n\t\t\t\t\t\tvar index:number /*uint*/ = clones[l];\n\t\t\t\t\t\tif (group == 0) {\n\t\t\t\t\t\t\t// vertex is unique if no smoothGroup found\n\t\t\t\t\t\t\tgroups.splice(l, 1);\n\t\t\t\t\t\t\tclones.splice(l, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tface.a = index; else if (j == 1)\n\t\t\t\t\t\t\tface.b = index; else\n\t\t\t\t\t\t\tface.c = index;\n\t\t\t\t\t\tl = len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate finalizeCurrentMaterial():void\n\t{\n\t\tvar mat:TriangleMethodMaterial;\n\n\t\tif (this._cur_mat.colorMap)\n\t\t\tmat = new TriangleMethodMaterial(this._cur_mat.colorMap.texture || DefaultMaterialManager.getDefaultTexture());\n\t\telse\n\t\t\tmat = new TriangleMethodMaterial(this._cur_mat.ambientColor);\n\n\t\tmat.diffuseColor = this._cur_mat.diffuseColor;\n\t\tmat.specularColor = this._cur_mat.specularColor;\n\n\t\tif (this.materialMode >= 2)\n\t\t\tmat.materialMode = TriangleMaterialMode.MULTI_PASS\n\n\t\tmat.bothSides = this._cur_mat.twoSided;\n\n\t\tthis._pFinalizeAsset(mat, this._cur_mat.name);\n\n\t\tthis._materials[this._cur_mat.name] = this._cur_mat;\n\t\tthis._cur_mat.material = mat;\n\n\t\tthis._cur_mat = null;\n\t}\n\n\tprivate readNulTermstring():string\n\t{\n\t\tvar chr:number /*int*/;\n\t\tvar str:string = \"\";\n\n\t\twhile ((chr = this._byteData.readUnsignedByte()) > 0)\n\t\t\tstr += String.fromCharCode(chr);\n\n\t\treturn str;\n\t}\n\n\tprivate readTransform():Array<number>\n\t{\n\t\tvar data:Array<number>;\n\n\t\tdata = new Array<number>(16);\n\n\t\t// X axis\n\t\tdata[0] = this._byteData.readFloat(); // X\n\t\tdata[2] = this._byteData.readFloat(); // Z\n\t\tdata[1] = this._byteData.readFloat(); // Y\n\t\tdata[3] = 0;\n\n\t\t// Z axis\n\t\tdata[8] = this._byteData.readFloat(); // X\n\t\tdata[10] = this._byteData.readFloat(); // Z\n\t\tdata[9] = this._byteData.readFloat(); // Y\n\t\tdata[11] = 0;\n\n\t\t// Y Axis\n\t\tdata[4] = this._byteData.readFloat(); // X\n\t\tdata[6] = this._byteData.readFloat(); // Z\n\t\tdata[5] = this._byteData.readFloat(); // Y\n\t\tdata[7] = 0;\n\n\t\t// Translation\n\t\tdata[12] = this._byteData.readFloat(); // X\n\t\tdata[14] = this._byteData.readFloat(); // Z\n\t\tdata[13] = this._byteData.readFloat(); // Y\n\t\tdata[15] = 1;\n\n\t\treturn data;\n\t}\n\n\tprivate readColor():number /*int*/\n\t{\n\t\tvar cid:number /*int*/;\n\t\tvar len:number /*int*/;\n\t\tvar r:number /*int*/, g:number /*int*/, b:number /*int*/;\n\n\t\tcid = this._byteData.readUnsignedShort();\n\t\tlen = this._byteData.readUnsignedInt();\n\n\t\tswitch (cid) {\n\t\t\tcase 0x0010: // Floats\n\t\t\t\tr = this._byteData.readFloat()*255;\n\t\t\t\tg = this._byteData.readFloat()*255;\n\t\t\t\tb = this._byteData.readFloat()*255;\n\t\t\t\tbreak;\n\t\t\tcase 0x0011: // 24-bit color\n\t\t\t\tr = this._byteData.readUnsignedByte();\n\t\t\t\tg = this._byteData.readUnsignedByte();\n\t\t\t\tb = this._byteData.readUnsignedByte();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._byteData.position += (len - 6);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (r << 16) | (g << 8) | b;\n\t}\n}\n\nexport = Max3DSParser;\n\n/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\n/**\n *\n */\nclass ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Array<number>;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Texture2DBase;\n}\n\n/**\n *\n */\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport URLLoaderDataFormat\t\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserBase\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\nimport ParserUtils\t\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ResourceDependency\t\t\t\t= require(\"awayjs-core/lib/parsers/ResourceDependency\");\nimport Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport TriangleMethodMaterial\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMethodMaterial\");\nimport TriangleMaterialMode\t\t\t\t= require(\"awayjs-renderergl/lib/materials/TriangleMaterialMode\");\nimport SpecularBasicMethod\t\t\t\t= require(\"awayjs-renderergl/lib/materials/methods/SpecularBasicMethod\");\nimport DefaultMaterialManager\t\t\t= require(\"awayjs-renderergl/lib/materials/utils/DefaultMaterialManager\");\n\n/**\n * OBJParser provides a parser for the OBJ data type.\n */\nclass OBJParser extends ParserBase\n{\n\tprivate _textData:string;\n\tprivate _startedParsing:boolean;\n\tprivate _charIndex:number;\n\tprivate _oldIndex:number;\n\tprivate _stringLength:number;\n\tprivate _currentObject:ObjectGroup;\n\tprivate _currentGroup:Group;\n\tprivate _currentMaterialGroup:MaterialGroup;\n\tprivate _objects:Array<ObjectGroup>;\n\tprivate _materialIDs:string[];\n\tprivate _materialLoaded:Array<LoadedMaterial>;\n\tprivate _materialSpecularData:Array<SpecularData>;\n\tprivate _meshes:Array<Mesh>;\n\tprivate _lastMtlID:string;\n\tprivate _objectIndex:number;\n\tprivate _realIndices;\n\tprivate _vertexIndex:number;\n\tprivate _vertices:Array<Vertex>;\n\tprivate _vertexNormals:Array<Vertex>;\n\tprivate _uvs:Array<UV>;\n\tprivate _scale:number;\n\tprivate _mtlLib:boolean;\n\tprivate _mtlLibLoaded:boolean = true;\n\tprivate _activeMaterialID:string = \"\";\n\n\t/**\n\t * Creates a new OBJParser object.\n\t * @param uri The url or id of the data or file to be parsed.\n\t * @param extra The holder for extra contextual data that the parser might need.\n\t */\n\tconstructor(scale:number = 1)\n\t{\n\t\tsuper(URLLoaderDataFormat.TEXT);\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Scaling factor applied directly to vertices data\n\t * @param value The scaling factor.\n\t */\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * Indicates whether or not a given file extension is supported by the parser.\n\t * @param extension The file extension of a potential file to be parsed.\n\t * @return Whether or not the given file type is supported.\n\t */\n\tpublic static supportsType(extension:string):boolean\n\t{\n\t\textension = extension.toLowerCase();\n\t\treturn extension == \"obj\";\n\t}\n\n\t/**\n\t * Tests whether a data block can be parsed by the parser.\n\t * @param data The data block to potentially be parsed.\n\t * @return Whether or not the given data is supported.\n\t */\n\tpublic static supportsData(data:any):boolean\n\t{\n\t\tvar content:string = ParserUtils.toString(data);\n\t\tvar hasV:boolean = false;\n\t\tvar hasF:boolean = false;\n\n\t\tif (content) {\n\t\t\thasV = content.indexOf(\"\\nv \") != -1;\n\t\t\thasF = content.indexOf(\"\\nf \") != -1;\n\t\t}\n\n\t\treturn hasV && hasF;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependency(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == 'mtl') {\n\t\t\tvar str:string = ParserUtils.toString(resourceDependency.data);\n\t\t\tthis.parseMtl(str);\n\n\t\t} else {\n\t\t\tvar asset:IAsset;\n\n\t\t\tif (resourceDependency.assets.length != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset = resourceDependency.assets[0];\n\n\t\t\tif (asset.assetType == AssetType.TEXTURE) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = resourceDependency.id;\n\t\t\t\tlm.texture = <Texture2DBase> asset;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0) {\n\t\t\t\t\tthis.applyMaterial(lm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iResolveDependencyFailure(resourceDependency:ResourceDependency)\n\t{\n\t\tif (resourceDependency.id == \"mtl\") {\n\t\t\tthis._mtlLib = false;\n\t\t\tthis._mtlLibLoaded = false;\n\t\t} else {\n\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\tlm.materialID = resourceDependency.id;\n\t\t\tthis._materialLoaded.push(lm);\n\t\t}\n\n\t\tif (this._meshes.length > 0)\n\t\t\tthis.applyMaterial(lm);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pProceedParsing():boolean\n\t{\n\t\tvar line:string;\n\t\tvar creturn:string = String.fromCharCode(10);\n\t\tvar trunk;\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._textData = this._pGetTextData();\n\t\t\t// Merge linebreaks that are immediately preceeded by\n\t\t\t// the \"escape\" backward slash into single lines.\n\t\t\tthis._textData = this._textData.replace(/\\\\[\\r\\n]+\\s*/gm, ' ');\n\t\t}\n\n\t\tif (this._textData.indexOf(creturn) == -1)\n\t\t\tcreturn = String.fromCharCode(13);\n\n\t\tif (!this._startedParsing) {\n\t\t\tthis._startedParsing = true;\n\t\t\tthis._vertices = new Array<Vertex>();\n\t\t\tthis._vertexNormals = new Array<Vertex>();\n\t\t\tthis._materialIDs = new Array<string>();\n\t\t\tthis._materialLoaded = new Array<LoadedMaterial>();\n\t\t\tthis._meshes = new Array<Mesh>();\n\t\t\tthis._uvs = new Array<UV>();\n\t\t\tthis._stringLength = this._textData.length;\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, 0);\n\t\t\tthis._oldIndex = 0;\n\t\t\tthis._objects = new Array<ObjectGroup>();\n\t\t\tthis._objectIndex = 0;\n\t\t}\n\n\t\twhile (this._charIndex < this._stringLength && this._pHasTime()) {\n\t\t\tthis._charIndex = this._textData.indexOf(creturn, this._oldIndex);\n\n\t\t\tif (this._charIndex == -1)\n\t\t\t\tthis._charIndex = this._stringLength;\n\n\t\t\tline = this._textData.substring(this._oldIndex, this._charIndex);\n\t\t\tline = line.split('\\r').join(\"\");\n\t\t\tline = line.replace(\"  \", \" \");\n\t\t\ttrunk = line.split(\" \");\n\t\t\tthis._oldIndex = this._charIndex + 1;\n\t\t\tthis.parseLine(trunk);\n\n\t\t\t// If whatever was parsed on this line resulted in the\n\t\t\t// parsing being paused to retrieve dependencies, break\n\t\t\t// here and do not continue parsing until un-paused.\n\t\t\tif (this.parsingPaused) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._charIndex >= this._stringLength) {\n\n\t\t\tif (this._mtlLib && !this._mtlLibLoaded) {\n\t\t\t\treturn ParserBase.MORE_TO_PARSE;\n\t\t\t}\n\n\t\t\tthis.translate();\n\t\t\tthis.applyMaterials();\n\n\t\t\treturn ParserBase.PARSING_DONE;\n\t\t}\n\n\t\treturn ParserBase.MORE_TO_PARSE;\n\t}\n\n\tpublic _pStartParsing(frameLimit:number)\n\t{\n\t\tsuper._pStartParsing(frameLimit);\n\n\t\t//create a content object for Loaders\n\t\tthis._pContent = new DisplayObjectContainer();\n\t}\n\n\t/**\n\t * Parses a single line in the OBJ file.\n\t */\n\tprivate parseLine(trunk)\n\t{\n\t\tswitch (trunk[0]) {\n\n\t\t\tcase \"mtllib\":\n\n\t\t\t\tthis._mtlLib = true;\n\t\t\t\tthis._mtlLibLoaded = false;\n\t\t\t\tthis.loadMtl(trunk[1]);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"g\":\n\n\t\t\t\tthis.createGroup(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"o\":\n\n\t\t\t\tthis.createObject(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"usemtl\":\n\n\t\t\t\tif (this._mtlLib) {\n\n\t\t\t\t\tif (!trunk[1])\n\t\t\t\t\t\ttrunk[1] = \"def000\";\n\n\t\t\t\t\tthis._materialIDs.push(trunk[1]);\n\t\t\t\t\tthis._activeMaterialID = trunk[1];\n\n\t\t\t\t\tif (this._currentGroup)\n\t\t\t\t\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"v\":\n\n\t\t\t\tthis.parseVertex(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vt\":\n\n\t\t\t\tthis.parseUV(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"vn\":\n\n\t\t\t\tthis.parseVertexNormal(trunk);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"f\":\n\n\t\t\t\tthis.parseFace(trunk);\n\n\t\t}\n\t}\n\n\t/**\n\t * Converts the parsed data into an Away3D scenegraph structure\n\t */\n\tprivate translate()\n\t{\n\t\tfor (var objIndex:number = 0; objIndex < this._objects.length; ++objIndex) {\n\t\t\tvar groups:Array<Group> = this._objects[objIndex].groups;\n\t\t\tvar numGroups:number = groups.length;\n\t\t\tvar materialGroups:Array<MaterialGroup>;\n\t\t\tvar numMaterialGroups:number;\n\t\t\tvar geometry:Geometry;\n\t\t\tvar mesh:Mesh;\n\n\t\t\tvar m:number;\n\t\t\tvar sm:number;\n\t\t\tvar bmMaterial:TriangleMethodMaterial;\n\n\t\t\tfor (var g:number = 0; g < numGroups; ++g) {\n\t\t\t\tgeometry = new Geometry();\n\t\t\t\tmaterialGroups = groups[g].materialGroups;\n\t\t\t\tnumMaterialGroups = materialGroups.length;\n\n\t\t\t\tfor (m = 0; m < numMaterialGroups; ++m)\n\t\t\t\t\tthis.translateMaterialGroup(materialGroups[m], geometry);\n\n\t\t\t\tif (geometry.subGeometries.length == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Finalize and force type-based name\n\t\t\t\tthis._pFinalizeAsset(<IAsset> geometry);//, \"\");\n\n\t\t\t\tbmMaterial = new TriangleMethodMaterial(DefaultMaterialManager.getDefaultTexture());\n\n\t\t\t\t//check for multipass\n\t\t\t\tif (this.materialMode >= 2)\n\t\t\t\t\tbmMaterial.materialMode = TriangleMaterialMode.MULTI_PASS;\n\n\t\t\t\tmesh = new Mesh(geometry, bmMaterial);\n\n\t\t\t\tif (this._objects[objIndex].name) {\n\t\t\t\t\t// this is a full independent object ('o' tag in OBJ file)\n\t\t\t\t\tmesh.name = this._objects[objIndex].name;\n\n\t\t\t\t} else if (groups[g].name) {\n\n\t\t\t\t\t// this is a group so the sub groups contain the actual mesh object names ('g' tag in OBJ file)\n\t\t\t\t\tmesh.name = groups[g].name;\n\n\t\t\t\t} else {\n\t\t\t\t\t// No name stored. Use empty string which will force it\n\t\t\t\t\t// to be overridden by finalizeAsset() to type default.\n\t\t\t\t\tmesh.name = \"\";\n\t\t\t\t}\n\n\t\t\t\tthis._meshes.push(mesh);\n\n\t\t\t\tif (groups[g].materialID != \"\")\n\t\t\t\t\tbmMaterial.name = groups[g].materialID + \"~\" + mesh.name; else\n\t\t\t\t\tbmMaterial.name = this._lastMtlID + \"~\" + mesh.name;\n\n\t\t\t\tif (mesh.subMeshes.length > 1) {\n\t\t\t\t\tfor (sm = 1; sm < mesh.subMeshes.length; ++sm)\n\t\t\t\t\t\tmesh.subMeshes[sm].material = bmMaterial;\n\t\t\t\t}\n\n\t\t\t\t//add to the content property\n\t\t\t\t(<DisplayObjectContainer> this._pContent).addChild(mesh);\n\n\t\t\t\tthis._pFinalizeAsset(<IAsset> mesh);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Translates an obj's material group to a subgeometry.\n\t * @param materialGroup The material group data to convert.\n\t * @param geometry The Geometry to contain the converted SubGeometry.\n\t */\n\tprivate translateMaterialGroup(materialGroup:MaterialGroup, geometry:Geometry)\n\t{\n\t\tvar faces:Array<FaceData> = materialGroup.faces;\n\t\tvar face:FaceData;\n\t\tvar numFaces:number = faces.length;\n\t\tvar numVerts:number;\n\t\tvar sub:TriangleSubGeometry;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\t\tvar normals:Array<number> = new Array<number>();\n\t\tvar indices:Array<number> /*uint*/ = new Array<number>();\n\n\t\tthis._realIndices = [];\n\t\tthis._vertexIndex = 0;\n\n\t\tvar j:number;\n\t\tfor (var i:number = 0; i < numFaces; ++i) {\n\n\t\t\tface = faces[i];\n\t\t\tnumVerts = face.indexIds.length - 1;\n\n\t\t\tfor (j = 1; j < numVerts; ++j) {\n\n\t\t\t\tthis.translateVertexData(face, j, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, 0, vertices, uvs, indices, normals);\n\t\t\t\tthis.translateVertexData(face, j + 1, vertices, uvs, indices, normals);\n\t\t\t}\n\t\t}\n\t\tif (vertices.length > 0) {\n\t\t\tsub = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = normals.length? false : true;\n\t\t\tsub.updateIndices(indices);\n\t\t\tsub.updatePositions(vertices);\n\t\t\tsub.updateVertexNormals(normals);\n\t\t\tsub.updateUVs(uvs);\n\n\t\t\tgeometry.addSubGeometry(sub);\n\t\t}\n\t}\n\n\tprivate translateVertexData(face:FaceData, vertexIndex:number, vertices:Array<number>, uvs:Array<number>, indices:Array<number> /*uint*/, normals:Array<number>)\n\t{\n\t\tvar index:number;\n\t\tvar vertex:Vertex;\n\t\tvar vertexNormal:Vertex;\n\t\tvar uv:UV;\n\n\t\tif (!this._realIndices[face.indexIds[vertexIndex]]) {\n\n\t\t\tindex = this._vertexIndex;\n\t\t\tthis._realIndices[face.indexIds[vertexIndex]] = ++this._vertexIndex;\n\t\t\tvertex = this._vertices[face.vertexIndices[vertexIndex] - 1];\n\t\t\tvertices.push(vertex.x*this._scale, vertex.y*this._scale, vertex.z*this._scale);\n\n\t\t\tif (face.normalIndices.length > 0) {\n\t\t\t\tvertexNormal = this._vertexNormals[face.normalIndices[vertexIndex] - 1];\n\t\t\t\tnormals.push(vertexNormal.x, vertexNormal.y, vertexNormal.z);\n\t\t\t}\n\n\t\t\tif (face.uvIndices.length > 0) {\n\n\t\t\t\ttry {\n\t\t\t\t\tuv = this._uvs[face.uvIndices[vertexIndex] - 1];\n\t\t\t\t\tuvs.push(uv.u, uv.v);\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tswitch (vertexIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tuvs.push(0, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tuvs.push(.5, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tuvs.push(1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tindex = this._realIndices[face.indexIds[vertexIndex]] - 1;\n\t\t}\n\n\t\tindices.push(index);\n\t}\n\n\t/**\n\t * Creates a new object group.\n\t * @param trunk The data block containing the object tag and its parameters\n\t */\n\tprivate createObject(trunk)\n\t{\n\t\tthis._currentGroup = null;\n\t\tthis._currentMaterialGroup = null;\n\t\tthis._objects.push(this._currentObject = new ObjectGroup());\n\n\t\tif (trunk)\n\t\t\tthis._currentObject.name = trunk[1];\n\t}\n\n\t/**\n\t * Creates a new group.\n\t * @param trunk The data block containing the group tag and its parameters\n\t */\n\tprivate createGroup(trunk)\n\t{\n\t\tif (!this._currentObject)\n\t\t\tthis.createObject(null);\n\t\tthis._currentGroup = new Group();\n\n\t\tthis._currentGroup.materialID = this._activeMaterialID;\n\n\t\tif (trunk)\n\t\t\tthis._currentGroup.name = trunk[1];\n\t\tthis._currentObject.groups.push(this._currentGroup);\n\n\t\tthis.createMaterialGroup(null);\n\t}\n\n\t/**\n\t * Creates a new material group.\n\t * @param trunk The data block containing the material tag and its parameters\n\t */\n\tprivate createMaterialGroup(trunk)\n\t{\n\t\tthis._currentMaterialGroup = new MaterialGroup();\n\t\tif (trunk)\n\t\t\tthis._currentMaterialGroup.url = trunk[1];\n\t\tthis._currentGroup.materialGroups.push(this._currentMaterialGroup);\n\t}\n\n\t/**\n\t * Reads the next vertex coordinates.\n\t * @param trunk The data block containing the vertex tag and its parameters\n\t */\n\tprivate parseVertex(trunk)\n\t{\n\t\t//for the very rare cases of other delimiters/charcodes seen in some obj files\n\n\t\tvar v1:number, v2:number , v3:number;\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\n\t\t\tv1 = <number> nTrunk[0];\n\t\t\tv2 = <number> nTrunk[1];\n\t\t\tv3 = <number> -nTrunk[2];\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\n\t\t} else {\n\t\t\tv1 = <number> parseFloat(trunk[1]);\n\t\t\tv2 = <number> parseFloat(trunk[2]);\n\t\t\tv3 = <number> -parseFloat(trunk[3]);\n\n\t\t\tthis._vertices.push(new Vertex(v1, v2, v3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next uv coordinates.\n\t * @param trunk The data block containing the uv tag and its parameters\n\t */\n\tprivate parseUV(trunk)\n\t{\n\t\tif (trunk.length > 3) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._uvs.push(new UV(nTrunk[0], 1 - nTrunk[1]));\n\n\t\t} else {\n\t\t\tthis._uvs.push(new UV(parseFloat(trunk[1]), 1 - parseFloat(trunk[2])));\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the next vertex normal coordinates.\n\t * @param trunk The data block containing the vertex normal tag and its parameters\n\t */\n\tprivate parseVertexNormal(trunk)\n\t{\n\t\tif (trunk.length > 4) {\n\t\t\tvar nTrunk = [];\n\t\t\tvar val:number;\n\t\t\tfor (var i:number = 1; i < trunk.length; ++i) {\n\t\t\t\tval = parseFloat(trunk[i]);\n\t\t\t\tif (!isNaN(val))\n\t\t\t\t\tnTrunk.push(val);\n\t\t\t}\n\t\t\tthis._vertexNormals.push(new Vertex(nTrunk[0], nTrunk[1], -nTrunk[2]));\n\n\t\t} else {\n\t\t\tthis._vertexNormals.push(new Vertex(parseFloat(trunk[1]), parseFloat(trunk[2]), -parseFloat(trunk[3])));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the next face's indices.\n\t * @param trunk The data block containing the face tag and its parameters\n\t */\n\tprivate parseFace(trunk)\n\t{\n\t\tvar len:number = trunk.length;\n\t\tvar face:FaceData = new FaceData();\n\n\t\tif (!this._currentGroup) {\n\t\t\tthis.createGroup(null);\n\t\t}\n\n\t\tvar indices;\n\t\tfor (var i:number = 1; i < len; ++i) {\n\n\t\t\tif (trunk[i] == \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices = trunk[i].split(\"/\");\n\t\t\tface.vertexIndices.push(this.parseIndex(parseInt(indices[0]), this._vertices.length));\n\n\t\t\tif (indices[1] && String(indices[1]).length > 0)\n\t\t\t\tface.uvIndices.push(this.parseIndex(parseInt(indices[1]), this._uvs.length));\n\n\t\t\tif (indices[2] && String(indices[2]).length > 0)\n\t\t\t\tface.normalIndices.push(this.parseIndex(parseInt(indices[2]), this._vertexNormals.length));\n\n\t\t\tface.indexIds.push(trunk[i]);\n\t\t}\n\n\t\tthis._currentMaterialGroup.faces.push(face);\n\t}\n\n\t/**\n\t * This is a hack around negative face coords\n\t */\n\tprivate parseIndex(index:number, length:number):number\n\t{\n\t\tif (index < 0)\n\t\t\treturn index + length + 1; else\n\t\t\treturn index;\n\t}\n\n\tprivate parseMtl(data:string)\n\t{\n\t\tvar materialDefinitions = data.split('newmtl');\n\t\tvar lines;\n\t\tvar trunk;\n\t\tvar j:number;\n\n\t\tvar basicSpecularMethod:SpecularBasicMethod;\n\t\tvar useSpecular:boolean;\n\t\tvar useColor:boolean;\n\t\tvar diffuseColor:number;\n\t\tvar color:number;\n\t\tvar specularColor:number;\n\t\tvar specular:number;\n\t\tvar alpha:number;\n\t\tvar mapkd:string;\n\n\t\tfor (var i:number = 0; i < materialDefinitions.length; ++i) {\n\n\n\t\t\tlines = (materialDefinitions[i].split('\\r')).join(\"\").split('\\n');\n\t\t\t//lines = (materialDefinitions[i].split('\\r') as Array).join(\"\").split('\\n');\n\n\t\t\tif (lines.length == 1)\n\t\t\t\tlines = materialDefinitions[i].split(String.fromCharCode(13));\n\n\t\t\tdiffuseColor = color = specularColor = 0xFFFFFF;\n\t\t\tspecular = 0;\n\t\t\tuseSpecular = false;\n\t\t\tuseColor = false;\n\t\t\talpha = 1;\n\t\t\tmapkd = \"\";\n\n\t\t\tfor (j = 0; j < lines.length; ++j) {\n\n\t\t\t\tlines[j] = lines[j].replace(/\\s+$/, \"\");\n\n\t\t\t\tif (lines[j].substring(0, 1) != \"#\" && (j == 0 || lines[j] != \"\")) {\n\t\t\t\t\ttrunk = lines[j].split(\" \");\n\n\t\t\t\t\tif (String(trunk[0]).charCodeAt(0) == 9 || String(trunk[0]).charCodeAt(0) == 32)\n\t\t\t\t\t\ttrunk[0] = trunk[0].substring(1, trunk[0].length);\n\n\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\tthis._lastMtlID = trunk.join(\"\");\n\t\t\t\t\t\tthis._lastMtlID = (this._lastMtlID == \"\")? \"def000\" : this._lastMtlID;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch (trunk[0]) {\n\n\t\t\t\t\t\t\tcase \"Ka\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3])))\n\t\t\t\t\t\t\t\t\tcolor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ks\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tspecularColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseSpecular = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Ns\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\tspecular = Number(trunk[1])*0.001;\n\t\t\t\t\t\t\t\tif (specular == 0)\n\t\t\t\t\t\t\t\t\tuseSpecular = false;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"Kd\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])) && trunk[2] && !isNaN(Number(trunk[2])) && trunk[3] && !isNaN(Number(trunk[3]))) {\n\t\t\t\t\t\t\t\t\tdiffuseColor = trunk[1]*255 << 16 | trunk[2]*255 << 8 | trunk[3]*255;\n\t\t\t\t\t\t\t\t\tuseColor = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tcase \"d\":\n\t\t\t\t\t\t\t\tif (trunk[1] && !isNaN(Number(trunk[1])))\n\t\t\t\t\t\t\t\t\talpha = Number(trunk[1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"map_Kd\":\n\t\t\t\t\t\t\t\tmapkd = this.parseMapKdString(trunk);\n\t\t\t\t\t\t\t\tmapkd = mapkd.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mapkd != \"\") {\n\n\t\t\t\tif (useSpecular) {\n\n\t\t\t\t\tbasicSpecularMethod = new SpecularBasicMethod();\n\t\t\t\t\tbasicSpecularMethod.specularColor = specularColor;\n\t\t\t\t\tbasicSpecularMethod.specular = specular;\n\n\t\t\t\t\tvar specularData:SpecularData = new SpecularData();\n\t\t\t\t\tspecularData.alpha = alpha;\n\t\t\t\t\tspecularData.basicSpecularMethod = basicSpecularMethod;\n\t\t\t\t\tspecularData.materialID = this._lastMtlID;\n\n\t\t\t\t\tif (!this._materialSpecularData)\n\t\t\t\t\t\tthis._materialSpecularData = new Array<SpecularData>();\n\n\t\t\t\t\tthis._materialSpecularData.push(specularData);\n\n\t\t\t\t}\n\n\t\t\t\tthis._pAddDependency(this._lastMtlID, new URLRequest(mapkd));\n\n\t\t\t} else if (useColor && !isNaN(color)) {\n\n\t\t\t\tvar lm:LoadedMaterial = new LoadedMaterial();\n\t\t\t\tlm.materialID = this._lastMtlID;\n\n\t\t\t\tif (alpha == 0)\n\t\t\t\t\tconsole.log(\"Warning: an alpha value of 0 was found in mtl color tag (Tr or d) ref:\" + this._lastMtlID + \", mesh(es) using it will be invisible!\");\n\n\t\t\t\tvar cm:TriangleMethodMaterial;\n\n\t\t\t\tif (this.materialMode < 2) {\n\t\t\t\t\tcm = new TriangleMethodMaterial(color);\n\n\t\t\t\t\tvar colorMat:TriangleMethodMaterial = <TriangleMethodMaterial> cm;\n\n\t\t\t\t\tcolorMat.alpha = alpha;\n\t\t\t\t\tcolorMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMat.specular = specular;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tcm = new TriangleMethodMaterial(color);\n\t\t\t\t\tcm.materialMode = TriangleMaterialMode.MULTI_PASS;\n\n\t\t\t\t\tvar colorMultiMat:TriangleMethodMaterial = <TriangleMethodMaterial> cm;\n\n\n\t\t\t\t\tcolorMultiMat.diffuseColor = diffuseColor;\n\t\t\t\t\tcolorMultiMat.repeat = true;\n\n\t\t\t\t\tif (useSpecular) {\n\t\t\t\t\t\tcolorMultiMat.specularColor = specularColor;\n\t\t\t\t\t\tcolorMultiMat.specular = specular;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlm.cm = cm;\n\n\t\t\t\tthis._materialLoaded.push(lm);\n\n\t\t\t\tif (this._meshes.length > 0)\n\t\t\t\t\tthis.applyMaterial(lm);\n\n\t\t\t}\n\t\t}\n\n\t\tthis._mtlLibLoaded = true;\n\t}\n\n\tprivate parseMapKdString(trunk):string\n\t{\n\t\tvar url:string = \"\";\n\t\tvar i:number;\n\t\tvar breakflag:boolean;\n\n\t\tfor (i = 1; i < trunk.length;) {\n\t\t\tswitch (trunk[i]) {\n\t\t\t\tcase \"-blendu\":\n\t\t\t\tcase \"-blendv\":\n\t\t\t\tcase \"-cc\":\n\t\t\t\tcase \"-clamp\":\n\t\t\t\tcase \"-texres\":\n\t\t\t\t\ti += 2; //Skip ahead 1 attribute\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-mm\":\n\t\t\t\t\ti += 3; //Skip ahead 2 attributes\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-o\":\n\t\t\t\tcase \"-s\":\n\t\t\t\tcase \"-t\":\n\t\t\t\t\ti += 4; //Skip ahead 3 attributes\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tbreakflag = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (breakflag)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//Reconstruct URL/filename\n\t\tfor (i; i < trunk.length; i++) {\n\t\t\turl += trunk[i];\n\t\t\turl += \" \";\n\t\t}\n\n\t\t//Remove the extraneous space and/or newline from the right side\n\t\turl = url.replace(/\\s+$/, \"\");\n\n\t\treturn url;\n\t}\n\n\tprivate loadMtl(mtlurl:string)\n\t{\n\t\t// Add raw-data dependency to queue and load dependencies now,\n\t\t// which will pause the parsing in the meantime.\n\t\tthis._pAddDependency('mtl', new URLRequest(mtlurl), true);\n\t\tthis._pPauseAndRetrieveDependencies();//\n\t}\n\n\tprivate applyMaterial(lm:LoadedMaterial)\n\t{\n\t\tvar decomposeID;\n\t\tvar mesh:Mesh;\n\t\tvar tm:TriangleMethodMaterial;\n\t\tvar j:number;\n\t\tvar specularData:SpecularData;\n\n\t\tfor (var i:number = 0; i < this._meshes.length; ++i) {\n\t\t\tmesh = this._meshes[i];\n\t\t\tdecomposeID = mesh.material.name.split(\"~\");\n\n\t\t\tif (decomposeID[0] == lm.materialID) {\n\n\t\t\t\tif (lm.cm) {\n\t\t\t\t\tif (mesh.material)\n\t\t\t\t\t\tmesh.material = null;\n\t\t\t\t\tmesh.material = lm.cm;\n\n\t\t\t\t} else if (lm.texture) {\n\t\t\t\t\tif (this.materialMode < 2) { // if materialMode is 0 or 1, we create a SinglePass\n\t\t\t\t\t\ttm = <TriangleMethodMaterial > mesh.material;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.alpha = lm.alpha;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\t\t\t\t\t\t\t\t\ttm.alpha = specularData.alpha;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //if materialMode==2 this is a MultiPassTexture\n\t\t\t\t\t\ttm = <TriangleMethodMaterial> mesh.material;\n\t\t\t\t\t\ttm.materialMode = TriangleMaterialMode.MULTI_PASS;\n\n\t\t\t\t\t\ttm.texture = lm.texture;\n\t\t\t\t\t\ttm.color = lm.color;\n\t\t\t\t\t\ttm.repeat = true;\n\n\t\t\t\t\t\tif (lm.specularMethod) {\n\t\t\t\t\t\t\t// By setting the specularMethod property to null before assigning\n\t\t\t\t\t\t\t// the actual method instance, we avoid having the properties of\n\t\t\t\t\t\t\t// the new method being overridden with the settings from the old\n\t\t\t\t\t\t\t// one, which is default behavior of the setter.\n\t\t\t\t\t\t\ttm.specularMethod = null;\n\t\t\t\t\t\t\ttm.specularMethod = lm.specularMethod;\n\t\t\t\t\t\t} else if (this._materialSpecularData) {\n\t\t\t\t\t\t\tfor (j = 0; j < this._materialSpecularData.length; ++j) {\n\t\t\t\t\t\t\t\tspecularData = this._materialSpecularData[j];\n\n\t\t\t\t\t\t\t\tif (specularData.materialID == lm.materialID) {\n\t\t\t\t\t\t\t\t\ttm.specularMethod = null; // Prevent property overwrite (see above)\n\t\t\t\t\t\t\t\t\ttm.specularMethod = specularData.basicSpecularMethod;\n\t\t\t\t\t\t\t\t\ttm.color = specularData.color;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmesh.material.name = decomposeID[1]? decomposeID[1] : decomposeID[0];\n\t\t\t\tthis._meshes.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t}\n\t\t}\n\n\t\tif (lm.cm || tm)\n\t\t\tthis._pFinalizeAsset(lm.cm || tm);\n\t}\n\n\tprivate applyMaterials()\n\t{\n\t\tif (this._materialLoaded.length == 0)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._materialLoaded.length; ++i)\n\t\t\tthis.applyMaterial(this._materialLoaded[i]);\n\t}\n}\n\nexport = OBJParser;\n\nclass ObjectGroup\n{\n\tpublic name:string;\n\tpublic groups:Group[] = new Array<Group>();\n}\n\nclass Group\n{\n\tpublic name:string;\n\tpublic materialID:string;\n\tpublic materialGroups:MaterialGroup[] = new Array<MaterialGroup>();\n}\n\nclass MaterialGroup\n{\n\tpublic url:string;\n\tpublic faces:FaceData[] = new Array<FaceData>();\n}\n\nclass SpecularData\n{\n\tpublic materialID:string;\n\tpublic basicSpecularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass LoadedMaterial\n{\n\tpublic materialID:string;\n\tpublic texture:Texture2DBase;\n\tpublic cm:MaterialBase;\n\tpublic specularMethod:SpecularBasicMethod;\n\tpublic color:number = 0xFFFFFF;\n\tpublic alpha:number = 1;\n}\n\nclass FaceData\n{\n\tpublic vertexIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic uvIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic normalIndices:Array<number> /*uint*/ = new Array<number>();\n\tpublic indexIds:string[] = new Array<string>(); // used for real index lookups\n}\n\n/**\n* Texture coordinates value object.\n*/\nclass UV\n{\n\tprivate _u:number;\n\tprivate _v:number;\n\n\t/**\n\t * Creates a new <code>UV</code> object.\n\t *\n\t * @param    u        [optional]    The horizontal coordinate of the texture value. Defaults to 0.\n\t * @param    v        [optional]    The vertical coordinate of the texture value. Defaults to 0.\n\t */\n\tconstructor(u:number = 0, v:number = 0)\n\t{\n\t\tthis._u = u;\n\t\tthis._v = v;\n\t}\n\n\t/**\n\t * Defines the vertical coordinate of the texture value.\n\t */\n\tpublic get v():number\n\t{\n\t\treturn this._v;\n\t}\n\n\tpublic set v(value:number)\n\t{\n\t\tthis._v = value;\n\t}\n\n\t/**\n\t * Defines the horizontal coordinate of the texture value.\n\t */\n\tpublic get u():number\n\t{\n\t\treturn this._u;\n\t}\n\n\tpublic set u(value:number)\n\t{\n\t\tthis._u = value;\n\t}\n\n\t/**\n\t * returns a new UV value Object\n\t */\n\tpublic clone():UV\n\t{\n\t\treturn new UV(this._u, this._v);\n\t}\n\n\t/**\n\t * returns the value object as a string for trace/debug purpose\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._u + \",\" + this._v;\n\t}\n}\n\nclass Vertex\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _z:number;\n\tprivate _index:number;\n\n\t/**\n\t * Creates a new <code>Vertex</code> value object.\n\t *\n\t * @param    x            [optional]    The x value. Defaults to 0.\n\t * @param    y            [optional]    The y value. Defaults to 0.\n\t * @param    z            [optional]    The z value. Defaults to 0.\n\t * @param    index        [optional]    The index value. Defaults is NaN.\n\t */\n\tconstructor(x:number = 0, y:number = 0, z:number = 0, index:number = 0)\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * To define/store the index of value object\n\t * @param    ind        The index\n\t */\n\tpublic set index(ind:number)\n\t{\n\t\tthis._index = ind;\n\t}\n\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * To define/store the x value of the value object\n\t * @param    value        The x value\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tthis._x = value;\n\t}\n\n\t/**\n\t * To define/store the y value of the value object\n\t * @param    value        The y value\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tthis._y = value;\n\t}\n\n\t/**\n\t * To define/store the z value of the value object\n\t * @param    value        The z value\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(value:number)\n\t{\n\t\tthis._z = value;\n\t}\n\n\t/**\n\t * returns a new Vertex value Object\n\t */\n\tpublic clone():Vertex\n\t{\n\t\treturn new Vertex(this._x, this._y, this._z);\n\t}\n}","import AssetLoader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\n\nimport AWDParser\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/AWDParser\");\nimport Max3DSParser\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/Max3DSParser\");\nimport MD2Parser\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/MD2Parser\");\nimport OBJParser\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/OBJParser\");\n\n/**\n *\n */\nclass Parsers\n{\n\t/**\n\t * A list of all parsers that come bundled with Away3D. Use this to quickly\n\t * enable support for all bundled parsers to the file format auto-detection\n\t * feature, using any of the enableParsers() methods on loaders, e.g.:\n\t *\n\t * <code>AssetLibrary.enableParsers(Parsers.ALL_BUNDLED);</code>\n\t *\n\t * Beware however that this requires all parser classes to be included in the\n\t * SWF file, which will add 50-100 kb to the file. When only a limited set of\n\t * file formats are used, SWF file size can be saved by adding the parsers\n\t * individually using AssetLibrary.enableParser()\n\t *\n\t * A third way is to specify a parser for each loaded file, thereby bypassing\n\t * the auto-detection mechanisms altogether, while at the same time allowing\n\t * any properties that are unique to that parser to be set for that load.\n\t *\n\t * The bundled parsers are:\n\t *\n\t * <ul>\n\t * <li>AC3D (.ac)</li>\n\t * <li>Away Data version 1 ASCII and version 2 binary (.awd). AWD1 BSP unsupported</li>\n\t * <li>3DMax (.3ds)</li>\n\t * <li>DXF (.dxf)</li>\n\t * <li>Quake 2 MD2 models (.md2)</li>\n\t * <li>Doom 3 MD5 animation clips (.md5anim)</li>\n\t * <li>Doom 3 MD5 meshes (.md5mesh)</li>\n\t * <li>Wavefront OBJ (.obj)</li>\n\t * <li>Collada (.dae)</li>\n\t * <li>Images (.jpg, .png)</li>\n\t * </ul>\n\t *\n\t * @see away.library.AssetLibrary.enableParser\n\t */\n\tpublic static ALL_BUNDLED:Array<Object> = Array<Object>(AWDParser, Max3DSParser, MD2Parser, OBJParser);\n\n\t/**\n\t * Short-hand function to enable all bundled parsers for auto-detection. In practice,\n\t * this is the same as invoking enableParsers(Parsers.ALL_BUNDLED) on any of the\n\t * loader classes SingleFileLoader, AssetLoader, AssetLibrary or Loader3D.\n\t *\n\t * See notes about file size in the documentation for the ALL_BUNDLED constant.\n\t *\n\t * @see away.parsers.Parsers.ALL_BUNDLED\n\t */\n\tpublic static enableAllBundled():void\n\t{\n\t\tAssetLoader.enableParsers(Parsers.ALL_BUNDLED);\n\t}\n}\n\nexport = Parsers;","import ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\n/**\n *\n */\nclass AWDBlock\n{\n\tpublic id:number;\n\tpublic name:string;\n\tpublic data:any;\n\tpublic len:any;\n\tpublic geoID:number;\n\tpublic extras:Object;\n\tpublic bytes:ByteArray;\n\tpublic errorMessages:Array<string>;\n\tpublic uvsForVertexAnimation:Array<Array<number>>;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic dispose()\n\t{\n\n\t\tthis.id = null;\n\t\tthis.bytes = null;\n\t\tthis.errorMessages = null;\n\t\tthis.uvsForVertexAnimation = null;\n\n\t}\n\n\tpublic addError(errorMsg:string):void\n\t{\n\t\tif (!this.errorMessages)\n\t\t\tthis.errorMessages = new Array<string>();\n\n\t\tthis.errorMessages.push(errorMsg);\n\t}\n}\n\nexport = AWDBlock;","class AWDProperties\n{\n\tpublic set(key:number, value:any):void\n\t{\n\t\tthis[ key.toString() ] = value;\n\t}\n\n\tpublic get(key:number, fallback:any):any\n\t{\n\t\tif (this.hasOwnProperty(key.toString())) {\n\t\t\treturn this[key.toString()];\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n}\n\nexport = AWDProperties;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * \n */\nclass BaseFrameData\n{\n\t/**\n\t *\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic orientation:Quaternion;\n}\n\nexport = BaseFrameData;","/**\n *\n */\nclass BitFlags\n{\n\tpublic static FLAG1:number = 1;\n\tpublic static FLAG2:number = 2;\n\tpublic static FLAG3:number = 4;\n\tpublic static FLAG4:number = 8;\n\tpublic static FLAG5:number = 16;\n\tpublic static FLAG6:number = 32;\n\tpublic static FLAG7:number = 64;\n\tpublic static FLAG8:number = 128;\n\tpublic static FLAG9:number = 256;\n\tpublic static FLAG10:number = 512;\n\tpublic static FLAG11:number = 1024;\n\tpublic static FLAG12:number = 2048;\n\tpublic static FLAG13:number = 4096;\n\tpublic static FLAG14:number = 8192;\n\tpublic static FLAG15:number = 16384;\n\tpublic static FLAG16:number = 32768;\n\n\tpublic static test(flags:number, testFlag:number):boolean\n\t{\n\t\treturn (flags & testFlag) == testFlag;\n\t}\n}\n\nexport = BitFlags;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * \n */\nclass BoundsData\n{\n\t/**\n\t *\n\t */\n\tpublic min:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic max:Vector3D;\n}\n\nexport = BoundsData;","/**\n *\n */\nclass FaceVO\n{\n\tpublic a:number /*int*/;\n\tpublic b:number /*int*/;\n\tpublic c:number /*int*/;\n\tpublic smoothGroup:number /*int*/;\n}\n\nexport = FaceVO;","/**\n *\n */\nclass FrameData\n{\n\t/**\n\t *\n\t */\n\tpublic index:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic components:Array<number>;\n}\n\nexport = FrameData;","/**\n *\n */\nclass HierarchyData\n{\n\t/**\n\t *\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic parentIndex:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic flags:number /*int*/;\n\n\t/**\n\t *\n\t */\n\tpublic startIndex:number /*int*/;\n}\n\nexport = HierarchyData;","import MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport TextureVO\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/parsers/data/TextureVO\");\n\n/**\n *\n */\nclass MaterialVO\n{\n\tpublic name:string;\n\tpublic ambientColor:number /*int*/;\n\tpublic diffuseColor:number /*int*/;\n\tpublic specularColor:number /*int*/;\n\tpublic twoSided:boolean;\n\tpublic colorMap:TextureVO;\n\tpublic specularMap:TextureVO;\n\tpublic material:MaterialBase;\n}\n\nexport = MaterialVO;","class ObjectVO\n{\n\tpublic name:string;\n\tpublic type:string;\n\tpublic pivotX:number;\n\tpublic pivotY:number;\n\tpublic pivotZ:number;\n\tpublic transform:Array<number>;\n\tpublic verts:Array<number>;\n\tpublic indices:Array<number> /*int*/;\n\tpublic uvs:Array<number>;\n\tpublic materialFaces:Object;\n\tpublic materials:Array<string>;\n\tpublic smoothingGroups:Array<number> /*int*/;\n}\n\nexport = ObjectVO;","import Texture2DBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n *\n */\nclass TextureVO\n{\n\tpublic url:string;\n\tpublic texture:Texture2DBase;\n}\n\nexport = TextureVO;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass VertexVO\n{\n\tpublic x:number;\n\tpublic y:number;\n\tpublic z:number;\n\tpublic u:number;\n\tpublic v:number;\n\tpublic normal:Vector3D;\n\tpublic tangent:Vector3D;\n}\n\nexport = VertexVO;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport PickingColliderBase\t\t\t\t= require(\"awayjs-renderergl/lib/pick/PickingColliderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider extends PickingColliderBase implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indexData:Array<number> = renderable.getIndexData().data;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = (<MaterialBase> renderable.materialOwner.material).bothSides;\n\n\t\tvar positionData:Array<number> = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar uvData:Array<number> = renderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = renderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = renderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\t\tvar numIndices:number = indexData.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = positionOffset + indexData[ index ]*positionStride;\n\t\t\ti1 = positionOffset + indexData[ (index + 1) ]*positionStride;\n\t\t\ti2 = positionOffset + indexData[ (index + 2) ]*positionStride;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positionData[ i0 ];\n\t\t\tp0y = positionData[ (i0 + 1) ];\n\t\t\tp0z = positionData[ (i0 + 2) ];\n\t\t\tp1x = positionData[ i1 ];\n\t\t\tp1y = positionData[ (i1 + 1) ];\n\t\t\tp1z = positionData[ (i1 + 2) ];\n\t\t\tp2x = positionData[ i2 ];\n\t\t\tp2y = positionData[ (i2 + 1) ];\n\t\t\tp2z = positionData[ (i2 + 2) ];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*this.rayDirection.x + ny* +this.rayDirection.y + nz*this.rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*this.rayPosition.x + ny*this.rayPosition.y + nz*this.rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = this.rayPosition.x + t*this.rayDirection.x;\n\t\t\t\tcy = this.rayPosition.y + t*this.rayDirection.y;\n\t\t\t\tcz = this.rayPosition.z + t*this.rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/( Q1Q1*Q2Q2 - Q1Q2*Q1Q2 );\n\t\t\t\tv = coeff*( Q2Q2*RQ1 - Q1Q2*RQ2 );\n\t\t\t\tw = coeff*( -Q1Q2*RQ1 + Q1Q1*RQ2 );\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._pGetCollisionUV(indexData, uvData, index, v, w, u, uvOffset, uvStride);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;","import Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RenderablePool\t\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport BillboardRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * An abstract base class for all picking collider classes. It should not be instantiated directly.\n *\n * @class away.pick.PickingColliderBase\n */\nclass PickingColliderBase\n{\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _subMeshRenderablePool:RenderablePool;\n\n\tpublic rayPosition:Vector3D;\n\tpublic rayDirection:Vector3D;\n\n\tconstructor()\n\t{\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(BillboardRenderable);\n\t\tthis._subMeshRenderablePool = RenderablePool.getPool(TriangleSubMeshRenderable);\n\t}\n\n\tpublic _pPetCollisionNormal(indexData:Array<number> /*uint*/, vertexData:Array<number>, triangleIndex:number):Vector3D // PROTECTED\n\t{\n\t\tvar normal:Vector3D = new Vector3D();\n\t\tvar i0:number = indexData[ triangleIndex ]*3;\n\t\tvar i1:number = indexData[ triangleIndex + 1 ]*3;\n\t\tvar i2:number = indexData[ triangleIndex + 2 ]*3;\n\t\tvar p0:Vector3D = new Vector3D(vertexData[ i0 ], vertexData[ i0 + 1 ], vertexData[ i0 + 2 ]);\n\t\tvar p1:Vector3D = new Vector3D(vertexData[ i1 ], vertexData[ i1 + 1 ], vertexData[ i1 + 2 ]);\n\t\tvar p2:Vector3D = new Vector3D(vertexData[ i2 ], vertexData[ i2 + 1 ], vertexData[ i2 + 2 ]);\n\t\tvar side0:Vector3D = p1.subtract(p0);\n\t\tvar side1:Vector3D = p2.subtract(p0);\n\t\tnormal = side0.crossProduct(side1);\n\t\tnormal.normalize();\n\t\treturn normal;\n\t}\n\n\tpublic _pGetCollisionUV(indexData:Array<number> /*uint*/, uvData:Array<number>, triangleIndex:number, v:number, w:number, u:number, uvOffset:number, uvStride:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indexData[ triangleIndex ]*uvStride + uvOffset;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 1 ]*uvStride + uvOffset;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 2 ]*uvStride + uvOffset;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setLocalRay(localPosition:Vector3D, localDirection:Vector3D)\n\t{\n\t\tthis.rayPosition = localPosition;\n\t\tthis.rayDirection = localDirection;\n\t}\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.materialOwner = null;\n\n\t\tif (this._pTestRenderableCollision(<RenderableBase> this._billboardRenderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\tpickingCollisionVO.materialOwner = billboard;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\n\t *\n\t * @param mesh The mesh instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testMeshCollision(mesh:Mesh, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.materialOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = mesh.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\n\t\t\tif (this._pTestRenderableCollision(<RenderableBase> this._subMeshRenderablePool.getItem(subMesh), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tpickingCollisionVO.materialOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn pickingCollisionVO.materialOwner != null;\n\t}\n}\n\nexport = PickingColliderBase;","import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextStageGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/DefaultRenderer\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.entities.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:RenderableBase;\n\tprivate _blendedRenderableHead:RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextStageGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapData:BitmapData;\n\tprivate _viewportData:Array<number>;\n\tprivate _boundOffsetScale:Array<number>;\n\tprivate _id:Array<number>;\n\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _subGeometryIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Array<number>(4);\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextStageGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapData)\n\t\t\tthis._bitmapData = new BitmapData(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapData(this._bitmapData);\n\t\tthis._hitColor = this._bitmapData.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.subGeometryIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderable) {\n\t\t\t// it's possible that the renderable was already removed from the scene\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderable = renderable.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.materialOwner.material).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\t\t\tthis._context.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\t\tthis._context.drawTriangles(this._context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\n\t\t\trenderable = renderable.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.bounds.aabb;\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\tthis._context.activateBuffer(0, this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA), this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._context.drawTriangles(this._context.getIndexBuffer(this._hitRenderable.getIndexData()), 0, this._hitRenderable.numTriangles);\n\n\t\tthis._context.drawToBitmapData(this._bitmapData);\n\n\t\tcol = this._bitmapData.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar indices:Array<number> = this._hitRenderable.getIndexData().data;\n\n\t\tvar positions:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\n\t\tvar uvs:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\n\t\tvar normals:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).data;\n\t\tvar normalStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).dataPerVertex;\n\t\tvar normalOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = positionOffset + indices[i]*positionStride;\n\t\t\tt2 = positionOffset + indices[j]*positionStride;\n\t\t\tt3 = positionOffset + indices[k]*positionStride;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = normalOffset + indices[i]*normalStride;\n\t\t\t\t\tni2 = normalOffset + indices[j]*normalStride;\n\t\t\t\t\tni3 = normalOffset + indices[k]*normalStride;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = uvOffset + indices[i]*uvStride\n\t\t\t\t\tui2 = uvOffset + indices[j]*uvStride\n\t\t\t\t\tui3 = uvOffset + indices[k]*uvStride\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back subGeometryIndex value\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapData.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapData = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tprivate static _materialGeometry:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"billboard\";\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\treturn geometry;\n\t}\n}\n\nexport = BillboardRenderable;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"linesubmesh\";\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\n\t\tif (subGeometry.thickness)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\n\t\tif (subGeometry.startColors)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param materialOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSubMeshRenderable(pool, <LineSubMesh> materialOwner, level, indexOffset);\n\t}\n}\n\nexport = LineSubMeshRenderable;","import ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\n\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\n\n/**\n * @class away.pool.MaterialDataPool\n */\nclass MaterialDataPool\n{\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(material:StageGLMaterialBase):MaterialData\n\t{\n\t\treturn (this._pool[material.id] || (this._pool[material.id] = material._iAddMaterialData(new MaterialData(this, material))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(material:StageGLMaterialBase)\n\t{\n\t\tmaterial._iRemoveMaterialData(this._pool[material.id]);\n\n\t\tthis._pool[material.id] = null;\n\t}\n}\n\nexport = MaterialDataPool;","import IMaterialData\t\t\t\t= require(\"awayjs-display/lib/pool/IMaterialData\");\n\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\n\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderCompilerBase\");\nimport MaterialDataPool\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialDataPool\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassDataPool\");\n\n/**\n *\n * @class away.pool.MaterialData\n */\nclass MaterialData implements IMaterialData\n{\n\tprivate _pool:MaterialDataPool;\n\n\tprivate _materialPassDataPool:MaterialPassDataPool;\n\n\tprivate _passes:Array<MaterialPassData>;\n\n\tpublic material:StageGLMaterialBase;\n\n\tpublic renderOrderId:number;\n\n\tpublic invalidAnimation:boolean = true;\n\n\tconstructor(pool:MaterialDataPool, material:StageGLMaterialBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.material = material;\n\n\t\tthis._materialPassDataPool = new MaterialPassDataPool(material);\n\t}\n\n\tpublic getMaterialPass(materialPass:MaterialPassBase, profile:string):MaterialPassData\n\t{\n\t\tvar materialPassData:MaterialPassData = this._materialPassDataPool.getItem(materialPass);\n\n\t\tif (!materialPassData.shaderObject) {\n\t\t\tmaterialPassData.shaderObject = materialPass.createShaderObject(profile);\n\t\t\tmaterialPassData.invalid = true;\n\t\t}\n\n\t\tif (materialPassData.invalid) {\n\t\t\tmaterialPassData.invalid = false;\n\t\t\tvar compiler:ShaderCompilerBase = materialPassData.shaderObject.createCompiler(this.material, materialPass);\n\t\t\tcompiler.compile();\n\n\t\t\tmaterialPassData.shadedTarget = compiler.shadedTarget;\n\t\t\tmaterialPassData.vertexCode = compiler.vertexCode;\n\t\t\tmaterialPassData.fragmentCode = compiler.fragmentCode;\n\t\t\tmaterialPassData.postAnimationFragmentCode = compiler.postAnimationFragmentCode;\n\t\t\tmaterialPassData.key = \"\";\n\t\t}\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic getMaterialPasses(profile:string):Array<MaterialPassData>\n\t{\n\t\tif (this._passes == null) {\n\t\t\tvar passes:Array<MaterialPassBase> = <Array<MaterialPassBase>> this.material._iScreenPasses;\n\t\t\tvar numPasses:number = passes.length;\n\n\t\t\t//reset the material passes in MaterialData\n\t\t\tthis._passes = new Array<MaterialPassData>(numPasses);\n\n\t\t\t//get the shader object for each screen pass and store\n\t\t\tfor (var i:number = 0; i < numPasses; i++)\n\t\t\t\tthis._passes[i] = this.getMaterialPass(passes[i], profile);\n\t\t}\n\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._materialPassDataPool.disposePool();\n\n\t\tthis._materialPassDataPool = null;\n\n\t\tthis._pool.disposeItem(this.material);\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateMaterial()\n\t{\n\t\tthis._passes = null;\n\n\t\tthis.invalidateAnimation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis.invalidAnimation = true;\n\t}\n}\n\nexport = MaterialData;","import MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * @class away.pool.MaterialPassDataPool\n */\nclass MaterialPassDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _material:StageGLMaterialBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(material:StageGLMaterialBase)\n\t{\n\t\tthis._material = material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(materialPass:MaterialPassBase):MaterialPassData\n\t{\n\t\treturn (this._pool[materialPass.id] || (this._pool[materialPass.id] = this._material._iAddMaterialPassData(materialPass._iAddMaterialPassData(new MaterialPassData(this, this._material, materialPass)))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(materialPass:MaterialPassBase)\n\t{\n\t\tmaterialPass._iRemoveMaterialPassData(this._pool[materialPass.id]);\n\n\t\tdelete this._pool[materialPass.id];\n\t}\n\n\tpublic disposePool()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\t(<MaterialPassData> this._pool[id]).materialPass._iRemoveMaterialPassData(this._pool[id]);\n\n\t\tdelete this._pool;\n\t}\n}\n\nexport = MaterialPassDataPool;","import IMaterialPassData\t\t\t= require(\"awayjs-display/lib/pool/IMaterialPassData\");\n\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\n\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassDataPool\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n *\n * @class away.pool.MaterialPassData\n */\nclass MaterialPassData implements IMaterialPassData\n{\n\tprivate _pool:MaterialPassDataPool;\n\n\tpublic material:StageGLMaterialBase;\n\n\tpublic shaderObject:ShaderObjectBase;\n\n\tpublic materialPass:MaterialPassBase;\n\n\tpublic programData:ProgramData;\n\n\tpublic shadedTarget:string;\n\n\tpublic vertexCode:string;\n\n\tpublic postAnimationFragmentCode:string;\n\n\tpublic fragmentCode:string;\n\n\tpublic animationVertexCode:string = \"\";\n\n\tpublic animationFragmentCode:string = \"\";\n\n\tpublic key:string;\n\n\tpublic invalid:boolean;\n\n\tpublic usesAnimation:boolean;\n\n\tconstructor(pool:MaterialPassDataPool, material:StageGLMaterialBase, materialPass:MaterialPassBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.material = material;\n\t\tthis.materialPass = materialPass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialPass);\n\n\t\tthis.shaderObject.dispose();\n\t\tthis.shaderObject = null;\n\n\t\tthis.programData.dispose();\n\t\tthis.programData = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n}\n\nexport = MaterialPassData;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\n\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryDirty:boolean = true;\n\tprivate _indexData:IndexData;\n\tprivate _indexDataDirty:boolean = true;\n\tprivate _vertexData:Object = new Object();\n\tpublic _pVertexDataDirty:Object = new Object();\n\tprivate _vertexOffset:Object = new Object();\n\n\tprivate _level:number;\n\tprivate _indexOffset:number;\n\tprivate _overflow:RenderableBase;\n\tprivate _numTriangles:number;\n\tprivate _concatenateArrays:boolean;\n\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic get overflow():RenderableBase\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._overflow;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tpublic material:StageGLMaterialBase;\n\n\t/**\n\t *\n\t */\n\tpublic getIndexData():IndexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._indexData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexData(dataType:string):VertexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexOffset(dataType:string):number\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexOffset[dataType];\n\t}\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param materialOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, materialOwner:IMaterialOwner, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\t//reference to level of overflow\n\t\tthis._level = level;\n\n\t\t//reference to the offset on indices (if this is an overflow renderable)\n\t\tthis._indexOffset = indexOffset;\n\n\t\tthis.sourceEntity = sourceEntity;\n\t\tthis.materialOwner = materialOwner;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialOwner);\n\n\t\tthis._indexData.dispose();\n\t\tthis._indexData = null;\n\n\t\tfor (var dataType in this._vertexData) {\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\n\t\t\tthis._vertexData[dataType] = null;\n\t\t}\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\n\t\t//invalidate indices\n\t\tif (this._level == 0)\n\t\t\tthis._indexDataDirty = true;\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\t\tthis._indexDataDirty = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\t\tthis._pVertexDataDirty[dataType] = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @param offset\n\t * @internal\n\t */\n\tpublic _iFillIndexData(indexOffset:number)\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\n\n\t\tthis._numTriangles = this._indexData.data.length/3;\n\n\t\tindexOffset = this._indexData.offset;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.length) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(this._pool, this.materialOwner, indexOffset, this._level + 1);\n\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\tthis._subGeometry = this._pGetSubGeometry();\n\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\n\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\t//dispose\n//\t\t\tif (this._indexData) {\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._indexData = null;\n//\t\t\t}\n\n//\t\t\tfor (var dataType in this._vertexData) {\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._vertexData[dataType] = null;\n//\t\t\t}\n\n\t\tthis._geometryDirty = false;\n\n\t\t//specific vertex data types have to be invalidated in the specific renderable\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateIndexData()\n\t{\n\t\tthis._iFillIndexData(this._indexOffset);\n\n\t\tthis._indexDataDirty = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t * @private\n\t */\n\tprivate _updateVertexData(dataType:string)\n\t{\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\n\n\t\tif (this._subGeometry.concatenateArrays)\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\n\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\n\n\t\tthis._pVertexDataDirty[dataType] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndexData();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\n\n\t\tthis.invalidateVertexData(event.dataType);\n\t}\n}\n\nexport = RenderableBase;","import TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"skybox\";\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePool, skybox:Skybox)\n\t{\n\t\tsuper(pool, skybox, skybox);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\treturn geometry;\n\t}\n}\n\nexport = SkyboxRenderable;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\n\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"trianglesubmesh\";\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar subGeometry:TriangleSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.vertexNormals)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\n\t\tif (subGeometry.vertexTangents)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\tif (subGeometry.secondaryUVs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\n\n\t\tif (subGeometry.jointIndices)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\n\n\t\tif (subGeometry.jointWeights)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\n\n\t\tswitch(subGeometry.jointsPerVertex) {\n\t\t\tcase 1:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn subGeometry;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param materialOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\treturn new TriangleSubMeshRenderable(pool, <TriangleSubMesh> materialOwner, level, indexOffset);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/filters/Filter3DBase\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\n\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/SkyboxRenderable\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/render/DepthRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/render/Filter3DRenderer\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport DepthMapPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/DepthMapPass\");\nimport DistanceMapPass\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/DistanceMapPass\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase implements IRenderer\n{\n\tpublic _pRequireDepthRender:boolean;\n\tprivate _skyboxRenderablePool:RenderablePool;\n\n//\t\tprivate _activeMaterial:MaterialBase;\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:TextureProxyBase;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(forceSoftware:boolean = false, profile:string = \"baseline\", mode = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._skyboxRenderablePool = RenderablePool.getPool(SkyboxRenderable);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(new DepthMapPass());\n\t\tthis._pDistanceRenderer = new DepthRenderer(new DistanceMapPass());\n\n\t\tif (this._pStage == null)\n\t\t\tthis.stage = StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\t// otherwise RTT will interfere with other RTTs\n\t\tif (target) {\n\t\t\tthis.pCollectRenderables(entityCollector);\n\n\t\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\t\t}\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:TextureProxyBase)\n\t{\n\t\tif (!target)\n\t\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar skyBox:SkyboxRenderable = <SkyboxRenderable> this._skyboxRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar material:StageGLMaterialBase = <StageGLMaterialBase> entityCollector.skyBox.material;\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar activePass:MaterialPassData = this.getMaterial(material, this._pStage.profile).getMaterialPass(<MaterialPassBase> material._iScreenPasses[0], this._pStage.profile);\n\n\t\tmaterial._iActivatePass(activePass, this, camera);\n\t\tmaterial._iRenderPass(activePass, skyBox, this._pStage, camera, this._skyboxProjection);\n\t\tmaterial._iDeactivatePass(activePass, this);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, entityCollector:ICollector)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar passes:Array<IMaterialPass>;\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextStageGL = <IContextStageGL> this._pStage.context;\n\t\tvar camera:Camera = entityCollector.camera;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = this.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\t//iterate through each screen pass\n\t\t\tpasses = renderable.material._iScreenPasses;\n\t\t\tlen = renderable.material._iNumScreenPasses();\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\trenderable2 = renderable;\n\n\t\t\t\tactivePass = activeMaterial.getMaterialPass(<MaterialPassBase> passes[i], this._pStage.profile);\n\n\t\t\t\trenderable.material._iActivatePass(activePass, this, camera);\n\n\t\t\t\tdo {\n\t\t\t\t\trenderable.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\n\t\t\t\tactiveMaterial.material._iDeactivatePass(activePass, this);\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextStageGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tsuper.iSetStage(value);\n\n\t\tthis._pDistanceRenderer.iSetStage(value);\n\t\tthis._pDepthRenderer.iSetStage(value);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextStageGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new RenderTexture(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\n\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RendererBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/passes/MaterialPassBase\");\n\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\tprivate _pass:MaterialPassBase;\n\tprivate _renderBlended:boolean;\n\tprivate _disableColor:boolean;\n\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(pass:MaterialPassBase, renderBlended:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pass = pass;\n\n\t\tthis._renderBlended = renderBlended;\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\tthis.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\n\t}\n\n\tprivate drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t{\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextStageGL = this._pStage.context;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = this.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\trenderable2 = renderable;\n\n\t\t\tactivePass = activeMaterial.getMaterialPass(this._pass, this._pStage.profile);\n\n\t\t\t//TODO: generalise this test\n\t\t\tif (activePass.key == \"\")\n\t\t\t\tthis.calcAnimationCode(renderable.material, activePass);\n\n\t\t\trenderable.material._iActivatePass(activePass, this, camera);\n\n\t\t\tdo {\n\t\t\t\t// if completely in front, it will fall in a different cascade\n\t\t\t\t// do not use near and far planes\n\t\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t\t\t\t\trenderable2.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t} else {\n\t\t\t\t\trenderable2.cascaded = true;\n\t\t\t\t}\n\n\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t} while (renderable2 && renderable2.material == renderable.material && !renderable2.cascaded);\n\n\t\t\trenderable.material._iDeactivatePass(activePass, this);\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:TextureProxyBase)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextStageGL = this._pStage.context;\n\t\tvar camera:Camera = entityCollector.camera;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = this.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && renderable.material.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\t\t\t} else {\n\t\t\t\trenderable2 = renderable;\n\n\t\t\t\tactivePass = activeMaterial.getMaterialPass(this._pass, this._pStage.profile);\n\n\t\t\t\t//TODO: generalise this test\n\t\t\t\tif (activePass.key == \"\")\n\t\t\t\t\tthis.calcAnimationCode(renderable.material, activePass);\n\n\t\t\t\trenderable.material._iActivatePass(activePass, this, camera);\n\n\t\t\t\tdo {\n\t\t\t\t\trenderable2.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\n\t\t\t\trenderable.material._iDeactivatePass(activePass, this);\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n}\n\nexport = DepthRenderer;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-stagegl/lib/filters/tasks/Filter3DTaskBase\");\n\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid) {\n\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\t}\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\n\t\t\t// TODO: check logic:\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\n\n\t\t\tvar s:any = this._filters[i];\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\n\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\n\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid) {\n\n\t\t\tthis.updateFilterSizes();\n\n\t\t}\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\t// TODO: check logic\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._filterSizesInvalid) {\n\t\t\tthis.updateFilterSizes();\n\t\t}\n\n\t\tif (this._filterTasksInvalid) {\n\t\t\tthis.updateFilterTasks(stage);\n\t\t}\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._filters[i].update(stage, camera);\n\t\t}\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StageEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\nimport MaterialData\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialData\");\nimport MaterialDataPool\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialDataPool\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassData\");\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-renderergl/lib/pool/MaterialPassDataPool\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-renderergl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/materials/compilation/ShaderObjectBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-renderergl/lib/materials/utils/DefaultMaterialManager\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher\n{\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tprivate _materialDataPool:MaterialDataPool;\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _triangleSubMeshRenderablePool:RenderablePool;\n\tprivate _lineSubMeshRenderablePool:RenderablePool;\n\n\tpublic _pContext:IContextStageGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean = false;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapData:BitmapData;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumTriangles:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._pNumTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\n\t\tthis._materialDataPool = new MaterialDataPool();\n\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(BillboardRenderable);\n\t\tthis._triangleSubMeshRenderablePool = RenderablePool.getPool(TriangleSubMeshRenderable);\n\t\tthis._lineSubMeshRenderablePool = RenderablePool.getPool(LineSubMeshRenderable);\n\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\t}\n\n\n\tpublic getProgram(materialPassData:MaterialPassData):ProgramData\n\t{\n\t\t//check key doesn't need re-concatenating\n\t\tif (!materialPassData.key.length) {\n\t\t\tmaterialPassData.key = materialPassData.animationVertexCode +\n\t\t\tmaterialPassData.vertexCode +\n\t\t\t\"---\" +\n\t\t\tmaterialPassData.fragmentCode +\n\t\t\tmaterialPassData.animationFragmentCode +\n\t\t\tmaterialPassData.postAnimationFragmentCode;\n\t\t} else {\n\t\t\treturn materialPassData.programData;\n\t\t}\n\n\t\tvar programData:ProgramData = this._pContext.getProgramData(materialPassData.key);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (materialPassData.programData != programData) {\n\t\t\tif (materialPassData.programData)\n\t\t\t\tmaterialPassData.programData.dispose();\n\n\t\t\tmaterialPassData.programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\n\t\treturn programData;\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t */\n\tpublic getMaterial(material:StageGLMaterialBase, profile:string):MaterialData\n\t{\n\t\tvar materialData:MaterialData = this._materialDataPool.getItem(material);\n\n\t\tif (materialData.invalidAnimation) {\n\t\t\tmaterialData.invalidAnimation = false;\n\n\t\t\tvar materialDataPasses:Array<MaterialPassData> = materialData.getMaterialPasses(profile);\n\n\t\t\tvar enabledGPUAnimation:boolean = this.getEnabledGPUAnimation(material, materialDataPasses);\n\n\t\t\tvar renderOrderId = 0;\n\t\t\tvar mult:number = 1;\n\t\t\tvar materialPassData:MaterialPassData;\n\t\t\tvar len:number = materialDataPasses.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmaterialPassData = materialDataPasses[i];\n\n\t\t\t\tif (materialPassData.usesAnimation != enabledGPUAnimation) {\n\t\t\t\t\tmaterialPassData.usesAnimation = enabledGPUAnimation;\n\t\t\t\t\tmaterialPassData.key == \"\";\n\t\t\t\t}\n\n\t\t\t\tif (materialPassData.key == \"\")\n\t\t\t\t\tthis.calcAnimationCode(material, materialPassData);\n\n\t\t\t\trenderOrderId += this.getProgram(materialPassData).id*mult;\n\t\t\t\tmult *= 1000;\n\t\t\t}\n\n\t\t\tmaterialData.renderOrderId = renderOrderId;\n\t\t}\n\n\t\treturn materialData;\n\t}\n\n\tpublic activateMaterialPass(materialPassData:MaterialPassData, camera:Camera)\n\t{\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\t//clear unused vertex streams\n\t\tfor (var i = shaderObject.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = shaderObject.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\tif (materialPassData.usesAnimation)\n\t\t\t(<AnimationSetBase> materialPassData.material.animationSet).activate(shaderObject, this._pStage);\n\n\t\t//activate shader object\n\t\tshaderObject.iActivate(this._pStage, camera);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = this.getProgram(materialPassData);\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + materialPassData.animationVertexCode + materialPassData.vertexCode + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + materialPassData.fragmentCode + materialPassData.animationFragmentCode + materialPassData.postAnimationFragmentCode + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\t}\n\n\tpublic deactivateMaterialPass(materialPassData:MaterialPassData)\n\t{\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\tif (materialPassData.usesAnimation)\n\t\t\t(<AnimationSetBase> materialPassData.material.animationSet).deactivate(shaderObject, this._pStage);\n\n\t\tmaterialPassData.shaderObject.iDeactivate(this._pStage);\n\n\t\tthis._numUsedStreams = shaderObject.numUsedStreams;\n\t\tthis._numUsedTextures = shaderObject.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextStageGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\tpublic set stage(value:Stage)\n\t{\n\t\tif (value == this._pStage)\n\t\t\treturn;\n\n\t\tthis.iSetStage(value);\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tif (this._pStage) {\n\t\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t}\n\n\t\tif (!value) {\n\t\t\tthis._pStage = null;\n\t\t\tthis._pContext = null;\n\t\t} else {\n\t\t\tthis._pStage = value;\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t\t/*\n\t\t\t if (_backgroundImageRenderer)\n\t\t\t _backgroundImageRenderer.stage = value;\n\t\t\t */\n\t\t\tif (this._pStage.context)\n\t\t\t\tthis._pContext = <IContextStageGL> this._pStage.context;\n\t\t}\n\n\t\tthis._pBackBufferInvalid = true;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.dispose();\n\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:ICollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\n\tpublic pCollectRenderables(entityCollector:ICollector)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumTriangles = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:ICollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pContext.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis.pDraw(entityCollector, target);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapData) {\n\t\t\t\tthis._pContext.drawToBitmapData(this._snapshotBitmapData);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapData)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapData = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:ICollector, target:TextureProxyBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextStageGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\t/**\n\t *\n\t * @param billboard\n\t * @protected\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._triangleSubMeshRenderablePool.getItem(triangleSubMesh));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._lineSubMeshRenderablePool.getItem(lineSubMesh));\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @protected\n\t */\n\tprivate _applyRenderable(renderable:RenderableBase)\n\t{\n\t\tvar material:StageGLMaterialBase = <StageGLMaterialBase> renderable.materialOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (!material)\n\t\t\tmaterial = DefaultMaterialManager.getDefaultMaterial(renderable.materialOwner);\n\n\t\t//update material if invalidated\n\t\tmaterial._iUpdateMaterial();\n\n\t\t//set ids for faster referencing\n\t\trenderable.material = material;\n\t\trenderable.materialId = material._iMaterialId;\n\t\trenderable.renderOrderId = this.getMaterial(material, this._pStage.profile).renderOrderId;\n\t\trenderable.cascaded = false;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (material.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumTriangles += renderable.numTriangles;\n\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\n\t\tif (renderable.overflow)\n\t\t\tthis._applyRenderable(renderable.overflow);\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate getEnabledGPUAnimation(material:MaterialBase, materialDataPasses:Array<MaterialPassData>):boolean\n\t{\n\t\tif (material.animationSet) {\n\t\t\tmaterial.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IMaterialOwner> = material.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = materialDataPasses.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(materialDataPasses[i].shaderObject);\n\n\t\t\treturn !material.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic calcAnimationCode(material:MaterialBase, materialPassData:MaterialPassData)\n\t{\n\t\t//reset key so that the program is re-calculated\n\t\tmaterialPassData.key = \"\";\n\t\tmaterialPassData.animationVertexCode = \"\";\n\t\tmaterialPassData.animationFragmentCode = \"\";\n\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\t//check to see if GPU animation is used\n\t\tif (materialPassData.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> material.animationSet;\n\n\t\t\tmaterialPassData.animationVertexCode += animationSet.getAGALVertexCode(shaderObject);\n\n\t\t\tif (shaderObject.uvDependencies > 0 && !shaderObject.usesUVTransform)\n\t\t\t\tmaterialPassData.animationVertexCode += animationSet.getAGALUVCode(shaderObject);\n\n\t\t\tif (shaderObject.usesFragmentAnimation)\n\t\t\t\tmaterialPassData.animationFragmentCode += animationSet.getAGALFragmentCode(shaderObject, materialPassData.shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(shaderObject);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = shaderObject.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tmaterialPassData.animationVertexCode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (shaderObject.uvDependencies > 0 && !shaderObject.usesUVTransform)\n\t\t\t\tmaterialPassData.animationVertexCode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = RendererBase;","import Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _geomVOs:Array<GeometryVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._geomVOs = new Array<GeometryVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar subIdx:number /*uint*/;\n\t\tvar oldGeom:Geometry;\n\t\tvar destGeom:Geometry;\n\t\tvar useSubMaterials:boolean;\n\n\t\toldGeom = destMesh.geometry;\n\t\tdestGeom = destMesh.geometry = new Geometry();\n\t\tsubIdx = destMesh.subMeshes.length;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\n\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\n\t\t\tvar s:number /*uint*/;\n\t\t\tvar data:GeometryVO;\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = false;\n\t\t\tsub.autoDeriveTangents = false;\n\n\t\t\tdata = this._geomVOs[i];\n\t\t\tsub.updateIndices(data.indices);\n\t\t\tsub.updatePositions(data.vertices);\n\t\t\tsub.updateVertexNormals(data.normals);\n\t\t\tsub.updateVertexTangents(data.tangents);\n\t\t\tsub.updateUVs(data.uvs);\n\n\t\t\tdestGeom.addSubGeometry(sub);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\n\t\t\tdestMesh.material = this._geomVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar m:Mesh;\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++) {\n\t\t\t\tm = this._toDispose[i];\n\t\t\t\tm.geometry.dispose();\n\t\t\t\tm.dispose();\n\t\t\t}\n\n\t\t\t//dispose of the original receiver geometry\n\t\t\toldGeom.dispose();\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tif (mesh.geometry) {\n\t\t\tvar subIdx:number /*uint*/;\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\n\t\t\tvar calc:number /*uint*/;\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\n\t\t\t\tvar i:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\t\tvar indexOffset:number /*uint*/;\n\t\t\t\tvar subGeom:TriangleSubGeometry;\n\t\t\t\tvar vo:GeometryVO;\n\t\t\t\tvar vertices:Array<number>;\n\t\t\t\tvar normals:Array<number>;\n\t\t\t\tvar tangents:Array<number>;\n\t\t\t\tvar pd:Array<number>, nd:Array<number>, td:Array<number>, ud:Array<number>;\n\n\t\t\t\tsubGeom = subGeometries[subIdx];\n\t\t\t\tpd = subGeom.positions;\n\t\t\t\tnd = subGeom.vertexNormals;\n\t\t\t\ttd = subGeom.vertexTangents;\n\t\t\t\tud = subGeom.uvs;\n\n\t\t\t\t// Get (or create) a VO for this material\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\n\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t\t// Copy over vertex attributes\n\t\t\t\tvIdx = vertices.length;\n\t\t\t\tnIdx = normals.length;\n\t\t\t\ttIdx = tangents.length;\n\t\t\t\tuIdx = vo.uvs.length;\n\t\t\t\tlen = subGeom.numVertices;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\n\t\t\t\t\t// Position\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t\t// Normal\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t\t// Tangent\n\t\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t\t// UV\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t\t}\n\n\t\t\t\t// Copy over triangle indices\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\t\tiIdx = vo.indices.length;\n\t\t\t\tlen = subGeom.numTriangles;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 1] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 2] + indexOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!this._objectSpace) {\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\t\tlen = vertices.length;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispose)\n\t\t\t\tthis._toDispose.push(mesh);\n\t\t}\n\t}\n\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\n\t{\n\t\tvar data:GeometryVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._geomVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._geomVOs[i].material == material) {\n\t\t\t\t\tdata = this._geomVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._geomVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._geomVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GeometryVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._geomVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GeometryVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n","import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGeometryTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGeometryTransform;","import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\n\n/**\n * ...\n */\nclass ParticleGeometryHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\n\t\tvar numParticles:number /*uint*/ = geometries.length;\n\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\n\t\tvar numSubGeometries:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar subGeometry:TriangleSubGeometry;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\tsubGeometry = subGeometries[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.subGeometry = subGeometry;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:Array<number>;\n\t\t\t\tvar sourceNormals:Array<number>;\n\t\t\t\tvar sourceTangents:Array<number>;\n\t\t\t\tvar sourceUVs:Array<number>;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tcompact.numTriangles;\n\t\t\t\t\tsourcePositions = compact.positions;\n\t\t\t\t\tsourceNormals = compact.vertexNormals;\n\t\t\t\t\tsourceTangents = compact.vertexTangents;\n\t\t\t\t\tsourceUVs = compact.uvs;\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tsourcePositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tsourceNormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\tsourceTangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tsourceUVs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\tvar sourceIndices:Array<number> /*uint*/ = sourceSubGeometry.indices;\n\t\t\t\ttempLen = sourceSubGeometry.numTriangles;\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\n\t\tparticleGeometry.particles = particles;\n\t\tparticleGeometry.numParticles = numParticles;\n\n\t\tnumParticles = subGeometries.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsubGeometry = subGeometries[i];\n\t\t\tsubGeometry.autoDeriveNormals = false;\n\t\t\tsubGeometry.autoDeriveTangents = false;\n\t\t\tsubGeometry.updateIndices(indicesVector[i]);\n\t\t\tsubGeometry.updatePositions(positionsVector[i]);\n\t\t\tsubGeometry.updateVertexNormals(normalsVector[i]);\n\t\t\tsubGeometry.updateVertexTangents(tangentsVector[i]);\n\t\t\tsubGeometry.updateUVs(uvsVector[i]);\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\n\t\t}\n\n\t\treturn particleGeometry;\n\t}\n}\n\nexport = ParticleGeometryHelper;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Array<number> = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\n\t}\n}\n\nexport = PerspectiveMatrix3D;"],"sourceRoot":"./"}