{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticleData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/base/ParticleGeometry.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/pick/ShaderPicker.ts",
    "awayjs-renderergl/lib/render/BasicMaterialRender.ts",
    "awayjs-renderergl/lib/render/DepthRender.ts",
    "awayjs-renderergl/lib/render/DistanceRender.ts",
    "awayjs-renderergl/lib/render/RenderBase.ts",
    "awayjs-renderergl/lib/render/RenderPassBase.ts",
    "awayjs-renderergl/lib/render/RenderPool.ts",
    "awayjs-renderergl/lib/render/SkyboxRender.ts",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/render/passes/PassBase.ts",
    "awayjs-renderergl/lib/renderables/BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/RenderablePool.ts",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable.ts",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts",
    "awayjs-renderergl/lib/vos/CurveSubGeometryVO.ts",
    "awayjs-renderergl/lib/vos/LineSubGeometryVO.ts",
    "awayjs-renderergl/lib/vos/Sampler2DVO.ts",
    "awayjs-renderergl/lib/vos/SamplerCubeVO.ts",
    "awayjs-renderergl/lib/vos/SamplerVOBase.ts",
    "awayjs-renderergl/lib/vos/Single2DTextureVO.ts",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO.ts",
    "awayjs-renderergl/lib/vos/SubGeometryVOBase.ts",
    "awayjs-renderergl/lib/vos/SubGeometryVOPool.ts",
    "awayjs-renderergl/lib/vos/TextureVOBase.ts",
    "awayjs-renderergl/lib/vos/TextureVOPool.ts",
    "awayjs-renderergl/lib/vos/TriangleSubGeometryVO.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "RenderablePool",
    "RTTBufferManager",
    "DefaultRenderer",
    "_super",
    "stage",
    "_skyboxProjection",
    "_pRenderablePool",
    "_pStage",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "Object",
    "defineProperty",
    "get",
    "_antiAlias",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "entityCollector",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "dirLights",
    "directionalLights",
    "pointLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "skyBox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getItem",
    "camera",
    "updateSkyboxProjection",
    "getRenderPool",
    "renderableOwner",
    "renderOwner",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/data/BitmapImage2D",
    "undefined",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/renderables/RenderablePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "DepthRender",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "awayjs-renderergl/lib/render/DepthRender",
    "DistanceRender",
    "awayjs-renderergl/lib/render/DistanceRender",
    "Event",
    "ContextGLDrawMode",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "getMainInputTexture",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "Array",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setVertexBufferAt",
    "FLOAT_2",
    "renderToScreenVertexBuffer",
    "setTextureAt",
    "setProgram",
    "getProgram",
    "activate",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "removeEventListener",
    "awayjs-core/lib/events/Event",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RenderableMergeSort",
    "RendererEvent",
    "EntityCollector",
    "DefaultMaterialManager",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "_numUsedStreams",
    "_numUsedTextures",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_iCreateEntityCollector",
    "_viewportDirty",
    "_scissorDirty",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "_applyCollector",
    "setRenderTarget",
    "LESS",
    "head",
    "_pOpaqueRenderableHead",
    "first",
    "LESS_EQUAL",
    "_pBlendedRenderableHead",
    "item",
    "entityHead",
    "_pCamera",
    "_iEntryPoint",
    "_pCameraForward",
    "transform",
    "forwardVector",
    "entity",
    "_applyRenderer",
    "next",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderable2",
    "_renderOwner",
    "alphaThreshold",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "_iApplyRenderableOwner",
    "applyRenderable",
    "getDefaultMaterial",
    "renderId",
    "renderOrderId",
    "cascaded",
    "sourceEntity",
    "position",
    "subtract",
    "zIndex",
    "zOffset",
    "dotProduct",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "subGeometryVO",
    "subGeometry",
    "numElements",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "awayjs-display/lib/traverse/EntityCollector",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "assetType",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "node",
    "push",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "id",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "mesh",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableSubGeometry",
    "sourceSubGeometry",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationSubGeometry",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationSubGeometries",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "_timeNode",
    "_iProcessAnimationSetting",
    "mode",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "profile",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationSubGeometry",
    "subMesh",
    "parentMesh",
    "animationSubGeometry",
    "_iGenerateAnimationSubGeometries",
    "initParticleFunc",
    "geometry",
    "j",
    "k",
    "newAnimationSubGeometry",
    "localNode",
    "subMeshes",
    "shareAnimationGeometry",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorSubGeometry",
    "getAnimatorSubGeometry",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "SubGeometryEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedSubGeometry",
    "_morphedSubGeometryDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphSubGeometry",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetSubGeometry",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "INDICES_UPDATED",
    "VERTICES_UPDATED",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGeometry",
    "attributesView",
    "uvs",
    "setUVs",
    "secondaryUVs",
    "setSecondaryUVs",
    "awayjs-display/lib/events/SubGeometryEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "SubGeometryVOPool",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_subGeometryVOPool",
    "getPool",
    "_activeVertexState",
    "geometryFlag",
    "currentGeometry",
    "nextGeometry",
    "blendWeight",
    "_iInvalidateRenderableGeometries",
    "subGeom",
    "setNullPose",
    "subGeometries",
    "_iIndex",
    "_indexMappings",
    "indexMappings",
    "activateVertexBufferVO",
    "awayjs-renderergl/lib/vos/SubGeometryVOPool",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticleData",
    "ParticleData",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "sceneTransform",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGeometry",
    "_nextGeometry",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/base/ParticleGeometry",
    "Geometry",
    "ParticleGeometry",
    "apply",
    "arguments",
    "awayjs-display/lib/base/Geometry",
    "message",
    "awayjs-core/lib/errors/Error",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "pAddTask",
    "_textureWidth",
    "_textureHeight",
    "mainTarget",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "ContextGLTextureFormat",
    "Filter3DTaskBase",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "pUpdateTextures",
    "_program3D",
    "pInvalidateProgram",
    "pUpdateProgram",
    "pGetVertexCode",
    "pGetFragmentCode",
    "createTexture",
    "BGRA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/pick/ShaderPicker",
    "Debug",
    "Matrix3DUtils",
    "ContextGLTriangleFace",
    "ShaderPicker",
    "shaderPickingDetails",
    "_onlyMouseEnabled",
    "_interactives",
    "_localHitPosition",
    "_hitUV",
    "_localHitNormal",
    "_rayPos",
    "_rayDir",
    "_shaderPickingDetails",
    "_id",
    "_viewportData",
    "_boundOffsetScale",
    "getViewCollision",
    "view",
    "collector",
    "iEntityCollector",
    "renderer",
    "_context",
    "_projX",
    "_projY",
    "_potentialFound",
    "_blendedRenderableHead",
    "_opaqueRenderableHead",
    "_bitmapImage2D",
    "_hitColor",
    "getPixel",
    "_hitRenderable",
    "_hitEntity",
    "_iIsMouseEnabled",
    "_collisionVO",
    "_iPickingCollisionVO",
    "getHitDetails",
    "localPosition",
    "localNormal",
    "uv",
    "_faceIndex",
    "getSceneCollision",
    "direction",
    "scene",
    "MOUSE_SCISSOR_RECT",
    "_interactiveId",
    "_objectProgram",
    "initObjectProgram",
    "CALCULATION_MATRIX",
    "setCulling",
    "bothSides",
    "NONE",
    "BACK",
    "projection",
    "coordinateSystem",
    "setProgramConstantsFromMatrix",
    "getIndexBufferVO",
    "draw",
    "numIndices",
    "updateRay",
    "getRay",
    "vertexCode",
    "fragmentCode",
    "throwPIR",
    "initTriangleProgram",
    "_triangleProgram",
    "getApproximatePosition",
    "getPreciseDetails",
    "bounds",
    "getBox",
    "col",
    "scX",
    "scY",
    "scZ",
    "offsX",
    "offsY",
    "offsZ",
    "localViewProjection",
    "depth",
    "setScissorRectangle",
    "t1",
    "t2",
    "t3",
    "v0x",
    "v0y",
    "v0z",
    "v1x",
    "v1y",
    "v1z",
    "v2x",
    "v2y",
    "v2z",
    "ni1",
    "ni2",
    "ni3",
    "n1",
    "n2",
    "n3",
    "nLength",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "invDenom",
    "ui1",
    "ui2",
    "ui3",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "_pGetSubGeometry",
    "posDim",
    "dimensions",
    "uvDim",
    "normalDim",
    "getPrecisePosition",
    "invSceneTransform",
    "px",
    "py",
    "pz",
    "rx",
    "ry",
    "rz",
    "RAW_DATA_CONTAINER",
    "copyRawDataTo",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/utils/Debug",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/render/BasicMaterialRender",
    "BlendMode",
    "BasicMaterialPass",
    "RenderBase",
    "BasicMaterialRender",
    "pool",
    "material",
    "renderableClass",
    "_material",
    "_pAddPass",
    "_pass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "NORMAL",
    "alphaBlending",
    "colorTransform",
    "preserveAlpha",
    "setBlendMode",
    "LAYER",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-renderergl/lib/render/RenderBase",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass",
    "RenderPassBase",
    "ShaderBase",
    "_shader",
    "_iIncludeDependencies",
    "projectionDependencies",
    "uvDependencies",
    "_iInitConstantData",
    "_fragmentConstantsIndex",
    "_iGetFragmentCode",
    "registerCache",
    "sharedRegisters",
    "targetReg",
    "dataReg1",
    "getFreeFragmentConstant",
    "dataReg2",
    "getFreeFragmentVectorTemp",
    "projectionFragment",
    "texture",
    "_iInitRegisters",
    "albedo",
    "uvVarying",
    "cutOffReg",
    "removeFragmentTempUsage",
    "awayjs-renderergl/lib/render/RenderPassBase",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "viewDirDependencies",
    "globalPosDependencies",
    "viewDirVarying",
    "far",
    "awayjs-renderergl/lib/render/IRenderClass",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_passes",
    "_pool",
    "_renderableClass",
    "_onPassChangeDelegate",
    "onPassChange",
    "_updateAnimation",
    "_renderOrderId",
    "useMipmapping",
    "mipmap",
    "useSmoothTextures",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "useBothSides",
    "repeatTextures",
    "repeat",
    "animateUVs",
    "usesColorTransform",
    "useColorTransform",
    "getTextureVO",
    "_pClearPasses",
    "disposeItem",
    "invalidateRender",
    "invalidatePasses",
    "invalidatePass",
    "invalidateAnimation",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "usesAnimation",
    "invalidateProgram",
    "_pRemovePass",
    "CHANGE",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/materials/MaterialBase",
    "invalidateShader",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "_iGetVertexCode",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "awayjs-renderergl/lib/render/RenderPool",
    "BasicMaterial",
    "Skybox",
    "SkyboxRender",
    "RenderPool",
    "renderClass",
    "_renderClass",
    "_iAddRender",
    "getClass",
    "_iRemoveRender",
    "registerClass",
    "assetClass",
    "_classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-renderergl/lib/render/SkyboxRender",
    "skybox",
    "_skybox",
    "_cubeTexture",
    "cubeMap",
    "usesLocalPosFragment",
    "localPositionVarying",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "getFreeFragmentSingleTemp",
    "colorBufferIndex",
    "colorVarying",
    "diffuseInputReg",
    "awayjs-renderergl/lib/render/passes/PassBase",
    "awayjs-renderergl/lib/render/passes/ILightingPass",
    "awayjs-renderergl/lib/render/passes/IPass",
    "_preserveAlpha",
    "_render",
    "awayjs-renderergl/lib/renderables/BillboardRenderable",
    "AttributesBuffer",
    "TriangleSubGeometry",
    "Billboard",
    "RenderableBase",
    "BillboardRenderable",
    "billboard",
    "_billboard",
    "billboardRect",
    "_materialGeometry",
    "globalPositionVertex",
    "viewMatrixReg",
    "viewMatrixIndex",
    "_setRenderState",
    "sceneMatrixIndex",
    "matrix3D",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-renderergl/lib/renderables/RenderableBase",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable",
    "CurveSubMesh",
    "CurveSubMeshRenderable",
    "_constants",
    "sd",
    "standardDerivatives",
    "out",
    "curve",
    "curvex",
    "curvey",
    "curvez",
    "free",
    "free1",
    "free2",
    "d2",
    "fixa",
    "fixb",
    "_aa",
    "_0",
    "_1",
    "applyAA",
    "join",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-renderergl/lib/renderables/IRenderableClass",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable",
    "LineSubGeometry",
    "LineSegment",
    "LineSegmentRenderable",
    "lineSegment",
    "_thickness",
    "_lineSegment",
    "_calcMatrix",
    "_lineGeometry",
    "startPostion",
    "end",
    "endPosition",
    "thickness",
    "Float32Array",
    "setThickness",
    "colorDependencies",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "_pGetOverflowRenderable",
    "indexOffset",
    "awayjs-display/lib/base/LineSubGeometry",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable",
    "LineSubMesh",
    "LineSubMeshRenderable",
    "awayjs-display/lib/base/LineSubMesh",
    "RenderableOwnerEvent",
    "_geometryDirty",
    "_onRenderOwnerUpdatedDelegate",
    "_onRenderOwnerUpdated",
    "RENDER_OWNER_UPDATED",
    "_updateGeometry",
    "_subGeometryVO",
    "invalidateGeometry",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "SkyboxRenderable",
    "TriangleSubMeshRenderable",
    "_objectPools",
    "_iAddRenderable",
    "_iRemoveRenderable",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable",
    "_vertexArray",
    "_geometry",
    "TriangleSubMesh",
    "awayjs-display/lib/base/TriangleSubMesh",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "getImageObject",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "ArgumentError",
    "CompilerBase",
    "TextureVOPool",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "_textureVOPool",
    "_updateProgram",
    "_programData",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvBufferIndex",
    "uvTransformIndex",
    "colorTransformIndex",
    "secondaryUVBufferIndex",
    "normalBufferIndex",
    "tangentBufferIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "uvTransform",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "postAnimationFragmentCode",
    "usages",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/vos/TextureVOPool",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pRenderableClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "console",
    "log",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_uvSource",
    "_uvTarget",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compileLocalPositionCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "uvAttributeReg",
    "varying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Mesh",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToMeshes",
    "meshes",
    "_toDispose",
    "_geomVOs",
    "destMesh",
    "subIdx",
    "oldGeom",
    "destGeom",
    "useSubMaterials",
    "sub",
    "vertices",
    "addSubGeometry",
    "m",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getSubGeomData",
    "transformVectors",
    "deltaTransformVectors",
    "GeometryVO",
    "object",
    "child",
    "numChildren",
    "getChildAt",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform",
    "ParticleGeometryTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper",
    "ParticleGeometryHelper",
    "generateGeometry",
    "geometries",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "sourceSubGeometries",
    "numSubGeometries",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGeometryTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "particleGeometry",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "copyRawDataFrom",
    "awayjs-renderergl/lib/vos/CurveSubGeometryVO",
    "CurveSubGeometry",
    "SubGeometryVOBase",
    "CurveSubGeometryVO",
    "curveSubGeometry",
    "_curveSubGeometry",
    "invalidateVertices",
    "curves",
    "_drawElements",
    "firstIndex",
    "_drawArrays",
    "firstVertex",
    "drawVertices",
    "_pGetOverflowSubGeometry",
    "awayjs-display/lib/base/CurveSubGeometry",
    "awayjs-renderergl/lib/vos/SubGeometryVOBase",
    "awayjs-renderergl/lib/vos/ISubGeometryVOClass",
    "awayjs-renderergl/lib/vos/ITextureVOClass",
    "awayjs-renderergl/lib/vos/LineSubGeometryVO",
    "LineSubGeometryVO",
    "lineSubGeometry",
    "_lineSubGeometry",
    "colors",
    "awayjs-renderergl/lib/vos/Sampler2DVO",
    "SamplerVOBase",
    "Sampler2DVO",
    "initProperties",
    "sampler2D",
    "samplerReg",
    "samplerIndex",
    "imageRect",
    "fragmentReg",
    "fragmentIndex",
    "getFragmentCode",
    "inputReg",
    "wrap",
    "getFormatString",
    "image2D",
    "offsetX",
    "offsetY",
    "awayjs-renderergl/lib/vos/SamplerVOBase",
    "awayjs-renderergl/lib/vos/SamplerCubeVO",
    "SamplerCubeVO",
    "samplerCube",
    "imageCube",
    "bitmap",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-renderergl/lib/vos/Single2DTextureVO",
    "Single2DTexture",
    "TextureVOBase",
    "Single2DTextureVO",
    "single2DTexture",
    "_single2DTexture",
    "_sampler2DVO",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-renderergl/lib/vos/TextureVOBase",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO",
    "SingleCubeTexture",
    "SingleCubeTextureVO",
    "singleCubeTexture",
    "_singleCubeTexture",
    "_samplerCubeVO",
    "includeInput",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "SubGeometryUtils",
    "_vertices",
    "_verticesDirty",
    "_subGeometry",
    "_onIndicesUpdatedDelegate",
    "_onIndicesUpdated",
    "_onIndicesDisposedDelegate",
    "_onIndicesDisposed",
    "_onVerticesUpdatedDelegate",
    "_onVerticesUpdated",
    "_onVerticesDisposedDelegate",
    "_onVerticesDisposed",
    "INDICES_DISPOSED",
    "VERTICES_DISPOSED",
    "invalidateIndices",
    "_numIndices",
    "_indicesDirty",
    "_updateIndices",
    "getAttributesBufferVO",
    "_indices",
    "getVertexBufferVO",
    "bufferId",
    "_updateVertices",
    "size",
    "disposeIndices",
    "disposeVertices",
    "_overflow",
    "invalidate",
    "invalid",
    "getSubIndices",
    "count",
    "getSubVertices",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "TriangleSubGeometryVO",
    "_iAddSubGeometryVO",
    "_iRemoveSubGeometryVO",
    "subGeometryVOClass",
    "classPool",
    "awayjs-renderergl/lib/vos/TriangleSubGeometryVO",
    "_texture",
    "_iAddTextureVO",
    "_iRemoveTextureVO",
    "textureVOClass",
    "triangleSubGeometry",
    "_triangleSubGeometry"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage);\n\t\t\n\t\tif (stage)\n\t\t\tthis._shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tsuper.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar renderable:RenderableBase = this._pRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner);\n\n\t\tvar pass:IPass = render.passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/DepthRender\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DepthRender);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DistanceRender\t\t\t\t= require(\"awayjs-renderergl/lib/render/DistanceRender\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\t\t\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DistanceRender);\n\t\t\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid) {\n\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\t}\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\n\t\t\t// TODO: check logic:\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\n\n\t\t\tvar s:any = this._filters[i];\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\n\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\n\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid) {\n\n\t\t\tthis.updateFilterSizes();\n\n\t\t}\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\t// TODO: check logic\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._filterSizesInvalid) {\n\t\t\tthis.updateFilterSizes();\n\t\t}\n\n\t\tif (this._filterTasksInvalid) {\n\t\t\tthis.updateFilterTasks(stage);\n\t\t}\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._filters[i].update(stage, camera);\n\t\t}\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer\n{\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pRenderablePool:RenderablePool;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage();\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic activatePass(renderable:RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderable\n\t\trenderable._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderable:RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderable._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic get renderablePool():RenderablePool\n\t{\n\t\treturn this._pRenderablePool;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderablePool.dispose();\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\tprivate _applyCollector(entityCollector:CollectorBase)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._applyRenderer(this);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(entityCollector);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:CollectorBase)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderable2:RenderableBase;\n\t//\tvar render:RenderBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderable) {\n\t//\t\trenderable2 = renderable;\n\t//\t\trender = renderable.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderable, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderable2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderable2 = renderable2.next;\n\t//\n\t//\t\t} while (renderable2 && renderable2.render == render && !renderable2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderable, pass);\n\t//\n\t//\t\trenderable = renderable2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tpublic drawRenderables(renderable:RenderableBase, entityCollector:CollectorBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderable2:RenderableBase;\n\t\tvar render:RenderBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\t\tvar camera:Camera = entityCollector.camera;\n\n\n\t\twhile (renderable) {\n\t\t\trender = renderable.render;\n\t\t\tpasses = render.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && render._renderOwner.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.render == render);\n\t\t\t} else {\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderable2 = renderable;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderable, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t\t} while (renderable2 && renderable2.render == render);\n\n\t\t\t\t\tthis.deactivatePass(renderable, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\tpublic _iApplyRenderableOwner(renderableOwner:IRenderableOwner)\n\t{\n\t\tthis.applyRenderable(this._pRenderablePool.getItem(renderableOwner));\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @protected\n\t */\n\tpublic applyRenderable(renderable:RenderableBase)\n\t{\n\t\t//set local vars for faster referencing\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner || DefaultMaterialManager.getDefaultMaterial(renderable.renderableOwner));\n\t\t\n\t\trenderable.render = render;\n\t\trenderable.renderId = render.renderId;\n\t\trenderable.renderOrderId = render.renderOrderId;\n\n\t\trenderable.cascaded = false;\n\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (render.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumElements += renderable.subGeometryVO.subGeometry.numElements;\n\t}\n}\n\nexport = RendererBase;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;",
    "import SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationSubGeometries:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\n\t{\n\t\tvar mesh:Mesh = subMesh.parentMesh;\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\n\t\tif (animationSubGeometry)\n\t\t\treturn animationSubGeometry;\n\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\n\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationSubGeometry:AnimationSubGeometry;\n\t\tvar newAnimationSubGeometry:boolean = false;\n\t\tvar subGeometry:SubGeometryBase;\n\t\tvar subMesh:ISubMesh;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\t\t\tsubGeometry = subMesh.subGeometry;\n\t\t\tif (mesh.shareAnimationGeometry) {\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\n\n\t\t\t\tif (animationSubGeometry)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\n\n\t\t\tif (mesh.shareAnimationGeometry)\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\n\t\t\telse\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\n\n\t\t\tnewAnimationSubGeometry = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationSubGeometry)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationSubGeometry\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGeometry\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!subMesh)\n\t\t\tthrow(new Error(\"Must be subMesh\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator subGeometry\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Array<number>;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedSubGeometry:Object = new Object();\n\tprivate _morphedSubGeometryDirty:Object = new Object();\n\tprivate _condensedMatrices:Array<number>;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Array<number>\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\n\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Array<number>();\n\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Array<number>;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceSubGeometry;\n\n\t\tvar targetSubGeometry:TriangleSubGeometry;\n\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetSubGeometry;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\n\n\t\tvar numVertices:number = sourceSubGeometry.numVertices;\n\t\tvar sourcePositions:Float32Array = sourceSubGeometry.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceSubGeometry.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceSubGeometry.tangents.get(numVertices);\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceSubGeometry.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceSubGeometry.jointWeights.get(numVertices);\n\n\t\tvar targetSubGeometry:TriangleSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\n\n\t\tvar targetPositions:Float32Array = targetSubGeometry.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetSubGeometry.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetSubGeometry.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar len:number /*int*/ = sourcePositions.length;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < len) {\n\t\t\tvertX = sourcePositions[index];\n\t\t\tvertY = sourcePositions[index + 1];\n\t\t\tvertZ = sourcePositions[index + 2];\n\t\t\tnormX = sourceNormals[index];\n\t\t\tnormY = sourceNormals[index + 1];\n\t\t\tnormZ = sourceNormals[index + 2];\n\t\t\ttangX = sourceTangents[index];\n\t\t\ttangY = sourceTangents[index + 1];\n\t\t\ttangZ = sourceTangents[index + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[index] = vx;\n\t\t\ttargetPositions[index + 1] = vy;\n\t\t\ttargetPositions[index + 2] = vz;\n\t\t\ttargetNormals[index] = nx;\n\t\t\ttargetNormals[index + 1] = ny;\n\t\t\ttargetNormals[index + 2] = nz;\n\t\t\ttargetTangents[index] = tx;\n\t\t\ttargetTangents[index + 1] = ty;\n\t\t\ttargetTangents[index + 2] = tz;\n\n\t\t\tindex += 3;\n\t\t}\n\n\t\ttargetSubGeometry.setPositions(targetPositions);\n\t\ttargetSubGeometry.setNormals(targetNormals);\n\t\ttargetSubGeometry.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).setIndices(subGeometry.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase subGeometry.uvs:\n\t\t\t\tmorphGeometry.setUVs(subGeometry.uvs.get(subGeometry.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase subGeometry.secondaryUVs:\n\t\t\t\tmorphGeometry.setSecondaryUVs(subGeometry.secondaryUVs.get(subGeometry.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport SubGeometryVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport SubGeometryVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _subGeometryVOPool:SubGeometryVOPool;\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t\tthis._subGeometryVOPool = SubGeometryVOPool.getPool();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubMesh\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar subGeom:TriangleSubGeometry = subMesh.subGeometry;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, subGeom, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar subGeometryVO:SubGeometryVOBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\tsubGeom = <TriangleSubGeometry> this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\n\n\t\t\tsubGeometryVO = this._subGeometryVOPool.getItem(subGeom);\n\t\t\tsubGeometryVO._indexMappings = this._subGeometryVOPool.getItem(subMesh.subGeometry).indexMappings;\n\n\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeom.positions, stage);\n\n\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeom.normals, stage);\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, subGeometry:TriangleSubGeometry, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar subGeometryVO:SubGeometryVOBase = this._subGeometryVOPool.getItem(subGeometry);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeometry.positions, stage);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\tsubGeometryVO.activateVertexBufferVO(vertexStreamOffset++, subGeometry.normals, stage);\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\n\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Array<number> = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationSubGeometry\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationSubGeometry;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic subGeometry:TriangleSubGeometry;\n}\n\nexport = ParticleData",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Array<number>;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Geometry>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationSubGeometry.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Geometry>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGeometry:Geometry;\n\tprivate _nextGeometry:Geometry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGeometry;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGeometry;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGeometry = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * @class away.base.ParticleGeometry\n */\nclass ParticleGeometry extends Geometry\n{\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n}\n\nexport = ParticleGeometry;",
    "import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends Event\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic pAddTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:ITexture;\n\n\tprivate _scaledTextureWidth:number = -1;\n\tprivate _scaledTextureHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():ITexture\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:ITexture)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.pUpdateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic pInvalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic pUpdateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic pGetVertexCode():string\n\t{\n\t\t// TODO: imeplement AGAL <> GLSL\n\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic pGetFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic pUpdateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.pUpdateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLDrawMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport SubGeometryVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport SubGeometryVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.entities.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:RenderableBase;\n\tprivate _blendedRenderableHead:RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapImage2D:BitmapImage2D;\n\tprivate _viewportData:Array<number>;\n\tprivate _boundOffsetScale:Array<number>;\n\tprivate _id:Array<number>;\n\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _subGeometryIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Array<number>(4);\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapImage2D)\n\t\t\tthis._bitmapImage2D = new BitmapImage2D(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\t\tthis._hitColor = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.subGeometryIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderable) {\n\t\t\t// it's possible that the renderable was already removed from the scene\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderable = renderable.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.renderOwner).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\n\t\t\tvar subGeometryVO:SubGeometryVOBase = this._hitRenderable.subGeometryVO;\n\n\t\t\tsubGeometryVO.activateVertexBufferVO(0, (<TriangleSubGeometry> subGeometryVO.subGeometry).positions, this._stage);\n\t\t\tsubGeometryVO.getIndexBufferVO(this._stage).draw(ContextGLDrawMode.TRIANGLES, 0, subGeometryVO.numIndices);\n\n\t\t\trenderable = renderable.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\tvar subGeometryVO:SubGeometryVOBase = this._hitRenderable.subGeometryVO;\n\n\t\tsubGeometryVO.activateVertexBufferVO(0, (<TriangleSubGeometry> subGeometryVO.subGeometry).positions, this._stage);\n\t\tsubGeometryVO.getIndexBufferVO(this._stage).draw(ContextGLDrawMode.TRIANGLES, 0, subGeometryVO.numIndices);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\n\t\tcol = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar subGeom:TriangleSubGeometry = <TriangleSubGeometry> this._hitRenderable._pGetSubGeometry();\n\t\tvar indices:Uint16Array = subGeom.indices.get(subGeom.numElements);\n\n\t\tvar positions:Float32Array = subGeom.positions.get(subGeom.numVertices);\n\t\tvar posDim:number = subGeom.positions.dimensions;\n\n\t\tvar uvs:Float32Array = subGeom.uvs.get(subGeom.numVertices);\n\t\tvar uvDim:number = subGeom.uvs.dimensions;\n\n\t\tvar normals:Float32Array = subGeom.normals.get(subGeom.numVertices);\n\t\tvar normalDim:number = subGeom.normals.dimensions;\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = indices[i]*posDim;\n\t\t\tt2 = indices[j]*posDim;\n\t\t\tt3 = indices[k]*posDim;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = indices[i]*normalDim;\n\t\t\t\t\tni2 = indices[j]*normalDim;\n\t\t\t\t\tni3 = indices[k]*normalDim;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = indices[i]*uvDim\n\t\t\t\t\tui2 = indices[j]*uvDim\n\t\t\t\t\tui3 = indices[k]*uvDim\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back subGeometryIndex value\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapImage2D.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapImage2D = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/render/passes/BasicMaterialPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialRender extends RenderBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(pool:RenderPool, material:BasicMaterial, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, material, renderableClass, stage);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, renderableClass, this._stage));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport = BasicMaterialRender;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * DepthRender forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass DepthRender extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param renderOwner\n\t * @param renderableClass\n\t * @param stage\n\t */\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shader.texture && shader.alphaThreshold > 0) {\n\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture && this._shader.alphaThreshold > 0) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DepthRender;",
    "﻿import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shader.alphaThreshold > 0) {\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._shader.alphaThreshold > 0) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceRender;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n *\n * @class away.pool.Passes\n */\nclass RenderBase extends EventDispatcher implements IRender\n{\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tprivate _pool:RenderPool;\n\tpublic _renderOwner:IRenderOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\n\tpublic renderId:number;\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis.renderId = renderOwner.id;\n\t\tthis._renderOwner = renderOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._renderableClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._renderOwner.alphaThreshold;\n\t\tshader.useMipmapping = this._renderOwner.mipmap;\n\t\tshader.useSmoothTextures = this._renderOwner.smooth;\n\n\t\tif (this._renderOwner instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._renderOwner;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.repeatTextures = material.repeat;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t\tif (material.texture)\n\t\t\t\tshader.texture = shader.getTextureVO(material.texture);\n\t\t\tshader.color = material.color;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pClearPasses();\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].dispose();\n\n\t\tthis._passes = null;\n\n\t\tthis._pool.disposeItem(this._renderOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateRender()\n\t{\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidatePass();\n\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param renderOwner\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the renderOwner.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the renderOwner\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the renderOwner\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateAnimation();\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._renderOwner.animationSet) {\n\t\t\tthis._renderOwner.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderableOwner> = this._renderOwner.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._renderOwner.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RenderBase;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\n\n/**\n * RenderPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass RenderPassBase extends RenderBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._shader.dispose();\n\n\t\tthis._shader = null;\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = RenderPassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport BasicMaterialRender\t\t\t= require(\"awayjs-renderergl/lib/render/BasicMaterialRender\");\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport SkyboxRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/SkyboxRender\");\n\n/**\n * @class away.pool.RenderPool\n */\nclass RenderPool\n{\n\tprivate static _classPool:Object = new Object();\n\t\n\tprivate _pool:Object = new Object();\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _stage:Stage;\n\tprivate _renderClass:IRenderClass;\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param renderClass\n\t */\n\tconstructor(renderableClass:IRenderableClass, stage:Stage, renderClass:IRenderClass = null)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t\tthis._renderClass = renderClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderOwner:IRenderOwner):RenderBase\n\t{\n\t\treturn (this._pool[renderOwner.id] || (this._pool[renderOwner.id] = renderOwner._iAddRender(new (this._renderClass || RenderPool.getClass(renderOwner))(this, renderOwner, this._renderableClass, this._stage))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t */\n\tpublic disposeItem(renderOwner:IRenderOwner)\n\t{\n\t\trenderOwner._iRemoveRender(this._pool[renderOwner.id]);\n\n\t\tthis._pool[renderOwner.id] = null;\n\t}\n\t\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(renderClass:IRenderClass, assetClass:IAssetClass)\n\t{\n\t\tRenderPool._classPool[assetClass.assetType] = renderClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(renderOwner:IRenderOwner):IRenderClass\n\t{\n\t\treturn RenderPool._classPool[renderOwner.assetType];\n\t}\n\t\n\n\tprivate static main = RenderPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tRenderPool.registerClass(BasicMaterialRender, BasicMaterial);\n\t\tRenderPool.registerClass(SkyboxRender, Skybox);\n\t}\n}\n\nexport = RenderPool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\n\n/**\n * SkyboxRender forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass SkyboxRender extends RenderPassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _cubeTexture:TextureVOBase;\n\n\tconstructor(pool:RenderPool, skybox:Skybox, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, renderableClass, stage);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._cubeTexture = this._shader.getTextureVO(this._skybox.cubeMap);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._renderOwner.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._renderOwner.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesLocalPosFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._cubeTexture._iInitRegisters(shader, registerCache);\n\n\t\treturn this._cubeTexture._iGetFragmentCode(shader, sharedRegisters.shadedTarget, registerCache, sharedRegisters.localPositionVarying);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\tthis._cubeTexture.activate(this._shader);\n\t}\n}\n\nexport = SkyboxRender;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(render, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (shader.texture != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (shader.texture != null) {\n\n\t\t\tshader.texture._iInitRegisters(shader, regCache);\n\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, targetReg, regCache, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture != null) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tprivate _render:RenderBase;\n\tpublic _renderOwner:IRenderOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._renderOwner = renderOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._shader.dispose();\n\n\t\tthis._shader = null;\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = PassBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = Billboard;\n\n\tprivate static _materialGeometry:Object = new Object();\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePool, billboard:Billboard, stage:Stage)\n\t{\n\t\tsuper(pool, billboard, billboard, billboard.material, stage);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.setPositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\tgeometry.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.setPositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\t}\n}\n\nexport = BillboardRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport CurveSubMesh\t\t\t\t    = require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport CurveSubGeometry\t\t    \t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\")\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass CurveSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = CurveSubMesh;\n\n\tpublic static vertexAttributesOffset:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:CurveSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:CurveSubMesh, stage:Stage)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():CurveSubGeometry\n\t{\n\t\treturn (this.subMesh.animator)? <CurveSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry) : this.subMesh.subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n        shader.usesLocalPosFragment = true;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \".xyw, \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov v2 va1 \\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\n\t\t} else {\n\t\t\tcode += \"mov v2 va1 \\n\";\n\t\t\tcode += \"m44 op, \" + position + \".xyw, \" + viewMatrixReg + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n    /**\n     * @inheritDoc\n     */\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar sd:boolean = (<ContextWebGL>shader._stage.context).standardDerivatives;\n\t\tvar pos:ShaderRegisterElement = sharedRegisters.localPositionVarying;\n\t\tvar out:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\n\t\tvar curve:string = \"v2\";\n\t\tvar curvex:string = \"v2.x\";\n\t\tvar curvey:string = \"v2.y\";\n\t\tvar curvez:string = pos + \".z\";\n\n\n\t\t//get some free registers\n\t\tvar free:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free, 1);\n\t\tvar free1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free1, 1);\n\t\tvar free2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free2, 1);\n\n\t\t//distance from curve\n\t\tvar d:string = free + \".x\";\n\t\tvar dx:string = free + \".y\";\n\t\tvar dy:string = free + \".z\";\n\t\tvar t:string = free + \".w\";\n\t\tvar d2:string = free1 + \".x\";\n\t\tvar fixa:string = free1 + \".y\";\n\t\tvar fixb:string = free1 + \".z\";\n\n\t\tvar _aa:string = \"fc7.z\";\n\t\tvar _0:string = \"fc7.x\";\n\t\tvar _1:string = \"fc7.y\";\n\n\t\tvar nl:string = \"\\n\";\n\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//distance from curve\n\t\tcode.push(\"mul\",d, curvex, curvex, nl);\n\t\tcode.push(\"sub\",d, d, curvey, nl);\n\t\tcode.push(\"mul\",d, d, curvez, nl);\t//flipper\n\n\t\t//kill based on distance from curve\n\t\tcode.push(\"kil\" ,d, nl);\n\n\t\tvar applyAA:boolean = false;\n\t\tif(applyAA && sd)\n\t\t{\n\n\t\t\t//derivatives\n\t\t\tcode.push(\"ddx\", dx, d, nl);\n\t\t\tcode.push(\"ddy\", dy, d, nl);\n\n\t\t\t//AA\n\t\t\tcode.push(\"mul\",dx, dx, dx, nl);\n\t\t\tcode.push(\"mul\",dy, dy, dy, nl);\n\t\t\tcode.push(\"add\",t, dx, dy, nl);\n\t\t\tcode.push(\"sqt\",t, t, nl);\n\n\t\t\tcode.push(\"mul\",t, t, _aa, nl);\n\t\t\tcode.push(\"div\",d, d, t, nl);\n\n/*\n\t\t\t//code.push(\"sge\", fixa, curvex, _1, nl);\n\t\t\tcode.push(\"slt\", fixb, curvex, _1, nl);\n\t\t\tcode.push(\"sub\", fixa, _1, fixb, nl);\n\t\t\t//code.push(\"sub\", fixb, _1, fixa, nl);\n\n\t\t\tcode.push(\"mul\", d, d, fixb, nl);\n\n*/\n//\t\t\tcode.push(\"abs\", d, d, nl);\n\t\t\tcode.push(\"max\", d, d, _0, nl);\n\t\t\tcode.push(\"min\", d, d, _1, nl);\n\t\t\tcode.push(\"mov\", out+\".w\", d, nl);\n\t\t}\n\n\n\t\tcode.push(\"mov\", out+\".w\", _1, nl);\n\t\treturn code.join(\" \");\n\t}\n    private _constants:Array<number> = new Array<number>(0, 1, 1, 0.5);\n    /**\n     * @inheritDoc\n     */\n    public _iActivate(pass:PassBase, camera:Camera)\n    {\n        super._iActivate(pass, camera);\n\n        var context:IContextGL = this._stage.context;\n\n        context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 7, this._constants, 1);\n\n    }\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\t}\n}\n\nexport = CurveSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSegmentRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = LineSegment;\n\n\tprivate static _lineGeometry:Object = new Object();\n\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment, stage:Stage)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment, lineSegment.material, stage);\n\n\t\tthis._lineSegment = lineSegment;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar geometry:LineSubGeometry = LineSegmentRenderable._lineGeometry[this._lineSegment.id] || (LineSegmentRenderable._lineGeometry[this._lineSegment.id] = new LineSubGeometry());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSegmentRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSegmentRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSegmentRenderable(this._pool, <LineSegment> this.renderableOwner, this._stage);\n\t}\n}\n\nexport = LineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = LineSubMesh;\n\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, stage:Stage)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage);\n\n\t\tthis.subMesh = subMesh;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\treturn this.subMesh.subGeometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSubMeshRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSubMeshRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\t}\n}\n\nexport = LineSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\tprivate _onRenderOwnerUpdatedDelegate:(event:RenderableOwnerEvent) => void;\n\n\tpublic _subGeometryVOPool:SubGeometryVOPool;\n\tpublic _subGeometryVO:SubGeometryVOBase;\n\tprivate _geometryDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePool;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\n\t/**\n\t *\n\t */\n\tpublic renderOwner:IRenderOwner;\n\n\t/**\n\t *\n\t */\n\tpublic render:RenderBase;\n\n\n\tpublic get subGeometryVO():SubGeometryVOBase\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\treturn this._subGeometryVO;\n\t}\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param renderableOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner, renderOwner:IRenderOwner, stage:Stage)\n\t{\n\t\tthis._onRenderOwnerUpdatedDelegate = (event:RenderableOwnerEvent) => this._onRenderOwnerUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\t\tthis._stage = stage;\n\n\t\tthis._subGeometryVOPool = SubGeometryVOPool.getPool();\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\n\t\tthis.renderableOwner.addEventListener(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this._onRenderOwnerUpdatedDelegate)\n\n\t\tthis.renderOwner = renderOwner;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection)\n\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._subGeometryVO._iRender(pass.shader, this._stage);\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tthis._subGeometryVO = this._subGeometryVOPool.getItem(this._pGetSubGeometry());\n\n\t\tthis._geometryDirty = false;\n\t}\n\n\tprivate _onRenderOwnerUpdated(event:RenderableOwnerEvent)\n\t{\n\t\t//TODO flag unused renders for deletion\n\t\tthis.renderOwner = event.renderOwner;\n\t}\n}\n\nexport = RenderableBase;",
    "import IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/BillboardRenderable\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSegmentRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSubMeshRenderable\");\nimport CurveSubMeshRenderable\t    = require(\"awayjs-renderergl/lib/renderables/CurveSubMeshRenderable\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport SkyboxRenderable\t\t\t    = require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * RenderablePool forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RenderablePool\n */\nclass RenderablePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _stage:Stage;\n\tprivate _pool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\t\n\t/**\n\t * Creates a new RenderablePool object.\n\t *\n\t * @param stage\n\t * @param renderClass\n\t */\n\tconstructor(stage:Stage, renderClass:IRenderClass = null)\n\t{\n\t\tthis._stage = stage;\n\n\t\tfor (var i in RenderablePool._classPool)\n\t\t\tthis._objectPools[i] = new RenderPool(RenderablePool._classPool[i], this._stage, renderClass);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderableOwner:IRenderableOwner):RenderableBase\n\t{\n\t\treturn this._pool[renderableOwner.id] || (this._pool[renderableOwner.id] = renderableOwner._iAddRenderable(new (RenderablePool.getClass(renderableOwner))(this, renderableOwner, this._stage)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic disposeItem(renderableOwner:IRenderableOwner)\n\t{\n\t\trenderableOwner._iRemoveRenderable(this._pool[renderableOwner.id]);\n\n\t\tthis._pool[renderableOwner.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderPool\n\t */\n\tpublic getRenderPool(renderableOwner:IRenderableOwner):RenderPool\n\t{\n\t\treturn this._objectPools[renderableOwner.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(renderableClass:IRenderableClass)\n\t{\n\t\tRenderablePool._classPool[renderableClass.assetClass.assetType] = renderableClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(renderableOwner:IRenderableOwner):IRenderableClass\n\t{\n\t\treturn RenderablePool._classPool[renderableOwner.assetType];\n\t}\n\n\t/**\n\t * Disposes the resources used by the RenderablePool.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\tthis._pool[id].dispose();\n\n\t\tthis._pool = null;\n\t}\n\n\n\tprivate static main = RenderablePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tRenderablePool.registerClass(BillboardRenderable);\n\t\tRenderablePool.registerClass(LineSegmentRenderable);\n\t\tRenderablePool.registerClass(LineSubMeshRenderable);\n\t\tRenderablePool.registerClass(TriangleSubMeshRenderable);\n\t\tRenderablePool.registerClass(CurveSubMeshRenderable);\n\t\tRenderablePool.registerClass(SkyboxRenderable);\n\t}\n}\n\nexport = RenderablePool;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = Skybox;\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\tprivate _vertexArray:Array<number>;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePool, skybox:Skybox, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, skybox, skybox, stage);\n\n\t\tthis._vertexArray = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport = SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = TriangleSubMesh;\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, stage:Stage)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\treturn (this.subMesh.animator)? <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry) : this.subMesh.subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(renderableClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(renderableClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.numLights = 0;\n\t\tthis.usesLightFallOff = true;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._stage.getImageObject(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], false, this.useSmoothTextures, this.useMipmapping);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._stage.getImageObject(probe.specularMap).activate(this.lightProbeSpecularIndices[i], false, this.useSmoothTextures, this.useMipmapping);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase\n{\n\tprivate _textureVOPool:TextureVOPool;\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:TextureVOBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesLocalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, stage:Stage)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._textureVOPool = new TextureVOPool(this._stage);\n\t}\n\n\tpublic getTextureVO(texture:TextureBase):TextureVOBase\n\t{\n\t\treturn this._textureVOPool.getItem(texture);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param renderableClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(renderableClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesLocalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\n\n\t\t//Initializes commonly required constant values.\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderableOwner.animator)\n\t\t\t(<AnimatorBase> renderable.renderableOwner.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.renderableOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.renderableOwner.colorTransform;\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\t\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._renderableClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n    public localPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pRenderableClass:IRenderableClass;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pRenderableClass = renderableClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = renderableClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tconsole.log(\"uses ct:\",this._pShader.usesColorTransform);\n\t\tif (this._pShader.usesColorTransform)\n\t\t{\n\t\t\tthis.compileColorTransformCode();\n\t\t}else{\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\t\t}\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesLocalPosFragment)\n            this.compileLocalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pRenderableClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderableClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n    private compileLocalPositionCode()\n    {\n        this._pSharedRegisters.localPositionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.localPositionVarying + \", \" + this._pSharedRegisters.localPosition + \"\\n\";\n    }\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(renderableClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = LightingCompiler;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _geomVOs:Array<GeometryVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._geomVOs = new Array<GeometryVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar subIdx:number /*uint*/;\n\t\tvar oldGeom:Geometry;\n\t\tvar destGeom:Geometry;\n\t\tvar useSubMaterials:boolean;\n\n\t\toldGeom = destMesh.geometry;\n\t\tdestGeom = destMesh.geometry = new Geometry();\n\t\tsubIdx = destMesh.subMeshes.length;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\n\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\n\t\t\tvar s:number /*uint*/;\n\t\t\tvar data:GeometryVO;\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\tsub.autoDeriveNormals = false;\n\t\t\tsub.autoDeriveTangents = false;\n\n\t\t\tdata = this._geomVOs[i];\n\t\t\tsub.setIndices(data.indices);\n\t\t\tsub.setPositions(data.vertices);\n\t\t\tsub.setNormals(data.normals);\n\t\t\tsub.setTangents(data.tangents);\n\t\t\tsub.setUVs(data.uvs);\n\n\t\t\tdestGeom.addSubGeometry(sub);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\n\t\t\tdestMesh.material = this._geomVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar m:Mesh;\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++) {\n\t\t\t\tm = this._toDispose[i];\n\t\t\t\tm.geometry.dispose();\n\t\t\t\tm.dispose();\n\t\t\t}\n\n\t\t\t//dispose of the original receiver geometry\n\t\t\toldGeom.dispose();\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tif (mesh.geometry) {\n\t\t\tvar subIdx:number /*uint*/;\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\n\t\t\tvar calc:number /*uint*/;\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\n\t\t\t\tvar i:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\t\tvar indexOffset:number /*uint*/;\n\t\t\t\tvar subGeom:TriangleSubGeometry;\n\t\t\t\tvar vo:GeometryVO;\n\t\t\t\tvar vertices:Array<number>;\n\t\t\t\tvar normals:Array<number>;\n\t\t\t\tvar tangents:Array<number>;\n\t\t\t\tvar ind:Uint16Array, pd:Float32Array, nd:Float32Array, td:Float32Array, ud:Float32Array;\n\n\t\t\t\tsubGeom = subGeometries[subIdx];\n\t\t\t\tpd = subGeom.positions.get(subGeom.numVertices);\n\t\t\t\tnd = subGeom.normals.get(subGeom.numVertices);\n\t\t\t\ttd = subGeom.tangents.get(subGeom.numVertices);\n\t\t\t\tud = subGeom.uvs.get(subGeom.numVertices);\n\n\t\t\t\t// Get (or create) a VO for this material\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\n\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t\t// Copy over vertex attributes\n\t\t\t\tvIdx = vertices.length;\n\t\t\t\tnIdx = normals.length;\n\t\t\t\ttIdx = tangents.length;\n\t\t\t\tuIdx = vo.uvs.length;\n\t\t\t\tlen = subGeom.numVertices;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\n\t\t\t\t\t// Position\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t\t// Normal\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t\t// Tangent\n\t\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t\t// UV\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t\t}\n\n\t\t\t\t// Copy over triangle indices\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\t\tiIdx = vo.indices.length;\n\t\t\t\tlen = subGeom.numElements;\n\t\t\t\tind = subGeom.indices.get(len);\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\t\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!this._objectSpace) {\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\t\tlen = vertices.length;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispose)\n\t\t\t\tthis._toDispose.push(mesh);\n\t\t}\n\t}\n\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\n\t{\n\t\tvar data:GeometryVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._geomVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._geomVOs[i].material == material) {\n\t\t\t\t\tdata = this._geomVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._geomVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._geomVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GeometryVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._geomVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GeometryVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGeometryTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGeometryTransform;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\n\n/**\n * ...\n */\nclass ParticleGeometryHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\n\t\tvar numParticles:number /*uint*/ = geometries.length;\n\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\n\t\tvar numSubGeometries:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar subGeometry:TriangleSubGeometry;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\tsubGeometry = subGeometries[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.subGeometry = subGeometry;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:Float32Array;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:Float32Array;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceSubGeometry.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceSubGeometry.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\n\t\tparticleGeometry.particles = particles;\n\t\tparticleGeometry.numParticles = numParticles;\n\n\t\tnumParticles = subGeometries.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsubGeometry = subGeometries[i];\n\t\t\tsubGeometry.autoDeriveNormals = false;\n\t\t\tsubGeometry.autoDeriveTangents = false;\n\t\t\tsubGeometry.setIndices(indicesVector[i]);\n\t\t\tsubGeometry.setPositions(positionsVector[i]);\n\t\t\tsubGeometry.setNormals(normalsVector[i]);\n\t\t\tsubGeometry.setTangents(tangentsVector[i]);\n\t\t\tsubGeometry.setUVs(uvsVector[i]);\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\n\t\t}\n\n\t\treturn particleGeometry;\n\t}\n}\n\nexport = ParticleGeometryHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Array<number> = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\n\t}\n}\n\nexport = PerspectiveMatrix3D;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\n\n/**\n *\n * @class away.pool.CurveSubGeometryVO\n */\nclass CurveSubGeometryVO extends SubGeometryVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _curveSubGeometry:CurveSubGeometry;\n\n\tconstructor(pool:SubGeometryVOPool, curveSubGeometry:CurveSubGeometry)\n\t{\n\t\tsuper(pool, curveSubGeometry);\n\n\t\tthis._curveSubGeometry = curveSubGeometry;\n\n\t\tthis.invalidateVertices(this._curveSubGeometry.positions);\n\t\tthis.invalidateVertices(this._curveSubGeometry.curves);\n\t\tthis.invalidateVertices(this._curveSubGeometry.uvs);\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (shader.uvBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.uvBufferIndex, this._curveSubGeometry.uvs, stage);\n\n\t\tthis.activateVertexBufferVO(0, this._curveSubGeometry.positions, stage);\n\t\tthis.activateVertexBufferVO(1, this._curveSubGeometry.curves, stage);\n\n\t\tsuper._render(shader, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthis.getIndexBufferVO(stage).draw(ContextGLDrawMode.TRIANGLES, firstIndex, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tstage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.CurveSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\treturn new CurveSubGeometryVO(this._pool, this._curveSubGeometry);\n\t}\n}\n\nexport = CurveSubGeometryVO;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\n\n/**\n *\n * @class away.pool.LineSubGeometryVO\n */\nclass LineSubGeometryVO extends SubGeometryVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _lineSubGeometry:LineSubGeometry;\n\n\tconstructor(pool:SubGeometryVOPool, lineSubGeometry:LineSubGeometry)\n\t{\n\t\tsuper(pool, lineSubGeometry);\n\n\t\tthis._lineSubGeometry = lineSubGeometry;\n\n\t\tthis.invalidateVertices(this._lineSubGeometry.positions);\n\t\tthis.invalidateVertices(this._lineSubGeometry.thickness);\n\t\tthis.invalidateVertices(this._lineSubGeometry.colors);\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.colorBufferIndex, this._lineSubGeometry.colors, stage);\n\n\t\tthis.activateVertexBufferVO(0, this._lineSubGeometry.positions, stage, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineSubGeometry.positions, stage, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineSubGeometry.thickness, stage);\n\n\t\tsuper._render(shader, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthis.getIndexBufferVO(stage).draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tstage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\treturn new LineSubGeometryVO(this._pool, this._lineSubGeometry);\n\t}\n}\n\nexport = LineSubGeometryVO;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\n\n/**\n *\n * @class away.pool.Sampler2DVO\n */\nclass Sampler2DVO extends SamplerVOBase\n{\n\tpublic sampler2D:Sampler2D;\n\n\tpublic fragmentReg:ShaderRegisterElement;\n\n\tpublic fragmentIndex:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper(stage);\n\t}\n\n\n\tpublic initProperties(sampler2D:Sampler2D, regCache:ShaderRegisterCache)\n\t{\n\t\tthis.sampler2D = sampler2D;\n\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\n\t\tthis.samplerIndex = this.samplerReg.index;\n\n\t\tif (this.sampler2D.imageRect) {\n\t\t\tthis.fragmentReg = regCache.getFreeFragmentConstant();\n\t\t\tthis.fragmentIndex = this.fragmentReg.index*4;\n\t\t}\n\t}\n\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = (shader.repeatTextures? \"wrap\":\"clamp\");\n\t\tvar format:string = this.getFormatString(this.sampler2D);\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//handles texture atlasing\n\t\tif (this.sampler2D.imageRect) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + this.fragmentReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + this.fragmentReg + \".zw\\n\";\n\t\t} else {\n\t\t\ttemp = inputReg;\n\t\t}\n\n\t\tcode += \"tex \" + targetReg + \", \" + temp + \", \" + this.samplerReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._stage.getImageObject(this.sampler2D.image2D).activate(this.samplerIndex, this.sampler2D.repeat || shader.repeatTextures, this.sampler2D.smooth || shader.useSmoothTextures, this.sampler2D.mipmap || shader.useMipmapping);\n\n\t\tif (this.sampler2D.imageRect) {\n\t\t\tvar index:number = this.fragmentIndex;\n\t\t\tvar data:Array<number> = shader.fragmentConstantData;\n\t\t\tdata[index] = this.sampler2D.scaleX;\n\t\t\tdata[index + 1] = this.sampler2D.scaleY;\n\t\t\tdata[index + 2] = this.sampler2D.offsetX;\n\t\t\tdata[index + 3] = this.sampler2D.offsetY;\n\t\t}\n\t}\n}\n\nexport = Sampler2DVO;",
    "import SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\n\n/**\n *\n * @class away.pool.BitmapObject\n */\nclass SamplerCubeVO extends SamplerVOBase\n{\n\tpublic samplerCube:SamplerCube;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper(stage);\n\t}\n\n\tpublic initProperties(samplerCube:SamplerCube, regCache:ShaderRegisterCache)\n\t{\n\t\tthis.samplerCube = samplerCube;\n\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\n\n\t\tthis.samplerIndex = this.samplerReg.index;\n\t}\n\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = this.getFormatString(this.samplerCube);\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + this.samplerReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._stage.getImageObject(this.samplerCube.imageCube).activate(this.samplerIndex, false, this.samplerCube.smooth || shader.useSmoothTextures, this.samplerCube.mipmap || shader.useMipmapping);\n\t}\n}\n\nexport = SamplerCubeVO;",
    "import SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n *\n * @class away.pool.SamplerVOBase\n */\nclass SamplerVOBase\n{\n\tpublic _stage:Stage;\n\n\tpublic samplerReg:ShaderRegisterElement;\n\n\tpublic samplerIndex:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic getFormatString(bitmap:SamplerBase):string\n\t{\n\t\tswitch (bitmap.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = SamplerVOBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport Sampler2DVO\t\t\t\t= require(\"awayjs-renderergl/lib/vos/Sampler2DVO\");\n\n/**\n *\n * @class away.pool.Single2DTextureVO\n */\nclass Single2DTextureVO extends TextureVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = Single2DTexture;\n\n\tprivate _single2DTexture:Single2DTexture;\n\n\tprivate _sampler2DVO:Sampler2DVO;\n\n\tconstructor(pool:TextureVOPool, single2DTexture:Single2DTexture, stage:Stage)\n\t{\n\t\tsuper(pool, single2DTexture, stage);\n\n\t\tthis._single2DTexture = single2DTexture;\n\n\t\tthis._sampler2DVO = new Sampler2DVO(stage);\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\t\tthis._sampler2DVO.initProperties(this._single2DTexture.sampler2D, regCache);\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\treturn this._sampler2DVO.getFragmentCode(shader, targetReg, regCache, inputReg);\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._sampler2DVO.activate(shader);\n\t}\n}\n\nexport = Single2DTextureVO;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport SamplerCubeVO\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerCubeVO\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass SingleCubeTextureVO extends TextureVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = SingleCubeTexture;\n\n\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\n\tprivate _samplerCubeVO:SamplerCubeVO;\n\n\tconstructor(pool:TextureVOPool, singleCubeTexture:SingleCubeTexture, stage:Stage)\n\t{\n\t\tsuper(pool, singleCubeTexture, stage);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\n\t\tthis._samplerCubeVO = new SamplerCubeVO(stage);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase, includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tshader.usesLocalPosFragment = true;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\t\tthis._samplerCubeVO.initProperties(this._singleCubeTexture.samplerCube, regCache);\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\treturn this._samplerCubeVO.getFragmentCode(shader, targetReg, regCache, inputReg);\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._samplerCubeVO.activate(shader);\n\t}\n}\n\nexport = SingleCubeTextureVO;",
    "import AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport AttributesBufferVO\t\t\t= require(\"awayjs-stagegl/lib/vos/AttributesBufferVO\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\n\n/**\n *\n * @class away.pool.SubGeometryVOBaseBase\n */\nclass SubGeometryVOBase implements ISubGeometryVO\n{\n\tpublic _pool:SubGeometryVOPool;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onIndicesDisposedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesDisposedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _overflow:SubGeometryVOBase;\n\tprivate _indices:AttributesBuffer;\n\tprivate _indicesDirty:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesDirty:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number;\n\n\tprivate _numVertices:number;\n\n\tpublic invalid:boolean;\n\n\tpublic get subGeometry()\n\t{\n\t\treturn this._subGeometry;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tconstructor(pool:SubGeometryVOPool, subGeometry:SubGeometryBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis._subGeometry = subGeometry;\n\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onIndicesDisposedDelegate = (event:SubGeometryEvent) => this._onIndicesDisposed(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\t\tthis._onVerticesDisposedDelegate = (event:SubGeometryEvent) => this._onVerticesDisposed(event);\n\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_DISPOSED, this._onIndicesDisposedDelegate);\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_DISPOSED, this._onVerticesDisposedDelegate);\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\n\t\tthis.invalidateIndices();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get indexMappings():Array<number>\n\t{\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferVO(stage:Stage):AttributesBufferVO\n\t{\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\treturn stage.getAttributesBufferVO(this._indices);\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferVO(attributesView:AttributesView, stage:Stage):AttributesBufferVO\n\t{\n\t\tvar bufferId:number = attributesView.buffer.id;\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\tif (this._verticesDirty[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn stage.getAttributesBufferVO(this._vertices[bufferId]);\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, stage:Stage, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferVO(attributesView, stage).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset);\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidateIndices()\n\t{\n\t\tif (!this._subGeometry.indices)\n\t\t\treturn;\n\n\t\tthis._indicesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeIndices()\n\t{\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t */\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._verticesDirty[bufferId] = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic disposeVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId].dispose();\n\t\tthis._vertices[bufferId] = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this._subGeometry);\n\n\t\tthis.disposeIndices();\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iRender(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (this._indicesDirty)\n\t\t\tthis._updateIndices();\n\n\t\tthis._render(shader, stage);\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow._iRender(shader, stage);\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (this._indices)\n\t\t\tthis._drawElements(0, this._numIndices, stage);\n\t\telse\n\t\t\tthis._drawArrays(0, this._numVertices, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tthis._indices = SubGeometryUtils.getSubIndices(this._subGeometry.indices, this._subGeometry.numVertices, this._indexMappings, indexOffset);\n\n\t\tthis._numIndices = this._indices.count*this._subGeometry.indices.dimensions;\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.count*this._subGeometry.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowSubGeometry();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesDirty = false;\n\t\t\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesDirty)\n\t\t\t\tthis._verticesDirty[key] = true;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = attributesView.count;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = SubGeometryUtils.getSubVertices(attributesView.buffer, this._indexMappings);\n\n\t\tthis._verticesDirty[bufferId] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndices();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesDisposed(event:SubGeometryEvent)\n\t{\n\t\tthis.disposeIndices();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateVertices(event.attributesView);\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesDisposed(event:SubGeometryEvent)\n\t{\n\t\tthis.disposeVertices(event.attributesView);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryVOBase;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\nimport ISubGeometryVOClass\t\t\t= require(\"awayjs-renderergl/lib/vos/ISubGeometryVOClass\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\nimport TriangleSubGeometryVO\t\t= require(\"awayjs-renderergl/lib/vos/TriangleSubGeometryVO\");\nimport LineSubGeometryVO\t\t\t= require(\"awayjs-renderergl/lib/vos/LineSubGeometryVO\");\nimport CurveSubGeometryVO\t\t\t= require(\"awayjs-renderergl/lib/vos/CurveSubGeometryVO\");\n\n/**\n * @class away.pool.SubGeometryVOPool\n */\nclass SubGeometryVOPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static _pool:SubGeometryVOPool;\n\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometryDataClass\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ISubGeometry\n\t */\n\tpublic getItem(subGeometry:SubGeometryBase):SubGeometryVOBase\n\t{\n\t\treturn (this._pool[subGeometry.id] || (this._pool[subGeometry.id] = subGeometry._iAddSubGeometryVO(new (SubGeometryVOPool.getClass(subGeometry))(this, subGeometry))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(subGeometry:SubGeometryBase)\n\t{\n\t\tsubGeometry._iRemoveSubGeometryVO(this._pool[subGeometry.id]);\n\n\t\tthis._pool[subGeometry.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderPool\n\t */\n\tpublic static getPool():SubGeometryVOPool\n\t{\n\t\treturn (SubGeometryVOPool._pool || (SubGeometryVOPool._pool = new SubGeometryVOPool()));\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subGeometryVOClass:ISubGeometryVOClass)\n\t{\n\t\tSubGeometryVOPool.classPool[subGeometryVOClass.assetClass.assetType] = subGeometryVOClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubGeometryVOClass\n\t{\n\t\treturn SubGeometryVOPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubGeometryVOPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubGeometryVOPool.registerClass(CurveSubGeometryVO);\n\t\tSubGeometryVOPool.registerClass(LineSubGeometryVO);\n\t\tSubGeometryVOPool.registerClass(TriangleSubGeometryVO);\n\t}\n}\n\nexport = SubGeometryVOPool;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ITextureVO\t\t\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\n\n/**\n *\n * @class away.pool.TextureVOBaseBase\n */\nclass TextureVOBase implements ITextureVO\n{\n\tprivate _pool:TextureVOPool;\n\tprivate _texture:TextureBase;\n\n\tpublic _stage:Stage;\n\n\tpublic invalid:boolean;\n\n\tconstructor(pool:TextureVOPool, texture:TextureBase, stage:Stage)\n\t{\n\t\tthis._pool = pool;\n\t\tthis._texture = texture;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this._texture);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = TextureVOBase;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ITextureVOClass\t\t\t= require(\"awayjs-renderergl/lib/vos/ITextureVOClass\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport Single2DTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/Single2DTextureVO\");\nimport SingleCubeTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/SingleCubeTextureVO\");\n\n/**\n * @class away.pool.TextureVOPool\n */\nclass TextureVOPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic _stage:Stage;\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(texture:TextureBase):TextureVOBase\n\t{\n\t\treturn (this._pool[texture.id] || (this._pool[texture.id] = texture._iAddTextureVO(new (TextureVOPool.getClass(texture))(this, texture, this._stage))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(texture:TextureBase)\n\t{\n\t\ttexture._iRemoveTextureVO(this._pool[texture.id]);\n\n\t\tthis._pool[texture.id] = null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\tthis._pool[id].dispose();\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(textureVOClass:ITextureVOClass)\n\t{\n\t\tTextureVOPool.classPool[textureVOClass.assetClass.assetType] = textureVOClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(texture:TextureBase):ITextureVOClass\n\t{\n\t\treturn TextureVOPool.classPool[texture.assetType];\n\t}\n\n\tprivate static main = TextureVOPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tTextureVOPool.registerClass(Single2DTextureVO);\n\t\tTextureVOPool.registerClass(SingleCubeTextureVO);\n\t}\n}\n\nexport = TextureVOPool;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SubGeometryVOPool\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOPool\");\nimport SubGeometryVOBase\t\t\t= require(\"awayjs-renderergl/lib/vos/SubGeometryVOBase\");\n\n/**\n *\n * @class away.pool.TriangleSubGeometryVO\n */\nclass TriangleSubGeometryVO extends SubGeometryVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _triangleSubGeometry:TriangleSubGeometry;\n\n\tconstructor(pool:SubGeometryVOPool, triangleSubGeometry:TriangleSubGeometry)\n\t{\n\t\tsuper(pool, triangleSubGeometry);\n\n\t\tthis._triangleSubGeometry = triangleSubGeometry;\n\n\t\tthis.invalidateVertices(this._triangleSubGeometry.positions);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.normals);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.tangents);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.uvs);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.secondaryUVs);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.jointIndices);\n\t\tthis.invalidateVertices(this._triangleSubGeometry.jointWeights);\n\t}\n\n\tpublic _render(shader:ShaderBase, stage:Stage)\n\t{\n\t\tif (shader.uvBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.uvBufferIndex, this._triangleSubGeometry.uvs, stage);\n\n\t\tif (shader.secondaryUVBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.secondaryUVBufferIndex, this._triangleSubGeometry.secondaryUVs, stage);\n\n\t\tif (shader.normalBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.normalBufferIndex, this._triangleSubGeometry.normals, stage);\n\n\t\tif (shader.tangentBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.tangentBufferIndex, this._triangleSubGeometry.tangents, stage);\n\n\t\tif (shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.jointIndexIndex, this._triangleSubGeometry.jointIndices, stage);\n\n\t\tif (shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.jointIndexIndex, this._triangleSubGeometry.jointWeights, stage);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleSubGeometry.positions, stage);\n\n\n\t\tsuper._render(shader, stage);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number, stage:Stage)\n\t{\n\t\tthis.getIndexBufferVO(stage).draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number, stage:Stage)\n\t{\n\t\tstage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowSubGeometry():SubGeometryVOBase\n\t{\n\t\treturn new TriangleSubGeometryVO(this._pool, this._triangleSubGeometry);\n\t}\n}\n\nexport = TriangleSubGeometryVO;"
  ],
  "sourceRoot": ""
}