{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/RendererGL.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationElements.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/elements/ElementsPool.ts",
    "awayjs-renderergl/lib/elements/GL_ElementsBase.ts",
    "awayjs-renderergl/lib/elements/GL_LineElements.ts",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements.ts",
    "awayjs-renderergl/lib/elements/GL_TriangleElements.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/PassEvent.ts",
    "awayjs-renderergl/lib/events/RTTEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/BlurFilter3D.ts",
    "awayjs-renderergl/lib/filters/CompositeFilter3D.ts",
    "awayjs-renderergl/lib/filters/FXAAFilter3D.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/pick/ShaderPicker.ts",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/sort/RenderableMergeSort.ts",
    "awayjs-renderergl/lib/sort/RenderableNullSort.ts",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase.ts",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase.ts",
    "awayjs-renderergl/lib/surfaces/SurfacePool.ts",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/surfaces/passes/PassBase.ts",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture.ts",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture.ts",
    "awayjs-renderergl/lib/textures/GL_TextureBase.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "GL_SkyboxElements",
    "RTTBufferManager",
    "SurfacePool",
    "DefaultRenderer",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_antiAlias",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "_skyBoxSurfacePool",
    "Object",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "entityCollector",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "camera",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "dirLights",
    "directionalLights",
    "pointLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "skyBox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getAbstraction",
    "updateSkyboxProjection",
    "surfaceGL",
    "surface",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/geom/Matrix3D",
    "undefined",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "GL_DepthSurface",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_DistanceSurface",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "ContextGLDrawMode",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "RTTEvent",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "Array",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "FLOAT_2",
    "setRenderTarget",
    "activate",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "awayjs-renderergl/lib/events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RendererEvent",
    "EntityCollector",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "ElementsPool",
    "RenderableMergeSort",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_abstractionClassPool",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "id",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "elements",
    "registerAbstraction",
    "renderableClass",
    "assetClass",
    "renderableGL",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_iCreateEntityCollector",
    "_viewportDirty",
    "_scissorDirty",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "_applyCollector",
    "LESS",
    "head",
    "_pOpaqueRenderableHead",
    "first",
    "LESS_EQUAL",
    "_pBlendedRenderableHead",
    "item",
    "renderableHead",
    "_pCamera",
    "_iEntryPoint",
    "_pCameraForward",
    "transform",
    "forwardVector",
    "_iApplyRenderable",
    "next",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "entity",
    "position",
    "subtract",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "numElements",
    "obj",
    "push",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/traverse/EntityCollector",
    "awayjs-renderergl/lib/elements/ElementsPool",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/RendererGL",
    "BasicMaterial",
    "Skybox",
    "Billboard",
    "LineSegment",
    "LineElements",
    "TriangleElements",
    "Graphic",
    "Single2DTexture",
    "SingleCubeTexture",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "ShaderBase",
    "GL_LineElements",
    "GL_TriangleElements",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "renderergl",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "node",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "mesh",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationElements",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "parent",
    "animationElements",
    "_iGenerateAnimationElements",
    "initParticleFunc",
    "geometry",
    "graphics",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetElements",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "invalidateElements",
    "setNullPose",
    "elementsGL",
    "_iIndex",
    "_elementsPool",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "sceneTransform",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "elementsClass",
    "_shader",
    "_elementsClass",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase",
    "AssetEvent",
    "ElementsUtils",
    "GL_ElementsBase",
    "pool",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferVO",
    "_indices",
    "getVertexBufferVO",
    "bufferId",
    "_updateVertices",
    "size",
    "onClear",
    "names",
    "getCustomAtributesNames",
    "_overflow",
    "_render",
    "_drawElements",
    "_drawArrays",
    "firstIndex",
    "numIndices",
    "firstVertex",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "lineElements",
    "_constants",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "registerCache",
    "sharedRegisters",
    "_iGetFragmentCode",
    "thickness",
    "colors",
    "colorBufferIndex",
    "projection",
    "setProgramConstantsFromMatrix",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "draw",
    "drawVertices",
    "_pool",
    "apply",
    "arguments",
    "Matrix3DUtils",
    "triangleElements",
    "_triangleElements",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "viewMatrixReg",
    "viewMatrixIndex",
    "projectionDependencies",
    "projectionFragment",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "sceneMatrixIndex",
    "copyRawDataTo",
    "matrix3D",
    "CALCULATION_MATRIX",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "ErrorBase",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "EventBase",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask",
    "Filter3DVBlurTask",
    "Filter3DBase",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask",
    "FXAAFilter3D",
    "_fxaaTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "_textureWidth",
    "_textureHeight",
    "Filter3DTaskBase",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "op",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "numSamples",
    "invW",
    "Image2D",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "awayjs-core/lib/image/Image2D",
    "invH",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/pick/ShaderPicker",
    "Debug",
    "ContextGLTriangleFace",
    "ShaderPicker",
    "shaderPickingDetails",
    "_onlyMouseEnabled",
    "_interactives",
    "_localHitPosition",
    "_hitUV",
    "_localHitNormal",
    "_rayPos",
    "_rayDir",
    "_shaderPickingDetails",
    "_id",
    "_viewportData",
    "_boundOffsetScale",
    "getViewCollision",
    "view",
    "collector",
    "iEntityCollector",
    "renderer",
    "_context",
    "_projX",
    "_projY",
    "_potentialFound",
    "_blendedRenderableHead",
    "_opaqueRenderableHead",
    "_bitmapImage2D",
    "_hitColor",
    "getPixel",
    "_hitRenderable",
    "_hitEntity",
    "_iIsMouseEnabled",
    "_collisionVO",
    "_iPickingCollisionVO",
    "getHitDetails",
    "localPosition",
    "localNormal",
    "_faceIndex",
    "getSceneCollision",
    "direction",
    "scene",
    "MOUSE_SCISSOR_RECT",
    "_interactiveId",
    "_objectProgram",
    "initObjectProgram",
    "setCulling",
    "bothSides",
    "NONE",
    "BACK",
    "coordinateSystem",
    "updateRay",
    "getRay",
    "vertexCode",
    "fragmentCode",
    "throwPIR",
    "initTriangleProgram",
    "_triangleProgram",
    "getApproximatePosition",
    "getPreciseDetails",
    "bounds",
    "getBox",
    "col",
    "scX",
    "scY",
    "scZ",
    "offsX",
    "offsY",
    "offsZ",
    "localViewProjection",
    "depth",
    "setScissorRectangle",
    "t1",
    "t2",
    "t3",
    "v0x",
    "v0y",
    "v0z",
    "v1x",
    "v1y",
    "v1z",
    "v2x",
    "v2y",
    "v2z",
    "ni1",
    "ni2",
    "ni3",
    "n1",
    "n2",
    "n3",
    "nLength",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "invDenom",
    "ui1",
    "ui2",
    "ui3",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "subGeom",
    "_pGetElements",
    "uvDim",
    "normalDim",
    "getPrecisePosition",
    "invSceneTransform",
    "px",
    "py",
    "pz",
    "rx",
    "ry",
    "rz",
    "RAW_DATA_CONTAINER",
    "awayjs-core/lib/utils/Debug",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "AttributesBuffer",
    "DefaultMaterialManager",
    "GL_RenderableBase",
    "GL_Billboard",
    "billboard",
    "_billboard",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetRenderOwner",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "_renderer",
    "RenderableEvent",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onRenderOwnerUpdatedDelegate",
    "_onRenderOwnerUpdated",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_RENDER_OWNER",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_updateRenderOwner",
    "_surfaceGL",
    "_setRenderState",
    "getDefaultMaterial",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "skybox",
    "_skybox",
    "_vertexArray",
    "_geometry",
    "far",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "BlendMode",
    "ArgumentError",
    "CompilerBase",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "usesPositionFragment",
    "imageIndices",
    "_updateProgram",
    "_programData",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "usesAnimation",
    "useBothSides",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "invalidateShader",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "postAnimationFragmentCode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeFragmentConstant",
    "removeFragmentTempUsage",
    "getFreeFragmentVectorTemp",
    "getFreeFragmentSingleTemp",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "textures",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_uvSource",
    "_uvTarget",
    "_iInitConstantData",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "BasicMaterialPass",
    "GL_SurfaceBase",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "GL_SurfacePassBase",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "DistanceRender",
    "_texture",
    "SurfaceEvent",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "_surfaceClassGL",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "_preserveAlpha",
    "MappingMode",
    "GL_TextureBase",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "ContextGLTextureFormat",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Mesh",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToMeshes",
    "meshes",
    "_toDispose",
    "_graphicVOs",
    "destMesh",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Mesh",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport GL_SkyboxElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_SkyboxElements\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SkyboxRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis._shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tsuper.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(entityCollector.skyBox);\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar render:GL_SurfaceBase = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface);\n\n\t\tvar pass:IPass = render.passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport GL_DepthSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\");\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport GL_DistanceSurface\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTEvent\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/RTTEvent\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(0, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport RenderableListItem\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/ProgramData\");\nimport GL_IAssetClass\t\t\t\t= require(\"awayjs-stagegl/lib/library/GL_IAssetClass\");\n\nimport ISurfaceClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-renderergl/lib/sort/RenderableMergeSort\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\tprivate _applyCollector(entityCollector:CollectorBase)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\t//grab renderable head\n\t\tvar item:RenderableListItem = entityCollector.renderableHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all display\n\t\twhile (item) {\n\t\t\tthis._iApplyRenderable(item.renderable);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(entityCollector);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:CollectorBase)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tpublic drawRenderables(renderableGL:GL_RenderableBase, entityCollector:CollectorBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\tpublic _iApplyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\tvar entity:IEntity = renderableGL.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderableGL.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\t\trenderableGL.maskId = entity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = entity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = renderableGL.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, this._pCamera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, this._pCamera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RendererBase;",
    "import BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport GL_BasicMaterialSurface\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nimport GL_SkyboxSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\nimport GL_BillboardRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\");\nimport GL_LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\");\nimport GL_GraphicRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nimport GL_SkyboxRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport GL_LineElements\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_LineElements\");\nimport GL_TriangleElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nimport GL_Single2DTexture\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_Single2DTexture\");\nimport GL_SingleCubeTexture\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\");\n\n\n\nSurfacePool.registerAbstraction(GL_BasicMaterialSurface, BasicMaterial);\nSurfacePool.registerAbstraction(GL_SkyboxSurface, Skybox);\n\nElementsPool.registerAbstraction(GL_LineElements, LineElements);\nElementsPool.registerAbstraction(GL_TriangleElements, TriangleElements);\n\nShaderBase.registerAbstraction(GL_Single2DTexture, Single2DTexture);\nShaderBase.registerAbstraction(GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(GL_SkyboxRenderable, Skybox);\n\n/**\n *\n * static shim\n */\nclass renderergl\n{\n}\n\nexport = renderergl;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport = AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic)\n\t{\n\t\tvar mesh:Mesh = <Mesh> graphic.parent.sourceEntity;\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(mesh);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:Graphics = <Graphics> mesh.graphics;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a Graphics object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.graphics.count; i++) {\n\t\t\tgraphic = mesh.graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < mesh.graphics.count; k++) {\n\t\t\t\t\tgraphic = mesh.graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_GraphicRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ElementsEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_GraphicRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar i0:number /*uint*/ = 0;\n\t\tvar i1:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\"\t);\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport GL_GraphicRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_ElementsBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubMesh\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationElements;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport = ElementsPool;",
    "import Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_AttributesBuffer\t\t\t= require(\"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\n\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IAbstractionPool \t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IEntity = require(\"awayjs-display/lib/display/IEntity\");\nimport Matrix3D = require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tprivate _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferVO():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferVO(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferVO(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._onClearIndices(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._elements.indices));\n\n\t\tvar names:Array<string> = this._elements.getCustomAtributesNames();\n\t\tvar len:number = names.length;\n\t\tfor (var i:number = 0; i <len; i++)\n\t\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._elements.getCustomAtributes(names[i])));\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _iRender(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tthis._render(sourceEntity, camera, viewProjection);\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow._iRender(sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _render(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._indices)\n\t\t\tthis._drawElements(0, this._numIndices);\n\t\telse\n\t\t\tthis._drawArrays(0, this._numVertices);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = attributesView.count;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = GL_ElementsBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IEntity = require(\"awayjs-display/lib/display/IEntity\");\nimport IAbstractionPool = require(\"awayjs-core/lib/library/IAbstractionPool\");\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.positions));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.thickness));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.colors));\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _render(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\tthis._calcMatrix.copyFrom(sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.thickness);\n\n\t\tsuper._render(sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport = GL_LineElements;",
    "import ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TriangleElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = GL_SkyboxElements;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\n\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.positions));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.normals));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.tangents));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.uvs));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.jointIndices));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.jointWeights));\n\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _render(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\tsourceEntity.getRenderSceneTransform(camera).copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n\n\t\tsuper._render(sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, firstIndex, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport = GL_TriangleElements;",
    "import ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport EventBase\t\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport = PassEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport RTTBufferManager\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport = RTTEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DHBlurTask\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\");\nimport Filter3DVBlurTask\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport = BlurFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DCompositeTask\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport = CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DFXAATask\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport = FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nimport RTTBufferManager = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\n\t\tvar code:string;\n\t\tvar op:string;\n\t\tcode = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, v0, fc1.zw\\n\" +\n\t\t\t\"add ft1, ft1, fc1.xy\\n\" +\n\t\t\t\"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, ft1, fc0.xxx\\n\" +\n\t\t\t\"add ft1, ft1, fc0.xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, ft1, ft2\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, ft0\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 2);\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(1, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport = Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 6);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport RTTBufferManager = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DVBlurTask;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport RTTEvent\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/RTTEvent\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapImage2D\t\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLDrawMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_ElementsBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.display.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:GL_RenderableBase;\n\tprivate _blendedRenderableHead:GL_RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapImage2D:BitmapImage2D;\n\tprivate _viewportData:Float32Array;\n\tprivate _boundOffsetScale:Float32Array;\n\tprivate _id:Float32Array;\n\n\tprivate _interactives:Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:GL_RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _elementsIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Float32Array(4);\n\t\tthis._viewportData = new Float32Array(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Float32Array(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapImage2D)\n\t\t\tthis._bitmapImage2D = new BitmapImage2D(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\t\tthis._hitColor = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.elementsIndex = this._elementsIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.elementsIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderableGL:GL_RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderableGL) {\n\t\t\t// it's possible that the renderableGL was already removed from the scene\n\t\t\tif (!renderableGL.sourceEntity.scene || !renderableGL.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderableGL = renderableGL.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderableGL.surfaceGL.surface).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderableGL;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderableGL.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\n\t\t\t//var positionAttributes:GL_AttributesBuffer = <GL_AttributesBuffer> this._stage.getAbstraction((<TriangleElements> renderableGL.elements).positions);\n\t\t\t//positionAttributes.activate(0, positionAttributes.size, positionAttributes.dimensions, positionAttributes.offset);\n\n\t\t\t//elementsGL.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, 0, elementsGL.numIndices);\n\n\t\t\trenderableGL = renderableGL.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\t//var elementsGL:GL_ElementsBase = this._hitRenderable.elementsGL;\n\t\t//\n\t\t//elementsGL.activateVertexBufferVO(0, (<TriangleElements> elementsGL.elements).positions);\n\t\t//elementsGL.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, 0, elementsGL.numIndices);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\n\t\tcol = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar subGeom:TriangleElements = <TriangleElements> this._hitRenderable._pGetElements();\n\t\tvar indices:Uint16Array = subGeom.indices.get(subGeom.numElements);\n\n\t\tvar positions:ArrayBufferView = subGeom.positions.get(subGeom.numVertices);\n\t\tvar posDim:number = subGeom.positions.dimensions;\n\n\t\tvar uvs:ArrayBufferView = subGeom.uvs.get(subGeom.numVertices);\n\t\tvar uvDim:number = subGeom.uvs.dimensions;\n\n\t\tvar normals:Float32Array = subGeom.normals.get(subGeom.numVertices);\n\t\tvar normalDim:number = subGeom.normals.dimensions;\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = indices[i]*posDim;\n\t\t\tt2 = indices[j]*posDim;\n\t\t\tt3 = indices[k]*posDim;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = indices[i]*normalDim;\n\t\t\t\t\tni2 = indices[j]*normalDim;\n\t\t\t\t\tni3 = indices[k]*normalDim;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = indices[i]*uvDim\n\t\t\t\t\tui2 = indices[j]*uvDim\n\t\t\t\t\tui3 = indices[k]*uvDim\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back elementsIndex value\n\t\t\t\t\t//this._elementsIndex = away.utils.GraphicsUtils.getMeshElementsIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapImage2D.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapImage2D = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetRenderOwner():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport = GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, graphic.parent.sourceEntity, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetRenderOwner():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport = GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetRenderOwner():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport = GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\nimport GL_SamplerBase\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerBase\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onRenderOwnerUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateRenderOwner();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, sourceEntity:IEntity, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onRenderOwnerUpdatedDelegate = (event:RenderableEvent) => this._onRenderOwnerUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onRenderOwnerUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onRenderOwnerUpdatedDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onRenderOwnerUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetRenderOwner():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tpass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements)._iRender(this.sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateRenderOwner()\n\t{\n\t\tvar surface:ISurface = this._pGetRenderOwner() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport = GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetRenderOwner():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport = GL_SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\nimport GL_IAssetClass\t\t\t\t= require(\"awayjs-stagegl/lib/library/GL_IAssetClass\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic numLights:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._elementsClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = Array<ShaderRegisterElement>();\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string> = new Array<string>();\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string> = new Array<string>();\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp()\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pAnimatableAttributes.push(\"va0\");\n\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = LightingCompiler;",
    "import IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport = GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceRender;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport = GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\n\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\nimport GL_SamplerBase\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerBase\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\n\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_BasicMaterialSurface\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nimport ISurfaceClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_SkyboxSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport = SurfacePool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = PassBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport GL_Image2D\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_Image2D\");\nimport GL_Sampler2D\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_Sampler2D\");\n\nimport MappingMode\t\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport GL_SamplerCube\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerCube\");\n\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport = GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = GL_TextureBase;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destMesh.graphics.clone();\n\t\tdestGraphics = destMesh.graphics;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestMesh.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < mesh.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> mesh.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(mesh.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(mesh);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGraphicsTransform;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\n\nimport ParticleGraphicsTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\");\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport = ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport = PerspectiveMatrix3D;"
  ],
  "sourceRoot": ""
}