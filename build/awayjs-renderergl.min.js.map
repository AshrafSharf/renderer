{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticleData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/base/ParticleGeometry.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/pick/JSPickingCollider.ts",
    "awayjs-renderergl/lib/pick/PickingColliderBase.ts",
    "awayjs-renderergl/lib/pick/ShaderPicker.ts",
    "awayjs-renderergl/lib/render/BasicMaterialRender.ts",
    "awayjs-renderergl/lib/render/DepthRender.ts",
    "awayjs-renderergl/lib/render/DistanceRender.ts",
    "awayjs-renderergl/lib/render/RenderBase.ts",
    "awayjs-renderergl/lib/render/RenderPassBase.ts",
    "awayjs-renderergl/lib/render/RenderPool.ts",
    "awayjs-renderergl/lib/render/SkyboxRender.ts",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/render/passes/PassBase.ts",
    "awayjs-renderergl/lib/renderables/BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/RenderablePool.ts",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable.ts",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts",
    "awayjs-renderergl/lib/vos/Sampler2DVO.ts",
    "awayjs-renderergl/lib/vos/SamplerCubeVO.ts",
    "awayjs-renderergl/lib/vos/SamplerVOBase.ts",
    "awayjs-renderergl/lib/vos/Single2DTextureVO.ts",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO.ts",
    "awayjs-renderergl/lib/vos/TextureVOBase.ts",
    "awayjs-renderergl/lib/vos/TextureVOPool.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "RenderablePool",
    "RTTBufferManager",
    "DefaultRenderer",
    "_super",
    "stage",
    "_skyboxProjection",
    "_pRenderablePool",
    "_pStage",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "Object",
    "defineProperty",
    "get",
    "_antiAlias",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "entityCollector",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "dirLights",
    "directionalLights",
    "pointLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "skyBox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getItem",
    "camera",
    "updateSkyboxProjection",
    "getRenderPool",
    "renderableOwner",
    "renderOwner",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/data/BitmapImage2D",
    "undefined",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/renderables/RenderablePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "DepthRender",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "awayjs-renderergl/lib/render/DepthRender",
    "DistanceRender",
    "awayjs-renderergl/lib/render/DistanceRender",
    "Event",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "getMainInputTexture",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "Array",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setVertexBufferAt",
    "FLOAT_2",
    "renderToScreenVertexBuffer",
    "setTextureAt",
    "setProgram",
    "getProgram",
    "activate",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawTriangles",
    "deactivate",
    "removeEventListener",
    "awayjs-core/lib/events/Event",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RenderableMergeSort",
    "RendererEvent",
    "EntityCollector",
    "DefaultMaterialManager",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "_numUsedStreams",
    "_numUsedTextures",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumTriangles",
    "_disableColor",
    "_renderBlended",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_iCreateEntityCollector",
    "_viewportDirty",
    "_scissorDirty",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "_applyCollector",
    "setRenderTarget",
    "LESS",
    "head",
    "_pOpaqueRenderableHead",
    "first",
    "LESS_EQUAL",
    "_pBlendedRenderableHead",
    "item",
    "entityHead",
    "_pCamera",
    "_iEntryPoint",
    "_pCameraForward",
    "transform",
    "forwardVector",
    "entity",
    "_applyRenderer",
    "next",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderable2",
    "_renderOwner",
    "alphaThreshold",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "_iApplyRenderableOwner",
    "applyRenderable",
    "getDefaultMaterial",
    "renderId",
    "renderOrderId",
    "cascaded",
    "sourceEntity",
    "position",
    "subtract",
    "zIndex",
    "zOffset",
    "dotProduct",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "numTriangles",
    "overflow",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "awayjs-display/lib/traverse/EntityCollector",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "assetType",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "node",
    "push",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "id",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "mesh",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableSubGeometry",
    "sourceSubGeometry",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationSubGeometry",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationSubGeometries",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "_timeNode",
    "_iProcessAnimationSetting",
    "mode",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "profile",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationSubGeometry",
    "subMesh",
    "parentMesh",
    "animationSubGeometry",
    "subGeometry",
    "_iGenerateAnimationSubGeometries",
    "initParticleFunc",
    "geometry",
    "j",
    "k",
    "newAnimationSubGeometry",
    "localNode",
    "subMeshes",
    "shareAnimationGeometry",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorSubGeometry",
    "getAnimatorSubGeometry",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "TriangleSubGeometry",
    "SubGeometryEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedSubGeometry",
    "_morphedSubGeometryDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "numCondensedJoints",
    "_condensedMatrices",
    "usesCPU",
    "morphSubGeometry",
    "activateBuffer",
    "getVertexData",
    "JOINT_INDEX_DATA",
    "getVertexOffset",
    "JOINT_INDEX_FORMAT",
    "JOINT_WEIGHT_DATA",
    "JOINT_WEIGHT_FORMAT",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetSubGeometry",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "INDICES_UPDATED",
    "VERTICES_UPDATED",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "vertexNormals",
    "sourceTangents",
    "vertexTangents",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "updatePositions",
    "updateVertexNormals",
    "updateVertexTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "updateIndices",
    "morphGeometry",
    "dataType",
    "UV_DATA",
    "updateUVs",
    "uvs",
    "SECONDARY_UV_DATA",
    "secondaryUVs",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-core/lib/events/SubGeometryEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexDataPool",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGeometry",
    "nextGeometry",
    "blendWeight",
    "_iInvalidateRenderableGeometries",
    "setNullPose",
    "subGeom",
    "subGeometries",
    "_iIndex",
    "getIndexData",
    "POSITION_DATA",
    "getOffset",
    "POSITION_FORMAT",
    "NORMAL_DATA",
    "NORMAL_FORMAT",
    "awayjs-stagegl/lib/pool/VertexDataPool",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticleData",
    "ParticleData",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "sceneTransform",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "setPositions",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGeometry",
    "_nextGeometry",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/base/ParticleGeometry",
    "Geometry",
    "ParticleGeometry",
    "apply",
    "arguments",
    "awayjs-core/lib/data/Geometry",
    "message",
    "awayjs-core/lib/errors/Error",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "pAddTask",
    "_textureWidth",
    "_textureHeight",
    "mainTarget",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "ContextGLTextureFormat",
    "Filter3DTaskBase",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "pUpdateTextures",
    "_program3D",
    "pInvalidateProgram",
    "pUpdateProgram",
    "pGetVertexCode",
    "pGetFragmentCode",
    "createTexture",
    "BGRA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/pick/JSPickingCollider",
    "PickingColliderBase",
    "JSPickingCollider",
    "renderablePool",
    "findClosestCollision",
    "_findClosestCollision",
    "_pTestRenderableCollision",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "i0",
    "i1",
    "i2",
    "rx",
    "ry",
    "rz",
    "coeff",
    "p0x",
    "p0y",
    "p0z",
    "p1x",
    "p1y",
    "p1z",
    "p2x",
    "p2y",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "indexData",
    "collisionTriangleIndex",
    "bothSides",
    "positionData",
    "positionStride",
    "dataPerVertex",
    "positionOffset",
    "uvData",
    "uvStride",
    "uvOffset",
    "numIndices",
    "rayDirection",
    "rayPosition",
    "rayEntryDistance",
    "localPosition",
    "localNormal",
    "uv",
    "_pGetCollisionUV",
    "awayjs-renderergl/lib/pick/PickingColliderBase",
    "_renderablePool",
    "_pGetCollisionNormal",
    "triangleIndex",
    "normal",
    "p0",
    "side0",
    "side1",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "setLocalRay",
    "localDirection",
    "testBillboardCollision",
    "billboard",
    "localRayPosition",
    "localRayDirection",
    "testMeshCollision",
    "findClosest",
    "awayjs-renderergl/lib/pick/ShaderPicker",
    "Debug",
    "Matrix3DUtils",
    "ContextGLTriangleFace",
    "ShaderPicker",
    "shaderPickingDetails",
    "_onlyMouseEnabled",
    "_interactives",
    "_localHitPosition",
    "_hitUV",
    "_localHitNormal",
    "_rayPos",
    "_rayDir",
    "_shaderPickingDetails",
    "_id",
    "_viewportData",
    "_boundOffsetScale",
    "getViewCollision",
    "view",
    "collector",
    "iEntityCollector",
    "renderer",
    "_context",
    "_projX",
    "_projY",
    "_potentialFound",
    "_blendedRenderableHead",
    "_opaqueRenderableHead",
    "_bitmapImage2D",
    "_hitColor",
    "getPixel",
    "_hitRenderable",
    "_hitEntity",
    "_iIsMouseEnabled",
    "_collisionVO",
    "_iPickingCollisionVO",
    "getHitDetails",
    "_faceIndex",
    "getSceneCollision",
    "direction",
    "scene",
    "MOUSE_SCISSOR_RECT",
    "_interactiveId",
    "_objectProgram",
    "initObjectProgram",
    "CALCULATION_MATRIX",
    "setCulling",
    "NONE",
    "BACK",
    "projection",
    "coordinateSystem",
    "setProgramConstantsFromMatrix",
    "getIndexBuffer",
    "updateRay",
    "getRay",
    "vertexCode",
    "fragmentCode",
    "throwPIR",
    "initTriangleProgram",
    "_triangleProgram",
    "getApproximatePosition",
    "getPreciseDetails",
    "bounds",
    "getBox",
    "col",
    "scX",
    "scY",
    "scZ",
    "offsX",
    "offsY",
    "offsZ",
    "localViewProjection",
    "depth",
    "setScissorRectangle",
    "t1",
    "t2",
    "t3",
    "v0x",
    "v0y",
    "v0z",
    "v1x",
    "v1y",
    "v1z",
    "v2x",
    "v2y",
    "v2z",
    "ni1",
    "ni2",
    "ni3",
    "n1",
    "n2",
    "n3",
    "nLength",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "invDenom",
    "ui1",
    "ui2",
    "ui3",
    "normals",
    "normalStride",
    "normalOffset",
    "getPrecisePosition",
    "invSceneTransform",
    "px",
    "py",
    "pz",
    "RAW_DATA_CONTAINER",
    "copyRawDataTo",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/utils/Debug",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/render/BasicMaterialRender",
    "BlendMode",
    "BasicMaterialPass",
    "RenderBase",
    "BasicMaterialRender",
    "pool",
    "material",
    "renderableClass",
    "_material",
    "_pAddPass",
    "_pass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "NORMAL",
    "alphaBlending",
    "colorTransform",
    "preserveAlpha",
    "setBlendMode",
    "LAYER",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-renderergl/lib/render/RenderBase",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass",
    "RenderPassBase",
    "ShaderBase",
    "_shader",
    "_iIncludeDependencies",
    "projectionDependencies",
    "uvDependencies",
    "_iInitConstantData",
    "_fragmentConstantsIndex",
    "_iGetFragmentCode",
    "registerCache",
    "sharedRegisters",
    "targetReg",
    "dataReg1",
    "getFreeFragmentConstant",
    "dataReg2",
    "getFreeFragmentVectorTemp",
    "projectionFragment",
    "texture",
    "_iInitRegisters",
    "albedo",
    "uvVarying",
    "cutOffReg",
    "removeFragmentTempUsage",
    "awayjs-renderergl/lib/render/RenderPassBase",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "viewDirDependencies",
    "globalPosDependencies",
    "viewDirVarying",
    "far",
    "awayjs-renderergl/lib/render/IRenderClass",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_passes",
    "_pool",
    "_renderableClass",
    "_onPassChangeDelegate",
    "onPassChange",
    "_updateAnimation",
    "_renderOrderId",
    "useMipmapping",
    "mipmap",
    "useSmoothTextures",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "useBothSides",
    "repeatTextures",
    "repeat",
    "animateUVs",
    "usesColorTransform",
    "useColorTransform",
    "getTextureVO",
    "_pClearPasses",
    "disposeItem",
    "invalidateRender",
    "invalidatePasses",
    "invalidatePass",
    "invalidateAnimation",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "usesAnimation",
    "invalidateProgram",
    "_pRemovePass",
    "CHANGE",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/materials/MaterialBase",
    "invalidateShader",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "_iGetVertexCode",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "awayjs-renderergl/lib/render/RenderPool",
    "BasicMaterial",
    "Skybox",
    "SkyboxRender",
    "RenderPool",
    "renderClass",
    "_renderClass",
    "_iAddRender",
    "getClass",
    "_iRemoveRender",
    "registerClass",
    "assetClass",
    "_classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-renderergl/lib/render/SkyboxRender",
    "skybox",
    "_skybox",
    "_cubeTexture",
    "cubeMap",
    "usesLocalPosFragment",
    "localPositionVarying",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "getFreeFragmentSingleTemp",
    "colorBufferIndex",
    "colorVarying",
    "diffuseInputReg",
    "awayjs-renderergl/lib/render/passes/PassBase",
    "awayjs-renderergl/lib/render/passes/ILightingPass",
    "awayjs-renderergl/lib/render/passes/IPass",
    "_preserveAlpha",
    "_render",
    "awayjs-renderergl/lib/renderables/BillboardRenderable",
    "Billboard",
    "RenderableBase",
    "BillboardRenderable",
    "_billboard",
    "_pGetSubGeometry",
    "billboardRect",
    "_materialGeometry",
    "_pVertexDataDirty",
    "TANGENT_DATA",
    "globalPositionVertex",
    "viewMatrixReg",
    "viewMatrixIndex",
    "sceneMatrixIndex",
    "matrix3D",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-renderergl/lib/renderables/RenderableBase",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable",
    "CurveSubMesh",
    "CurveSubGeometry",
    "CurveSubMeshRenderable",
    "level",
    "indexOffset",
    "_constants",
    "curves",
    "CURVE_DATA",
    "sd",
    "standardDerivatives",
    "out",
    "curve",
    "curvex",
    "curvey",
    "curvez",
    "free",
    "free1",
    "free2",
    "d2",
    "fixa",
    "fixb",
    "_aa",
    "_0",
    "_1",
    "join",
    "CURVE_FORMAT",
    "_pGetOverflowRenderable",
    "_level",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-renderergl/lib/renderables/IRenderableClass",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable",
    "LineSubGeometry",
    "LineSegment",
    "LineSegmentRenderable",
    "lineSegment",
    "_thickness",
    "_lineSegment",
    "_calcMatrix",
    "_lineGeometry",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "startPostion",
    "end",
    "endPosition",
    "startPositions",
    "endPositions",
    "thickness",
    "updateThickness",
    "colorDependencies",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "THICKNESS_FORMAT",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable",
    "LineSubMesh",
    "LineSubMeshRenderable",
    "startColors",
    "awayjs-display/lib/base/LineSubMesh",
    "SubGeometryBase",
    "RenderableOwnerEvent",
    "IndexDataPool",
    "_geometryDirty",
    "_indexDataDirty",
    "_vertexData",
    "_vertexOffset",
    "_onIndicesUpdatedDelegate",
    "_onIndicesUpdated",
    "_onVerticesUpdatedDelegate",
    "_onVerticesUpdated",
    "_onRenderOwnerUpdatedDelegate",
    "_onRenderOwnerUpdated",
    "_indexOffset",
    "RENDER_OWNER_UPDATED",
    "_updateIndexData",
    "_overflow",
    "_numTriangles",
    "_indexData",
    "_updateVertexData",
    "_concatenateArrays",
    "VERTEX_DATA",
    "invalidateGeometry",
    "invalidateIndexData",
    "invalidateVertexData",
    "_iFillIndexData",
    "_updateGeometry",
    "_subGeometry",
    "concatenateArrays",
    "awayjs-core/lib/data/SubGeometryBase",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-stagegl/lib/pool/IndexDataPool",
    "SkyboxRenderable",
    "TriangleSubMeshRenderable",
    "_objectPools",
    "_iAddRenderable",
    "_iRemoveRenderable",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable",
    "_vertexArray",
    "_geometry",
    "TriangleSubMesh",
    "FLOAT_1",
    "awayjs-display/lib/base/TriangleSubMesh",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "getImageObject",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "ArgumentError",
    "CompilerBase",
    "TextureVOPool",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "_textureVOPool",
    "_updateProgram",
    "_programData",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvBufferIndex",
    "uvTransformIndex",
    "colorTransformIndex",
    "secondaryUVBufferIndex",
    "normalBufferIndex",
    "tangentBufferIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "UV_FORMAT",
    "SECONDARY_UV_FORMAT",
    "TANGENT_FORMAT",
    "COLOR_FORMAT",
    "uvTransform",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "postAnimationFragmentCode",
    "usages",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/vos/TextureVOPool",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pRenderableClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "console",
    "log",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_uvSource",
    "_uvTarget",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compileLocalPositionCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "uvAttributeReg",
    "varying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Mesh",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToMeshes",
    "meshes",
    "_toDispose",
    "_geomVOs",
    "destMesh",
    "subIdx",
    "oldGeom",
    "destGeom",
    "useSubMaterials",
    "sub",
    "vertices",
    "tangents",
    "addSubGeometry",
    "m",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "pd",
    "nd",
    "td",
    "ud",
    "getSubGeomData",
    "transformVectors",
    "deltaTransformVectors",
    "GeometryVO",
    "object",
    "child",
    "numChildren",
    "getChildAt",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform",
    "ParticleGeometryTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper",
    "ParticleGeometryHelper",
    "generateGeometry",
    "geometries",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "sourceSubGeometries",
    "numSubGeometries",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGeometryTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "particleGeometry",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "copyRawDataFrom",
    "awayjs-renderergl/lib/vos/ITextureVOClass",
    "awayjs-renderergl/lib/vos/Sampler2DVO",
    "SamplerVOBase",
    "Sampler2DVO",
    "initProperties",
    "sampler2D",
    "samplerReg",
    "samplerIndex",
    "imageRect",
    "fragmentReg",
    "fragmentIndex",
    "getFragmentCode",
    "inputReg",
    "wrap",
    "getFormatString",
    "image2D",
    "offsetX",
    "offsetY",
    "awayjs-renderergl/lib/vos/SamplerVOBase",
    "awayjs-renderergl/lib/vos/SamplerCubeVO",
    "SamplerCubeVO",
    "samplerCube",
    "imageCube",
    "bitmap",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-renderergl/lib/vos/Single2DTextureVO",
    "Single2DTexture",
    "TextureVOBase",
    "Single2DTextureVO",
    "single2DTexture",
    "_single2DTexture",
    "_sampler2DVO",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-renderergl/lib/vos/TextureVOBase",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO",
    "SingleCubeTexture",
    "SingleCubeTextureVO",
    "singleCubeTexture",
    "_singleCubeTexture",
    "_samplerCubeVO",
    "includeInput",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_texture",
    "invalidate",
    "invalid",
    "_iAddTextureVO",
    "_iRemoveTextureVO",
    "disposePool",
    "getPool",
    "_pools",
    "textureVOClass",
    "classPool"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\r\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\r\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\r\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\r\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\r\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\n\r\n/**\r\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\r\n * materials assigned to them.\r\n *\r\n * @class away.render.DefaultRenderer\r\n */\r\nclass DefaultRenderer extends RendererBase\r\n{\r\n\tpublic _pRequireDepthRender:boolean;\r\n\r\n\tprivate _pDistanceRenderer:DepthRenderer;\r\n\tprivate _pDepthRenderer:DepthRenderer;\r\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\r\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\r\n\r\n\tpublic _pDepthRender:BitmapImage2D;\r\n\r\n\tprivate _antiAlias:number;\r\n\r\n\tpublic get antiAlias():number\r\n\t{\r\n\t\treturn this._antiAlias;\r\n\t}\r\n\r\n\tpublic set antiAlias(value:number)\r\n\t{\r\n\t\tif (this._antiAlias == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._antiAlias = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get depthPrepass():boolean\r\n\t{\r\n\t\treturn this._depthPrepass;\r\n\t}\r\n\r\n\tpublic set depthPrepass(value:boolean)\r\n\t{\r\n\t\tthis._depthPrepass = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {*}\r\n\t */\r\n\tpublic get filters3d():Array<Filter3DBase>\r\n\t{\r\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\r\n\t}\r\n\tpublic set filters3d(value:Array<Filter3DBase>)\r\n\t{\r\n\t\tif (value && value.length == 0)\r\n\t\t\tvalue = null;\r\n\r\n\t\tif (this._pFilter3DRenderer && !value) {\r\n\t\t\tthis._pFilter3DRenderer.dispose();\r\n\t\t\tthis._pFilter3DRenderer = null;\r\n\t\t} else if (!this._pFilter3DRenderer && value) {\r\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\r\n\t\t\tthis._pFilter3DRenderer.filters = value;\r\n\t\t}\r\n\r\n\t\tif (this._pFilter3DRenderer) {\r\n\t\t\tthis._pFilter3DRenderer.filters = value;\r\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\r\n\t\t} else {\r\n\t\t\tthis._pRequireDepthRender = false;\r\n\r\n\t\t\tif (this._pDepthRender) {\r\n\t\t\t\tthis._pDepthRender.dispose();\r\n\t\t\t\tthis._pDepthRender = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new DefaultRenderer object.\r\n\t *\r\n\t * @param antiAlias The amount of anti-aliasing to use.\r\n\t * @param renderMode The render mode to use.\r\n\t */\r\n\tconstructor(stage:Stage = null)\r\n\t{\r\n\t\tsuper(stage);\r\n\r\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage);\r\n\t\t\r\n\t\tif (stage)\r\n\t\t\tthis._shareContext = true;\r\n\r\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\r\n\r\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\r\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\r\n\r\n\t\tif (this._width == 0)\r\n\t\t\tthis.width = window.innerWidth;\r\n\t\telse\r\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\r\n\r\n\t\tif (this._height == 0)\r\n\t\t\tthis.height = window.innerHeight;\r\n\t\telse\r\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\r\n\t\t\tthis._pBackBufferInvalid = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\r\n\t\t\tthis.pUpdateBackBuffer();\r\n\r\n\t\tif (this._shareContext && this._pContext)\r\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\r\n\r\n\t\tif (this._pFilter3DRenderer) {\r\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\r\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\r\n\t\t} else {\r\n\t\t\tthis.textureRatioX = 1;\r\n\t\t\tthis.textureRatioY = 1;\r\n\t\t}\r\n\r\n\t\tif (this._pRequireDepthRender)\r\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\r\n\r\n\t\tif (this._depthPrepass)\r\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\r\n\r\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\r\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\r\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif (this._shareContext)\r\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\r\n\t\t\telse\r\n\t\t\t\tthis._iRender(entityCollector);\r\n\t\t}\r\n\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (!this._shareContext && this._pContext)\r\n\t\t\tthis._pContext.present();\r\n\r\n\t\t// register that a view has been rendered\r\n\t\tthis._pStage.bufferClear = false;\r\n\t}\r\n\r\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tthis.updateLights(entityCollector);\r\n\r\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\r\n\t}\r\n\r\n\tprivate updateLights(entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\r\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\r\n\t\tvar len:number, i:number;\r\n\t\tvar light:LightBase;\r\n\t\tvar shadowMapper:ShadowMapperBase;\r\n\r\n\t\tlen = dirLights.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tlight = dirLights[i];\r\n\r\n\t\t\tshadowMapper = light.shadowMapper;\r\n\r\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\r\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\r\n\t\t}\r\n\r\n\t\tlen = pointLights.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tlight = pointLights[i];\r\n\r\n\t\t\tshadowMapper = light.shadowMapper;\r\n\r\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\r\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector)\r\n\t{\r\n\t\tif (entityCollector.skyBox) {\r\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\r\n\r\n\t\t\tthis.drawSkybox(entityCollector);\r\n\t\t}\r\n\r\n\t\tsuper.pDraw(entityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t * Draw the skybox if present.\r\n\t *\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawSkybox(entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar renderable:RenderableBase = this._pRenderablePool.getItem(entityCollector.skyBox);\r\n\r\n\t\tvar camera:Camera = entityCollector.camera;\r\n\r\n\t\tthis.updateSkyboxProjection(camera);\r\n\r\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner);\r\n\r\n\t\tvar pass:IPass = render.passes[0];\r\n\r\n\t\tthis.activatePass(renderable, pass, camera);\r\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\r\n\t\tthis.deactivatePass(renderable, pass);\r\n\t}\r\n\r\n\tprivate updateSkyboxProjection(camera:Camera)\r\n\t{\r\n\t\tvar near:Vector3D = new Vector3D();\r\n\r\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\r\n\t\tthis._skyboxProjection.copyRowTo(2, near);\r\n\r\n\t\tvar camPos:Vector3D = camera.scenePosition;\r\n\r\n\t\tvar cx:number = near.x;\r\n\t\tvar cy:number = near.y;\r\n\t\tvar cz:number = near.z;\r\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\r\n\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\r\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\r\n\t\tinverse.invert();\r\n\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\r\n\t\tthis._skyboxProjection.copyRowTo(3, p);\r\n\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\r\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (!this._shareContext)\r\n\t\t\tthis._pStage.dispose();\r\n\r\n\t\tthis._pRttBufferManager.dispose();\r\n\t\tthis._pRttBufferManager = null;\r\n\r\n\t\tthis._pDepthRenderer.dispose();\r\n\t\tthis._pDistanceRenderer.dispose();\r\n\t\tthis._pDepthRenderer = null;\r\n\t\tthis._pDistanceRenderer = null;\r\n\r\n\t\tthis._pDepthRender = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\r\n\t{\r\n\t\tthis._pDepthRenderer.disableColor = true;\r\n\r\n\t\tif (this._pFilter3DRenderer) { //TODO\r\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\r\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\r\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\r\n\t\t} else {\r\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\r\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\r\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\r\n\t\t}\r\n\r\n\t\tthis._pDepthRenderer.disableColor = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\r\n\t{\r\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\r\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\r\n\r\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\r\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\r\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the backbuffer dimensions.\r\n\t */\r\n\tpublic pUpdateBackBuffer()\r\n\t{\r\n\t\t// No reason trying to configure back buffer if there is no context available.\r\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\r\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\r\n\t\tif (this._pStage.context && !this._shareContext) {\r\n\t\t\tif (this._width && this._height) {\r\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\r\n\t\t\t\tthis._pBackBufferInvalid = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initDepthTexture(context:IContextGL):void\r\n\t{\r\n\t\tthis._pDepthTextureInvalid = false;\r\n\r\n\t\tif (this._pDepthRender)\r\n\t\t\tthis._pDepthRender.dispose();\r\n\r\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\r\n\t}\r\n}\r\n\r\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\nimport DepthRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/DepthRender\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\n\r\n/**\r\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\r\n *\r\n * @class away.render.DepthRenderer\r\n */\r\nclass DepthRenderer extends RendererBase\r\n{\r\n\t/**\r\n\t * Creates a new DepthRenderer object.\r\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\r\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\r\n\t */\r\n\tconstructor(stage:Stage = null)\r\n\t{\r\n\t\tsuper(stage);\r\n\r\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DepthRender);\r\n\r\n\t\tthis._iBackgroundR = 1;\r\n\t\tthis._iBackgroundG = 1;\r\n\t\tthis._iBackgroundB = 1;\r\n\r\n\t}\r\n}\r\n\r\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\nimport DistanceRender\t\t\t\t= require(\"awayjs-renderergl/lib/render/DistanceRender\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\n\r\n\r\n/**\r\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\r\n *\r\n * @class away.render.DistanceRenderer\r\n */\r\nclass DistanceRenderer extends RendererBase\r\n{\r\n\t/**\r\n\t * Creates a new DistanceRenderer object.\r\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\r\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\r\n\t */\r\n\tconstructor(stage:Stage = null)\r\n\t{\r\n\t\tsuper(stage);\r\n\t\t\r\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DistanceRender);\r\n\t\t\r\n\t\tthis._iBackgroundR = 1;\r\n\t\tthis._iBackgroundG = 1;\r\n\t\tthis._iBackgroundB = 1;\r\n\r\n\t}\r\n}\r\n\r\nexport = DistanceRenderer;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\r\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\r\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\r\n\r\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\r\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\r\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\r\n\r\n/**\r\n * @class away.render.Filter3DRenderer\r\n */\r\nclass Filter3DRenderer\r\n{\r\n\tprivate _filters:Array<Filter3DBase>;\r\n\tprivate _tasks:Array<Filter3DTaskBase>;\r\n\tprivate _filterTasksInvalid:boolean;\r\n\tprivate _mainInputTexture:ITexture;\r\n\tprivate _requireDepthRender:boolean;\r\n\tprivate _rttManager:RTTBufferManager;\r\n\tprivate _stage:Stage;\r\n\tprivate _filterSizesInvalid:boolean = true;\r\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\r\n\r\n\t\tthis._stage = stage;\r\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\r\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\r\n\r\n\t}\r\n\r\n\tprivate onRTTResize(event:Event)\r\n\t{\r\n\t\tthis._filterSizesInvalid = true;\r\n\t}\r\n\r\n\tpublic get requireDepthRender():boolean\r\n\t{\r\n\t\treturn this._requireDepthRender;\r\n\t}\r\n\r\n\tpublic getMainInputTexture(stage:Stage):ITexture\r\n\t{\r\n\t\tif (this._filterTasksInvalid) {\r\n\r\n\t\t\tthis.updateFilterTasks(stage);\r\n\r\n\t\t}\r\n\r\n\t\treturn this._mainInputTexture;\r\n\t}\r\n\r\n\tpublic get filters():Filter3DBase[]\r\n\t{\r\n\t\treturn this._filters;\r\n\t}\r\n\r\n\tpublic set filters(value:Filter3DBase[])\r\n\t{\r\n\t\tthis._filters = value;\r\n\r\n\t\tthis._filterTasksInvalid = true;\r\n\r\n\t\tthis._requireDepthRender = false;\r\n\r\n\t\tif (!this._filters) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\r\n\r\n\t\t\t// TODO: check logic:\r\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\r\n\r\n\t\t\tvar s:any = this._filters[i];\r\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\r\n\r\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\r\n\r\n\t\t}\r\n\r\n\t\tthis._filterSizesInvalid = true;\r\n\r\n\t}\r\n\r\n\tprivate updateFilterTasks(stage:Stage)\r\n\t{\r\n\t\tvar len:number;\r\n\r\n\t\tif (this._filterSizesInvalid) {\r\n\r\n\t\t\tthis.updateFilterSizes();\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._filters) {\r\n\t\t\tthis._tasks = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\r\n\r\n\t\tlen = this._filters.length - 1;\r\n\r\n\t\tvar filter:Filter3DBase;\r\n\r\n\t\tfor (var i:number = 0; i <= len; ++i) {\r\n\r\n\t\t\t// make sure all internal tasks are linked together\r\n\t\t\tfilter = this._filters[i];\r\n\r\n\t\t\t// TODO: check logic\r\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\r\n\r\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\r\n\r\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\r\n\r\n\t\t}\r\n\r\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\r\n\r\n\t}\r\n\r\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\r\n\t{\r\n\t\tvar len:number;\r\n\t\tvar i:number;\r\n\t\tvar task:Filter3DTaskBase;\r\n\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n\r\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\r\n\r\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\r\n\r\n\t\tif (!this._filters) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._filterSizesInvalid) {\r\n\t\t\tthis.updateFilterSizes();\r\n\t\t}\r\n\r\n\t\tif (this._filterTasksInvalid) {\r\n\t\t\tthis.updateFilterTasks(stage);\r\n\t\t}\r\n\r\n\t\tlen = this._filters.length;\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._filters[i].update(stage, camera);\r\n\t\t}\r\n\r\n\t\tlen = this._tasks.length;\r\n\r\n\t\tif (len > 1) {\r\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\ttask = this._tasks[i];\r\n\r\n\t\t\t//stage.setRenderTarget(task.target); //TODO\r\n\r\n\t\t\tif (!task.target) {\r\n\r\n\t\t\t\tstage.scissorRect = null;\r\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\r\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\r\n\t\t\tcontext.setProgram(task.getProgram(stage));\r\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\r\n\r\n\t\t\ttask.activate(stage, camera, depthTexture);\r\n\r\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\r\n\r\n\t\t\ttask.deactivate(stage);\r\n\t\t}\r\n\r\n\t\tcontext.setTextureAt(0, null);\r\n\t\tcontext.setVertexBufferAt(0, null);\r\n\t\tcontext.setVertexBufferAt(1, null);\r\n\t}\r\n\r\n\tprivate updateFilterSizes()\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\r\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\r\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\r\n\t\t}\r\n\r\n\t\tthis._filterSizesInvalid = true;\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\r\n\t\tthis._rttManager = null;\r\n\t\tthis._stage = null;\r\n\t}\r\n}\r\n\r\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\r\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\r\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\r\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\r\n\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\n\r\n\r\n/**\r\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererBase\r\n */\r\nclass RendererBase extends EventDispatcher implements IRenderer\r\n{\r\n\tprivate _numUsedStreams:number = 0;\r\n\tprivate _numUsedTextures:number = 0;\r\n\r\n\tpublic _pRenderablePool:RenderablePool;\r\n\r\n\tpublic _pContext:IContextGL;\r\n\tpublic _pStage:Stage;\r\n\r\n\tpublic _pCamera:Camera;\r\n\tpublic _iEntryPoint:Vector3D;\r\n\tpublic _pCameraForward:Vector3D;\r\n\r\n\tpublic _pRttBufferManager:RTTBufferManager;\r\n\tprivate _viewPort:Rectangle = new Rectangle();\r\n\tprivate _viewportDirty:boolean;\r\n\tprivate _scissorDirty:boolean;\r\n\r\n\tpublic _pBackBufferInvalid:boolean = true;\r\n\tpublic _pDepthTextureInvalid:boolean = true;\r\n\tpublic _depthPrepass:boolean = false;\r\n\tprivate _backgroundR:number = 0;\r\n\tprivate _backgroundG:number = 0;\r\n\tprivate _backgroundB:number = 0;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\tpublic _shareContext:boolean;\r\n\r\n\t// only used by renderers that need to render geometry to textures\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\r\n\tpublic textureRatioX:number = 1;\r\n\tpublic textureRatioY:number = 1;\r\n\r\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\r\n\tprivate _snapshotRequired:boolean;\r\n\r\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _localPos:Point = new Point();\r\n\tprivate _globalPos:Point = new Point();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\r\n\tprivate _scissorUpdated:RendererEvent;\r\n\tprivate _viewPortUpdated:RendererEvent;\r\n\r\n\tprivate _onContextUpdateDelegate:Function;\r\n\tprivate _onViewportUpdatedDelegate;\r\n\r\n\tpublic _pNumTriangles:number = 0;\r\n\r\n\tpublic _pOpaqueRenderableHead:RenderableBase;\r\n\tpublic _pBlendedRenderableHead:RenderableBase;\r\n\tpublic _disableColor:boolean = false;\r\n\tpublic _renderBlended:boolean = true;\r\n\r\n\r\n\tpublic get renderBlended():boolean\r\n\t{\r\n\t\treturn this._renderBlended;\r\n\t}\r\n\r\n\tpublic set renderBlended(value:boolean)\r\n\t{\r\n\t\tthis._renderBlended = value;\r\n\t}\r\n\r\n\r\n\tpublic get disableColor():boolean\r\n\t{\r\n\t\treturn this._disableColor;\r\n\t}\r\n\r\n\tpublic set disableColor(value:boolean)\r\n\t{\r\n\t\tthis._disableColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._pNumTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableSorter:IEntitySorter;\r\n\r\n\r\n\t/**\r\n\t * A viewPort rectangle equivalent of the Stage size and position.\r\n\t */\r\n\tpublic get viewPort():Rectangle\r\n\t{\r\n\t\treturn this._viewPort;\r\n\t}\r\n\r\n\t/**\r\n\t * A scissor rectangle equivalent of the view size and position.\r\n\t */\r\n\tpublic get scissorRect():Rectangle\r\n\t{\r\n\t\treturn this._pScissorRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._localPos.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.x = this._localPos.x = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._localPos.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.y = this._localPos.y = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._pScissorRect.width = value;\r\n\r\n\t\tif (this._pRttBufferManager)\r\n\t\t\tthis._pRttBufferManager.viewWidth = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._pDepthTextureInvalid = true;\r\n\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._pScissorRect.height = value;\r\n\r\n\t\tif (this._pRttBufferManager)\r\n\t\t\tthis._pRttBufferManager.viewHeight = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._pDepthTextureInvalid = true;\r\n\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RendererBase object.\r\n\t */\r\n\tconstructor(stage:Stage = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\r\n\r\n\t\t//default sorting algorithm\r\n\t\tthis.renderableSorter = new RenderableMergeSort();\r\n\r\n\t\t//set stage\r\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage();\r\n\r\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\r\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\r\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer)\r\n\t\t _backgroundImageRenderer.stage = value;\r\n\t\t */\r\n\t\tif (this._pStage.context)\r\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\r\n\t}\r\n\r\n\tpublic activatePass(renderable:RenderableBase, pass:IPass, camera:Camera)\r\n\t{\r\n\t\t//clear unused vertex streams\r\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\r\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\r\n\r\n\t\t//clear unused texture streams\r\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\r\n\t\t\tthis._pContext.setTextureAt(i, null);\r\n\r\n\t\t//check program data is uploaded\r\n\t\tvar programData:ProgramData = pass.shader.programData;\r\n\r\n\t\tif (!programData.program) {\r\n\t\t\tprogramData.program = this._pContext.createProgram();\r\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\r\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\r\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\r\n\t\t}\r\n\r\n\t\t//set program data\r\n\t\tthis._pContext.setProgram(programData.program);\r\n\r\n\t\t//activate shader object through renderable\r\n\t\trenderable._iActivate(pass, camera);\r\n\t}\r\n\r\n\tpublic deactivatePass(renderable:RenderableBase, pass:IPass)\r\n\t{\r\n\t\t//deactivate shader object\r\n\t\trenderable._iDeactivate(pass);\r\n\r\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\r\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\r\n\t}\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn new EntityCollector();\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's red component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundR():number\r\n\t{\r\n\t\treturn this._backgroundR;\r\n\t}\r\n\r\n\tpublic set _iBackgroundR(value:number)\r\n\t{\r\n\t\tif (this._backgroundR == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundR = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's green component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundG():number\r\n\t{\r\n\t\treturn this._backgroundG;\r\n\t}\r\n\r\n\tpublic set _iBackgroundG(value:number)\r\n\t{\r\n\t\tif (this._backgroundG == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundG = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's blue component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundB():number\r\n\t{\r\n\t\treturn this._backgroundB;\r\n\t}\r\n\r\n\tpublic set _iBackgroundB(value:number)\r\n\t{\r\n\t\tif (this._backgroundB == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundB = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\tpublic get context():IContextGL\r\n\t{\r\n\t\treturn this._pContext;\r\n\t}\r\n\r\n\t/**\r\n\t * The Stage that will provide the ContextGL used for rendering.\r\n\t */\r\n\tpublic get stage():Stage\r\n\t{\r\n\t\treturn this._pStage;\r\n\t}\r\n\r\n\t/**\r\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\r\n\t * to share the same ContextGL object.\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic get renderablePool():RenderablePool\r\n\t{\r\n\t\treturn this._pRenderablePool;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderablePool.dispose();\r\n\r\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\r\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\r\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\r\n\t\tthis._pStage = null;\r\n\t\tthis._pContext = null;\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer) {\r\n\t\t _backgroundImageRenderer.dispose();\r\n\t\t _backgroundImageRenderer = null;\r\n\t\t }\r\n\t\t */\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._viewportDirty = false;\r\n\t\tthis._scissorDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param target An option target texture to render to.\r\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\r\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\r\n\t */\r\n\tpublic _iRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\r\n\t\tif (!this._pStage || !this._pContext)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\r\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\r\n\r\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\r\n\r\n\t\t// generate mip maps on target (if target exists) //TODO\r\n\t\t//if (target)\r\n\t\t//\t(<Texture>target).generateMipmaps();\r\n\r\n\t\t// clear buffers\r\n\t\tfor (var i:number = 0; i < 8; ++i) {\r\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\r\n\t\t\tthis._pContext.setTextureAt(i, null);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\r\n\t{\r\n\t\tthis._applyCollector(entityCollector);\r\n\r\n\t\tthis._pStage.setRenderTarget(target, true, 0);\r\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\r\n\r\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\r\n\r\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\r\n\r\n\t\tvar first:boolean = true;\r\n\r\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\r\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\r\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\r\n\t\t\tfirst = false;\r\n\t\t}\r\n\r\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\r\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\r\n\r\n\t\tthis._pStage.scissorRect = null;\r\n\t}\r\n\r\n\tprivate _applyCollector(entityCollector:CollectorBase)\r\n\t{\r\n\t\t//reset head values\r\n\t\tthis._pBlendedRenderableHead = null;\r\n\t\tthis._pOpaqueRenderableHead = null;\r\n\t\tthis._pNumTriangles = 0;\r\n\r\n\t\t//grab entity head\r\n\t\tvar item:EntityListItem = entityCollector.entityHead;\r\n\r\n\t\t//set temp values for entry point and camera forward vector\r\n\t\tthis._pCamera = entityCollector.camera;\r\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\r\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\r\n\r\n\t\t//iterate through all entities\r\n\t\twhile (item) {\r\n\t\t\titem.entity._applyRenderer(this);\r\n\t\t\titem = item.next;\r\n\t\t}\r\n\r\n\t\t//sort the resulting renderables\r\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\r\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\r\n\t *\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param target An option target texture to render to.\r\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\r\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\r\n\t */\r\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\r\n\r\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\r\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\r\n\r\n\t\tthis._pStage.scissorRect = scissorRect;\r\n\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer)\r\n\t\t _backgroundImageRenderer.render();\r\n\t\t */\r\n\t\tthis._applyCollector(entityCollector);\r\n\r\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\r\n\t\tthis.pDraw(entityCollector);\r\n\r\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\r\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\r\n\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\r\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\r\n\t\t\t\tthis._snapshotRequired = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pStage.scissorRect = null;\r\n\t}\r\n\r\n\t/*\r\n\t * Will draw the renderer's output on next render to the provided bitmap data.\r\n\t * */\r\n\tpublic queueSnapshot(bmd:BitmapImage2D)\r\n\t{\r\n\t\tthis._snapshotRequired = true;\r\n\t\tthis._snapshotBitmapImage2D = bmd;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the actual drawing of geometry to the target.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t */\r\n\tpublic pDraw(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\r\n\r\n\t\tif (this._disableColor)\r\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\r\n\r\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\r\n\r\n\t\tif (this._renderBlended)\r\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\r\n\r\n\t\tif (this._disableColor)\r\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\r\n\t}\r\n\r\n\t//private drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\r\n\t//{\r\n\t//\tvar renderable2:RenderableBase;\r\n\t//\tvar render:RenderBase;\r\n\t//\tvar pass:IPass;\r\n\t//\r\n\t//\twhile (renderable) {\r\n\t//\t\trenderable2 = renderable;\r\n\t//\t\trender = renderable.render;\r\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\r\n\t//\r\n\t//\t\tthis.activatePass(renderable, pass, camera);\r\n\t//\r\n\t//\t\tdo {\r\n\t//\t\t\t// if completely in front, it will fall in a different cascade\r\n\t//\t\t\t// do not use near and far planes\r\n\t//\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\r\n\t//\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\r\n\t//\t\t\t} else {\r\n\t//\t\t\t\trenderable2.cascaded = true;\r\n\t//\t\t\t}\r\n\t//\r\n\t//\t\t\trenderable2 = renderable2.next;\r\n\t//\r\n\t//\t\t} while (renderable2 && renderable2.render == render && !renderable2.cascaded);\r\n\t//\r\n\t//\t\tthis.deactivatePass(renderable, pass);\r\n\t//\r\n\t//\t\trenderable = renderable2;\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t *\r\n\t * @param renderables The renderables to draw.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tpublic drawRenderables(renderable:RenderableBase, entityCollector:CollectorBase)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\t\tvar renderable2:RenderableBase;\r\n\t\tvar render:RenderBase;\r\n\t\tvar passes:Array<IPass>;\r\n\t\tvar pass:IPass;\r\n\t\tvar camera:Camera = entityCollector.camera;\r\n\r\n\r\n\t\twhile (renderable) {\r\n\t\t\trender = renderable.render;\r\n\t\t\tpasses = render.passes;\r\n\r\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\r\n\t\t\tif (this._disableColor && render._renderOwner.alphaThreshold != 0) {\r\n\t\t\t\trenderable2 = renderable;\r\n\t\t\t\t// fast forward\r\n\t\t\t\tdo {\r\n\t\t\t\t\trenderable2 = renderable2.next;\r\n\r\n\t\t\t\t} while (renderable2 && renderable2.render == render);\r\n\t\t\t} else {\r\n\t\t\t\t//iterate through each shader object\r\n\t\t\t\tlen = passes.length;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\trenderable2 = renderable;\r\n\t\t\t\t\tpass = passes[i];\r\n\r\n\t\t\t\t\tthis.activatePass(renderable, pass, camera);\r\n\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\r\n\r\n\t\t\t\t\t\trenderable2 = renderable2.next;\r\n\r\n\t\t\t\t\t} while (renderable2 && renderable2.render == render);\r\n\r\n\t\t\t\t\tthis.deactivatePass(renderable, pass);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trenderable = renderable2;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Assign the context once retrieved\r\n\t */\r\n\tprivate onContextUpdate(event:Event)\r\n\t{\r\n\t\tthis._pContext = <IContextGL> this._pStage.context;\r\n\t}\r\n\r\n\tpublic get _iBackgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\tpublic set _iBackgroundAlpha(value:number)\r\n\t{\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundAlpha = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/*\r\n\t public get iBackground():Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\r\n\t/*\r\n\t public set iBackground(value:Texture2DBase)\r\n\t {\r\n\t if (this._backgroundImageRenderer && !value) {\r\n\t this._backgroundImageRenderer.dispose();\r\n\t this._backgroundImageRenderer = null;\r\n\t }\r\n\r\n\t if (!this._backgroundImageRenderer && value)\r\n\t {\r\n\r\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\r\n\r\n\t }\r\n\r\n\r\n\t this._background = value;\r\n\r\n\t if (this._backgroundImageRenderer)\r\n\t this._backgroundImageRenderer.texture = value;\r\n\t }\r\n\t */\r\n\t/*\r\n\t public get backgroundImageRenderer():BackgroundImageRenderer\r\n\t {\r\n\t return _backgroundImageRenderer;\r\n\t }\r\n\t */\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScissorUpdate()\r\n\t{\r\n\t\tif (this._scissorDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scissorDirty = true;\r\n\r\n\t\tif (!this._scissorUpdated)\r\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._scissorUpdated);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyViewportUpdate()\r\n\t{\r\n\t\tif (this._viewportDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewportDirty = true;\r\n\r\n\t\tif (!this._viewPortUpdated)\r\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._viewPortUpdated);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic onViewportUpdated(event:StageEvent)\r\n\t{\r\n\t\tthis._viewPort = this._pStage.viewPort;\r\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\r\n\r\n\t\tif (this._shareContext) {\r\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\r\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\r\n\t\t\tthis.notifyScissorUpdate();\r\n\t\t}\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateGlobalPos()\r\n\t{\r\n\t\tif (this._shareContext) {\r\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\r\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\r\n\t\t} else {\r\n\t\t\tthis._pScissorRect.x = 0;\r\n\t\t\tthis._pScissorRect.y = 0;\r\n\t\t\tthis._viewPort.x = this._globalPos.x;\r\n\t\t\tthis._viewPort.y = this._globalPos.y;\r\n\t\t}\r\n\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\tpublic _iApplyRenderableOwner(renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\tthis.applyRenderable(this._pRenderablePool.getItem(renderableOwner));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderable\r\n\t * @protected\r\n\t */\r\n\tpublic applyRenderable(renderable:RenderableBase)\r\n\t{\r\n\t\t//set local vars for faster referencing\r\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner || DefaultMaterialManager.getDefaultMaterial(renderable.renderableOwner));\r\n\t\t\r\n\t\trenderable.render = render;\r\n\t\trenderable.renderId = render.renderId;\r\n\t\trenderable.renderOrderId = render.renderOrderId;\r\n\r\n\t\trenderable.cascaded = false;\r\n\r\n\t\tvar entity:IEntity = renderable.sourceEntity;\r\n\t\tvar position:Vector3D = entity.scenePosition;\r\n\r\n\t\t// project onto camera's z-axis\r\n\t\tposition = this._iEntryPoint.subtract(position);\r\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\r\n\r\n\t\t//store reference to scene transform\r\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\r\n\r\n\t\tif (render.requiresBlending) {\r\n\t\t\trenderable.next = this._pBlendedRenderableHead;\r\n\t\t\tthis._pBlendedRenderableHead = renderable;\r\n\t\t} else {\r\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\r\n\t\t\tthis._pOpaqueRenderableHead = renderable;\r\n\t\t}\r\n\r\n\t\tthis._pNumTriangles += renderable.numTriangles;\r\n\r\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\r\n\t\tif (renderable.overflow)\r\n\t\t\tthis.applyRenderable(renderable.overflow);\r\n\t}\r\n}\r\n\r\nexport = RendererBase;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n/**\r\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\r\n *\r\n * @see away.animators.AnimatorBase\r\n */\r\nclass AnimationSetBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationSet]\";\r\n\r\n\tprivate _usesCPU:boolean;\r\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\r\n\tprivate _animationNames:Array<string> = new Array<string>();\r\n\tprivate _animationDictionary:Object = new Object();\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a temporary GPU register that's still free.\r\n\t *\r\n\t * @param exclude An array of non-free temporary registers.\r\n\t * @param excludeAnother An additional register that's not free.\r\n\t * @return A temporary register that can be used.\r\n\t */\r\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\r\n\t{\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\tvar reg:string;\r\n\r\n\t\twhile (true) {\r\n\t\t\treg = \"vt\" + i;\r\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\r\n\t\t\t\treturn reg;\r\n\t\t\t++i;\r\n\t\t}\r\n\r\n\t\t// can't be reached\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the properties of the animation data contained within the set combined with\r\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\r\n\t * GPU calls.\r\n\t */\r\n\tpublic get usesCPU():boolean\r\n\t{\r\n\t\treturn this._usesCPU;\r\n\t}\r\n\r\n\t/**\r\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\r\n\t * is available for running GPU-based animation code.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic resetGPUCompatibility()\r\n\t{\r\n\t\tthis._usesCPU = false;\r\n\t}\r\n\r\n\tpublic cancelGPUCompatibility()\r\n\t{\r\n\t\tthis._usesCPU = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shader:ShaderBase)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationSetBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\r\n\t */\r\n\tpublic get animations():Array<AnimationNodeBase>\r\n\t{\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\r\n\t */\r\n\tpublic get animationNames():Array<string>\r\n\t{\r\n\t\treturn this._animationNames;\r\n\t}\r\n\r\n\t/**\r\n\t * Check to determine whether a state is registered in the animation set under the given name.\r\n\t *\r\n\t * @param stateName The name of the animation state object to be checked.\r\n\t */\r\n\tpublic hasAnimation(name:string):boolean\r\n\t{\r\n\t\treturn this._animationDictionary[name] != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the animation state object registered in the animation data set under the given name.\r\n\t *\r\n\t * @param stateName The name of the animation state object to be retrieved.\r\n\t */\r\n\tpublic getAnimation(name:string):AnimationNodeBase\r\n\t{\r\n\t\treturn this._animationDictionary[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an animation state object to the aniamtion data set under the given name.\r\n\t *\r\n\t * @param stateName The name under which the animation state object will be stored.\r\n\t * @param animationState The animation state object to be staored in the set.\r\n\t */\r\n\tpublic addAnimation(node:AnimationNodeBase)\r\n\t{\r\n\t\tif (this._animationDictionary[node.name])\r\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\r\n\r\n\t\tthis._animationDictionary[node.name] = node;\r\n\r\n\t\tthis._animations.push(node);\r\n\r\n\t\tthis._animationNames.push(node.name);\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up any resources used by the current object.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\r\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\n\r\n/**\r\n * Dispatched when playback of an animation inside the animator object starts.\r\n *\r\n * @eventType away3d.events.AnimatorEvent\r\n */\r\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\r\n\r\n/**\r\n * Dispatched when playback of an animation inside the animator object stops.\r\n *\r\n * @eventType away3d.events.AnimatorEvent\r\n */\r\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\r\n\r\n/**\r\n * Dispatched when playback of an animation reaches the end of an animation.\r\n *\r\n * @eventType away3d.events.AnimatorEvent\r\n */\r\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\r\n\r\n/**\r\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\r\n *\r\n * @see away.animators.AnimationSetBase\r\n */\r\nclass AnimatorBase extends AssetBase implements IAnimator\r\n{\r\n\tpublic static assetType:string = \"[asset Animator]\";\r\n\r\n\tprivate _broadcaster:RequestAnimationFrame;\r\n\tprivate _isPlaying:boolean;\r\n\tprivate _autoUpdate:boolean = true;\r\n\tprivate _startEvent:AnimatorEvent;\r\n\tprivate _stopEvent:AnimatorEvent;\r\n\tprivate _cycleEvent:AnimatorEvent;\r\n\tprivate _time:number /*int*/ = 0;\r\n\tprivate _playbackSpeed:number = 1;\r\n\r\n\tpublic _pAnimationSet:IAnimationSet;\r\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\r\n\tpublic _pActiveNode:AnimationNodeBase;\r\n\tpublic _pActiveState:IAnimationState;\r\n\tpublic _pActiveAnimationName:string;\r\n\tpublic _pAbsoluteTime:number = 0;\r\n\r\n\tprivate _animationStates:Object = new Object();\r\n\r\n\t/**\r\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\r\n\t *\r\n\t * @see away.animators.IAnimationState#positionDelta\r\n\t */\r\n\tpublic updatePosition:boolean = true;\r\n\r\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\r\n\t{\r\n\t\tvar className:any = node.stateClass;\r\n\t\tvar uID:number = node.id;\r\n\r\n\t\tif (this._animationStates[uID] == null)\r\n\t\t\tthis._animationStates[uID] = new className(this, node);\r\n\r\n\t\treturn this._animationStates[uID];\r\n\t}\r\n\r\n\tpublic getAnimationStateByName(name:string):IAnimationState\r\n\t{\r\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\r\n\t *\r\n\t * @see #time\r\n\t * @see #playbackSpeed\r\n\t */\r\n\tpublic get absoluteTime():number\r\n\t{\r\n\t\treturn this._pAbsoluteTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the animation data set in use by the animator.\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._pAnimationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current active animation state.\r\n\t */\r\n\tpublic get activeState():IAnimationState\r\n\t{\r\n\t\treturn this._pActiveState;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current active animation node.\r\n\t */\r\n\tpublic get activeAnimation():AnimationNodeBase\r\n\t{\r\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current active animation node.\r\n\t */\r\n\tpublic get activeAnimationName():string\r\n\t{\r\n\t\treturn this._pActiveAnimationName;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\r\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\r\n\t * Defaults to true.\r\n\t *\r\n\t * @see #time\r\n\t * @see #update()\r\n\t */\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._autoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(value:boolean)\r\n\t{\r\n\t\tif (this._autoUpdate == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoUpdate = value;\r\n\r\n\t\tif (this._autoUpdate)\r\n\t\t\tthis.start(); else\r\n\t\t\tthis.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets and sets the internal time clock of the animator.\r\n\t */\r\n\tpublic get time():number /*int*/\r\n\t{\r\n\t\treturn this._time;\r\n\t}\r\n\r\n\tpublic set time(value:number /*int*/)\r\n\t{\r\n\t\tif (this._time == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.update(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the animation phase of the current active state's animation clip(s).\r\n\t *\r\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._pActiveState.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimatorBase</code> object.\r\n\t *\r\n\t * @param animationSet The animation data set to be used by the animator object.\r\n\t */\r\n\tconstructor(animationSet:IAnimationSet)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pAnimationSet = animationSet;\r\n\r\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\r\n\t}\r\n\r\n\t/**\r\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\r\n\t */\r\n\tpublic get playbackSpeed():number\r\n\t{\r\n\t\treturn this._playbackSpeed;\r\n\t}\r\n\r\n\tpublic set playbackSpeed(value:number)\r\n\t{\r\n\t\tthis._playbackSpeed = value;\r\n\t}\r\n\r\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resumes the automatic playback clock controling the active state of the animator.\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tif (this._isPlaying || !this._autoUpdate)\r\n\t\t\treturn;\r\n\r\n\t\tthis._time = this._pAbsoluteTime = getTimer();\r\n\r\n\t\tthis._isPlaying = true;\r\n\r\n\t\tthis._broadcaster.start();\r\n\r\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\r\n\t\t\treturn;\r\n\r\n\t\tif (this._startEvent == null)\r\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\r\n\r\n\t\tthis.dispatchEvent(this._startEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\r\n\t * <code>time</code> property or <code>update()</code> method.\r\n\t *\r\n\t * @see #time\r\n\t * @see #update()\r\n\t */\r\n\tpublic stop()\r\n\t{\r\n\t\tif (!this._isPlaying)\r\n\t\t\treturn;\r\n\r\n\t\tthis._isPlaying = false;\r\n\r\n\t\tthis._broadcaster.stop();\r\n\r\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\r\n\t\t\treturn;\r\n\r\n\t\tif (this._stopEvent == null)\r\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\r\n\r\n\t\tthis.dispatchEvent(this._stopEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a way to manually update the active state of the animator when automatic\r\n\t * updates are disabled.\r\n\t *\r\n\t * @see #stop()\r\n\t * @see #autoUpdate\r\n\t */\r\n\tpublic update(time:number /*int*/)\r\n\t{\r\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\r\n\r\n\t\tthis._pUpdateDeltaTime(dt);\r\n\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\tpublic reset(name:string, offset:number = 0)\r\n\t{\r\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\r\n\t}\r\n\r\n\t/**\r\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic addOwner(mesh:Mesh)\r\n\t{\r\n\t\tthis._pOwners.push(mesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic removeOwner(mesh:Mesh)\r\n\t{\r\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tthis._pAbsoluteTime += dt;\r\n\r\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\r\n\r\n\t\tif (this.updatePosition)\r\n\t\t\tthis.applyPositionDelta();\r\n\t}\r\n\r\n\t/**\r\n\t * Enter frame event handler for automatically updating the active state of the animator.\r\n\t */\r\n\tprivate onEnterFrame(event:Event = null)\r\n\t{\r\n\t\tthis.update(getTimer());\r\n\t}\r\n\r\n\tprivate applyPositionDelta()\r\n\t{\r\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\r\n\t\tvar dist:number = delta.length;\r\n\t\tvar len:number /*uint*/;\r\n\t\tif (dist > 0) {\r\n\t\t\tlen = this._pOwners.length;\r\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\r\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *  for internal use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic dispatchCycleEvent()\r\n\t{\r\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\r\n\t\t\tif (this._cycleEvent == null)\r\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\r\n\r\n\t\t\tthis.dispatchEvent(this._cycleEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic testGPUCompatibility(shader:ShaderBase)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimatorBase.assetType;\r\n\t}\r\n\r\n\r\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\r\n\t{\r\n\t\t//nothing to do here\r\n\t\treturn sourceSubGeometry;\r\n\t}\r\n}\r\n\r\nexport = AnimatorBase;",
    "import SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\n\r\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\r\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\n\r\n\r\n/**\r\n * The animation data set used by particle-based animators, containing particle animation data.\r\n *\r\n * @see away.animators.ParticleAnimator\r\n */\r\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\r\n{\r\n\t/** @private */\r\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\r\n\r\n\t//all other nodes dependent on it\r\n\tprivate _timeNode:ParticleTimeNode;\r\n\r\n\t/**\r\n\t * Property used by particle nodes that require compilers at the end of the shader\r\n\t */\r\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\r\n\r\n\t/**\r\n\t * Property used by particle nodes that require color compilers\r\n\t */\r\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\r\n\r\n\tprivate _animationSubGeometries:Object = new Object();\r\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\r\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\r\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\r\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\r\n\r\n\t//set true if has an node which will change UV\r\n\tpublic hasUVNode:boolean;\r\n\t//set if the other nodes need to access the velocity\r\n\tpublic needVelocity:boolean;\r\n\t//set if has a billboard node.\r\n\tpublic hasBillboard:boolean;\r\n\t//set if has an node which will apply color multiple operation\r\n\tpublic hasColorMulNode:boolean;\r\n\t//set if has an node which will apply color add operation\r\n\tpublic hasColorAddNode:boolean;\r\n\r\n\t/**\r\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\r\n\t *\r\n\t * <code>\r\n\t * initParticleFunc(prop:ParticleProperties)\r\n\t * {\r\n\t * \t\t//code for settings local properties\r\n\t * }\r\n\t * </code>\r\n\t *\r\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\r\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\r\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\r\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\r\n\t */\r\n\tpublic initParticleFunc:Function;\r\n\r\n\t/**\r\n\t * Initialiser function scope for static particle properties\r\n\t */\r\n\tpublic initParticleScope:Object;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleAnimationSet</code>\r\n\t *\r\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\r\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\r\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\r\n\t */\r\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//automatically add a particle time node to the set\r\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of the particle animation nodes contained within the set.\r\n\t */\r\n\tpublic get particleNodes():Array<ParticleNodeBase>\r\n\t{\r\n\t\treturn this._particleNodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic addAnimation(node:AnimationNodeBase)\r\n\t{\r\n\t\tvar i:number /*int*/;\r\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\r\n\t\tn._iProcessAnimationSetting(this);\r\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\r\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\r\n\t\t\tthis._localStaticNodes.push(n);\r\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\r\n\t\t\tthis._localDynamicNodes.push(n);\r\n\r\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\r\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis._particleNodes.splice(i + 1, 0, n);\r\n\r\n\t\tsuper.addAnimation(node);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\r\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\r\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\r\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase):string\r\n\t{\r\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\r\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\r\n\r\n\t\tif (this._iAnimationRegisterCache == null)\r\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\r\n\r\n\t\t//reset animationRegisterCache\r\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\r\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\r\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\r\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\r\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\r\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\r\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\r\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\r\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\r\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\r\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\r\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\r\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\r\n\t\tthis._iAnimationRegisterCache.reset();\r\n\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\r\n\r\n\t\tvar node:ParticleNodeBase;\r\n\t\tvar i:number /*int*/;\r\n\r\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\r\n\t\t\tnode = this._particleNodes[i];\r\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\r\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\r\n\t\t}\r\n\r\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\r\n\r\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\r\n\t\t\tnode = this._particleNodes[i];\r\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\r\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\r\n\t\t}\r\n\r\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\r\n\r\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\r\n\t\t\tnode = this._particleNodes[i];\r\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\r\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\r\n\t\t}\r\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.hasUVNode) {\r\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\r\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\r\n\t\t\tvar node:ParticleNodeBase;\r\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\r\n\t\t\t\tnode = this._particleNodes[i];\r\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\r\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\r\n\t{\r\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shader:ShaderBase)\r\n\t{\r\n\t\tthis._iAnimationRegisterCache.setDataLength();\r\n\r\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\r\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get usesCPU():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic cancelGPUCompatibility()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var key in this._animationSubGeometries)\r\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\r\n\t{\r\n\t\tvar mesh:Mesh = subMesh.parentMesh;\r\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\r\n\r\n\t\tif (animationSubGeometry)\r\n\t\t\treturn animationSubGeometry;\r\n\r\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\r\n\r\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\r\n\t}\r\n\r\n\r\n\t/** @private */\r\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\r\n\t{\r\n\t\tif (this.initParticleFunc == null)\r\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\r\n\r\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\r\n\r\n\t\tif (!geometry)\r\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\r\n\r\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\r\n\t\tvar animationSubGeometry:AnimationSubGeometry;\r\n\t\tvar newAnimationSubGeometry:boolean = false;\r\n\t\tvar subGeometry:SubGeometryBase;\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar localNode:ParticleNodeBase;\r\n\r\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\tsubMesh = mesh.subMeshes[i];\r\n\t\t\tsubGeometry = subMesh.subGeometry;\r\n\t\t\tif (mesh.shareAnimationGeometry) {\r\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\r\n\r\n\t\t\t\tif (animationSubGeometry)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\r\n\r\n\t\t\tif (mesh.shareAnimationGeometry)\r\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\r\n\t\t\telse\r\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\r\n\r\n\t\t\tnewAnimationSubGeometry = true;\r\n\r\n\t\t\t//create the vertexData vector that will be used for local node data\r\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\r\n\t\t}\r\n\r\n\t\tif (!newAnimationSubGeometry)\r\n\t\t\treturn;\r\n\r\n\t\tvar particles:Array<ParticleData> = geometry.particles;\r\n\t\tvar particlesLength:number /*uint*/ = particles.length;\r\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\r\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\r\n\t\tvar particle:ParticleData;\r\n\r\n\t\tvar oneDataLen:number /*int*/;\r\n\t\tvar oneDataOffset:number /*int*/;\r\n\t\tvar counterForVertex:number /*int*/;\r\n\t\tvar counterForOneData:number /*int*/;\r\n\t\tvar oneData:Array<number>;\r\n\t\tvar numVertices:number /*uint*/;\r\n\t\tvar vertexData:Array<number>;\r\n\t\tvar vertexLength:number /*uint*/;\r\n\t\tvar startingOffset:number /*uint*/;\r\n\t\tvar vertexOffset:number /*uint*/;\r\n\r\n\t\t//default values for particle param\r\n\t\tparticleProperties.total = numParticles;\r\n\t\tparticleProperties.startTime = 0;\r\n\t\tparticleProperties.duration = 1000;\r\n\t\tparticleProperties.delay = 0.1;\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\twhile (i < numParticles) {\r\n\t\t\tparticleProperties.index = i;\r\n\r\n\t\t\t//call the init on the particle parameters\r\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\r\n\r\n\t\t\t//create the next set of node properties for the particle\r\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\r\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\r\n\r\n\t\t\t//loop through all particle data for the curent particle\r\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\r\n\t\t\t\t//find the target animationSubGeometry\r\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\r\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\r\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\r\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnumVertices = particle.numVertices;\r\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\r\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\r\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\r\n\r\n\t\t\t\t//loop through each static local node in the animation set\r\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\r\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\r\n\t\t\t\t\toneData = localNode.oneData;\r\n\t\t\t\t\toneDataLen = localNode.dataLength;\r\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\r\n\r\n\t\t\t\t\t//loop through each vertex set in the vertex data\r\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\r\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\r\n\r\n\t\t\t\t\t\t//add the data for the local node to the vertex data\r\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\r\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\r\n\t\t\t\tif (this._localDynamicNodes.length)\r\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\r\n\r\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\r\n\r\n\t\t\t\t//next index\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\r\n\t\t\t//next particle\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleAnimationSet;",
    "import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\r\n\r\n/**\r\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\r\n * and controlling the various available states of animation through an interative playhead that can be\r\n * automatically updated or manually triggered.\r\n *\r\n * Requires that the containing geometry of the parent mesh is particle geometry\r\n *\r\n * @see away.base.ParticleGeometry\r\n */\r\nclass ParticleAnimator extends AnimatorBase\r\n{\r\n\r\n\tprivate _particleAnimationSet:ParticleAnimationSet;\r\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\r\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\r\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\r\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\r\n\tprivate _animatorSubGeometries:Object = new Object();\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleAnimator</code> object.\r\n\t *\r\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\r\n\t */\r\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tsuper(particleAnimationSet);\r\n\t\tthis._particleAnimationSet = particleAnimationSet;\r\n\r\n\t\tvar state:ParticleStateBase;\r\n\t\tvar node:ParticleNodeBase;\r\n\r\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\r\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\r\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\r\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\r\n\t\t\t\tthis._animatorParticleStates.push(state);\r\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\r\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\r\n\t\t\t} else {\r\n\t\t\t\tthis._animationParticleStates.push(state);\r\n\t\t\t}\r\n\t\t\tif (state.needUpdateTime)\r\n\t\t\t\tthis._timeParticleStates.push(state);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\r\n\r\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\r\n\t\tvar state:ParticleStateBase;\r\n\t\tvar i:number;\r\n\r\n\t\tif (!subMesh)\r\n\t\t\tthrow(new Error(\"Must be subMesh\"));\r\n\r\n\t\t//process animation sub geometries\r\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\r\n\r\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\r\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\r\n\r\n\t\t//process animator subgeometries\r\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\r\n\r\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\r\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\r\n\r\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\r\n\r\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\r\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic testGPUCompatibility(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tsuper.start();\r\n\r\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\r\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tthis._pAbsoluteTime += dt;\r\n\r\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\r\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic resetTime(offset:number /*int*/ = 0)\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\r\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\r\n\t\tthis.update(this.time);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var key in this._animatorSubGeometries)\r\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\r\n\t}\r\n\r\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\r\n\t{\r\n\t\tif (!this._animatorParticleStates.length)\r\n\t\t\treturn;\r\n\r\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\r\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\r\n\r\n\t\t//create the vertexData vector that will be used for local state data\r\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\r\n\r\n\t\t//pass the particles data to the animator subGeometry\r\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\r\n\t}\r\n}\r\n\r\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\n\r\n/**\r\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\r\n *\r\n * @see away.animators.SkeletonAnimator\r\n */\r\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\r\n{\r\n\tprivate _jointsPerVertex:number /*uint*/;\r\n\r\n\t/**\r\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\r\n\t * maximum allowed value is 4.\r\n\t */\r\n\tpublic get jointsPerVertex():number /*uint*/\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\r\n\t *\r\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\r\n\t */\r\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._jointsPerVertex = jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase):string\r\n\t{\r\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\r\n\r\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\r\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\r\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\r\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\r\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\r\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\r\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\r\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\r\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\r\n\t\tvar dot:string = \"dp4\";\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\r\n\t\t\tvar src:string = shader.animatableAttributes[i];\r\n\r\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\r\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\r\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\r\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\r\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\r\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\r\n\r\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\r\n\t\t\t\tif (j == 0)\r\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\r\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\r\n\t\t\tdot = \"dp3\";\r\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\r\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\r\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase):string\r\n\t{\r\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\n\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\r\n\r\n/**\r\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\r\n * and controlling the various available states of animation through an interative playhead that can be\r\n * automatically updated or manually triggered.\r\n */\r\nclass SkeletonAnimator extends AnimatorBase\r\n{\r\n\tprivate _globalMatrices:Array<number>;\r\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _globalPropertiesDirty:boolean;\r\n\tprivate _numJoints:number /*uint*/;\r\n\tprivate _morphedSubGeometry:Object = new Object();\r\n\tprivate _morphedSubGeometryDirty:Object = new Object();\r\n\tprivate _condensedMatrices:Array<number>;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _forceCPU:boolean;\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _jointsPerVertex:number /*uint*/;\r\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\r\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\r\n\r\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\r\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\r\n\r\n\t/**\r\n\t * returns the calculated global matrices of the current skeleton pose.\r\n\t *\r\n\t * @see #globalPose\r\n\t */\r\n\tpublic get globalMatrices():Array<number>\r\n\t{\r\n\t\tif (this._globalPropertiesDirty)\r\n\t\t\tthis.updateGlobalProperties();\r\n\r\n\t\treturn this._globalMatrices;\r\n\t}\r\n\r\n\t/**\r\n\t * returns the current skeleton pose output from the animator.\r\n\t *\r\n\t * @see away.animators.data.SkeletonPose\r\n\t */\r\n\tpublic get globalPose():SkeletonPose\r\n\t{\r\n\t\tif (this._globalPropertiesDirty)\r\n\t\t\tthis.updateGlobalProperties();\r\n\r\n\t\treturn this._globalPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\r\n\t * skinned geoemtry to which skeleon animator is applied.\r\n\t */\r\n\tpublic get skeleton():Skeleton\r\n\t{\r\n\t\treturn this._skeleton;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\r\n\t * Defaults to false.\r\n\t */\r\n\tpublic get forceCPU():boolean\r\n\t{\r\n\t\treturn this._forceCPU;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonAnimator</code> object.\r\n\t *\r\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\r\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\r\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\r\n\t */\r\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\r\n\t{\r\n\t\tsuper(animationSet);\r\n\r\n\t\tthis._skeleton = skeleton;\r\n\t\tthis._forceCPU = forceCPU;\r\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\r\n\r\n\t\tthis._numJoints = this._skeleton.numJoints;\r\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\r\n\r\n\t\tvar j:number /*int*/ = 0;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tthis._globalMatrices[j++] = 1;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 1;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 1;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t}\r\n\r\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\r\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\r\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\r\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\r\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\r\n\t}\r\n\r\n\t/**\r\n\t * Plays an animation state registered with the given name in the animation data set.\r\n\t *\r\n\t * @param name The data set name of the animation state to be played.\r\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\r\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\r\n\t */\r\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\r\n\t{\r\n\t\tif (this._pActiveAnimationName == name)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pActiveAnimationName = name;\r\n\r\n\t\tif (!this._pAnimationSet.hasAnimation(name))\r\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\r\n\r\n\t\tif (transition && this._pActiveNode) {\r\n\t\t\t//setup the transition\r\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\r\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\r\n\t\t} else\r\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\r\n\r\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\r\n\r\n\t\tif (this.updatePosition) {\r\n\t\t\t//update straight away to reset position deltas\r\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\r\n\t\t\tthis._pActiveState.positionDelta;\r\n\t\t}\r\n\r\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\r\n\r\n\t\tthis.start();\r\n\r\n\t\t//apply a time offset if specified\r\n\t\tif (!isNaN(offset))\r\n\t\t\tthis.reset(name, offset);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\t// do on request of globalProperties\r\n\t\tif (this._globalPropertiesDirty)\r\n\t\t\tthis.updateGlobalProperties();\r\n\r\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\r\n\r\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\r\n\r\n\t\tif (this._useCondensedIndices) {\r\n\t\t\t// using a condensed data set\r\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp, subGeometry.numCondensedJoints);\r\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, subGeometry.numCondensedJoints*3);\r\n\t\t} else {\r\n\t\t\tif (this._pAnimationSet.usesCPU) {\r\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\r\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\r\n\t\t}\r\n\r\n\t\tstage.activateBuffer(vertexStreamOffset, renderable.getVertexData(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.JOINT_INDEX_FORMAT);\r\n\t\tstage.activateBuffer(vertexStreamOffset + 1, renderable.getVertexData(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.JOINT_WEIGHT_FORMAT);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic testGPUCompatibility(shader:ShaderBase)\r\n\t{\r\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\r\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the calculated time delta to the active animation state node or state transition object.\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tsuper._pUpdateDeltaTime(dt);\r\n\r\n\t\t//invalidate pose matrices\r\n\t\tthis._globalPropertiesDirty = true;\r\n\r\n\t\t//trigger geometry invalidation if using CPU animation\r\n\t\tif (this._pAnimationSet.usesCPU)\r\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\r\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\r\n\t}\r\n\r\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number> /*uint*/, numJoints:number /*uint*/)\r\n\t{\r\n\t\tvar i:number /*uint*/ = 0, j:number /*uint*/ = 0;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar srcIndex:number /*uint*/;\r\n\r\n\t\tthis._condensedMatrices = new Array<number>();\r\n\r\n\t\tdo {\r\n\t\t\tsrcIndex = condensedIndexLookUp[i]*4;\r\n\t\t\tlen = srcIndex + 12;\r\n\t\t\t// copy into condensed\r\n\t\t\twhile (srcIndex < len)\r\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\r\n\t\t} while (++i < numJoints);\r\n\t}\r\n\r\n\tprivate updateGlobalProperties()\r\n\t{\r\n\t\tthis._globalPropertiesDirty = false;\r\n\r\n\t\t//get global pose\r\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\r\n\r\n\t\t// convert pose to matrix\r\n\t\tvar mtxOffset:number /*uint*/ = 0;\r\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\r\n\t\tvar raw:Array<number>;\r\n\t\tvar ox:number, oy:number, oz:number, ow:number;\r\n\t\tvar xy2:number, xz2:number, xw2:number;\r\n\t\tvar yz2:number, yw2:number, zw2:number;\r\n\t\tvar n11:number, n12:number, n13:number;\r\n\t\tvar n21:number, n22:number, n23:number;\r\n\t\tvar n31:number, n32:number, n33:number;\r\n\t\tvar m11:number, m12:number, m13:number, m14:number;\r\n\t\tvar m21:number, m22:number, m23:number, m24:number;\r\n\t\tvar m31:number, m32:number, m33:number, m34:number;\r\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\r\n\t\tvar pose:JointPose;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar vec:Vector3D;\r\n\t\tvar t:number;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tpose = globalPoses[i];\r\n\t\t\tquat = pose.orientation;\r\n\t\t\tvec = pose.translation;\r\n\t\t\tox = quat.x;\r\n\t\t\toy = quat.y;\r\n\t\t\toz = quat.z;\r\n\t\t\tow = quat.w;\r\n\r\n\t\t\txy2 = (t = 2.0*ox)*oy;\r\n\t\t\txz2 = t*oz;\r\n\t\t\txw2 = t*ow;\r\n\t\t\tyz2 = (t = 2.0*oy)*oz;\r\n\t\t\tyw2 = t*ow;\r\n\t\t\tzw2 = 2.0*oz*ow;\r\n\r\n\t\t\tyz2 = 2.0*oy*oz;\r\n\t\t\tyw2 = 2.0*oy*ow;\r\n\t\t\tzw2 = 2.0*oz*ow;\r\n\t\t\tox *= ox;\r\n\t\t\toy *= oy;\r\n\t\t\toz *= oz;\r\n\t\t\tow *= ow;\r\n\r\n\t\t\tn11 = (t = ox - oy) - oz + ow;\r\n\t\t\tn12 = xy2 - zw2;\r\n\t\t\tn13 = xz2 + yw2;\r\n\t\t\tn21 = xy2 + zw2;\r\n\t\t\tn22 = -t - oz + ow;\r\n\t\t\tn23 = yz2 - xw2;\r\n\t\t\tn31 = xz2 - yw2;\r\n\t\t\tn32 = yz2 + xw2;\r\n\t\t\tn33 = -ox - oy + oz + ow;\r\n\r\n\t\t\t// prepend inverse bind pose\r\n\t\t\traw = joints[i].inverseBindPose;\r\n\t\t\tm11 = raw[0];\r\n\t\t\tm12 = raw[4];\r\n\t\t\tm13 = raw[8];\r\n\t\t\tm14 = raw[12];\r\n\t\t\tm21 = raw[1];\r\n\t\t\tm22 = raw[5];\r\n\t\t\tm23 = raw[9];\r\n\t\t\tm24 = raw[13];\r\n\t\t\tm31 = raw[2];\r\n\t\t\tm32 = raw[6];\r\n\t\t\tm33 = raw[10];\r\n\t\t\tm34 = raw[14];\r\n\r\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\r\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\r\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\r\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\r\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\r\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\r\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\r\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\r\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\r\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\r\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\r\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\r\n\r\n\t\t\tmtxOffset = mtxOffset + 12;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\r\n\t{\r\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\r\n\r\n\t\t//early out for GPU animations\r\n\t\tif (!this._pAnimationSet.usesCPU)\r\n\t\t\treturn sourceSubGeometry;\r\n\r\n\t\tvar targetSubGeometry:TriangleSubGeometry;\r\n\r\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\r\n\t\t\t//not yet stored\r\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\r\n\t\t\t//turn off auto calculations on the morphed geometry\r\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\r\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\r\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\r\n\t\t\t//add event listeners for any changes in UV values on the source geometry\r\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\r\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\r\n\t\t}\r\n\r\n\t\treturn targetSubGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * If the animation can't be performed on GPU, transform vertices manually\r\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\r\n\t * @param pass The material pass for which we need to transform the vertices\r\n\t */\r\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\r\n\t{\r\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\r\n\r\n\t\tvar sourcePositions:Array<number> = sourceSubGeometry.positions;\r\n\t\tvar sourceNormals:Array<number> = sourceSubGeometry.vertexNormals;\r\n\t\tvar sourceTangents:Array<number> = sourceSubGeometry.vertexTangents;\r\n\r\n\t\tvar jointIndices:Array<number> = sourceSubGeometry.jointIndices;\r\n\t\tvar jointWeights:Array<number> = sourceSubGeometry.jointWeights;\r\n\r\n\t\tvar targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\r\n\r\n\t\tvar targetPositions:Array<number> = targetSubGeometry.positions;\r\n\t\tvar targetNormals:Array<number> = targetSubGeometry.vertexNormals;\r\n\t\tvar targetTangents:Array<number> = targetSubGeometry.vertexTangents;\r\n\r\n\t\tvar index:number /*uint*/ = 0;\r\n\t\tvar j:number /*uint*/ = 0;\r\n\t\tvar k:number /*uint*/;\r\n\t\tvar vx:number, vy:number, vz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar len:number /*int*/ = sourcePositions.length;\r\n\t\tvar weight:number;\r\n\t\tvar vertX:number, vertY:number, vertZ:number;\r\n\t\tvar normX:number, normY:number, normZ:number;\r\n\t\tvar tangX:number, tangY:number, tangZ:number;\r\n\t\tvar m11:number, m12:number, m13:number, m14:number;\r\n\t\tvar m21:number, m22:number, m23:number, m24:number;\r\n\t\tvar m31:number, m32:number, m33:number, m34:number;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tvertX = sourcePositions[index];\r\n\t\t\tvertY = sourcePositions[index + 1];\r\n\t\t\tvertZ = sourcePositions[index + 2];\r\n\t\t\tnormX = sourceNormals[index];\r\n\t\t\tnormY = sourceNormals[index + 1];\r\n\t\t\tnormZ = sourceNormals[index + 2];\r\n\t\t\ttangX = sourceTangents[index];\r\n\t\t\ttangY = sourceTangents[index + 1];\r\n\t\t\ttangZ = sourceTangents[index + 2];\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\t\t\tvz = 0;\r\n\t\t\tnx = 0;\r\n\t\t\tny = 0;\r\n\t\t\tnz = 0;\r\n\t\t\ttx = 0;\r\n\t\t\tty = 0;\r\n\t\t\ttz = 0;\r\n\t\t\tk = 0;\r\n\t\t\twhile (k < this._jointsPerVertex) {\r\n\t\t\t\tweight = jointWeights[j];\r\n\t\t\t\tif (weight > 0) {\r\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\r\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\r\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\r\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\r\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\r\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\r\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\r\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\r\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\r\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\r\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\r\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\r\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\r\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\r\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\r\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\r\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\r\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\r\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\r\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\r\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\r\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\r\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\r\n\t\t\t\t\t++k;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tj += (this._jointsPerVertex - k);\r\n\t\t\t\t\tk = this._jointsPerVertex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttargetPositions[index] = vx;\r\n\t\t\ttargetPositions[index + 1] = vy;\r\n\t\t\ttargetPositions[index + 2] = vz;\r\n\t\t\ttargetNormals[index] = nx;\r\n\t\t\ttargetNormals[index + 1] = ny;\r\n\t\t\ttargetNormals[index + 2] = nz;\r\n\t\t\ttargetTangents[index] = tx;\r\n\t\t\ttargetTangents[index + 1] = ty;\r\n\t\t\ttargetTangents[index + 2] = tz;\r\n\r\n\t\t\tindex += 3;\r\n\t\t}\r\n\r\n\t\ttargetSubGeometry.updatePositions(targetPositions);\r\n\t\ttargetSubGeometry.updateVertexNormals(targetNormals);\r\n\t\ttargetSubGeometry.updateVertexTangents(targetTangents);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a local hierarchical skeleton pose to a global pose\r\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\r\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\r\n\t */\r\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\r\n\t{\r\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\r\n\t\tvar globalJointPose:JointPose;\r\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\r\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\r\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\r\n\t\tvar parentIndex:number /*int*/;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar parentPose:JointPose;\r\n\t\tvar pose:JointPose;\r\n\t\tvar or:Quaternion;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar t:Vector3D;\r\n\t\tvar q:Quaternion;\r\n\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number, y2:number, z2:number, w2:number;\r\n\t\tvar x3:number, y3:number, z3:number;\r\n\r\n\t\t// :s\r\n\t\tif (globalPoses.length != len)\r\n\t\t\tglobalPoses.length = len;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tglobalJointPose = globalPoses[i];\r\n\r\n\t\t\tif (globalJointPose == null)\r\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\r\n\r\n\t\t\tjoint = joints[i];\r\n\t\t\tparentIndex = joint.parentIndex;\r\n\t\t\tpose = jointPoses[i];\r\n\r\n\t\t\tq = globalJointPose.orientation;\r\n\t\t\tt = globalJointPose.translation;\r\n\r\n\t\t\tif (parentIndex < 0) {\r\n\t\t\t\ttr = pose.translation;\r\n\t\t\t\tor = pose.orientation;\r\n\t\t\t\tq.x = or.x;\r\n\t\t\t\tq.y = or.y;\r\n\t\t\t\tq.z = or.z;\r\n\t\t\t\tq.w = or.w;\r\n\t\t\t\tt.x = tr.x;\r\n\t\t\t\tt.y = tr.y;\r\n\t\t\t\tt.z = tr.z;\r\n\t\t\t} else {\r\n\t\t\t\t// append parent pose\r\n\t\t\t\tparentPose = globalPoses[parentIndex];\r\n\r\n\t\t\t\t// rotate point\r\n\t\t\t\tor = parentPose.orientation;\r\n\t\t\t\ttr = pose.translation;\r\n\t\t\t\tx2 = or.x;\r\n\t\t\t\ty2 = or.y;\r\n\t\t\t\tz2 = or.z;\r\n\t\t\t\tw2 = or.w;\r\n\t\t\t\tx3 = tr.x;\r\n\t\t\t\ty3 = tr.y;\r\n\t\t\t\tz3 = tr.z;\r\n\r\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\r\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\r\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\r\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\r\n\r\n\t\t\t\t// append parent translation\r\n\t\t\t\ttr = parentPose.translation;\r\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\r\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\r\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\r\n\r\n\t\t\t\t// append parent orientation\r\n\t\t\t\tx1 = or.x;\r\n\t\t\t\ty1 = or.y;\r\n\t\t\t\tz1 = or.z;\r\n\t\t\t\tw1 = or.w;\r\n\t\t\t\tor = pose.orientation;\r\n\t\t\t\tx2 = or.x;\r\n\t\t\t\ty2 = or.y;\r\n\t\t\t\tz2 = or.z;\r\n\t\t\t\tw2 = or.w;\r\n\r\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTransitionComplete(event:AnimationStateEvent)\r\n\t{\r\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\r\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\r\n\t\t\t//if this is the current active state transition, revert control to the active node\r\n\t\t\tif (this._pActiveState == event.animationState) {\r\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\r\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\r\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\r\n\t{\r\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\r\n\r\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).updateIndices(subGeometry.indices);\r\n\t}\r\n\r\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\r\n\t{\r\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\r\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\r\n\r\n\t\tswitch(event.dataType) {\r\n\t\t\tcase TriangleSubGeometry.UV_DATA:\r\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.uvs);\r\n\t\t\tcase TriangleSubGeometry.SECONDARY_UV_DATA:\r\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.secondaryUVs);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\n\r\n/**\r\n * The animation data set used by vertex-based animators, containing vertex animation state data.\r\n *\r\n * @see VertexAnimator\r\n */\r\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\r\n{\r\n\tprivate _numPoses:number /*uint*/;\r\n\tprivate _blendMode:string;\r\n\r\n\t/**\r\n\t * Returns the number of poses made available at once to the GPU animation code.\r\n\t */\r\n\tpublic get numPoses():number /*uint*/\r\n\t{\r\n\t\treturn this._numPoses;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the active blend mode of the vertex animator object.\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._blendMode;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\r\n\t */\r\n//\t\tpublic get useNormals():boolean\r\n//\t\t{\r\n//\t\t\treturn this._uploadNormals;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>VertexAnimationSet</code> object.\r\n\t *\r\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\r\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\r\n\t *\r\n\t * @see away3d.animators.data.VertexAnimationMode\r\n\t */\r\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._numPoses = numPoses;\r\n\t\tthis._blendMode = blendMode;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase):string\r\n\t{\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\r\n\t\t\treturn this.getAbsoluteAGALCode(shader);\r\n\t\telse\r\n\t\t\treturn this.getAdditiveAGALCode(shader);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar uID:number = pass._iUniqueId;\r\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\r\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar uID:number = pass._iUniqueId;\r\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\r\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n//\t\t\tcontext.setVertexBufferAt(index, null);\r\n//\t\t\tif (this._uploadNormals)\r\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\r\n//\t\t\tif (this._uploadTangents)\r\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase):string\r\n\t{\r\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates the vertex AGAL code for absolute blending.\r\n\t */\r\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\r\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\r\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\r\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\r\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\r\n\r\n\t\tif (len > 2)\r\n\t\t\tlen = 2;\r\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\r\n\r\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\r\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\r\n\r\n\t\t\t\tif (j < this._numPoses - 1)\r\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\r\n\t\t\t\t++streamIndex;\r\n\t\t\t}\r\n\r\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\t\t}\r\n\r\n\t\t// add code for bitangents if tangents are used\r\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\r\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\r\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\r\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates the vertex AGAL code for additive blending.\r\n\t */\r\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\r\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\r\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\r\n\t\tvar k:number /*uint*/;\r\n\r\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\r\n\r\n\t\tif (len > 2)\r\n\t\t\tlen = 2;\r\n\r\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\r\n\t\tif (shader.normalDependencies > 0)\r\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\r\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\r\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\r\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\r\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\r\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = VertexAnimationSet;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\n\r\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport VertexDataPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\r\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\r\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\n\r\n/**\r\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\r\n * and controlling the various available states of animation through an interative playhead that can be\r\n * automatically updated or manually triggered.\r\n */\r\nclass VertexAnimator extends AnimatorBase\r\n{\r\n\tprivate _vertexAnimationSet:VertexAnimationSet;\r\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\r\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\r\n\tprivate _numPoses:number /*uint*/;\r\n\tprivate _blendMode:string;\r\n\tprivate _activeVertexState:IVertexAnimationState;\r\n\r\n\t/**\r\n\t * Creates a new <code>VertexAnimator</code> object.\r\n\t *\r\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\r\n\t */\r\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\r\n\t{\r\n\t\tsuper(vertexAnimationSet);\r\n\r\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\r\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\r\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\r\n\t}\r\n\r\n\t/**\r\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\r\n\t * @param sequenceName The name of the clip to be played.\r\n\t */\r\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\r\n\t{\r\n\t\tif (this._pActiveAnimationName == name)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pActiveAnimationName = name;\r\n\r\n\t\t//TODO: implement transitions in vertex animator\r\n\r\n\t\tif (!this._pAnimationSet.hasAnimation(name))\r\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\r\n\r\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\r\n\r\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\r\n\r\n\t\tif (this.updatePosition) {\r\n\t\t\t//update straight away to reset position deltas\r\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\r\n\t\t\tthis._pActiveState.positionDelta;\r\n\t\t}\r\n\r\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\r\n\r\n\t\tthis.start();\r\n\r\n\t\t//apply a time offset if specified\r\n\t\tif (!isNaN(offset))\r\n\t\t\tthis.reset(name, offset);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tsuper._pUpdateDeltaTime(dt);\r\n\r\n\t\tvar geometryFlag:boolean = false;\r\n\r\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\r\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\r\n\t\t\tgeometryFlag = true;\r\n\t\t}\r\n\r\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\r\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\r\n\t\t\tgeometryFlag = true;\r\n\t\t}\r\n\r\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\r\n\r\n\t\tif (geometryFlag) {\r\n\t\t\t//invalidate meshes\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar len:number = this._pOwners.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\tmesh = this._pOwners[i];\r\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\t// todo: add code for when running on cpu\r\n\r\n\t\t// if no poses defined, set temp data\r\n\t\tif (!this._poses.length) {\r\n\t\t\tthis.setNullPose(shader, renderable, stage, vertexConstantOffset, vertexStreamOffset);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// this type of animation can only be SubMesh\r\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/ = this._numPoses;\r\n\r\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\r\n\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\r\n\t\t\ti = 1;\r\n\t\telse\r\n\t\t\ti = 0;\r\n\r\n\t\tfor (; i < len; ++i) {\r\n\t\t\tsubGeom = this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\r\n\r\n\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.POSITION_DATA), subGeom.getOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\r\n\t\t\tif (shader.normalDependencies > 0)\r\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.NORMAL_DATA), subGeom.getOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setNullPose(shader:ShaderBase, renderable:RenderableBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\r\n\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\r\n\t\t\tvar len:number /*uint*/ = this._numPoses;\r\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\r\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\r\n\t\t\t\tif (shader.normalDependencies > 0)\r\n\t\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: set temp data for additive?\r\n\t}\r\n\r\n\t/**\r\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\r\n\t * Needs to be called if gpu code is potentially required.\r\n\t */\r\n\tpublic testGPUCompatibility(shader:ShaderBase)\r\n\t{\r\n\t}\r\n\r\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\r\n\t{\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\r\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\r\n\r\n\t\t//nothing to do here\r\n\t\treturn sourceSubGeometry;\r\n\t}\r\n}\r\n\r\nexport = VertexAnimator;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n\r\n/**\r\n * ...\r\n */\r\nclass AnimationRegisterCache extends ShaderRegisterCache\r\n{\r\n\t//vertex\r\n\tpublic positionAttribute:ShaderRegisterElement;\r\n\tpublic uvAttribute:ShaderRegisterElement;\r\n\tpublic positionTarget:ShaderRegisterElement;\r\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\r\n\tpublic velocityTarget:ShaderRegisterElement;\r\n\tpublic vertexTime:ShaderRegisterElement;\r\n\tpublic vertexLife:ShaderRegisterElement;\r\n\tpublic vertexZeroConst:ShaderRegisterElement;\r\n\tpublic vertexOneConst:ShaderRegisterElement;\r\n\tpublic vertexTwoConst:ShaderRegisterElement;\r\n\tpublic uvTarget:ShaderRegisterElement;\r\n\tpublic colorAddTarget:ShaderRegisterElement;\r\n\tpublic colorMulTarget:ShaderRegisterElement;\r\n\t//vary\r\n\tpublic colorAddVary:ShaderRegisterElement;\r\n\tpublic colorMulVary:ShaderRegisterElement;\r\n\r\n\t//fragment\r\n\r\n\tpublic uvVar:ShaderRegisterElement;\r\n\r\n\t//these are targets only need to rotate ( normal and tangent )\r\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\r\n\r\n\tpublic needFragmentAnimation:boolean;\r\n\tpublic needUVAnimation:boolean;\r\n\r\n\tpublic sourceRegisters:Array<string>;\r\n\tpublic targetRegisters:Array<string>;\r\n\r\n\tprivate indexDictionary:Object = new Object();\r\n\r\n\t//set true if has an node which will change UV\r\n\tpublic hasUVNode:boolean;\r\n\t//set if the other nodes need to access the velocity\r\n\tpublic needVelocity:boolean;\r\n\t//set if has a billboard node.\r\n\tpublic hasBillboard:boolean;\r\n\t//set if has an node which will apply color multiple operation\r\n\tpublic hasColorMulNode:boolean;\r\n\t//set if has an node which will apply color add operation\r\n\tpublic hasColorAddNode:boolean;\r\n\r\n\tconstructor(profile:string)\r\n\t{\r\n\t\tsuper(profile);\r\n\t}\r\n\r\n\tpublic reset()\r\n\t{\r\n\t\tsuper.reset();\r\n\r\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\r\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\r\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\r\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\r\n\r\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\r\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\r\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\r\n\t\t}\r\n\r\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\r\n\r\n\t\t//allot const register\r\n\r\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\r\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\r\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\r\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\r\n\r\n\t\t//allot temp register\r\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\r\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\r\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\r\n\r\n\t\tif (this.needVelocity) {\r\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\r\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\r\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\r\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\r\n\t\t} else {\r\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\r\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\r\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\r\n\t{\r\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\r\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\r\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\r\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\r\n\t}\r\n\r\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\r\n\t{\r\n\t\t//8 should be enough for any node.\r\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\r\n\r\n\t\tif (t == null)\r\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\r\n\r\n\t\tt[parameterIndex] = registerIndex;\r\n\t}\r\n\r\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\r\n\t}\r\n\r\n\tpublic getInitCode():string\r\n\t{\r\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\r\n\t\tvar code:string = \"\";\r\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\r\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\r\n\r\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\r\n\r\n\t\tif (this.needVelocity)\r\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic getCombinationCode():string\r\n\t{\r\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\r\n\t}\r\n\r\n\tpublic initColorRegisters():string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.hasColorMulNode) {\r\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\r\n\t\t\tthis.colorMulVary = this.getFreeVarying();\r\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\r\n\t\t}\r\n\t\tif (this.hasColorAddNode) {\r\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\r\n\t\t\tthis.colorAddVary = this.getFreeVarying();\r\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic getColorPassCode():string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\r\n\t\t\tif (this.hasColorMulNode)\r\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\r\n\t\t\tif (this.hasColorAddNode)\r\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic getColorCombinationCode(shadedTarget:string):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\r\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\r\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\r\n\t\t\tif (this.hasColorMulNode)\r\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\r\n\t\t\tif (this.hasColorAddNode)\r\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\r\n\t{\r\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\r\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\r\n\t}\r\n\r\n\tpublic vertexConstantData:Array<number> = new Array<number>();\r\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\r\n\r\n\tprivate _numVertexConstant:number /*int*/;\r\n\tprivate _numFragmentConstant:number /*int*/;\r\n\r\n\tpublic get numVertexConstant():number /*int*/\r\n\t{\r\n\t\treturn this._numVertexConstant;\r\n\t}\r\n\r\n\tpublic get numFragmentConstant():number /*int*/\r\n\t{\r\n\t\treturn this._numFragmentConstant;\r\n\t}\r\n\r\n\tpublic setDataLength()\r\n\t{\r\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\r\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\r\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\r\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\r\n\t}\r\n\r\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\r\n\t\tthis.vertexConstantData[_index++] = x;\r\n\t\tthis.vertexConstantData[_index++] = y;\r\n\t\tthis.vertexConstantData[_index++] = z;\r\n\t\tthis.vertexConstantData[_index] = w;\r\n\t}\r\n\r\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\r\n\t{\r\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\r\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\r\n\t\t\tthis.vertexConstantData[_index++] = data[i];\r\n\t}\r\n\r\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\r\n\t{\r\n\t\tvar rawData:Array<number> = matrix.rawData;\r\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\r\n\t\tthis.vertexConstantData[_index++] = rawData[0];\r\n\t\tthis.vertexConstantData[_index++] = rawData[4];\r\n\t\tthis.vertexConstantData[_index++] = rawData[8];\r\n\t\tthis.vertexConstantData[_index++] = rawData[12];\r\n\t\tthis.vertexConstantData[_index++] = rawData[1];\r\n\t\tthis.vertexConstantData[_index++] = rawData[5];\r\n\t\tthis.vertexConstantData[_index++] = rawData[9];\r\n\t\tthis.vertexConstantData[_index++] = rawData[13];\r\n\t\tthis.vertexConstantData[_index++] = rawData[2];\r\n\t\tthis.vertexConstantData[_index++] = rawData[6];\r\n\t\tthis.vertexConstantData[_index++] = rawData[10];\r\n\t\tthis.vertexConstantData[_index++] = rawData[14];\r\n\t\tthis.vertexConstantData[_index++] = rawData[3];\r\n\t\tthis.vertexConstantData[_index++] = rawData[7];\r\n\t\tthis.vertexConstantData[_index++] = rawData[11];\r\n\t\tthis.vertexConstantData[_index] = rawData[15];\r\n\r\n\t}\r\n\r\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\r\n\t\tthis.fragmentConstantData[_index++] = x;\r\n\t\tthis.fragmentConstantData[_index++] = y;\r\n\t\tthis.fragmentConstantData[_index++] = z;\r\n\t\tthis.fragmentConstantData[_index] = w;\r\n\t}\r\n}\r\n\r\nexport = AnimationRegisterCache;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\r\n\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass AnimationSubGeometry\r\n{\r\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\r\n\r\n\tpublic _pVertexData:Array<number>;\r\n\r\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\r\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\r\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\r\n\r\n\tprivate _numVertices:number /*uint*/;\r\n\r\n\tprivate _totalLenOfOneVertex:number /*uint*/;\r\n\r\n\tpublic numProcessedVertices:number /*int*/ = 0;\r\n\r\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\r\n\r\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\r\n\r\n\t/**\r\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iUniqueId:number;//Arcane\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\r\n\t\t\tthis._pBufferDirty[i] = true;\r\n\r\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\r\n\t}\r\n\r\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\r\n\t{\r\n\t\tthis._numVertices = numVertices;\r\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\r\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\r\n\t}\r\n\r\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\r\n\t{\r\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\r\n\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n\r\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\r\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\r\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex);\r\n\t\t\tthis._pBufferContext[contextIndex] = context;\r\n\t\t\tthis._pBufferDirty[contextIndex] = true;\r\n\t\t}\r\n\t\tif (this._pBufferDirty[contextIndex]) {\r\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\r\n\t\t\tthis._pBufferDirty[contextIndex] = false;\r\n\t\t}\r\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset, format);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._pVertexBuffer.length) {\r\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\r\n\r\n\t\t\tif (vertexBuffer)\r\n\t\t\t\tvertexBuffer.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic invalidateBuffer()\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\r\n\t\t\tthis._pBufferDirty[i] = true;\r\n\t}\r\n\r\n\tpublic get vertexData():Array<number>\r\n\t{\r\n\t\treturn this._pVertexData;\r\n\t}\r\n\r\n\tpublic get numVertices():number /*uint*/\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\tpublic get totalLenOfOneVertex():number /*uint*/\r\n\t{\r\n\t\treturn this._totalLenOfOneVertex;\r\n\t}\r\n}\r\n\r\nexport = AnimationSubGeometry;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nclass ColorSegmentPoint\r\n{\r\n\tprivate _color:ColorTransform;\r\n\tprivate _life:number;\r\n\r\n\tconstructor(life:number, color:ColorTransform)\r\n\t{\r\n\t\t//0<life<1\r\n\t\tif (life <= 0 || life >= 1)\r\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\r\n\t\tthis._life = life;\r\n\t\tthis._color = color;\r\n\t}\r\n\r\n\tpublic get color():ColorTransform\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic get life():number\r\n\t{\r\n\t\treturn this._life;\r\n\t}\r\n\r\n}\r\n\r\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * Contains transformation data for a skeleton joint, used for skeleton animation.\r\n *\r\n * @see away.animation.Skeleton\r\n * @see away.animation.SkeletonJoint\r\n *\r\n * todo: support (uniform) scale\r\n */\r\nclass JointPose\r\n{\r\n\t/**\r\n\t * The name of the joint to which the pose is associated\r\n\t */\r\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\r\n\r\n\t/**\r\n\t * The rotation of the pose stored as a quaternion\r\n\t */\r\n\tpublic orientation:Quaternion = new Quaternion();\r\n\r\n\t/**\r\n\t * The translation of the pose\r\n\t */\r\n\tpublic translation:Vector3D = new Vector3D();\r\n\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the transformation to a Matrix3D representation.\r\n\t *\r\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\r\n\t * @return The transformation matrix of the pose.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tthis.orientation.toMatrix3D(target);\r\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the transformation data from a source pose object into the existing pose object.\r\n\t *\r\n\t * @param pose The source pose to copy from.\r\n\t */\r\n\tpublic copyFrom(pose:JointPose)\r\n\t{\r\n\t\tvar or:Quaternion = pose.orientation;\r\n\t\tvar tr:Vector3D = pose.translation;\r\n\t\tthis.orientation.x = or.x;\r\n\t\tthis.orientation.y = or.y;\r\n\t\tthis.orientation.z = or.z;\r\n\t\tthis.orientation.w = or.w;\r\n\t\tthis.translation.x = tr.x;\r\n\t\tthis.translation.y = tr.y;\r\n\t\tthis.translation.z = tr.z;\r\n\t}\r\n}\r\n\r\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleAnimationData\r\n{\r\n\tpublic index:number /*uint*/;\r\n\tpublic startTime:number;\r\n\tpublic totalTime:number;\r\n\tpublic duration:number;\r\n\tpublic delay:number;\r\n\tpublic startVertexIndex:number /*uint*/;\r\n\tpublic numVertices:number /*uint*/;\r\n\r\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\r\n\t{\r\n\t\tthis.index = index;\r\n\t\tthis.startTime = startTime;\r\n\t\tthis.totalTime = duration + delay;\r\n\t\tthis.duration = duration;\r\n\t\tthis.delay = delay;\r\n\t\tthis.startVertexIndex = particle.startVertexIndex;\r\n\t\tthis.numVertices = particle.numVertices;\r\n\t}\r\n}\r\n\r\nexport = ParticleAnimationData;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\n\r\nclass ParticleData\r\n{\r\n\tpublic particleIndex:number /*uint*/;\r\n\tpublic numVertices:number /*uint*/;\r\n\tpublic startVertexIndex:number /*uint*/;\r\n\tpublic subGeometry:TriangleSubGeometry;\r\n}\r\n\r\nexport = ParticleData",
    "/**\r\n * Options for setting the properties mode of a particle animation node.\r\n */\r\nclass ParticlePropertiesMode\r\n{\r\n\t/**\r\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\r\n\t */\r\n\tpublic static GLOBAL:number /*uint*/ = 0;\r\n\r\n\t/**\r\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\r\n\t */\r\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\r\n\r\n\t/**\r\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\r\n\t */\r\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\r\n}\r\n\r\nexport = ParticlePropertiesMode;",
    "/**\r\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\r\n * of particles in the particle animation set before beginning upload to the GPU.\r\n */\r\nclass ParticleProperties\r\n{\r\n\t/**\r\n\t * The index of the current particle being set.\r\n\t */\r\n\tpublic index:number /*uint*/;\r\n\r\n\t/**\r\n\t * The total number of particles being processed by the particle animation set.\r\n\t */\r\n\tpublic total:number /*uint*/;\r\n\r\n\t/**\r\n\t * The start time of the particle.\r\n\t */\r\n\tpublic startTime:number;\r\n\r\n\t/**\r\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t */\r\n\tpublic duration:number;\r\n\r\n\t/**\r\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t */\r\n\tpublic delay:number;\r\n}\r\n\r\nexport = ParticleProperties;",
    "/**\r\n * A value obect representing a single joint in a skeleton object.\r\n *\r\n * @see away.animators.Skeleton\r\n */\r\nclass SkeletonJoint\r\n{\r\n\t/**\r\n\t * The index of the parent joint in the skeleton's joints vector.\r\n\t *\r\n\t * @see away.animators.Skeleton#joints\r\n\t */\r\n\tpublic parentIndex:number /*int*/ = -1;\r\n\r\n\t/**\r\n\t * The name of the joint\r\n\t */\r\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\r\n\r\n\t/**\r\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\r\n\t */\r\n\tpublic inverseBindPose:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonJoint</code> object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\n\r\n\r\n/**\r\n * A collection of pose objects, determining the pose for an entire skeleton.\r\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\r\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\r\n * clips are added to any animator with a valid skeleton)\r\n *\r\n * @see away.animators.Skeleton\r\n * @see away.animators.JointPose\r\n */\r\nclass SkeletonPose extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\r\n\r\n\t/**\r\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\r\n\t *\r\n\t * @see away.animators.Skeleton#joints\r\n\t */\r\n\tpublic jointPoses:Array<JointPose>;\r\n\r\n\t/**\r\n\t * The total number of joint poses in the skeleton pose.\r\n\t */\r\n\tpublic get numJointPoses():number /*uint*/\r\n\t{\r\n\t\treturn this.jointPoses.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonPose</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.jointPoses = new Array<JointPose>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SkeletonPose.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\r\n\t *\r\n\t * @param jointName The name of the joint object whose pose is to be found.\r\n\t * @return The pose object with the given joint name.\r\n\t */\r\n\tpublic jointPoseFromName(jointName:string):JointPose\r\n\t{\r\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\r\n\t\tif (jointPoseIndex != -1)\r\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\r\n\t *\r\n\t * @param The name of the joint object whose pose is to be found.\r\n\t * @return The index of the pose object in the jointPoses Array\r\n\t *\r\n\t * @see #jointPoses\r\n\t */\r\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\r\n\t{\r\n\t\t// this is implemented as a linear search, rather than a possibly\r\n\t\t// more optimal method (Dictionary lookup, for example) because:\r\n\t\t// a) it is assumed that it will be called once for each joint\r\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\r\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\r\n\t\t//    rather than direct array access.  this would be sub-optimal.\r\n\t\tvar jointPoseIndex:number /*int*/;\r\n\t\tvar jointPose:JointPose;\r\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\r\n\t\t\tjointPose = this.jointPoses[i];\r\n\t\t\tif (jointPose.name == jointName)\r\n\t\t\t\treturn jointPoseIndex;\r\n\t\t\tjointPoseIndex++;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\r\n\t *\r\n\t * @return SkeletonPose\r\n\t */\r\n\tpublic clone():SkeletonPose\r\n\t{\r\n\t\tvar clone:SkeletonPose = new SkeletonPose();\r\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\r\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\r\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\r\n\t\t\tcloneJointPose.name = thisJointPose.name;\r\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\r\n\t\t\tclone.jointPoses[i] = cloneJointPose;\r\n\t\t}\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.jointPoses.length = 0;\r\n\t}\r\n}\r\n\r\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\r\n *\r\n * @see away.animators.SkeletonJoint\r\n */\r\nclass Skeleton extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Skeleton]\";\r\n\r\n\t/**\r\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\r\n\t * property that is an index into this list.\r\n\t * A child joint should always have a higher index than its parent.\r\n\t */\r\n\tpublic joints:Array<SkeletonJoint>;\r\n\r\n\t/**\r\n\t * The total number of joints in the skeleton.\r\n\t */\r\n\tpublic get numJoints():number /*uint*/\r\n\t{\r\n\t\treturn this.joints.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Skeleton</code> object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\r\n\t\tthis.joints = new Array<SkeletonJoint>();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\r\n\t *\r\n\t * @param jointName The name of the joint object to be found.\r\n\t * @return The joint object with the given name.\r\n\t *\r\n\t * @see #joints\r\n\t */\r\n\tpublic jointFromName(jointName:string):SkeletonJoint\r\n\t{\r\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\r\n\t\tif (jointIndex != -1)\r\n\t\t\treturn this.joints[jointIndex]; else\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\r\n\t *\r\n\t * @param jointName The name of the joint object to be found.\r\n\t * @return The index of the joint object in the joints Array\r\n\t *\r\n\t * @see #joints\r\n\t */\r\n\tpublic jointIndexFromName(jointName:string):number /*int*/\r\n\t{\r\n\t\t// this is implemented as a linear search, rather than a possibly\r\n\t\t// more optimal method (Dictionary lookup, for example) because:\r\n\t\t// a) it is assumed that it will be called once for each joint\r\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\r\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\r\n\t\t//    rather than direct array access.  this would be sub-optimal.\r\n\t\tvar jointIndex:number /*int*/;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\r\n\t\t\tjoint = this.joints[i];\r\n\t\t\tif (joint.name == jointName)\r\n\t\t\t\treturn jointIndex;\r\n\t\t\tjointIndex++;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.joints.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skeleton.assetType;\r\n\t}\r\n}\r\n\r\nexport = Skeleton;",
    "/**\r\n * Options for setting the animation mode of a vertex animator object.\r\n *\r\n * @see away.animators.VertexAnimator\r\n */\r\nclass VertexAnimationMode\r\n{\r\n\t/**\r\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\r\n\t */\r\n\tpublic static ADDITIVE:string = \"additive\";\r\n\r\n\t/**\r\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\r\n\t */\r\n\tpublic static ABSOLUTE:string = \"absolute\";\r\n}\r\n\r\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\r\n */\r\nclass AnimationClipNodeBase extends AnimationNodeBase\r\n{\r\n\tpublic _pLooping:boolean = true;\r\n\tpublic _pTotalDuration:number /*uint*/ = 0;\r\n\tpublic _pLastFrame:number /*uint*/;\r\n\r\n\tpublic _pStitchDirty:boolean = true;\r\n\tpublic _pStitchFinalFrame:boolean = false;\r\n\tpublic _pNumFrames:number /*uint*/ = 0;\r\n\r\n\tpublic _pDurations:Array<number> = new Array<number>();\r\n\t/*uint*/\r\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\r\n\r\n\tpublic fixedFrameRate:boolean = true;\r\n\r\n\t/**\r\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\r\n\t */\r\n\tpublic get looping():boolean\r\n\t{\r\n\t\treturn this._pLooping;\r\n\t}\r\n\r\n\tpublic set looping(value:boolean)\r\n\t{\r\n\t\tif (this._pLooping == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pLooping = value;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\r\n\t * assumption that both first and last frames are identical (false). Defaults to false.\r\n\t */\r\n\tpublic get stitchFinalFrame():boolean\r\n\t{\r\n\t\treturn this._pStitchFinalFrame;\r\n\t}\r\n\r\n\tpublic set stitchFinalFrame(value:boolean)\r\n\t{\r\n\t\tif (this._pStitchFinalFrame == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pStitchFinalFrame = value;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\tpublic get totalDuration():number /*uint*/\r\n\t{\r\n\t\tif (this._pStitchDirty)\r\n\t\t\tthis._pUpdateStitch();\r\n\r\n\t\treturn this._pTotalDuration;\r\n\t}\r\n\r\n\tpublic get totalDelta():Vector3D\r\n\t{\r\n\t\tif (this._pStitchDirty)\r\n\t\t\tthis._pUpdateStitch();\r\n\r\n\t\treturn this._pTotalDelta;\r\n\t}\r\n\r\n\tpublic get lastFrame():number /*uint*/\r\n\t{\r\n\t\tif (this._pStitchDirty)\r\n\t\t\tthis._pUpdateStitch();\r\n\r\n\t\treturn this._pLastFrame;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\r\n\t */\r\n\tpublic get durations():Array<number> /*uint*/\r\n\t{\r\n\t\treturn this._pDurations;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the node's final frame stitch state.\r\n\t *\r\n\t * @see #stitchFinalFrame\r\n\t */\r\n\tpublic _pUpdateStitch()\r\n\t{\r\n\t\tthis._pStitchDirty = false;\r\n\r\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\r\n\r\n\t\tthis._pTotalDuration = 0;\r\n\t\tthis._pTotalDelta.x = 0;\r\n\t\tthis._pTotalDelta.y = 0;\r\n\t\tthis._pTotalDelta.z = 0;\r\n\t}\r\n}\r\n\r\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\r\n\r\n/**\r\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\r\n */\r\nclass ParticleAccelerationNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _acceleration:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\r\n\t */\r\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleAccelerationNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\r\n\r\n\t\tthis._pStateClass = ParticleAccelerationState;\r\n\r\n\t\tthis._acceleration = acceleration || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\r\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t}\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\r\n\t{\r\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\r\n\t\tif (!tempAcceleration)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\r\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\r\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\r\n\t}\r\n}\r\n\r\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\r\n\r\n/**\r\n * A particle animation node used to control the position of a particle over time along a bezier curve.\r\n */\r\nclass ParticleBezierCurveNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iControlPoint:Vector3D;\r\n\t/** @private */\r\n\tpublic _iEndPoint:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\r\n\t */\r\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\r\n\r\n\t/**\r\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\r\n\t */\r\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleBezierCurveNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\r\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\r\n\r\n\t\tthis._pStateClass = ParticleBezierCurveState;\r\n\r\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\r\n\t\tthis._iEndPoint = endPoint || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\r\n\r\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\r\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\r\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\r\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\r\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\r\n\t{\r\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\r\n\t\tif (!bezierControl)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\r\n\r\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\r\n\t\tif (!bezierEnd)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = bezierControl.x;\r\n\t\tthis._pOneData[1] = bezierControl.y;\r\n\t\tthis._pOneData[2] = bezierControl.z;\r\n\t\tthis._pOneData[3] = bezierEnd.x;\r\n\t\tthis._pOneData[4] = bezierEnd.y;\r\n\t\tthis._pOneData[5] = bezierEnd.z;\r\n\t}\r\n}\r\n\r\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\r\n\r\n/**\r\n * A particle animation node that controls the rotation of a particle to always face the camera.\r\n */\r\nclass ParticleBillboardNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iBillboardAxis:Vector3D;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleBillboardNode</code>\r\n\t */\r\n\tconstructor(billboardAxis:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\r\n\r\n\t\tthis._pStateClass = ParticleBillboardState;\r\n\r\n\t\tthis._iBillboardAxis = billboardAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\r\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\r\n\r\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\r\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\r\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\r\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\r\n\t{\r\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.hasBillboard = true;\r\n\t}\r\n}\r\n\r\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\r\n\r\n/**\r\n * A particle animation node used to control the color variation of a particle over time.\r\n */\r\nclass ParticleColorNode extends ParticleNodeBase\r\n{\r\n\t//default values used when creating states\r\n\t/** @private */\r\n\tpublic _iUsesMultiplier:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesOffset:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\t/** @private */\r\n\tpublic _iStartColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iEndColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\r\n\t/**\r\n\t * Reference for color node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\r\n\t */\r\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\r\n\r\n\t/**\r\n\t * Reference for color node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\r\n\t */\r\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleColorNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\r\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\r\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\r\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\r\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\r\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\r\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\r\n\t{\r\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleColorState;\r\n\r\n\t\tthis._iUsesMultiplier = usesMultiplier;\r\n\t\tthis._iUsesOffset = usesOffset;\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iStartColor = startColor || new ColorTransform();\r\n\t\tthis._iEndColor = endColor || new ColorTransform();\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tif (this._iUsesCycle) {\r\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\r\n\r\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\r\n\r\n\t\t\t\tif (this._iUsesPhase)\r\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\r\n\r\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\r\n\r\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\r\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\r\n\r\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\r\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\r\n\t{\r\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tif (this._iUsesMultiplier)\r\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\r\n\t\tif (this._iUsesOffset)\r\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\r\n\t\tif (!startColor)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\r\n\r\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\r\n\t\tif (!endColor)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\r\n\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\tif (!this._iUsesCycle) {\r\n\t\t\t//multiplier\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\r\n\t\t\t}\r\n\r\n\t\t\t//offset\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//multiplier\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\r\n\t\t\t}\r\n\r\n\t\t\t//offset\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\r\n\r\n/**\r\n * A particle animation node used to create a follow behaviour on a particle system.\r\n */\r\nclass ParticleFollowNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesPosition:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesRotation:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iSmooth:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleFollowNode</code>\r\n\t *\r\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\r\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\r\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\r\n\t */\r\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\r\n\t{\r\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleFollowState;\r\n\r\n\t\tthis._iUsesPosition = usesPosition;\r\n\t\tthis._iUsesRotation = usesRotation;\r\n\t\tthis._iSmooth = smooth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\t//TODO: use Quaternion to implement this function\r\n\t\tvar code:string = \"\";\r\n\t\tif (this._iUsesRotation) {\r\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\r\n\r\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\r\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tvar temp4:ShaderRegisterElement;\r\n\t\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\r\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t}\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\r\n\t\t\tif (animationRegisterCache.hasBillboard)\r\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\r\n\r\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\t\tvar i:number /*int*/;\r\n\r\n\t\t\t//x axis\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\r\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\r\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\r\n\r\n\t\t\tif (animationRegisterCache.hasBillboard)\r\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\telse {\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t//y axis\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\r\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\r\n\r\n\t\t\tif (animationRegisterCache.hasBillboard)\r\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\telse {\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t//z axis\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\r\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\r\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\r\n\t\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._iUsesPosition) {\r\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\r\n\t{\r\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\r\n\r\n/**\r\n *\r\n */\r\nclass ParticleInitialColorNode extends ParticleNodeBase\r\n{\r\n\t//default values used when creating states\r\n\t/** @private */\r\n\tpublic _iUsesMultiplier:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesOffset:boolean;\r\n\t/** @private */\r\n\tpublic _iInitialColor:ColorTransform;\r\n\r\n\t/**\r\n\t * Reference for color node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\r\n\t */\r\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\r\n\r\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\r\n\t{\r\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleInitialColorState;\r\n\r\n\t\tthis._iUsesMultiplier = usesMultiplier;\r\n\t\tthis._iUsesOffset = usesOffset;\r\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\r\n\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\r\n\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tif (this._iUsesMultiplier)\r\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\r\n\t\tif (this._iUsesOffset)\r\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\r\n\t\tif (!initialColor)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\r\n\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\t//multiplier\r\n\t\tif (this._iUsesMultiplier) {\r\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\r\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\r\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\r\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\r\n\t\t}\r\n\t\t//offset\r\n\t\tif (this._iUsesOffset) {\r\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\r\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\r\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\r\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\n\r\n/**\r\n * Provides an abstract base class for particle animation nodes.\r\n */\r\nclass ParticleNodeBase extends AnimationNodeBase\r\n{\r\n\tprivate _priority:number /*int*/;\r\n\r\n\tpublic _pMode:number /*uint*/;\r\n\tpublic _pDataLength:number /*uint*/ = 3;\r\n\tpublic _pOneData:Array<number>;\r\n\r\n\tpublic _iDataOffset:number /*uint*/;\r\n\r\n\t//modes alias\r\n\tprivate static GLOBAL:string = 'Global';\r\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\r\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\r\n\r\n\t//modes list\r\n\tprivate static MODES:Object =\r\n\t{\r\n\t\t0:ParticleNodeBase.GLOBAL,\r\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\r\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\r\n\t *\r\n\t * @see away.animators.ParticlePropertiesMode\r\n\t */\r\n\tpublic get mode():number /*uint*/\r\n\t{\r\n\t\treturn this._pMode;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t * @see #getAGALVertexCode\r\n\t */\r\n\tpublic get priority():number /*int*/\r\n\t{\r\n\t\treturn this._priority;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t * @see #getAGALVertexCode\r\n\t */\r\n\tpublic get dataLength():number /*int*/\r\n\t{\r\n\t\treturn this._pDataLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t * @see #generatePropertyOfOneParticle\r\n\t */\r\n\tpublic get oneData():Array<number>\r\n\t{\r\n\t\treturn this._pOneData;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleNodeBase</code> object.\r\n\t *\r\n\t * @param               name            Defines the generic name of the particle animation node.\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\r\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\r\n\t */\r\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tname = name + ParticleNodeBase.MODES[mode];\r\n\r\n\t\tthis.name = name;\r\n\t\tthis._pMode = mode;\r\n\t\tthis._priority = priority;\r\n\t\tthis._pDataLength = dataLength;\r\n\r\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\r\n\t */\r\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\r\n\r\n/**\r\n * A particle animation node used to control the position of a particle over time around a circular orbit.\r\n */\r\nclass ParticleOrbitNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesEulers:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iRadius:number;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\t/** @private */\r\n\tpublic _iEulers:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for orbit node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\r\n\t */\r\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleOrbitNode</code> object.\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\r\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\r\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\r\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\r\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\r\n\t{\r\n\t\tvar len:number /*int*/ = 3;\r\n\t\tif (usesPhase)\r\n\t\t\tlen++;\r\n\t\tsuper(\"ParticleOrbit\", mode, len);\r\n\r\n\t\tthis._pStateClass = ParticleOrbitState;\r\n\r\n\t\tthis._iUsesEulers = usesEulers;\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iRadius = radius;\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t\tthis._iEulers = eulers || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\r\n\r\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\r\n\r\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\r\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\r\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\r\n\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\r\n\r\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\r\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\r\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\r\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\r\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\tif (this._iUsesEulers)\r\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\r\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\r\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tif (this._iUsesEulers)\r\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\r\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\r\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\r\n\t\t\tif (!this._iUsesCycle)\r\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\r\n\t{\r\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\r\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\r\n\t\tif (!orbit)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = orbit.x;\r\n\t\tif (this._iUsesCycle && orbit.y <= 0)\r\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\r\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\r\n\t\tif (this._iUsesPhase)\r\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\r\n\t}\r\n}\r\n\r\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\r\n\r\n/**\r\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\r\n */\r\nclass ParticleOscillatorNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iOscillator:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\r\n\t */\r\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleOscillatorNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleOscillator\", mode, 4);\r\n\r\n\t\tthis._pStateClass = ParticleOscillatorState;\r\n\r\n\t\tthis._iOscillator = oscillator || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\r\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\r\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\r\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\r\n\t{\r\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\r\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\r\n\t\tif (!drift)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\r\n\r\n\t\tthis._pOneData[0] = drift.x;\r\n\t\tthis._pOneData[1] = drift.y;\r\n\t\tthis._pOneData[2] = drift.z;\r\n\t\tif (drift.w <= 0)\r\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\r\n\t}\r\n}\r\n\r\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\r\n\r\n/**\r\n * A particle animation node used to set the starting position of a particle.\r\n */\r\nclass ParticlePositionNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for position node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\r\n\t */\r\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticlePositionNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticlePosition\", mode, 3);\r\n\r\n\t\tthis._pStateClass = ParticlePositionState;\r\n\r\n\t\tthis._iPosition = position || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\r\n\r\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\r\n\t{\r\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\r\n\t\tif (!offset)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\r\n\r\n\t\tthis._pOneData[0] = offset.x;\r\n\t\tthis._pOneData[1] = offset.y;\r\n\t\tthis._pOneData[2] = offset.z;\r\n\t}\r\n}\r\n\r\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\r\n\r\n/**\r\n * A particle animation node used to control the rotation of a particle to match its heading vector.\r\n */\r\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\r\n{\r\n\t/**\r\n\t * Creates a new <code>ParticleBillboardNode</code>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\r\n\r\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\tvar i:number /*int*/;\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\r\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\r\n\r\n\t\t\t//process the velocity\r\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\r\n\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\r\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\r\n\r\n\t\t\t//temp3.x=cos,temp3.y=sin\r\n\t\t\t//only process z axis\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t} else {\r\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\r\n\r\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\r\n\r\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\r\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\r\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\r\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\r\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\r\n\r\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\r\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\r\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\r\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\r\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\r\n\r\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\r\n\r\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\r\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\r\n\r\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\r\n\t\t\t//use cos as R.w\r\n\r\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t\t//use cos as R_rev.w\r\n\r\n\t\t\t//nrmVel and xAxis are used as temp register\r\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\r\n\t\t\t//use cos as R.w\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\r\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t//just repeat the calculate above\r\n\t\t\t\t//because of the limited registers, no need to optimise\r\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\r\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\r\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\r\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\r\n\t{\r\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.needVelocity = true;\r\n\t}\r\n}\r\n\r\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\r\n\r\n/**\r\n * A particle animation node used to control the rotation of a particle to face to a position\r\n */\r\nclass ParticleRotateToPositionNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\r\n\t */\r\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\r\n\t */\r\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\r\n\r\n\t\tthis._pStateClass = ParticleRotateToPositionState;\r\n\r\n\t\tthis._iPosition = position || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\tvar i:number /*int*/;\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\r\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\r\n\r\n\t\t\t//process the position\r\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\r\n\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\r\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\r\n\r\n\t\t\t//temp3.x=cos,temp3.y=sin\r\n\t\t\t//only process z axis\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t} else {\r\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\r\n\r\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\r\n\r\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\r\n\r\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\r\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\r\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\r\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\r\n\r\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\r\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\r\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\r\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\r\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\r\n\t\t\t//judgu if nrmDirection=(0,1,0);\r\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\r\n\r\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\r\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\r\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\r\n\r\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\r\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\r\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\r\n\r\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\r\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\r\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\r\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t//just repeat the calculate above\r\n\t\t\t\t//because of the limited registers, no need to optimise\r\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\r\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\r\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\r\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\r\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\r\n\t{\r\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\r\n\t\tif (!offset)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\r\n\r\n\t\tthis._pOneData[0] = offset.x;\r\n\t\tthis._pOneData[1] = offset.y;\r\n\t\tthis._pOneData[2] = offset.z;\r\n\t}\r\n}\r\n\r\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\r\n\r\n/**\r\n * A particle animation node used to set the starting rotational velocity of a particle.\r\n */\r\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iRotationalVelocity:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\r\n\t */\r\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\r\n\r\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\r\n\r\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\r\n\r\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\r\n\r\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\r\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\r\n\r\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\r\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\r\n\r\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\r\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\r\n\r\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\r\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\r\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t//nrmVel and xAxis are used as temp register\r\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\r\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\r\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t//use cos as R_rev.w\r\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\r\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\r\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\r\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\r\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\r\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\r\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\r\n\t{\r\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\r\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\r\n\t\tif (!rotate)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\r\n\r\n\t\tif (rotate.length <= 0)\r\n\t\t\trotate.z = 1; //set the default direction\r\n\t\telse\r\n\t\t\trotate.normalize();\r\n\r\n\t\tthis._pOneData[0] = rotate.x;\r\n\t\tthis._pOneData[1] = rotate.y;\r\n\t\tthis._pOneData[2] = rotate.z;\r\n\t\tif (rotate.w <= 0)\r\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\t\t// it's used as angle/2 in agal\r\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\r\n\t}\r\n}\r\n\r\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\r\n\r\n/**\r\n * A particle animation node used to control the scale variation of a particle over time.\r\n */\r\nclass ParticleScaleNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iMinScale:number;\r\n\t/** @private */\r\n\tpublic _iMaxScale:number;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\r\n\t/**\r\n\t * Reference for scale node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\r\n\t */\r\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleScaleNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\r\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\r\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\r\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\r\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\r\n\t{\r\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\r\n\r\n\t\tthis._pStateClass = ParticleScaleState;\r\n\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iMinScale = minScale;\r\n\t\tthis._iMaxScale = maxScale;\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\r\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\r\n\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\r\n\r\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\r\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\r\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\r\n\t{\r\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\r\n\t\tif (!scale)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\r\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\r\n\t\t\tif (scale.z <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\r\n\t\t} else {\r\n\t\t\tthis._pOneData[0] = scale.x;\r\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\r\n\r\n/**\r\n *\r\n */\r\nclass ParticleSegmentedColorNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesMultiplier:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesOffset:boolean;\r\n\t/** @private */\r\n\tpublic _iStartColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iEndColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iNumSegmentPoint:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\r\n\r\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\r\n\t{\r\n\t\t//because of the stage3d register limitation, it only support the global mode\r\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleSegmentedColorState;\r\n\r\n\t\tif (numSegmentPoint > 4)\r\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\r\n\t\tthis._iUsesMultiplier = usesMultiplier;\r\n\t\tthis._iUsesOffset = usesOffset;\r\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\r\n\t\tthis._iStartColor = startColor;\r\n\t\tthis._iEndColor = endColor;\r\n\t\tthis._iSegmentPoints = segmentPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tif (this._iUsesMultiplier)\r\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\r\n\t\tif (this._iUsesOffset)\r\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\r\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\r\n\t\t\t}\r\n\r\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\r\n\r\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\r\n\t\t\tif (this._iUsesMultiplier)\r\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\r\n\r\n\t\t\t//for saving all the life values (at most 4)\r\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\r\n\r\n\t\t\tvar i:number /*int*/;\r\n\r\n\t\t\tvar startMulValue:ShaderRegisterElement;\r\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\r\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\r\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\r\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\r\n\t\t\t}\r\n\r\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\r\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\r\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\r\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\r\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesMultiplier)\r\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\r\n\t\t\tif (this._iUsesOffset)\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\r\n\r\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\r\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\r\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\r\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\r\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\r\n\t\t\t\t}\r\n\t\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\r\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//for the last segment:\r\n\t\t\tif (this._iNumSegmentPoint == 0)\r\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\r\n\t\t\telse {\r\n\t\t\t\tswitch (this._iNumSegmentPoint) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t}\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\r\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\r\n\t\t\t}\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\r\n\r\n/**\r\n * A particle animation node used when a spritesheet texture is required to animate the particle.\r\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\r\n */\r\nclass ParticleSpriteSheetNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iTotalFrames:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iNumColumns:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iNumRows:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\r\n\t/**\r\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\r\n\t */\r\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\r\n\r\n\t/**\r\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\r\n\t */\r\n\tpublic get numColumns():number\r\n\t{\r\n\t\treturn this._iNumColumns;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\r\n\t */\r\n\tpublic get numRows():number\r\n\t{\r\n\t\treturn this._iNumRows;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\r\n\t */\r\n\tpublic get totalFrames():number\r\n\t{\r\n\t\treturn this._iTotalFrames;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\r\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\r\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\r\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\r\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\r\n\t{\r\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\r\n\r\n\t\tthis._pStateClass = ParticleSpriteSheetState;\r\n\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iNumColumns = numColumns;\r\n\t\tthis._iNumRows = numRows;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\t//get 2 vc\r\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\r\n\r\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\r\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\r\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\r\n\r\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\r\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\r\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\r\n\r\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\r\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\t//scale uv\r\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\r\n\t\tif (this._iNumRows > 1)\r\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\r\n\t\t\telse\r\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\r\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\r\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\r\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\r\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\r\n\r\n\t\tif (this._iNumRows > 1) {\r\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\r\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\r\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\r\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\r\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\r\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\r\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\r\n\r\n\t\tif (this._iNumRows > 1)\r\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\r\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\r\n\t{\r\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.hasUVNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\r\n\t\t\tif (!uvCycle)\r\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\r\n\t\t\tif (uvCycle.x <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\r\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\r\n\t\t\tthis._pOneData[1] = uvCycle.x;\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\r\n\r\n/**\r\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\r\n */\r\nclass ParticleTimeNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesDuration:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesDelay:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesLooping:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleTimeNode</code>\r\n\t *\r\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\r\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\r\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\r\n\t */\r\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\r\n\t{\r\n\t\tthis._pStateClass = ParticleTimeState;\r\n\r\n\t\tthis._iUsesDuration = usesDuration;\r\n\t\tthis._iUsesLooping = usesLooping;\r\n\t\tthis._iUsesDelay = usesDelay;\r\n\r\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\r\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\r\n\t\t//if time=0,set the position to zero.\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\r\n\t\tif (this._iUsesDuration) {\r\n\t\t\tif (this._iUsesLooping) {\r\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\t\t\tif (this._iUsesDelay) {\r\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\r\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\r\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\r\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\r\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\r\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\r\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\r\n\t{\r\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tthis._pOneData[0] = param.startTime;\r\n\t\tthis._pOneData[1] = param.duration;\r\n\t\tthis._pOneData[2] = param.delay + param.duration;\r\n\t\tthis._pOneData[3] = 1/param.duration;\r\n\r\n\t}\r\n}\r\n\r\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\r\n\r\n/**\r\n * A particle animation node used to control the UV offset and scale of a particle over time.\r\n */\r\nclass ParticleUVNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUvData:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static U_AXIS:string = \"x\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static V_AXIS:string = \"y\";\r\n\r\n\tprivate _cycle:number;\r\n\tprivate _scale:number;\r\n\tprivate _axis:string;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleTimeNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\r\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\r\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\r\n\t{\r\n\t\t//because of the stage3d register limitation, it only support the global mode\r\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\r\n\r\n\t\tthis._pStateClass = ParticleUVState;\r\n\r\n\t\tthis._cycle = cycle;\r\n\t\tthis._scale = scale;\r\n\t\tthis._axis = axis;\r\n\r\n\t\tthis.updateUVData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cycle():number\r\n\t{\r\n\t\treturn this._cycle;\r\n\t}\r\n\r\n\tpublic set cycle(value:number)\r\n\t{\r\n\t\tthis._cycle = value;\r\n\r\n\t\tthis.updateUVData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scale():number\r\n\t{\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\r\n\t\tthis.updateUVData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get axis():string\r\n\t{\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\tpublic set axis(value:string)\r\n\t{\r\n\t\tthis._axis = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\r\n\r\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\r\n\r\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\r\n\r\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\r\n\t\tif (this._scale != 1)\r\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\r\n\r\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\r\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\r\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\r\n\t{\r\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\tprivate updateUVData()\r\n\t{\r\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.hasUVNode = true;\r\n\t}\r\n}\r\n\r\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\r\n\r\n/**\r\n * A particle animation node used to set the starting velocity of a particle.\r\n */\r\nclass ParticleVelocityNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iVelocity:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for velocity node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\r\n\t */\r\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleVelocityNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleVelocity\", mode, 3);\r\n\r\n\t\tthis._pStateClass = ParticleVelocityState;\r\n\r\n\t\tthis._iVelocity = velocity || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\r\n\r\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity)\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\r\n\t{\r\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\r\n\t\tif (!_tempVelocity)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = _tempVelocity.x;\r\n\t\tthis._pOneData[1] = _tempVelocity.y;\r\n\t\tthis._pOneData[2] = _tempVelocity.z;\r\n\t}\r\n}\r\n\r\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\r\n\r\n/**\r\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\r\n{\r\n\t/**\r\n\t * Defines input node A to use for the blended output.\r\n\t */\r\n\tpublic inputA:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines input node B to use for the blended output.\r\n\t */\r\n\tpublic inputB:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\r\n\t{\r\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\r\n\r\n/**\r\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\r\n */\r\nclass SkeletonClipNode extends AnimationClipNodeBase\r\n{\r\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\r\n\r\n\t/**\r\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\r\n\t * of the output skeleton pose. Defaults to false.\r\n\t */\r\n\tpublic highQuality:boolean = false;\r\n\r\n\t/**\r\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\r\n\t */\r\n\tpublic get frames():Array<SkeletonPose>\r\n\t{\r\n\t\treturn this._frames;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonClipNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonClipState;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\r\n\t *\r\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\r\n\t * @param duration The specified duration of the frame in milliseconds.\r\n\t */\r\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\r\n\t{\r\n\t\tthis._frames.push(skeletonPose);\r\n\t\tthis._pDurations.push(duration);\r\n\r\n\t\tthis._pNumFrames = this._pDurations.length;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\r\n\t{\r\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateStitch()\r\n\t{\r\n\t\tsuper._pUpdateStitch();\r\n\r\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\r\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\r\n\t\twhile (i--) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[i];\r\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\r\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\r\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\r\n\r\n/**\r\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonDifferenceNode extends AnimationNodeBase\r\n{\r\n\t/**\r\n\t * Defines a base input node to use for the blended output.\r\n\t */\r\n\tpublic baseInput:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines a difference input node to use for the blended output.\r\n\t */\r\n\tpublic differenceInput:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonDifferenceState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\r\n\t{\r\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\r\n\r\n/**\r\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonDirectionalNode extends AnimationNodeBase\r\n{\r\n\t/**\r\n\t * Defines the forward configured input node to use for the blended output.\r\n\t */\r\n\tpublic forward:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines the backwards configured input node to use for the blended output.\r\n\t */\r\n\tpublic backward:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines the left configured input node to use for the blended output.\r\n\t */\r\n\tpublic left:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines the right configured input node to use for the blended output.\r\n\t */\r\n\tpublic right:AnimationNodeBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonDirectionalState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\r\n\t{\r\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\r\n\t}\r\n\r\n}\r\n\r\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\r\n\r\n/**\r\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonNaryLERPNode extends AnimationNodeBase\r\n{\r\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\r\n\r\n\tprivate _numInputs:number /*uint*/;\r\n\r\n\tpublic get numInputs():number /*uint*/\r\n\t{\r\n\t\treturn this._numInputs;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonNaryLERPState;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer representing the input index of the given skeleton animation node.\r\n\t *\r\n\t * @param input The skeleton animation node for with the input index is requested.\r\n\t */\r\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\r\n\t{\r\n\t\treturn this._iInputs.indexOf(input);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the skeleton animation node object that resides at the given input index.\r\n\t *\r\n\t * @param index The input index for which the skeleton animation node is requested.\r\n\t */\r\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\r\n\t{\r\n\t\treturn this._iInputs[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new skeleton animation node input to the animation node.\r\n\t */\r\n\tpublic addInput(input:AnimationNodeBase)\r\n\t{\r\n\t\tthis._iInputs[this._numInputs++] = input;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\r\n\t{\r\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\r\n\r\n/**\r\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\r\n */\r\nclass VertexClipNode extends AnimationClipNodeBase\r\n{\r\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\r\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\r\n\r\n\t/**\r\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\r\n\t */\r\n\tpublic get frames():Array<Geometry>\r\n\t{\r\n\t\treturn this._frames;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>VertexClipNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = VertexClipState;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a geometry object to the internal timeline of the animation node.\r\n\t *\r\n\t * @param geometry The geometry object to add to the timeline of the node.\r\n\t * @param duration The specified duration of the frame in milliseconds.\r\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\r\n\t */\r\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\r\n\t{\r\n\t\tthis._frames.push(geometry);\r\n\t\tthis._pDurations.push(duration);\r\n\t\tthis._translations.push(translation || new Vector3D());\r\n\r\n\t\tthis._pNumFrames = this._pDurations.length;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateStitch()\r\n\t{\r\n\t\tsuper._pUpdateStitch();\r\n\r\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\r\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\r\n\t\twhile (i--) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[i];\r\n\t\t\tp1 = this._translations[i];\r\n\t\t\tp2 = this._translations[i + 1];\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\r\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\r\n\t\t\tp1 = this._translations[0];\r\n\t\t\tp2 = this._translations[1];\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\n\r\n/**\r\n *\r\n */\r\nclass AnimationClipState extends AnimationStateBase\r\n{\r\n\tprivate _animationClipNode:AnimationClipNodeBase;\r\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\r\n\tpublic _pBlendWeight:number;\r\n\tpublic _pCurrentFrame:number /*uint*/;\r\n\tpublic _pNextFrame:number /*uint*/;\r\n\r\n\tpublic _pOldFrame:number /*uint*/;\r\n\tpublic _pTimeDir:number /*int*/;\r\n\tpublic _pFramesDirty:boolean = true;\r\n\r\n\t/**\r\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\r\n\t * between the current frame (0) and next frame (1) of the animation.\r\n\t *\r\n\t * @see #currentFrame\r\n\t * @see #nextFrame\r\n\t */\r\n\tpublic get blendWeight():number\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._pBlendWeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get currentFrame():number /*uint*/\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._pCurrentFrame;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get nextFrame():number /*uint*/\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._pNextFrame;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\r\n\t{\r\n\t\tsuper(animator, animationClipNode);\r\n\r\n\t\tthis._animationClipNode = animationClipNode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic update(time:number /*int*/)\r\n\t{\r\n\t\tif (!this._animationClipNode.looping) {\r\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\r\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\r\n\t\t\t\ttime = this._pStartTime;\r\n\t\t}\r\n\r\n\t\tif (this._pTime == time - this._pStartTime)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\r\n\r\n\t\tif (this._pTime == time - this._pStartTime)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._pFramesDirty = true;\r\n\r\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\r\n\t *\r\n\t * @see #currentFrame\r\n\t * @see #nextFrame\r\n\t * @see #blendWeight\r\n\t */\r\n\tpublic _pUpdateFrames()\r\n\t{\r\n\t\tthis._pFramesDirty = false;\r\n\r\n\t\tvar looping:boolean = this._animationClipNode.looping;\r\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\r\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\r\n\t\tvar time:number /*int*/ = this._pTime;\r\n\r\n\t\t//trace(\"time\", time, totalDuration)\r\n\t\tif (looping && (time >= totalDuration || time < 0)) {\r\n\t\t\ttime %= totalDuration;\r\n\t\t\tif (time < 0)\r\n\t\t\t\ttime += totalDuration;\r\n\t\t}\r\n\r\n\t\tif (!looping && time >= totalDuration) {\r\n\t\t\tthis.notifyPlaybackComplete();\r\n\t\t\tthis._pCurrentFrame = lastFrame;\r\n\t\t\tthis._pNextFrame = lastFrame;\r\n\t\t\tthis._pBlendWeight = 0;\r\n\t\t} else if (!looping && time <= 0) {\r\n\t\t\tthis._pCurrentFrame = 0;\r\n\t\t\tthis._pNextFrame = 0;\r\n\t\t\tthis._pBlendWeight = 0;\r\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\r\n\t\t\tvar t:number = time/totalDuration*lastFrame;\r\n\t\t\tthis._pCurrentFrame = Math.floor(t);\r\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\r\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\r\n\t\t} else {\r\n\t\t\tthis._pCurrentFrame = 0;\r\n\t\t\tthis._pNextFrame = 0;\r\n\r\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\r\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\r\n\r\n\t\t\tdo {\r\n\t\t\t\tframeTime = dur;\r\n\t\t\t\tdur += durations[this._pNextFrame];\r\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\r\n\t\t\t} while (time > dur);\r\n\r\n\t\t\tif (this._pCurrentFrame == lastFrame) {\r\n\t\t\t\tthis._pCurrentFrame = 0;\r\n\t\t\t\tthis._pNextFrame = 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate notifyPlaybackComplete()\r\n\t{\r\n\t\tif (this._animationStatePlaybackComplete == null)\r\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\r\n\r\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\r\n\t}\r\n}\r\n\r\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\r\n\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\n\r\n/**\r\n *\r\n */\r\nclass AnimationStateBase implements IAnimationState\r\n{\r\n\tpublic _pAnimationNode:AnimationNodeBase;\r\n\tpublic _pRootDelta:Vector3D = new Vector3D();\r\n\tpublic _pPositionDeltaDirty:boolean = true;\r\n\r\n\tpublic _pTime:number;\r\n\tpublic _pStartTime:number = 0;\r\n\tpublic _pAnimator:AnimatorBase;\r\n\r\n\t/**\r\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\r\n\t */\r\n\tpublic get positionDelta():Vector3D\r\n\t{\r\n\t\tif (this._pPositionDeltaDirty) {\r\n\r\n\t\t\tthis._pUpdatePositionDelta();\r\n\t\t}\r\n\r\n\t\treturn this._pRootDelta;\r\n\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\r\n\t{\r\n\t\tthis._pAnimator = animator;\r\n\t\tthis._pAnimationNode = animationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the start time of the node to a  new value.\r\n\t *\r\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\r\n\t */\r\n\tpublic offset(startTime:number)\r\n\t{\r\n\t\tthis._pStartTime = startTime;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the configuration of the node to its current state.\r\n\t *\r\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\r\n\t *\r\n\t * @see AnimatorBase#update()\r\n\t */\r\n\tpublic update(time:number)\r\n\t{\r\n\t\tif (this._pTime == time - this._pStartTime) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._pUpdateTime(time);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the animation phase of the node.\r\n\t *\r\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the node's internal playhead position.\r\n\t *\r\n\t * @param time The local time (in milliseconds) of the node's playhead position.\r\n\t */\r\n\tpublic _pUpdateTime(time:number)\r\n\t{\r\n\t\tthis._pTime = time - this._pStartTime;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the node's root delta position\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleAccelerationState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _halfAcceleration:Vector3D;\r\n\t\r\n\t/**\r\n\t * Defines the acceleration vector of the state, used when in global mode.\r\n\t */\r\n\tpublic get acceleration():Vector3D\r\n\t{\r\n\t\treturn this._acceleration;\r\n\t}\r\n\t\r\n\tpublic set acceleration(value:Vector3D)\r\n\t{\r\n\t\tthis._acceleration.x = value.x;\r\n\t\tthis._acceleration.y = value.y;\r\n\t\tthis._acceleration.z = value.z;\r\n\r\n\t\tthis.updateAccelerationData();\r\n\t}\r\n\t\r\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\r\n\t{\r\n\t\tsuper(animator, particleAccelerationNode);\r\n\r\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\r\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\r\n\r\n\t\tthis.updateAccelerationData();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\r\n\t\t\r\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\telse\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\r\n\t}\r\n\t\r\n\tprivate updateAccelerationData()\r\n\t{\r\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\r\n\t}\r\n}\r\n\r\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n/**\r\n * ...\r\n */\r\nclass ParticleBezierCurveState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\r\n\r\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\r\n\tprivate _controlPoint:Vector3D;\r\n\tprivate _endPoint:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default control point of the node, used when in global mode.\r\n\t */\r\n\tpublic get controlPoint():Vector3D\r\n\t{\r\n\t\treturn this._controlPoint;\r\n\t}\r\n\r\n\tpublic set controlPoint(value:Vector3D)\r\n\t{\r\n\t\tthis._controlPoint = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the default end point of the node, used when in global mode.\r\n\t */\r\n\tpublic get endPoint():Vector3D\r\n\t{\r\n\t\treturn this._endPoint;\r\n\t}\r\n\r\n\tpublic set endPoint(value:Vector3D)\r\n\t{\r\n\t\tthis._endPoint = value;\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\r\n\t{\r\n\t\tsuper(animator, particleBezierCurveNode);\r\n\r\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\r\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\r\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\r\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\r\n\r\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else {\r\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\r\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleBillboardState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _matrix:Matrix3D = new Matrix3D;\r\n\r\n\tprivate _billboardAxis:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\r\n\t{\r\n\t\tsuper(animator, particleNode);\r\n\r\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar comps:Array<Vector3D>;\r\n\t\tif (this._billboardAxis) {\r\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\r\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\r\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\r\n\t\t\tright.normalize();\r\n\t\t\tlook = this.billboardAxis.crossProduct(right);\r\n\t\t\tlook.normalize();\r\n\r\n\t\t\t//create a quick inverse projection matrix\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\r\n\t\t\tthis._matrix.copyColumnFrom(0, right);\r\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\r\n\t\t\tthis._matrix.copyColumnFrom(2, look);\r\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\r\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\r\n\t\t} else {\r\n\t\t\t//create a quick inverse projection matrix\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\r\n\r\n\t\t\t//decompose using axis angle rotations\r\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\r\n\r\n\t\t\t//recreate the matrix with just the rotation data\r\n\t\t\tthis._matrix.identity();\r\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\r\n\t\t}\r\n\r\n\t\t//set a new matrix transform constant\r\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the billboard axis.\r\n\t */\r\n\tpublic get billboardAxis():Vector3D\r\n\t{\r\n\t\treturn this.billboardAxis;\r\n\t}\r\n\r\n\tpublic set billboardAxis(value:Vector3D)\r\n\t{\r\n\t\tthis.billboardAxis = value? value.clone() : null;\r\n\t\tif (this.billboardAxis)\r\n\t\t\tthis.billboardAxis.normalize();\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nclass ParticleColorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\r\n\r\n\t/** @private */\r\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\r\n\r\n\t/** @private */\r\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\r\n\r\n\t/** @private */\r\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\r\n\r\n\tprivate _particleColorNode:ParticleColorNode;\r\n\tprivate _usesMultiplier:boolean;\r\n\tprivate _usesOffset:boolean;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _startColor:ColorTransform;\r\n\tprivate _endColor:ColorTransform;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _cycleData:Vector3D;\r\n\tprivate _startMultiplierData:Vector3D;\r\n\tprivate _deltaMultiplierData:Vector3D;\r\n\tprivate _startOffsetData:Vector3D;\r\n\tprivate _deltaOffsetData:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the start color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get startColor():ColorTransform\r\n\t{\r\n\t\treturn this._startColor;\r\n\t}\r\n\r\n\tpublic set startColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._startColor = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the end color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get endColor():ColorTransform\r\n\t{\r\n\t\treturn this._endColor;\r\n\t}\r\n\r\n\tpublic set endColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._endColor = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\r\n\t{\r\n\t\tsuper(animator, particleColorNode);\r\n\r\n\t\tthis._particleColorNode = particleColorNode;\r\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\r\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\r\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\r\n\t\tthis._startColor = this._particleColorNode._iStartColor;\r\n\t\tthis._endColor = this._particleColorNode._iEndColor;\r\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\r\n\t\t\tif (this._usesCycle)\r\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\r\n\r\n\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._usesOffset) {\r\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateColorData()\r\n\t{\r\n\t\tif (this._usesCycle) {\r\n\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\r\n\t\t}\r\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\r\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._usesOffset) {\r\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\r\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\r\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._usesOffset) {\r\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\r\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleFollowState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleFollowNode:ParticleFollowNode;\r\n\tprivate _followTarget:DisplayObject;\r\n\r\n\tprivate _targetPos:Vector3D = new Vector3D();\r\n\tprivate _targetEuler:Vector3D = new Vector3D();\r\n\tprivate _prePos:Vector3D;\r\n\tprivate _preEuler:Vector3D;\r\n\tprivate _smooth:boolean;\r\n\r\n\t//temporary vector3D for calculation\r\n\tprivate _temp:Vector3D = new Vector3D();\r\n\r\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\r\n\t{\r\n\t\tsuper(animator, particleFollowNode, true);\r\n\r\n\t\tthis._particleFollowNode = particleFollowNode;\r\n\t\tthis._smooth = particleFollowNode._iSmooth;\r\n\t}\r\n\r\n\tpublic get followTarget():DisplayObject\r\n\t{\r\n\t\treturn this._followTarget;\r\n\t}\r\n\r\n\tpublic set followTarget(value:DisplayObject)\r\n\t{\r\n\t\tthis._followTarget = value;\r\n\t}\r\n\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tthis._smooth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._followTarget) {\r\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\r\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\r\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\r\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\r\n\t\t\t}\r\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\r\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\r\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\r\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\r\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//initialization\r\n\t\tif (!this._prePos)\r\n\t\t\tthis._prePos = this._targetPos.clone();\r\n\t\tif (!this._preEuler)\r\n\t\t\tthis._preEuler = this._targetEuler.clone();\r\n\r\n\t\tvar currentTime:number = this._pTime/1000;\r\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\r\n\t\tvar deltaTime:number = currentTime - previousTime;\r\n\r\n\t\tvar needProcess:boolean = previousTime != currentTime;\r\n\r\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\r\n\t\t\tif (needProcess)\r\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\r\n\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\r\n\t\t\tif (needProcess)\r\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\r\n\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\r\n\t\t\tif (needProcess)\r\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\r\n\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t}\r\n\r\n\t\tthis._prePos.copyFrom(this._targetPos);\r\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\r\n\t\tanimationSubGeometry.previousTime = currentTime;\r\n\t}\r\n\r\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\r\n\t\tvar changed:boolean = false;\r\n\t\tvar len:number /*uint*/ = data.length;\r\n\t\tvar interpolatedPos:Vector3D;\r\n\t\tvar posVelocity:Vector3D;\r\n\t\tif (this._smooth) {\r\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\r\n\t\t\tposVelocity.scaleBy(1/deltaTime);\r\n\t\t} else\r\n\t\t\tinterpolatedPos = this._targetPos;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\r\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\r\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\r\n\t\t\tif (t - deltaTime <= 0) {\r\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\r\n\r\n\t\t\t\tif (this._smooth) {\r\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changed)\r\n\t\t\tanimationSubGeometry.invalidateBuffer();\r\n\r\n\t}\r\n\r\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\r\n\t\tvar changed:boolean = false;\r\n\t\tvar len:number /*uint*/ = data.length;\r\n\r\n\t\tvar interpolatedRotation:Vector3D;\r\n\t\tvar rotationVelocity:Vector3D;\r\n\r\n\t\tif (this._smooth) {\r\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\r\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\r\n\t\t} else\r\n\t\t\tinterpolatedRotation = this._targetEuler;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\r\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\r\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\r\n\t\t\tif (t - deltaTime <= 0) {\r\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\r\n\r\n\t\t\t\tif (this._smooth) {\r\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changed)\r\n\t\t\tanimationSubGeometry.invalidateBuffer();\r\n\r\n\t}\r\n\r\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\r\n\t\tvar changed:boolean = false;\r\n\t\tvar len:number /*uint*/ = data.length;\r\n\r\n\t\tvar interpolatedPos:Vector3D;\r\n\t\tvar interpolatedRotation:Vector3D;\r\n\r\n\t\tvar posVelocity:Vector3D;\r\n\t\tvar rotationVelocity:Vector3D;\r\n\t\tif (this._smooth) {\r\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\r\n\t\t\tposVelocity.scaleBy(1/deltaTime);\r\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\r\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\r\n\t\t} else {\r\n\t\t\tinterpolatedPos = this._targetPos;\r\n\t\t\tinterpolatedRotation = this._targetEuler;\r\n\t\t}\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\r\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\r\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\r\n\t\t\tif (t - deltaTime <= 0) {\r\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\r\n\t\t\t\tif (this._smooth) {\r\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\r\n\r\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changed)\r\n\t\t\tanimationSubGeometry.invalidateBuffer();\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n*\r\n*/\r\nclass ParticleInitialColorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\r\n\t/** @private */\r\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\r\n\tprivate _usesMultiplier:boolean;\r\n\tprivate _usesOffset:boolean;\r\n\tprivate _initialColor:ColorTransform;\r\n\tprivate _multiplierData:Vector3D;\r\n\tprivate _offsetData:Vector3D;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\r\n\t{\r\n\t\tsuper(animator, particleInitialColorNode);\r\n\r\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\r\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\r\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\r\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the initial color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get initialColor():ColorTransform\r\n\t{\r\n\t\treturn this._initialColor;\r\n\t}\r\n\r\n\tpublic set initialColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._initialColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\t// TODO: not used\r\n\t\trenderable = renderable;\r\n\t\tcamera = camera;\r\n\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\r\n\t\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._usesOffset)\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t} else {\r\n\t\t\t\tif (this._usesMultiplier)\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\r\n\t\t\t\tif (this._usesOffset)\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateColorData()\r\n\t{\r\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._usesMultiplier)\r\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\r\n\t\t\tif (this._usesOffset)\r\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleOrbitState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleOrbitNode:ParticleOrbitNode;\r\n\tprivate _usesEulers:boolean;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _radius:number;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _eulers:Vector3D;\r\n\tprivate _orbitData:Vector3D;\r\n\tprivate _eulersMatrix:Matrix3D;\r\n\r\n\t/**\r\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._eulers = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\r\n\t{\r\n\t\tsuper(animator, particleOrbitNode);\r\n\r\n\t\tthis._particleOrbitNode = particleOrbitNode;\r\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\r\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\r\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\r\n\t\tthis._radius = this._particleOrbitNode._iRadius;\r\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\r\n\r\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tif (this._usesPhase)\r\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\telse\r\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\r\n\r\n\t\tif (this._usesEulers)\r\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\r\n\t}\r\n\r\n\tprivate updateOrbitData()\r\n\t{\r\n\t\tif (this._usesEulers) {\r\n\t\t\tthis._eulersMatrix = new Matrix3D();\r\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\r\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\r\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\r\n\t\t}\r\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\r\n\t\t\t} else\r\n\t\t\t\tthis._orbitData.y = Math.PI*2;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleOscillatorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\r\n\tprivate _oscillator:Vector3D;\r\n\tprivate _oscillatorData:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\r\n\t */\r\n\tpublic get oscillator():Vector3D\r\n\t{\r\n\t\treturn this._oscillator;\r\n\t}\r\n\r\n\tpublic set oscillator(value:Vector3D)\r\n\t{\r\n\t\tthis._oscillator = value;\r\n\r\n\t\tthis.updateOscillatorData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\r\n\t{\r\n\t\tsuper(animator, particleOscillatorNode);\r\n\r\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\r\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\r\n\r\n\t\tthis.updateOscillatorData();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\r\n\r\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\telse\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\r\n\t}\r\n\r\n\tprivate updateOscillatorData()\r\n\t{\r\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._oscillator.w <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\r\n\t\t\tif (this._oscillatorData == null)\r\n\t\t\t\tthis._oscillatorData = new Vector3D();\r\n\r\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\r\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\r\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\r\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nclass ParticlePositionState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particlePositionNode:ParticlePositionNode;\r\n\tprivate _position:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._position = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getPositions():Array<Vector3D>\r\n\t{\r\n\t\treturn this._pDynamicProperties;\r\n\t}\r\n\r\n\tpublic setPositions(value:Array<Vector3D>)\r\n\t{\r\n\t\tthis._pDynamicProperties = value;\r\n\r\n\t\tthis._pDynamicPropertiesDirty = new Object();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\r\n\t{\r\n\t\tsuper(animator, particlePositionNode);\r\n\r\n\t\tthis._particlePositionNode = particlePositionNode;\r\n\t\tthis._position = this._particlePositionNode._iPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\r\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\r\n\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\r\n\r\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\r\n\t\telse\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t}\r\n}\r\n\r\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleRotateToHeadingState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _matrix:Matrix3D = new Matrix3D();\r\n\r\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\r\n\t{\r\n\t\tsuper(animator, particleNode);\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\r\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleRotateToPositionState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\r\n\t/** @private */\r\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\r\n\r\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\r\n\tprivate _position:Vector3D;\r\n\tprivate _matrix:Matrix3D = new Matrix3D();\r\n\tprivate _offset:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._position = value;\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\r\n\t{\r\n\t\tsuper(animator, particleRotateToPositionNode);\r\n\r\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\r\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\r\n\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\r\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\r\n\t\t}\r\n\r\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\r\n\t\t} else\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleRotationalVelocityState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\r\n\tprivate _rotationalVelocityData:Vector3D;\r\n\tprivate _rotationalVelocity:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\r\n\t */\r\n\tpublic get rotationalVelocity():Vector3D\r\n\t{\r\n\t\treturn this._rotationalVelocity;\r\n\t}\r\n\r\n\tpublic set rotationalVelocity(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationalVelocity = value;\r\n\r\n\t\tthis.updateRotationalVelocityData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRotationalVelocities():Array<Vector3D>\r\n\t{\r\n\t\treturn this._pDynamicProperties;\r\n\t}\r\n\r\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\r\n\t{\r\n\t\tthis._pDynamicProperties = value;\r\n\r\n\t\tthis._pDynamicPropertiesDirty = new Object();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\r\n\t{\r\n\t\tsuper(animator, particleRotationNode);\r\n\r\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\r\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\r\n\r\n\t\tthis.updateRotationalVelocityData();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\r\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\r\n\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\r\n\r\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\r\n\t\telse\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t}\r\n\r\n\tprivate updateRotationalVelocityData()\r\n\t{\r\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._rotationalVelocity.w <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\r\n\r\n\t\t\tif (rotation.length <= 0)\r\n\t\t\t\trotation.z = 1; //set the default direction\r\n\t\t\telse\r\n\t\t\t\trotation.normalize();\r\n\t\t\t// w is used as angle/2 in agal\r\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleScaleState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleScaleNode:ParticleScaleNode;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _minScale:number;\r\n\tprivate _maxScale:number;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _scaleData:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get minScale():number\r\n\t{\r\n\t\treturn this._minScale;\r\n\t}\r\n\r\n\tpublic set minScale(value:number)\r\n\t{\r\n\t\tthis._minScale = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get maxScale():number\r\n\t{\r\n\t\treturn this._maxScale;\r\n\t}\r\n\r\n\tpublic set maxScale(value:number)\r\n\t{\r\n\t\tthis._maxScale = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\r\n\t{\r\n\t\tsuper(animator, particleScaleNode);\r\n\r\n\t\tthis._particleScaleNode = particleScaleNode;\r\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\r\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\r\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\r\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\r\n\r\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._usesPhase)\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\telse\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\t} else\r\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t} else\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\r\n\t}\r\n\r\n\tprivate updateScaleData()\r\n\t{\r\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\r\n\t\t\t} else\r\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n *\r\n */\r\nclass ParticleSegmentedColorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\r\n\r\n\t/** @private */\r\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\r\n\r\n\tprivate _usesMultiplier:boolean;\r\n\tprivate _usesOffset:boolean;\r\n\tprivate _startColor:ColorTransform;\r\n\tprivate _endColor:ColorTransform;\r\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\r\n\tprivate _numSegmentPoint:number /*int*/;\r\n\r\n\tprivate _timeLifeData:Array<number>;\r\n\tprivate _multiplierData:Array<number>;\r\n\tprivate _offsetData:Array<number>;\r\n\r\n\t/**\r\n\t * Defines the start color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get startColor():ColorTransform\r\n\t{\r\n\t\treturn this._startColor;\r\n\t}\r\n\r\n\tpublic set startColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._startColor = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the end color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get endColor():ColorTransform\r\n\t{\r\n\t\treturn this._endColor;\r\n\t}\r\n\r\n\tpublic set endColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._endColor = value;\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of segments.\r\n\t */\r\n\tpublic get numSegmentPoint():number /*int*/\r\n\t{\r\n\t\treturn this._numSegmentPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the key points of color\r\n\t */\r\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\r\n\t{\r\n\t\treturn this._segmentPoints;\r\n\t}\r\n\r\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\r\n\t{\r\n\t\tthis._segmentPoints = value;\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tpublic get usesMultiplier():boolean\r\n\t{\r\n\t\treturn this._usesMultiplier;\r\n\t}\r\n\r\n\tpublic get usesOffset():boolean\r\n\t{\r\n\t\treturn this._usesOffset;\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\r\n\t{\r\n\t\tsuper(animator, particleSegmentedColorNode);\r\n\r\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\r\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\r\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\r\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\r\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\r\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tif (this._numSegmentPoint > 0)\r\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\r\n\t\t\tif (this._usesMultiplier)\r\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\r\n\t\t\tif (this._usesOffset)\r\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateColorData()\r\n\t{\r\n\t\tthis._timeLifeData = new Array<number>();\r\n\t\tthis._multiplierData = new Array<number>();\r\n\t\tthis._offsetData = new Array<number>();\r\n\t\tvar i:number /*int*/;\r\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\r\n\t\t\tif (i == 0)\r\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\r\n\t\t\telse\r\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\r\n\t\t}\r\n\t\tif (this._numSegmentPoint == 0)\r\n\t\t\tthis._timeLifeData.push(1);\r\n\t\telse\r\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\r\n\r\n\t\tif (this._usesMultiplier) {\r\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\r\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\r\n\t\t\t\tif (i == 0)\r\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\r\n\t\t\t}\r\n\t\t\tif (this._numSegmentPoint == 0)\r\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\r\n\t\t\telse\r\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\r\n\t\t}\r\n\r\n\t\tif (this._usesOffset) {\r\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\r\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\r\n\t\t\t\tif (i == 0)\r\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\r\n\t\t\t}\r\n\t\t\tif (this._numSegmentPoint == 0)\r\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\r\n\t\t\telse\r\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\r\n\t\t}\r\n\t\t//cut off the data\r\n\t\tthis._timeLifeData.length = 4;\r\n\t}\r\n}\r\n\r\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleSpriteSheetState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\r\n\r\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _totalFrames:number /*int*/;\r\n\tprivate _numColumns:number /*int*/;\r\n\tprivate _numRows:number /*int*/;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _spriteSheetData:Array<number>;\r\n\r\n\t/**\r\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateSpriteSheetData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateSpriteSheetData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\r\n\t{\r\n\t\tsuper(animator, particleSpriteSheetNode);\r\n\r\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\r\n\r\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\r\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\r\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\r\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\r\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\r\n\r\n\t\tthis.updateSpriteSheetData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needUVAnimation) {\r\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\r\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\t\tif (this._usesPhase)\r\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t\t\t} else\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateSpriteSheetData()\r\n\t{\r\n\t\tthis._spriteSheetData = new Array<number>(8);\r\n\r\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\r\n\r\n\t\tthis._spriteSheetData[0] = uTotal;\r\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\r\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\r\n\r\n\t\tif (this._usesCycle) {\r\n\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\r\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\r\n\t\t\tif (this._usesPhase)\r\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleStateBase extends AnimationStateBase\r\n{\r\n\tprivate _particleNode:ParticleNodeBase;\r\n\r\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\r\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\r\n\r\n\tpublic _pNeedUpdateTime:boolean;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\r\n\t{\r\n\t\tsuper(animator, particleNode);\r\n\r\n\t\tthis._particleNode = particleNode;\r\n\t\tthis._pNeedUpdateTime = needUpdateTime;\r\n\t}\r\n\r\n\tpublic get needUpdateTime():boolean\r\n\t{\r\n\t\treturn this._pNeedUpdateTime;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\r\n\r\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\r\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\r\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\r\n\t\tvar vertexLength:number /*uint*/;\r\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\r\n\t\tvar startingOffset:number /*uint*/;\r\n\t\tvar vertexOffset:number /*uint*/;\r\n\t\tvar data:Vector3D;\r\n\t\tvar animationParticle:ParticleAnimationData;\r\n\r\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\r\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\tvar j:number /*uint*/ = 0;\r\n\t\tvar k:number /*uint*/ = 0;\r\n\r\n\t\t//loop through all particles\r\n\t\twhile (i < numParticles) {\r\n\t\t\t//loop through each particle data for the current particle\r\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\r\n\t\t\t\tdata = this._pDynamicProperties[i];\r\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\r\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\r\n\t\t\t\t//loop through each vertex in the particle data\r\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\r\n\t\t\t\t\tvertexOffset = startingOffset + k;\r\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\r\n\t\t\t\t\t//loop through all vertex data for the current particle data\r\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\r\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\r\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\r\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\r\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\r\n\r\n\t\t\t\t\t\tif (dataLength == 4)\r\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t//loop through each value in the particle vertex\r\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\tanimationSubGeometry.invalidateBuffer();\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleTimeState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleTimeNode:ParticleTimeNode;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\r\n\t{\r\n\t\tsuper(animator, particleTimeNode, true);\r\n\r\n\t\tthis._particleTimeNode = particleTimeNode;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\r\n\t\tvar particleTime:number = this._pTime/1000;\r\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleUVState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static UV_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleUVNode:ParticleUVNode;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\r\n\t{\r\n\t\tsuper(animator, particleUVNode);\r\n\r\n\t\tthis._particleUVNode = particleUVNode;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needUVAnimation) {\r\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\r\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\r\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleVelocityState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _particleVelocityNode:ParticleVelocityNode;\r\n\tprivate _velocity:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default velocity vector of the state, used when in global mode.\r\n\t */\r\n\tpublic get velocity():Vector3D\r\n\t{\r\n\t\treturn this._velocity;\r\n\t}\r\n\r\n\tpublic set velocity(value:Vector3D)\r\n\t{\r\n\t\tthis._velocity = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getVelocities():Array<Vector3D>\r\n\t{\r\n\t\treturn this._pDynamicProperties;\r\n\t}\r\n\r\n\tpublic setVelocities(value:Array<Vector3D>)\r\n\t{\r\n\t\tthis._pDynamicProperties = value;\r\n\r\n\t\tthis._pDynamicPropertiesDirty = new Object();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\r\n\t{\r\n\t\tsuper(animator, particleVelocityNode);\r\n\r\n\t\tthis._particleVelocityNode = particleVelocityNode;\r\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\r\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\r\n\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\r\n\r\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\r\n\t\telse\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t}\r\n}\r\n\r\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _blendWeight:number = 0;\r\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _inputA:ISkeletonAnimationState;\r\n\tprivate _inputB:ISkeletonAnimationState;\r\n\r\n\t/**\r\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\r\n\t * used to produce the skeleton pose output.\r\n\t *\r\n\t * @see inputA\r\n\t * @see inputB\r\n\t */\r\n\tpublic get blendWeight():number\r\n\t{\r\n\t\treturn this._blendWeight;\r\n\t}\r\n\r\n\tpublic set blendWeight(value:number)\r\n\t{\r\n\t\tthis._blendWeight = value;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\r\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tthis._inputA.phase(value);\r\n\t\tthis._inputB.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._inputA.update(time);\r\n\t\tthis._inputB.update(time);\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\r\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\r\n\r\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\r\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\r\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tvar endPose:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar pose1:JointPose, pose2:JointPose;\r\n\t\tvar p1:Vector3D, p2:Vector3D;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tpose1 = poses1[i];\r\n\t\t\tpose2 = poses2[i];\r\n\t\t\tp1 = pose1.translation;\r\n\t\t\tp2 = pose2.translation;\r\n\r\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\r\n\r\n\t\t\ttr = endPose.translation;\r\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\r\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\r\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\r\n{\r\n\tprivate _rootPos:Vector3D = new Vector3D();\r\n\tprivate _frames:Array<SkeletonPose>;\r\n\tprivate _skeletonClipNode:SkeletonClipNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _currentPose:SkeletonPose;\r\n\tprivate _nextPose:SkeletonPose;\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get currentPose():SkeletonPose\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._currentPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get nextPose():SkeletonPose\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._nextPose;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\r\n\t{\r\n\t\tsuper(animator, skeletonClipNode);\r\n\r\n\t\tthis._skeletonClipNode = skeletonClipNode;\r\n\t\tthis._frames = this._skeletonClipNode.frames;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateFrames()\r\n\t{\r\n\t\tsuper._pUpdateFrames();\r\n\r\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\r\n\r\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\r\n\t\t\tthis._nextPose = this._frames[0];\r\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\r\n\t\t} else\r\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tif (!this._skeletonClipNode.totalDuration)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\r\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\t\tvar p1:Vector3D, p2:Vector3D;\r\n\t\tvar pose1:JointPose, pose2:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar endPose:JointPose;\r\n\t\tvar tr:Vector3D;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\r\n\t\t\tthrow new Error(\"joint counts don't match!\");\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tpose1 = currentPose[i];\r\n\t\t\tpose2 = nextPose[i];\r\n\t\t\tp1 = pose1.translation;\r\n\t\t\tp2 = pose2.translation;\r\n\r\n\t\t\tif (this._skeletonClipNode.highQuality)\r\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\r\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\r\n\r\n\t\t\tif (i > 0) {\r\n\t\t\t\ttr = endPose.translation;\r\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\r\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\r\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\r\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\r\n\r\n\t\t// jumping back, need to reset position\r\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\r\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\r\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\r\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\r\n\t\t}\r\n\r\n\t\tvar dx:number = this._rootPos.x;\r\n\t\tvar dy:number = this._rootPos.y;\r\n\t\tvar dz:number = this._rootPos.z;\r\n\r\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\r\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\r\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\r\n\r\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\r\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\r\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\r\n\t\t} else {\r\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\r\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\r\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\r\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\r\n\t\t}\r\n\r\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\r\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\r\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\r\n\r\n\t\tthis._pOldFrame = this._pNextFrame;\r\n\t}\r\n}\r\n\r\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _blendWeight:number = 0;\r\n\tprivate static _tempQuat:Quaternion = new Quaternion();\r\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _baseInput:ISkeletonAnimationState;\r\n\tprivate _differenceInput:ISkeletonAnimationState;\r\n\r\n\t/**\r\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\r\n\t * used to produce the skeleton pose output.\r\n\t *\r\n\t * @see #baseInput\r\n\t * @see #differenceInput\r\n\t */\r\n\tpublic get blendWeight():number\r\n\t{\r\n\t\treturn this._blendWeight;\r\n\t}\r\n\r\n\tpublic set blendWeight(value:number)\r\n\t{\r\n\t\tthis._blendWeight = value;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\r\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tthis._baseInput.phase(value);\r\n\t\tthis._baseInput.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._baseInput.update(time);\r\n\t\tthis._differenceInput.update(time);\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\r\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\r\n\r\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\r\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\r\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tvar endPose:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar base:JointPose, diff:JointPose;\r\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tbase = basePoses[i];\r\n\t\t\tdiff = diffPoses[i];\r\n\t\t\tbasePos = base.translation;\r\n\t\t\tdiffPos = diff.translation;\r\n\r\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\r\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\r\n\r\n\t\t\ttr = endPose.translation;\r\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\r\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\r\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _inputA:ISkeletonAnimationState;\r\n\tprivate _inputB:ISkeletonAnimationState;\r\n\tprivate _blendWeight:number = 0;\r\n\tprivate _direction:number = 0;\r\n\tprivate _blendDirty:boolean = true;\r\n\tprivate _forward:ISkeletonAnimationState;\r\n\tprivate _backward:ISkeletonAnimationState;\r\n\tprivate _left:ISkeletonAnimationState;\r\n\tprivate _right:ISkeletonAnimationState;\r\n\r\n\t/**\r\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\r\n\t * used to produce the skeleton pose output.\r\n\t */\r\n\tpublic set direction(value:number)\r\n\t{\r\n\t\tif (this._direction == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._direction = value;\r\n\r\n\t\tthis._blendDirty = true;\r\n\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t}\r\n\r\n\tpublic get direction():number\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\r\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\r\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\r\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tthis._inputA.phase(value);\r\n\t\tthis._inputB.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUdateTime(time:number /*int*/)\r\n\t{\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._inputA.update(time);\r\n\t\tthis._inputB.update(time);\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\r\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\r\n\r\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\r\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\r\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tvar endPose:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar pose1:JointPose, pose2:JointPose;\r\n\t\tvar p1:Vector3D, p2:Vector3D;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tpose1 = poses1[i];\r\n\t\t\tpose2 = poses2[i];\r\n\t\t\tp1 = pose1.translation;\r\n\t\t\tp2 = pose2.translation;\r\n\r\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\r\n\r\n\t\t\ttr = endPose.translation;\r\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\r\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\r\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate updateBlend()\r\n\t{\r\n\t\tthis._blendDirty = false;\r\n\r\n\t\tif (this._direction < 0 || this._direction > 360) {\r\n\t\t\tthis._direction %= 360;\r\n\t\t\tif (this._direction < 0)\r\n\t\t\t\tthis._direction += 360;\r\n\t\t}\r\n\r\n\t\tif (this._direction < 90) {\r\n\t\t\tthis._inputA = this._forward;\r\n\t\t\tthis._inputB = this._right;\r\n\t\t\tthis._blendWeight = this._direction/90;\r\n\t\t} else if (this._direction < 180) {\r\n\t\t\tthis._inputA = this._right;\r\n\t\t\tthis._inputB = this._backward;\r\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\r\n\t\t} else if (this._direction < 270) {\r\n\t\t\tthis._inputA = this._backward;\r\n\t\t\tthis._inputB = this._left;\r\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\r\n\t\t} else {\r\n\t\t\tthis._inputA = this._left;\r\n\t\t\tthis._inputB = this._forward;\r\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _blendWeights:Array<number> = new Array<number>();\r\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\r\n\r\n\t\twhile (i--)\r\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tif (this._blendWeights[j])\r\n\t\t\t\tthis._inputs[j].update(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUdateTime(time:number /*int*/)\r\n\t{\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tif (this._blendWeights[j])\r\n\t\t\t\tthis._inputs[j].update(time);\r\n\t\t}\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\r\n\t *\r\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\r\n\t */\r\n\tpublic getBlendWeightAt(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._blendWeights[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\r\n\t *\r\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\r\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\r\n\t */\r\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\r\n\t{\r\n\t\tthis._blendWeights[index] = blendWeight;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tvar delta:Vector3D;\r\n\t\tvar weight:number;\r\n\r\n\t\tthis.positionDelta.x = 0;\r\n\t\tthis.positionDelta.y = 0;\r\n\t\tthis.positionDelta.z = 0;\r\n\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tweight = this._blendWeights[j];\r\n\r\n\t\t\tif (weight) {\r\n\t\t\t\tdelta = this._inputs[j].positionDelta;\r\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\r\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\r\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tvar weight:number;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar poses:Array<JointPose>;\r\n\t\tvar endPose:JointPose, pose:JointPose;\r\n\t\tvar endTr:Vector3D, tr:Vector3D;\r\n\t\tvar endQuat:Quaternion, q:Quaternion;\r\n\t\tvar firstPose:Array<JointPose>;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar w0:number, x0:number, y0:number, z0:number;\r\n\t\tvar w1:number, x1:number, y1:number, z1:number;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tweight = this._blendWeights[j];\r\n\r\n\t\t\tif (!weight)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\r\n\r\n\t\t\tif (!firstPose) {\r\n\t\t\t\tfirstPose = poses;\r\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\r\n\t\t\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\t\t\tif (endPose == null)\r\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\t\t\tpose = poses[i];\r\n\t\t\t\t\tq = pose.orientation;\r\n\t\t\t\t\ttr = pose.translation;\r\n\r\n\t\t\t\t\tendQuat = endPose.orientation;\r\n\r\n\t\t\t\t\tendQuat.x = weight*q.x;\r\n\t\t\t\t\tendQuat.y = weight*q.y;\r\n\t\t\t\t\tendQuat.z = weight*q.z;\r\n\t\t\t\t\tendQuat.w = weight*q.w;\r\n\r\n\t\t\t\t\tendTr = endPose.translation;\r\n\t\t\t\t\tendTr.x = weight*tr.x;\r\n\t\t\t\t\tendTr.y = weight*tr.y;\r\n\t\t\t\t\tendTr.z = weight*tr.z;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\r\n\t\t\t\t\tendPose = endPoses[i];\r\n\t\t\t\t\tpose = poses[i];\r\n\r\n\t\t\t\t\tq = firstPose[i].orientation;\r\n\t\t\t\t\tx0 = q.x;\r\n\t\t\t\t\ty0 = q.y;\r\n\t\t\t\t\tz0 = q.z;\r\n\t\t\t\t\tw0 = q.w;\r\n\r\n\t\t\t\t\tq = pose.orientation;\r\n\t\t\t\t\ttr = pose.translation;\r\n\r\n\t\t\t\t\tx1 = q.x;\r\n\t\t\t\t\ty1 = q.y;\r\n\t\t\t\t\tz1 = q.z;\r\n\t\t\t\t\tw1 = q.w;\r\n\t\t\t\t\t// find shortest direction\r\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\r\n\t\t\t\t\t\tx1 = -x1;\r\n\t\t\t\t\t\ty1 = -y1;\r\n\t\t\t\t\t\tz1 = -z1;\r\n\t\t\t\t\t\tw1 = -w1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tendQuat = endPose.orientation;\r\n\t\t\t\t\tendQuat.x += weight*x1;\r\n\t\t\t\t\tendQuat.y += weight*y1;\r\n\t\t\t\t\tendQuat.z += weight*z1;\r\n\t\t\t\t\tendQuat.w += weight*w1;\r\n\r\n\t\t\t\t\tendTr = endPose.translation;\r\n\t\t\t\t\tendTr.x += weight*tr.x;\r\n\t\t\t\t\tendTr.y += weight*tr.y;\r\n\t\t\t\t\tendTr.z += weight*tr.z;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\r\n\t\t\tendPoses[i].orientation.normalize();\r\n\t}\r\n}\r\n\r\nexport = SkeletonNaryLERPState;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\r\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\r\n{\r\n\tprivate _frames:Array<Geometry>;\r\n\tprivate _vertexClipNode:VertexClipNode;\r\n\tprivate _currentGeometry:Geometry;\r\n\tprivate _nextGeometry:Geometry;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get currentGeometry():Geometry\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._currentGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get nextGeometry():Geometry\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._nextGeometry;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\r\n\t{\r\n\t\tsuper(animator, vertexClipNode);\r\n\r\n\t\tthis._vertexClipNode = vertexClipNode;\r\n\t\tthis._frames = this._vertexClipNode.frames;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateFrames()\r\n\t{\r\n\t\tsuper._pUpdateFrames();\r\n\r\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\r\n\r\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\r\n\t\t\tthis._nextGeometry = this._frames[0];\r\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\r\n\t\t} else\r\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\t//TODO:implement positiondelta functionality for vertex animations\r\n\t}\r\n}\r\n\r\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\r\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\r\n\r\n/**\r\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\r\n */\r\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\r\n{\r\n\tpublic blendSpeed:number;\r\n\r\n\tpublic startBlend:number /*int*/;\r\n\r\n\t/**\r\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = CrossfadeTransitionState;\r\n\t}\r\n}\r\n\r\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\r\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\r\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\n\r\n/**\r\n *\r\n */\r\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\r\n{\r\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\r\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\r\n\t{\r\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\r\n\r\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\r\n\r\n\t\tif (this.blendWeight >= 1) {\r\n\t\t\tthis.blendWeight = 1;\r\n\r\n\t\t\tif (this._animationStateTransitionComplete == null)\r\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\r\n\r\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\r\n\t\t}\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n}\r\n\r\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\r\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\r\n\r\n/**\r\n *\r\n */\r\nclass CrossfadeTransition implements IAnimationTransition\r\n{\r\n\tpublic blendSpeed:number = 0.5;\r\n\r\n\tconstructor(blendSpeed:number)\r\n\t{\r\n\t\tthis.blendSpeed = blendSpeed;\r\n\t}\r\n\r\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\r\n\t{\r\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\r\n\t\tcrossFadeTransitionNode.inputA = startNode;\r\n\t\tcrossFadeTransitionNode.inputB = endNode;\r\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\r\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\r\n\r\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\r\n\t}\r\n}\r\n\r\nexport = CrossfadeTransition;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\n\r\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\n\r\n/**\r\n * @class away.base.ParticleGeometry\r\n */\r\nclass ParticleGeometry extends Geometry\r\n{\r\n\tpublic particles:Array<ParticleData>;\r\n\r\n\tpublic numParticles:number /*uint*/;\r\n\r\n}\r\n\r\nexport = ParticleGeometry;",
    "import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass AnimationSetError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\r\n\r\n/**\r\n * Dispatched to notify changes in an animation state's state.\r\n */\r\nclass AnimationStateEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\r\n\t */\r\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\r\n\r\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\r\n\r\n\tprivate _animator:AnimatorBase;\r\n\tprivate _animationState:IAnimationState;\r\n\tprivate _animationNode:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Create a new <code>AnimatonStateEvent</code>\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param animator The animation state object that is the subject of this event.\r\n\t * @param animationNode The animation node inside the animation state from which the event originated.\r\n\t */\r\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._animator = animator;\r\n\t\tthis._animationState = animationState;\r\n\t\tthis._animationNode = animationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * The animator object that is the subject of this event.\r\n\t */\r\n\tpublic get animator():AnimatorBase\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The animation state object that is the subject of this event.\r\n\t */\r\n\tpublic get animationState():IAnimationState\r\n\t{\r\n\t\treturn this._animationState;\r\n\t}\r\n\r\n\t/**\r\n\t * The animation node inside the animation state from which the event originated.\r\n\t */\r\n\tpublic get animationNode():AnimationNodeBase\r\n\t{\r\n\t\treturn this._animationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\r\n\t}\r\n}\r\n\r\nexport = AnimationStateEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\n/**\r\n * Dispatched to notify changes in an animator's state.\r\n */\r\nclass AnimatorEvent extends Event\r\n{\r\n\t/**\r\n\t * Defines the value of the type property of a start event object.\r\n\t */\r\n\tpublic static START:string = \"start\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a stop event object.\r\n\t */\r\n\tpublic static STOP:string = \"stop\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a cycle complete event object.\r\n\t */\r\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\r\n\r\n\tprivate _animator:AnimatorBase;\r\n\r\n\t/**\r\n\t * Create a new <code>AnimatorEvent</code> object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param animator The animator object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, animator:AnimatorBase)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._animator = animator;\r\n\t}\r\n\r\n\tpublic get animator():AnimatorBase\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current event object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new AnimatorEvent(this.type, this._animator);\r\n\t}\r\n}\r\n\r\nexport = AnimatorEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ShadingMethodEvent extends Event\r\n{\r\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = ShadingMethodEvent;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\r\n\r\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\r\n\r\nclass Filter3DBase\r\n{\r\n\tprivate _tasks:Array<Filter3DTaskBase>;\r\n\tprivate _requireDepthRender:boolean;\r\n\tprivate _textureWidth:number;\r\n\tprivate _textureHeight:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\r\n\t}\r\n\r\n\tpublic get requireDepthRender():boolean\r\n\t{\r\n\t\treturn this._requireDepthRender;\r\n\t}\r\n\r\n\tpublic pAddTask(filter:Filter3DTaskBase)\r\n\t{\r\n\t\tthis._tasks.push(filter);\r\n\r\n\t\tif (this._requireDepthRender == null)\r\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\r\n\t}\r\n\r\n\tpublic get tasks():Filter3DTaskBase[]\r\n\t{\r\n\t\treturn this._tasks;\r\n\t}\r\n\r\n\tpublic getMainInputTexture(stage:Stage):ITexture\r\n\t{\r\n\t\treturn this._tasks[0].getMainInputTexture(stage);\r\n\t}\r\n\r\n\tpublic get textureWidth():number\r\n\t{\r\n\t\treturn this._textureWidth;\r\n\t}\r\n\r\n\tpublic set textureWidth(value:number)\r\n\t{\r\n\t\tthis._textureWidth = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\r\n\t\t\tthis._tasks[i].textureWidth = value;\r\n\t}\r\n\r\n\tpublic get textureHeight():number\r\n\t{\r\n\t\treturn this._textureHeight;\r\n\t}\r\n\r\n\tpublic set textureHeight(value:number)\r\n\t{\r\n\t\tthis._textureHeight = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\r\n\t\t\tthis._tasks[i].textureHeight = value;\r\n\t}\r\n\r\n\t// link up the filters correctly with the next filter\r\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\r\n\t{\r\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\r\n\t\t\tthis._tasks[i].dispose();\r\n\t}\r\n\r\n\tpublic update(stage:Stage, camera:Camera)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Filter3DBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\r\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\r\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\r\n\r\nclass Filter3DTaskBase\r\n{\r\n\tprivate _mainInputTexture:ITexture;\r\n\r\n\tprivate _scaledTextureWidth:number = -1;\r\n\tprivate _scaledTextureHeight:number = -1;\r\n\tprivate _textureWidth:number = -1;\r\n\tprivate _textureHeight:number = -1;\r\n\tprivate _textureDimensionsInvalid:boolean = true;\r\n\tprivate _program3DInvalid:boolean = true;\r\n\tprivate _program3D:IProgram;\r\n\tprivate _target:ITexture;\r\n\tprivate _requireDepthRender:boolean;\r\n\tprivate _textureScale:number = 0;\r\n\r\n\tconstructor(requireDepthRender:boolean = false)\r\n\t{\r\n\r\n\t\tthis._requireDepthRender = requireDepthRender;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\r\n\t */\r\n\tpublic get textureScale():number\r\n\t{\r\n\t\treturn this._textureScale;\r\n\t}\r\n\r\n\tpublic set textureScale(value:number)\r\n\t{\r\n\t\tif (this._textureScale == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textureScale = value;\r\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\r\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\r\n\t\tthis._textureDimensionsInvalid = true;\r\n\t}\r\n\r\n\tpublic get target():ITexture\r\n\t{\r\n\t\treturn this._target;\r\n\t}\r\n\r\n\tpublic set target(value:ITexture)\r\n\t{\r\n\t\tthis._target = value;\r\n\t}\r\n\r\n\tpublic get textureWidth():number\r\n\t{\r\n\t\treturn this._textureWidth;\r\n\t}\r\n\r\n\tpublic set textureWidth(value:number)\r\n\t{\r\n\t\tif (this._textureWidth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textureWidth = value;\r\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\r\n\t\tthis._textureDimensionsInvalid = true;\r\n\t}\r\n\r\n\tpublic get textureHeight():number\r\n\t{\r\n\t\treturn this._textureHeight;\r\n\t}\r\n\r\n\tpublic set textureHeight(value:number)\r\n\t{\r\n\t\tif (this._textureHeight == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textureHeight = value;\r\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\r\n\t\tthis._textureDimensionsInvalid = true;\r\n\t}\r\n\r\n\tpublic getMainInputTexture(stage:Stage):ITexture\r\n\t{\r\n\t\tif (this._textureDimensionsInvalid)\r\n\t\t\tthis.pUpdateTextures(stage);\r\n\r\n\t\treturn this._mainInputTexture;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this._mainInputTexture)\r\n\t\t\tthis._mainInputTexture.dispose();\r\n\r\n\t\tif (this._program3D)\r\n\t\t\tthis._program3D.dispose();\r\n\t}\r\n\r\n\tpublic pInvalidateProgram()\r\n\t{\r\n\t\tthis._program3DInvalid = true;\r\n\t}\r\n\r\n\tpublic pUpdateProgram(stage:Stage)\r\n\t{\r\n\t\tif (this._program3D)\r\n\t\t\tthis._program3D.dispose();\r\n\r\n\t\tthis._program3D = stage.context.createProgram();\r\n\r\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\r\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\r\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\r\n\t\tthis._program3DInvalid = false;\r\n\t}\r\n\r\n\tpublic pGetVertexCode():string\r\n\t{\r\n\t\t// TODO: imeplement AGAL <> GLSL\r\n\r\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\r\n\t}\r\n\r\n\tpublic pGetFragmentCode():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic pUpdateTextures(stage:Stage)\r\n\t{\r\n\t\tif (this._mainInputTexture)\r\n\t\t\tthis._mainInputTexture.dispose();\r\n\r\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\r\n\r\n\t\tthis._textureDimensionsInvalid = false;\r\n\t}\r\n\r\n\tpublic getProgram(stage:Stage):IProgram\r\n\t{\r\n\t\tif (this._program3DInvalid)\r\n\t\t\tthis.pUpdateProgram(stage);\r\n\r\n\t\treturn this._program3D;\r\n\t}\r\n\r\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\r\n\t{\r\n\t}\r\n\r\n\tpublic deactivate(stage:Stage)\r\n\t{\r\n\t}\r\n\r\n\tpublic get requireDepthRender():boolean\r\n\t{\r\n\t\treturn this._requireDepthRender;\r\n\t}\r\n\r\n}\r\n\r\nexport = Filter3DTaskBase;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\r\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\r\n\r\nclass RTTBufferManager extends EventDispatcher\r\n{\r\n\tprivate static _instances:Array<RTTBufferManagerVO>;\r\n\r\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\r\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\r\n\r\n\tprivate _indexBuffer:IIndexBuffer;\r\n\tprivate _stage:Stage;\r\n\tprivate _viewWidth:number = -1;\r\n\tprivate _viewHeight:number = -1;\r\n\tprivate _textureWidth:number = -1;\r\n\tprivate _textureHeight:number = -1;\r\n\tprivate _renderToTextureRect:Rectangle;\r\n\tprivate _buffersInvalid:boolean = true;\r\n\r\n\tprivate _textureRatioX:number;\r\n\tprivate _textureRatioY:number;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._renderToTextureRect = new Rectangle();\r\n\r\n\t\tthis._stage = stage;\r\n\r\n\t}\r\n\r\n\tpublic static getInstance(stage:Stage):RTTBufferManager\r\n\t{\r\n\t\tif (!stage)\r\n\t\t\tthrow new Error(\"stage key cannot be null!\");\r\n\r\n\t\tif (RTTBufferManager._instances == null)\r\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\r\n\r\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\r\n\r\n\t\tif (rttBufferManager == null) {\r\n\t\t\trttBufferManager = new RTTBufferManager(stage);\r\n\r\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\r\n\r\n\t\t\tvo.stage3d = stage;\r\n\t\t\tvo.rttbfm = rttBufferManager;\r\n\r\n\t\t\tRTTBufferManager._instances.push(vo);\r\n\t\t}\r\n\r\n\t\treturn rttBufferManager;\r\n\r\n\t}\r\n\r\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\r\n\t{\r\n\r\n\t\tvar l:number = RTTBufferManager._instances.length;\r\n\t\tvar r:RTTBufferManagerVO;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tr = RTTBufferManager._instances[ c ];\r\n\r\n\t\t\tif (r.stage3d === stage)\r\n\t\t\t\treturn r.rttbfm;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate static deleteRTTBufferManager(stage:Stage):void\r\n\t{\r\n\t\tvar l:number = RTTBufferManager._instances.length;\r\n\t\tvar r:RTTBufferManagerVO;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tr = RTTBufferManager._instances[ c ];\r\n\r\n\t\t\tif (r.stage3d === stage) {\r\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get textureRatioX():number\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._textureRatioX;\r\n\t}\r\n\r\n\tpublic get textureRatioY():number\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._textureRatioY;\r\n\t}\r\n\r\n\tpublic get viewWidth():number\r\n\t{\r\n\t\treturn this._viewWidth;\r\n\t}\r\n\r\n\tpublic set viewWidth(value:number)\r\n\t{\r\n\t\tif (value == this._viewWidth)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewWidth = value;\r\n\r\n\t\tthis._buffersInvalid = true;\r\n\r\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\r\n\r\n\t\tif (this._textureWidth > this._viewWidth) {\r\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\r\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\r\n\t\t} else {\r\n\t\t\tthis._renderToTextureRect.x = 0;\r\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\r\n\t}\r\n\r\n\tpublic get viewHeight():number\r\n\t{\r\n\t\treturn this._viewHeight;\r\n\t}\r\n\r\n\tpublic set viewHeight(value:number)\r\n\t{\r\n\t\tif (value == this._viewHeight)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewHeight = value;\r\n\r\n\t\tthis._buffersInvalid = true;\r\n\r\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\r\n\r\n\t\tif (this._textureHeight > this._viewHeight) {\r\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\r\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\r\n\t\t} else {\r\n\t\t\tthis._renderToTextureRect.y = 0;\r\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\r\n\t}\r\n\r\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._renderToTextureVertexBuffer;\r\n\t}\r\n\r\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._renderToScreenVertexBuffer;\r\n\r\n\t}\r\n\r\n\tpublic get indexBuffer():IIndexBuffer\r\n\t{\r\n\t\treturn this._indexBuffer;\r\n\t}\r\n\r\n\tpublic get renderToTextureRect():Rectangle\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._renderToTextureRect;\r\n\t}\r\n\r\n\tpublic get textureWidth():number\r\n\t{\r\n\t\treturn this._textureWidth;\r\n\t}\r\n\r\n\tpublic get textureHeight():number\r\n\t{\r\n\t\treturn this._textureHeight;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\r\n\r\n\t\tif (this._indexBuffer) {\r\n\t\t\tthis._indexBuffer.dispose();\r\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\r\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\r\n\t\t\tthis._renderToScreenVertexBuffer = null;\r\n\t\t\tthis._renderToTextureVertexBuffer = null;\r\n\t\t\tthis._indexBuffer = null;\r\n\t\t}\r\n\t}\r\n\r\n\t// todo: place all this in a separate model, since it's used all over the place\r\n\t// maybe it even has a place in the core (together with screenRect etc)?\r\n\t// needs to be stored per view of course\r\n\tprivate updateRTTBuffers()\r\n\t{\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tvar textureVerts:number[];\r\n\t\tvar screenVerts:number[];\r\n\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\r\n\t\tif (this._renderToTextureVertexBuffer == null)\r\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\r\n\r\n\t\tif (this._renderToScreenVertexBuffer == null)\r\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\r\n\r\n\t\tif (!this._indexBuffer) {\r\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\r\n\r\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\r\n\t\t}\r\n\r\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\r\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\r\n\r\n\t\tvar u1:number = (1 - x)*.5;\r\n\t\tvar u2:number = (x + 1)*.5;\r\n\t\tvar v1:number = (y + 1)*.5;\r\n\t\tvar v2:number = (1 - y)*.5;\r\n\r\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\r\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\r\n\r\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\r\n\r\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\r\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\r\n\r\n\t\tthis._buffersInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = RTTBufferManager;\r\n\r\nclass RTTBufferManagerVO\r\n{\r\n\tpublic stage3d:Stage;\r\n\r\n\tpublic rttbfm:RTTBufferManager;\r\n}",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport PickingColliderBase\t\t\t\t= require(\"awayjs-renderergl/lib/pick/PickingColliderBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider extends PickingColliderBase implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(renderablePool:RenderablePool, findClosestCollision:boolean = false)\r\n\t{\r\n\t\tsuper(renderablePool);\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indexData:Array<number> = renderable.getIndexData().data;\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = (<MaterialBase> renderable.renderOwner).bothSides;\r\n\r\n\t\tvar positionData:Array<number> = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\r\n\t\tvar positionStride:number = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\r\n\t\tvar positionOffset:number = renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar uvData:Array<number> = renderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\r\n\t\tvar uvStride:number = renderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\r\n\t\tvar uvOffset:number = renderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\r\n\t\tvar numIndices:number = indexData.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = positionOffset + indexData[ index ]*positionStride;\r\n\t\t\ti1 = positionOffset + indexData[ (index + 1) ]*positionStride;\r\n\t\t\ti2 = positionOffset + indexData[ (index + 2) ]*positionStride;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positionData[ i0 ];\r\n\t\t\tp0y = positionData[ (i0 + 1) ];\r\n\t\t\tp0z = positionData[ (i0 + 2) ];\r\n\t\t\tp1x = positionData[ i1 ];\r\n\t\t\tp1y = positionData[ (i1 + 1) ];\r\n\t\t\tp1z = positionData[ (i1 + 2) ];\r\n\t\t\tp2x = positionData[ i2 ];\r\n\t\t\tp2y = positionData[ (i2 + 1) ];\r\n\t\t\tp2z = positionData[ (i2 + 2) ];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*this.rayDirection.x + ny* +this.rayDirection.y + nz*this.rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*this.rayPosition.x + ny*this.rayPosition.y + nz*this.rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = this.rayPosition.x + t*this.rayDirection.x;\r\n\t\t\t\tcy = this.rayPosition.y + t*this.rayDirection.y;\r\n\t\t\t\tcz = this.rayPosition.z + t*this.rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/( Q1Q1*Q2Q2 - Q1Q2*Q1Q2 );\r\n\t\t\t\tv = coeff*( Q2Q2*RQ1 - Q1Q2*RQ2 );\r\n\t\t\t\tw = coeff*( -Q1Q2*RQ1 + Q1Q1*RQ2 );\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._pGetCollisionUV(indexData, uvData, index, v, w, u, uvOffset, uvStride);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\n\r\nimport BillboardRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/BillboardRenderable\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\r\n\r\n/**\r\n * An abstract base class for all picking collider classes. It should not be instantiated directly.\r\n *\r\n * @class away.pick.PickingColliderBase\r\n */\r\nclass PickingColliderBase\r\n{\r\n\tprivate _renderablePool:RenderablePool;\r\n\r\n\tpublic rayPosition:Vector3D;\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\tconstructor(renderablePool:RenderablePool)\r\n\t{\r\n\t\t//TODO\r\n\t\tthis._renderablePool = renderablePool;\r\n\t}\r\n\r\n\tpublic _pGetCollisionNormal(indexData:Array<number> /*uint*/, vertexData:Array<number>, triangleIndex:number):Vector3D // PROTECTED\r\n\t{\r\n\t\tvar normal:Vector3D = new Vector3D();\r\n\t\tvar i0:number = indexData[ triangleIndex ]*3;\r\n\t\tvar i1:number = indexData[ triangleIndex + 1 ]*3;\r\n\t\tvar i2:number = indexData[ triangleIndex + 2 ]*3;\r\n\t\tvar p0:Vector3D = new Vector3D(vertexData[ i0 ], vertexData[ i0 + 1 ], vertexData[ i0 + 2 ]);\r\n\t\tvar p1:Vector3D = new Vector3D(vertexData[ i1 ], vertexData[ i1 + 1 ], vertexData[ i1 + 2 ]);\r\n\t\tvar p2:Vector3D = new Vector3D(vertexData[ i2 ], vertexData[ i2 + 1 ], vertexData[ i2 + 2 ]);\r\n\t\tvar side0:Vector3D = p1.subtract(p0);\r\n\t\tvar side1:Vector3D = p2.subtract(p0);\r\n\t\tnormal = side0.crossProduct(side1);\r\n\t\tnormal.normalize();\r\n\t\treturn normal;\r\n\t}\r\n\r\n\tpublic _pGetCollisionUV(indexData:Array<number> /*uint*/, uvData:Array<number>, triangleIndex:number, v:number, w:number, u:number, uvOffset:number, uvStride:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indexData[ triangleIndex ]*uvStride + uvOffset;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\r\n\t\tuIndex = indexData[ triangleIndex + 1 ]*uvStride + uvOffset;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\r\n\t\tuIndex = indexData[ triangleIndex + 2 ]*uvStride + uvOffset;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setLocalRay(localPosition:Vector3D, localDirection:Vector3D)\r\n\t{\r\n\t\tthis.rayPosition = localPosition;\r\n\t\tthis.rayDirection = localDirection;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tif (this._pTestRenderableCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\tpickingCollisionVO.renderableOwner = billboard;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param mesh The mesh instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testMeshCollision(mesh:Mesh, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = mesh.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = mesh.subMeshes[i];\r\n\r\n\t\t\tif (this._pTestRenderableCollision(<RenderableBase> this._renderablePool.getItem(subMesh), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tpickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pickingCollisionVO.renderableOwner != null;\r\n\t}\r\n}\r\n\r\nexport = PickingColliderBase;",
    "import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\r\nimport BitmapImage2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\r\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\r\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\r\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\r\n\r\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\r\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\r\n * on an entity that has its shaderPickingDetails property set to true.\r\n *\r\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\r\n *\r\n * @see away.entities.Entity#shaderPickingDetails\r\n *\r\n * @class away.pick.ShaderPicker\r\n */\r\nclass ShaderPicker implements IPicker\r\n{\r\n\tprivate _opaqueRenderableHead:RenderableBase;\r\n\tprivate _blendedRenderableHead:RenderableBase;\r\n\r\n\tprivate _stage:Stage;\r\n\tprivate _context:IContextGL;\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _objectProgram:IProgram;\r\n\tprivate _triangleProgram:IProgram;\r\n\tprivate _bitmapImage2D:BitmapImage2D;\r\n\tprivate _viewportData:Array<number>;\r\n\tprivate _boundOffsetScale:Array<number>;\r\n\tprivate _id:Array<number>;\r\n\r\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\r\n\tprivate _interactiveId:number;\r\n\tprivate _hitColor:number;\r\n\tprivate _projX:number;\r\n\tprivate _projY:number;\r\n\r\n\tprivate _hitRenderable:RenderableBase;\r\n\tprivate _hitEntity:IEntity;\r\n\tprivate _localHitPosition:Vector3D = new Vector3D();\r\n\tprivate _hitUV:Point = new Point();\r\n\tprivate _faceIndex:number;\r\n\tprivate _subGeometryIndex:number;\r\n\r\n\tprivate _localHitNormal:Vector3D = new Vector3D();\r\n\r\n\tprivate _rayPos:Vector3D = new Vector3D();\r\n\tprivate _rayDir:Vector3D = new Vector3D();\r\n\tprivate _potentialFound:boolean;\r\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>ShaderPicker</code> object.\r\n\t *\r\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\r\n\t * properties such as uv and normal coordinates.\r\n\t */\r\n\tconstructor(shaderPickingDetails:boolean = false)\r\n\t{\r\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\r\n\r\n\t\tthis._id = new Array<number>(4);\r\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\r\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\r\n\t\tthis._boundOffsetScale[3] = 0;\r\n\t\tthis._boundOffsetScale[7] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\r\n\r\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\r\n\r\n\t\tif (!this._stage)\r\n\t\t\treturn null;\r\n\r\n\t\tthis._context = <IContextGL> this._stage.context;\r\n\r\n\t\tthis._viewportData[0] = view.width;\r\n\t\tthis._viewportData[1] = view.height;\r\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\r\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\r\n\r\n\t\t// _potentialFound will be set to true if any object is actually rendered\r\n\t\tthis._potentialFound = false;\r\n\r\n\t\t//reset head values\r\n\t\tthis._blendedRenderableHead = null;\r\n\t\tthis._opaqueRenderableHead = null;\r\n\r\n\t\tthis.pDraw(collector, null);\r\n\r\n\t\t// clear buffers\r\n\t\tthis._context.setVertexBufferAt(0, null);\r\n\r\n\t\tif (!this._context || !this._potentialFound)\r\n\t\t\treturn null;\r\n\r\n\t\tif (!this._bitmapImage2D)\r\n\t\t\tthis._bitmapImage2D = new BitmapImage2D(1, 1, false, 0);\r\n\r\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\r\n\t\tthis._hitColor = this._bitmapImage2D.getPixel(0, 0);\r\n\r\n\t\tif (!this._hitColor) {\r\n\t\t\tthis._context.present();\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\r\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\r\n\r\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\r\n\t\t\treturn null;\r\n\r\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\r\n\t\tif (this._shaderPickingDetails) {\r\n\t\t\tthis.getHitDetails(view.camera);\r\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\r\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\r\n\t\t\t_collisionVO.uv = this._hitUV;\r\n\t\t\t_collisionVO.index = this._faceIndex;\r\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\r\n\r\n\t\t} else {\r\n\t\t\t_collisionVO.localPosition = null;\r\n\t\t\t_collisionVO.localNormal = null;\r\n\t\t\t_collisionVO.uv = null;\r\n\t\t\t_collisionVO.index = 0;\r\n\t\t\t//_collisionVO.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\treturn _collisionVO;\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\r\n\t{\r\n\r\n\t\tvar camera:Camera = entityCollector.camera;\r\n\r\n\t\tthis._context.clear(0, 0, 0, 1);\r\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\r\n\r\n\t\tthis._interactives.length = this._interactiveId = 0;\r\n\r\n\t\tif (!this._objectProgram)\r\n\t\t\tthis.initObjectProgram();\r\n\r\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\r\n\t\tthis._context.setProgram(this._objectProgram);\r\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\r\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\r\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\r\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t * @param renderables The renderables to draw.\r\n\t * @param camera The camera for which to render.\r\n\t */\r\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\r\n\r\n\t\twhile (renderable) {\r\n\t\t\t// it's possible that the renderable was already removed from the scene\r\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\r\n\t\t\t\trenderable = renderable.next;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis._potentialFound = true;\r\n\r\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.renderOwner).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\r\n\r\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\r\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\r\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\r\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\r\n\r\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix.append(viewProjection);\r\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\r\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\r\n\t\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\r\n\r\n\t\t\trenderable = renderable.next;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate updateRay(camera:Camera)\r\n\t{\r\n\t\tthis._rayPos = camera.scenePosition;\r\n\r\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\r\n\t\tthis._rayDir.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Program that color-codes objects.\r\n\t */\r\n\tprivate initObjectProgram()\r\n\t{\r\n\t\tvar vertexCode:string;\r\n\t\tvar fragmentCode:string;\r\n\r\n\t\tthis._objectProgram = this._context.createProgram();\r\n\r\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\r\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\r\n\r\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\r\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Program that renders positions.\r\n\t */\r\n\r\n\tprivate initTriangleProgram()\r\n\t{\r\n\t\tvar vertexCode:string;\r\n\t\tvar fragmentCode:string;\r\n\r\n\t\tthis._triangleProgram = this._context.createProgram();\r\n\r\n\t\t// todo: add animation code\r\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\r\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\r\n\r\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\r\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\r\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets more detailed information about the hir position, if required.\r\n\t * @param camera The camera used to view the hit object.\r\n\t */\r\n\tprivate getHitDetails(camera:Camera)\r\n\t{\r\n\t\tthis.getApproximatePosition(camera);\r\n\t\tthis.getPreciseDetails(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a first-guess approximate position about the hit position.\r\n\t *\r\n\t * @param camera The camera used to view the hit object.\r\n\t */\r\n\tprivate getApproximatePosition(camera:Camera)\r\n\t{\r\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\r\n\t\tvar col:number;\r\n\t\tvar scX:number, scY:number, scZ:number;\r\n\t\tvar offsX:number, offsY:number, offsZ:number;\r\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\r\n\t\tlocalViewProjection.append(camera.viewProjection);\r\n\t\tif (!this._triangleProgram) {\r\n\t\t\tthis.initTriangleProgram();\r\n\t\t}\r\n\r\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\r\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\r\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\r\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\r\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\r\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\r\n\r\n\t\tthis._context.setProgram(this._triangleProgram);\r\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\r\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\r\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\r\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\r\n\r\n\t\tthis._stage.activateBuffer(0, this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA), this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(this._hitRenderable.getIndexData()), 0, this._hitRenderable.numTriangles);\r\n\r\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\r\n\r\n\t\tcol = this._bitmapImage2D.getPixel(0, 0);\r\n\r\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\r\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\r\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\r\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\r\n\t * @param camera The camera used to view the hit object.\r\n\t */\r\n\tprivate getPreciseDetails(camera:Camera)\r\n\t{\r\n\t\tvar len:number = indices.length;\r\n\t\tvar x1:number, y1:number, z1:number;\r\n\t\tvar x2:number, y2:number, z2:number;\r\n\t\tvar x3:number, y3:number, z3:number;\r\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\r\n\t\tvar t1:number, t2:number, t3:number;\r\n\t\tvar v0x:number, v0y:number, v0z:number;\r\n\t\tvar v1x:number, v1y:number, v1z:number;\r\n\t\tvar v2x:number, v2y:number, v2z:number;\r\n\t\tvar ni1:number, ni2:number, ni3:number;\r\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\r\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\r\n\t\tvar s:number, t:number, invDenom:number;\r\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\r\n\t\tvar u:number, v:number;\r\n\t\tvar ui1:number, ui2:number, ui3:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number;\r\n\t\tvar indices:Array<number> = this._hitRenderable.getIndexData().data;\r\n\r\n\t\tvar positions:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\r\n\t\tvar positionStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\r\n\t\tvar positionOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tvar uvs:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\r\n\t\tvar uvStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\r\n\t\tvar uvOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\r\n\r\n\t\tvar normals:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).data;\r\n\t\tvar normalStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).dataPerVertex;\r\n\t\tvar normalOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\tthis.updateRay(camera);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tt1 = positionOffset + indices[i]*positionStride;\r\n\t\t\tt2 = positionOffset + indices[j]*positionStride;\r\n\t\t\tt3 = positionOffset + indices[k]*positionStride;\r\n\t\t\tx1 = positions[t1];\r\n\t\t\ty1 = positions[t1 + 1];\r\n\t\t\tz1 = positions[t1 + 2];\r\n\t\t\tx2 = positions[t2];\r\n\t\t\ty2 = positions[t2 + 1];\r\n\t\t\tz2 = positions[t2 + 2];\r\n\t\t\tx3 = positions[t3];\r\n\t\t\ty3 = positions[t3 + 1];\r\n\t\t\tz3 = positions[t3 + 2];\r\n\r\n\t\t\t// if within bounds\r\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\r\n\r\n\t\t\t\t// calculate barycentric coords for approximated position\r\n\t\t\t\tv0x = x3 - x1;\r\n\t\t\t\tv0y = y3 - y1;\r\n\t\t\t\tv0z = z3 - z1;\r\n\t\t\t\tv1x = x2 - x1;\r\n\t\t\t\tv1y = y2 - y1;\r\n\t\t\t\tv1z = z2 - z1;\r\n\t\t\t\tv2x = x - x1;\r\n\t\t\t\tv2y = y - y1;\r\n\t\t\t\tv2z = z - z1;\r\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\r\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\r\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\r\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\r\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\r\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\r\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\r\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\r\n\r\n\t\t\t\t// if inside the current triangle, fetch details hit information\r\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\r\n\r\n\t\t\t\t\tni1 = normalOffset + indices[i]*normalStride;\r\n\t\t\t\t\tni2 = normalOffset + indices[j]*normalStride;\r\n\t\t\t\t\tni3 = normalOffset + indices[k]*normalStride;\r\n\r\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\r\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\r\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\r\n\r\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\r\n\r\n\t\t\t\t\tn1 /= nLength;\r\n\t\t\t\t\tn2 /= nLength;\r\n\t\t\t\t\tn3 /= nLength;\r\n\r\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\r\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\r\n\r\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\r\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\r\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\r\n\r\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\r\n\t\t\t\t\ts0y = y2 - y1;\r\n\t\t\t\t\ts0z = z2 - z1;\r\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\r\n\t\t\t\t\ts1y = y3 - y1;\r\n\t\t\t\t\ts1z = z3 - z1;\r\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\r\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\r\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\r\n\t\t\t\t\tthis._localHitNormal.x *= nl;\r\n\t\t\t\t\tthis._localHitNormal.y *= nl;\r\n\t\t\t\t\tthis._localHitNormal.z *= nl;\r\n\r\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\r\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\r\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\r\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\r\n\r\n\t\t\t\t\tui1 = uvOffset + indices[i]*uvStride\r\n\t\t\t\t\tui2 = uvOffset + indices[j]*uvStride\r\n\t\t\t\t\tui3 = uvOffset + indices[k]*uvStride\r\n\r\n\t\t\t\t\tu = uvs[ui1];\r\n\t\t\t\t\tv = uvs[ui1 + 1];\r\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\r\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\r\n\r\n\t\t\t\t\tthis._faceIndex = i;\r\n\t\t\t\t\t//TODO add back subGeometryIndex value\r\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti += 3;\r\n\t\t\tj += 3;\r\n\t\t\tk += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\r\n\t * calculating the intersection point.\r\n\t * @param camera The camera used to render the object.\r\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\r\n\t * @param nx The x-coordinate of the face's plane normal.\r\n\t * @param ny The y-coordinate of the face plane normal.\r\n\t * @param nz The z-coordinate of the face plane normal.\r\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\r\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\r\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\r\n\t */\r\n\r\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\r\n\t{\r\n\t\t// calculate screen ray and find exact intersection position with triangle\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar ox:number, oy:number, oz:number;\r\n\t\tvar t:number;\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\r\n\r\n\t\t// unprojected projection point, gives ray dir in cam space\r\n\t\tox = this._rayDir.x;\r\n\t\toy = this._rayDir.y;\r\n\t\toz = this._rayDir.z;\r\n\r\n\t\t// transform ray dir and origin (cam pos) to object space\r\n\t\t//invSceneTransform.copyRawDataTo( raw  );\r\n\t\tinvSceneTransform.copyRawDataTo(raw);\r\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\r\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\r\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\r\n\r\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\r\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\r\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\r\n\r\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\r\n\r\n\t\tthis._localHitPosition.x = ox + rx*t;\r\n\t\tthis._localHitPosition.y = oy + ry*t;\r\n\t\tthis._localHitPosition.z = oz + rz*t;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._bitmapImage2D.dispose();\r\n\t\tif (this._triangleProgram)\r\n\t\t\tthis._triangleProgram.dispose();\r\n\r\n\t\tif (this._objectProgram)\r\n\t\t\tthis._objectProgram.dispose();\r\n\r\n\t\tthis._triangleProgram = null;\r\n\t\tthis._objectProgram = null;\r\n\t\tthis._bitmapImage2D = null;\r\n\t\tthis._hitRenderable = null;\r\n\t\tthis._hitEntity = null;\r\n\t}\r\n}\r\n\r\nexport = ShaderPicker;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/render/passes/BasicMaterialPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\n\r\n/**\r\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterialRender extends RenderBase\r\n{\r\n\tprivate _material:BasicMaterial;\r\n\tprivate _pass:BasicMaterialPass;\r\n\r\n\r\n\tconstructor(pool:RenderPool, material:BasicMaterial, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, material, renderableClass, stage);\r\n\r\n\t\tthis._material = material;\r\n\r\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, renderableClass, this._stage));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateRender()\r\n\t{\r\n\t\tsuper._pUpdateRender();\r\n\r\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\r\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\r\n\t\tthis._pass.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\r\n\t\t//this._pass.forceSeparateMVP = false;\r\n\t}\r\n}\r\n\r\nexport = BasicMaterialRender;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n/**\r\n * DepthRender forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass DepthRender extends RenderPassBase\r\n{\r\n\tprivate _fragmentConstantsIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pool\r\n\t * @param renderOwner\r\n\t * @param renderableClass\r\n\t * @param stage\r\n\t */\r\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, renderOwner, renderableClass, stage);\r\n\r\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\r\n\r\n\t\tthis._pAddPass(this);\r\n\t}\r\n\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shader);\r\n\r\n\t\tshader.projectionDependencies++;\r\n\r\n\t\tif (shader.alphaThreshold > 0)\r\n\t\t\tshader.uvDependencies++;\r\n\t}\r\n\r\n\r\n\tpublic _iInitConstantData(shader:ShaderBase)\r\n\t{\r\n\t\tsuper._iInitConstantData(shader);\r\n\r\n\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shader.fragmentConstantData;\r\n\t\tdata[index] = 1.0;\r\n\t\tdata[index + 1] = 255.0;\r\n\t\tdata[index + 2] = 65025.0;\r\n\t\tdata[index + 3] = 16581375.0;\r\n\t\tdata[index + 4] = 1.0/255.0;\r\n\t\tdata[index + 5] = 1.0/255.0;\r\n\t\tdata[index + 6] = 1.0/255.0;\r\n\t\tdata[index + 7] = 0.0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\r\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\r\n\r\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\r\n\r\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\r\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\r\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\r\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\r\n\r\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\r\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\r\n\r\n\t\tif (shader.texture && shader.alphaThreshold > 0) {\r\n\r\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\r\n\r\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\r\n\r\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\r\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(temp1);\r\n\t\tregisterCache.removeFragmentTempUsage(temp2);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tif (this._shader.texture && this._shader.alphaThreshold > 0) {\r\n\t\t\tthis._shader.texture.activate(this._shader);\r\n\r\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = DepthRender;",
    "﻿import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n/**\r\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\r\n * This is used to render omnidirectional shadow maps.\r\n */\r\nclass DistanceRender extends RenderPassBase\r\n{\r\n\tprivate _fragmentConstantsIndex:number;\r\n\r\n\t/**\r\n\t * Creates a new DistanceRender object.\r\n\t *\r\n\t * @param material The material to which this pass belongs.\r\n\t */\r\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, renderOwner, renderableClass, stage);\r\n\r\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\r\n\r\n\t\tthis._pAddPass(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the unchanging constant data for this material.\r\n\t */\r\n\tpublic _iInitConstantData(shader:ShaderBase)\r\n\t{\r\n\t\tsuper._iInitConstantData(shader);\r\n\r\n\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shader.fragmentConstantData;\r\n\t\tdata[index + 4] = 1.0/255.0;\r\n\t\tdata[index + 5] = 1.0/255.0;\r\n\t\tdata[index + 6] = 1.0/255.0;\r\n\t\tdata[index + 7] = 0.0;\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shader);\r\n\r\n\t\tshader.projectionDependencies++;\r\n\t\tshader.viewDirDependencies++;\r\n\r\n\t\tif (shader.alphaThreshold > 0)\r\n\t\t\tshader.uvDependencies++;\r\n\r\n\t\tif (shader.viewDirDependencies > 0)\r\n\t\t\tshader.globalPosDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string;\r\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\r\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\r\n\r\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\r\n\r\n\t\t// squared distance to view\r\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\r\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\r\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\r\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\r\n\r\n\t\tif (shader.alphaThreshold > 0) {\r\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\r\n\r\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\r\n\r\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\r\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tvar f:number = camera.projection.far;\r\n\r\n\t\tf = 1/(2*f*f);\r\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\r\n\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = this._shader.fragmentConstantData;\r\n\t\tdata[index] = 1.0*f;\r\n\t\tdata[index + 1] = 255.0*f;\r\n\t\tdata[index + 2] = 65025.0*f;\r\n\t\tdata[index + 3] = 16581375.0*f;\r\n\r\n\t\tif (this._shader.alphaThreshold > 0) {\r\n\t\t\tthis._shader.texture.activate(this._shader);\r\n\r\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = DistanceRender;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n *\r\n * @class away.pool.Passes\r\n */\r\nclass RenderBase extends EventDispatcher implements IRender\r\n{\r\n\tpublic _forceSeparateMVP:boolean = false;\r\n\r\n\tprivate _pool:RenderPool;\r\n\tpublic _renderOwner:IRenderOwner;\r\n\tpublic _renderableClass:IRenderableClass;\r\n\tpublic _stage:Stage;\r\n\r\n\tprivate _renderOrderId:number;\r\n\tprivate _invalidAnimation:boolean = true;\r\n\tprivate _invalidRender:boolean = true;\r\n\tprivate _passes:Array<IPass> = new Array<IPass>();\r\n\r\n\r\n\r\n\tpublic _pRequiresBlending:boolean = false;\r\n\r\n\tprivate _onPassChangeDelegate:(event:Event) => void;\r\n\r\n\tpublic renderId:number;\r\n\r\n\t/**\r\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\r\n\t */\r\n\tpublic get requiresBlending():boolean\r\n\t{\r\n\t\treturn this._pRequiresBlending;\r\n\t}\r\n\r\n\tpublic get renderOrderId():number\r\n\t{\r\n\t\tif (this._invalidAnimation)\r\n\t\t\tthis._updateAnimation();\r\n\r\n\t\treturn this._renderOrderId;\r\n\t}\r\n\r\n\tpublic get passes():Array<IPass>\r\n\t{\r\n\t\tif (this._invalidAnimation)\r\n\t\t\tthis._updateAnimation();\r\n\r\n\t\treturn this._passes;\r\n\t}\r\n\r\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis.renderId = renderOwner.id;\r\n\t\tthis._renderOwner = renderOwner;\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\r\n\r\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tthis._renderableClass._iIncludeDependencies(shader);\r\n\r\n\t\tshader.alphaThreshold = this._renderOwner.alphaThreshold;\r\n\t\tshader.useMipmapping = this._renderOwner.mipmap;\r\n\t\tshader.useSmoothTextures = this._renderOwner.smooth;\r\n\r\n\t\tif (this._renderOwner instanceof MaterialBase) {\r\n\t\t\tvar material:MaterialBase = <MaterialBase> this._renderOwner;\r\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\r\n\t\t\tshader.useBothSides = material.bothSides;\r\n\t\t\tshader.repeatTextures = material.repeat;\r\n\t\t\tshader.usesUVTransform = material.animateUVs;\r\n\t\t\tshader.usesColorTransform = material.useColorTransform;\r\n\t\t\tif (material.texture)\r\n\t\t\t\tshader.texture = shader.getTextureVO(material.texture);\r\n\t\t\tshader.color = material.color;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pClearPasses();\r\n\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._passes[i].dispose();\r\n\r\n\t\tthis._passes = null;\r\n\r\n\t\tthis._pool.disposeItem(this._renderOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateRender()\r\n\t{\r\n\t\tthis._invalidRender = true;\r\n\t\tthis._invalidAnimation = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._passes[i].invalidatePass();\r\n\r\n\t\tthis._invalidAnimation = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateAnimation()\r\n\t{\r\n\t\tthis._invalidAnimation = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderOwner\r\n\t */\r\n\tprivate _updateAnimation()\r\n\t{\r\n\t\tif (this._invalidRender)\r\n\t\t\tthis._pUpdateRender();\r\n\r\n\t\tthis._invalidAnimation = false;\r\n\r\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\r\n\r\n\t\tvar renderOrderId = 0;\r\n\t\tvar mult:number = 1;\r\n\t\tvar shader:ShaderBase;\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tshader = this._passes[i].shader;\r\n\r\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\r\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\r\n\t\t\t\tshader.invalidateProgram();\r\n\t\t\t}\r\n\r\n\t\t\trenderOrderId += shader.programData.id*mult;\r\n\t\t\tmult *= 1000;\r\n\t\t}\r\n\r\n\t\tthis._renderOrderId = renderOrderId;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs any processing that needs to occur before any of its passes are used.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pUpdateRender()\r\n\t{\r\n\t\tthis._invalidRender = false;\r\n\r\n\t\t//overrride to update shader object properties\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a pass from the renderOwner.\r\n\t * @param pass The pass to be removed.\r\n\t */\r\n\tpublic _pRemovePass(pass:IPass)\r\n\t{\r\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\r\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all passes from the renderOwner\r\n\t */\r\n\tpublic _pClearPasses()\r\n\t{\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\r\n\r\n\t\tthis._passes.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a pass to the renderOwner\r\n\t * @param pass\r\n\t */\r\n\tpublic _pAddPass(pass:IPass)\r\n\t{\r\n\t\tthis._passes.push(pass);\r\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\r\n\t */\r\n\tprivate onPassChange(event:Event)\r\n\t{\r\n\t\tthis.invalidateAnimation();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * test if animation will be able to run on gpu BEFORE compiling materials\r\n\t * test if the shader objects supports animating the animation set in the vertex shader\r\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\r\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\r\n\t */\r\n\tprivate _getEnabledGPUAnimation():boolean\r\n\t{\r\n\t\tif (this._renderOwner.animationSet) {\r\n\t\t\tthis._renderOwner.animationSet.resetGPUCompatibility();\r\n\r\n\t\t\tvar owners:Array<IRenderableOwner> = this._renderOwner.iOwners;\r\n\t\t\tvar numOwners:number = owners.length;\r\n\r\n\t\t\tvar len:number = this._passes.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\r\n\t\t\t\t\tif (owners[j].animator)\r\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\r\n\r\n\t\t\treturn !this._renderOwner.animationSet.usesCPU;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = RenderBase;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\n\r\n/**\r\n * RenderPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\r\n * a render call per required renderable.\r\n */\r\nclass RenderPassBase extends RenderBase implements IPass\r\n{\r\n\tpublic _shader:ShaderBase;\r\n\r\n\tpublic get shader():ShaderBase\r\n\t{\r\n\t\treturn this._shader;\r\n\t}\r\n\r\n\tpublic get animationSet():AnimationSetBase\r\n\t{\r\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up any resources used by the current object.\r\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._shader.dispose();\r\n\r\n\t\tthis._shader = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\r\n\t * @param pass The pass used to render the renderable.\r\n\t * @param renderable The IRenderable object to draw.\r\n\t * @param stage The Stage object used for rendering.\r\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\r\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\r\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\r\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\r\n\t * @param stage The Stage object which is currently used for rendering.\r\n\t * @param camera The camera from which the scene is viewed.\r\n\t * @private\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tthis._shader._iActivate(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\r\n\t * @param stage The Stage used for rendering\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iDeactivate()\r\n\t{\r\n\t\tthis._shader._iDeactivate();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\r\n\t *\r\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\r\n\t */\r\n\tpublic invalidatePass()\r\n\t{\r\n\t\tthis._shader.invalidateShader();\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\r\n\tpublic _iInitConstantData(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n\r\nexport = RenderPassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport BasicMaterialRender\t\t\t= require(\"awayjs-renderergl/lib/render/BasicMaterialRender\");\r\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\nimport SkyboxRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/SkyboxRender\");\r\n\r\n/**\r\n * @class away.pool.RenderPool\r\n */\r\nclass RenderPool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\t\r\n\tprivate _pool:Object = new Object();\r\n\tprivate _renderableClass:IRenderableClass;\r\n\tprivate _stage:Stage;\r\n\tprivate _renderClass:IRenderClass;\r\n\t\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderClass\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, stage:Stage, renderClass:IRenderClass = null)\r\n\t{\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\t\tthis._renderClass = renderClass;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t * @returns IRenderable\r\n\t */\r\n\tpublic getItem(renderOwner:IRenderOwner):RenderBase\r\n\t{\r\n\t\treturn (this._pool[renderOwner.id] || (this._pool[renderOwner.id] = renderOwner._iAddRender(new (this._renderClass || RenderPool.getClass(renderOwner))(this, renderOwner, this._renderableClass, this._stage))))\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t */\r\n\tpublic disposeItem(renderOwner:IRenderOwner)\r\n\t{\r\n\t\trenderOwner._iRemoveRender(this._pool[renderOwner.id]);\r\n\r\n\t\tthis._pool[renderOwner.id] = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(renderClass:IRenderClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tRenderPool._classPool[assetClass.assetType] = renderClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(renderOwner:IRenderOwner):IRenderClass\r\n\t{\r\n\t\treturn RenderPool._classPool[renderOwner.assetType];\r\n\t}\r\n\t\r\n\r\n\tprivate static main = RenderPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tRenderPool.registerClass(BasicMaterialRender, BasicMaterial);\r\n\t\tRenderPool.registerClass(SkyboxRender, Skybox);\r\n\t}\r\n}\r\n\r\nexport = RenderPool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\r\n\r\n/**\r\n * SkyboxRender forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass SkyboxRender extends RenderPassBase\r\n{\r\n\tpublic _skybox:Skybox;\r\n\tpublic _cubeTexture:TextureVOBase;\r\n\r\n\tconstructor(pool:RenderPool, skybox:Skybox, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, skybox, renderableClass, stage);\r\n\r\n\t\tthis._skybox = skybox;\r\n\r\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\r\n\r\n\t\tthis._cubeTexture = this._shader.getTextureVO(this._skybox.cubeMap);\r\n\r\n\t\tthis._pAddPass(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateRender()\r\n\t{\r\n\t\tsuper._pUpdateRender();\r\n\r\n\t\tthis._pRequiresBlending = (this._renderOwner.blendMode != BlendMode.NORMAL);\r\n\r\n\t\tthis.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._renderOwner.blendMode);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shader);\r\n\r\n\t\tshader.usesLocalPosFragment = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tthis._cubeTexture._iInitRegisters(shader, registerCache);\r\n\r\n\t\treturn this._cubeTexture._iGetFragmentCode(shader, sharedRegisters.shadedTarget, registerCache, sharedRegisters.localPositionVarying);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\r\n\t\tthis._cubeTexture.activate(this._shader);\r\n\t}\r\n}\r\n\r\nexport = SkyboxRender;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\n\r\n\r\n/**\r\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterialPass extends PassBase\r\n{\r\n\tprivate _diffuseR:number = 1;\r\n\tprivate _diffuseG:number = 1;\r\n\tprivate _diffuseB:number = 1;\r\n\tprivate _diffuseA:number = 1;\r\n\r\n\tprivate _fragmentConstantsIndex:number;\r\n\r\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(render, renderOwner, renderableClass, stage);\r\n\r\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shader);\r\n\r\n\t\tif (shader.texture != null)\r\n\t\t\tshader.uvDependencies++;\r\n    }\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n        var alphaReg:ShaderRegisterElement;\r\n\r\n        if (this.preserveAlpha) {\r\n            alphaReg = regCache.getFreeFragmentSingleTemp();\r\n            regCache.addFragmentTempUsages(alphaReg, 1);\r\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\r\n        }\r\n\r\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\r\n\r\n\t\tif (shader.texture != null) {\r\n\r\n\t\t\tshader.texture._iInitRegisters(shader, regCache);\r\n\r\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, targetReg, regCache, sharedReg.uvVarying);\r\n\r\n\t\t\tif (shader.alphaThreshold > 0) {\r\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\r\n\r\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\r\n\t\t\t}\r\n\t\t} else if (shader.colorBufferIndex != -1) {\r\n\r\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\r\n\t\t} else {\r\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\r\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\r\n\r\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\r\n\t\t}\r\n\r\n        if (this.preserveAlpha) {\r\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\r\n            regCache.removeFragmentTempUsage(alphaReg);\r\n        }\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tif (this._shader.texture != null) {\r\n\t\t\tthis._shader.texture.activate(this._shader);\r\n\r\n\t\t\tif (this._shader.alphaThreshold > 0)\r\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\r\n\t\t} else if (this._shader.colorBufferIndex == -1) {\r\n\t\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\t\tvar data:Array<number> = this._shader.fragmentConstantData;\r\n\t\t\tdata[index] = this._diffuseR;\r\n\t\t\tdata[index + 1] = this._diffuseG;\r\n\t\t\tdata[index + 2] = this._diffuseB;\r\n\t\t\tdata[index + 3] = this._diffuseA;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\n\r\n/**\r\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\r\n * a render call per required renderable.\r\n */\r\nclass PassBase extends EventDispatcher implements IPass\r\n{\r\n\tprivate _render:RenderBase;\r\n\tpublic _renderOwner:IRenderOwner;\r\n\tpublic _renderableClass:IRenderableClass;\r\n\tpublic _stage:Stage;\r\n\t\r\n\tpublic _shader:ShaderBase;\r\n\r\n\tprivate _preserveAlpha:boolean = true;\r\n\tprivate _forceSeparateMVP:boolean = false;\r\n\r\n\tpublic get shader():ShaderBase\r\n\t{\r\n\t\treturn this._shader;\r\n\t}\r\n\r\n\tpublic get animationSet():AnimationSetBase\r\n\t{\r\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\r\n\t */\r\n\tpublic get preserveAlpha():boolean\r\n\t{\r\n\t\treturn this._preserveAlpha;\r\n\t}\r\n\r\n\tpublic set preserveAlpha(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAlpha = value;\r\n\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\r\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\r\n\t * projection code.\r\n\t */\r\n\tpublic get forceSeparateMVP():boolean\r\n\t{\r\n\t\treturn this._forceSeparateMVP;\r\n\t}\r\n\r\n\tpublic set forceSeparateMVP(value:boolean)\r\n\t{\r\n\t\tif (this._forceSeparateMVP == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._forceSeparateMVP = value;\r\n\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PassBase object.\r\n\t */\r\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._render = render;\r\n\t\tthis._renderOwner = renderOwner;\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up any resources used by the current object.\r\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._shader.dispose();\r\n\r\n\t\tthis._shader = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\r\n\t * @param pass The pass used to render the renderable.\r\n\t * @param renderable The IRenderable object to draw.\r\n\t * @param stage The Stage object used for rendering.\r\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\r\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\r\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\r\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\r\n\t * @param stage The Stage object which is currently used for rendering.\r\n\t * @param camera The camera from which the scene is viewed.\r\n\t * @private\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tthis._shader._iActivate(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\r\n\t * @param stage The Stage used for rendering\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iDeactivate()\r\n\t{\r\n\t\tthis._shader._iDeactivate();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\r\n\t *\r\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\r\n\t */\r\n\tpublic invalidatePass()\r\n\t{\r\n\t\tthis._shader.invalidateShader();\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tthis._render._iIncludeDependencies(shader);\r\n\t\t\r\n\t\tif (this._forceSeparateMVP)\r\n\t\t\tshader.globalPosDependencies++;\r\n\t}\r\n\r\n\r\n\tpublic _iInitConstantData(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n\r\nexport = PassBase;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass BillboardRenderable extends RenderableBase\r\n{\r\n\tpublic static assetClass:IAssetClass = Billboard;\r\n\r\n\tprivate static _materialGeometry:Object = new Object();\r\n\r\n\tpublic static vertexAttributesOffset:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _billboard:Billboard;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param billboard\r\n\t */\r\n\tconstructor(pool:RenderablePool, billboard:Billboard, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, billboard, billboard, billboard.material, stage);\r\n\r\n\t\tthis._billboard = billboard;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {away.base.TriangleSubGeometry}\r\n\t */\r\n\tpublic _pGetSubGeometry():SubGeometryBase\r\n\t{\r\n\t\tvar material:MaterialBase = this._billboard.material;\r\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\r\n\r\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\r\n\r\n\t\tif (!geometry) {\r\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\r\n\t\t\tgeometry.autoDeriveNormals = false;\r\n\t\t\tgeometry.autoDeriveTangents = false;\r\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\r\n\t\t\tgeometry.updatePositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\r\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\r\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\r\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\r\n\t\t} else {\r\n\t\t\tgeometry.updatePositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\r\n\t\t}\r\n\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\r\n\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t//get the projection coordinates\r\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\r\n\r\n\t\t//reserving vertex constants for projection matrix\r\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\r\n\r\n\t\tif (shader.projectionDependencies > 0) {\r\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\r\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\r\n\t\t\t\"mov op, \" + temp + \"\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iActivate(pass:PassBase, camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(pass, camera);\r\n\r\n\t\t//buffer the same for all materials, so can set here\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar shader:ShaderBase = pass.shader;\r\n\r\n\t\tif (shader.sceneMatrixIndex >= 0) {\r\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\r\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t} else {\r\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix3D.append(viewProjection);\r\n\r\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t}\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\r\n\r\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n}\r\n\r\nexport = BillboardRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport CurveSubMesh\t\t\t\t    = require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport CurveSubGeometry\t\t    \t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\")\r\n\r\n/**\r\n * @class away.pool.TriangleSubMeshRenderable\r\n */\r\nclass CurveSubMeshRenderable extends RenderableBase\r\n{\r\n\tpublic static assetClass:IAssetClass = CurveSubMesh;\r\n\r\n\tpublic static vertexAttributesOffset:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic subMesh:CurveSubMesh;\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t */\r\n\tconstructor(pool:RenderablePool, subMesh:CurveSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\r\n\r\n\t\tthis.subMesh = subMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {SubGeometryBase}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():CurveSubGeometry\r\n\t{\r\n\t\tvar subGeometry:CurveSubGeometry;\r\n\r\n\t\tif (this.subMesh.animator)\r\n\t\t\tsubGeometry = <CurveSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\r\n\t\telse\r\n\t\t\tsubGeometry = this.subMesh.subGeometry;\r\n\r\n\t\tthis._pVertexDataDirty[CurveSubGeometry.POSITION_DATA] = true;\r\n\r\n\t\tif (subGeometry.curves)\r\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.CURVE_DATA] = true;\r\n\r\n\t\tif (subGeometry.uvs)\r\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.UV_DATA] = true;\r\n\r\n\t\treturn subGeometry;\r\n\t}\r\n\r\n\r\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n        shader.usesLocalPosFragment = true;\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t//get the projection coordinates\r\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\r\n\r\n\t\t//reserving vertex constants for projection matrix\r\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\r\n\r\n\r\n\t\tif (shader.projectionDependencies > 0) {\r\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \".xyw, \" + viewMatrixReg + \"\\n\" +\r\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\r\n\t\t\t\"mov v2 va1 \\n\" +\r\n\t\t\t\"mov op, \" + temp + \"\\n\";\r\n\r\n\t\t} else {\r\n\t\t\tcode += \"mov v2 va1 \\n\";\r\n\t\t\tcode += \"m44 op, \" + position + \".xyw, \" + viewMatrixReg + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar sd:boolean = (<ContextWebGL>shader._stage.context).standardDerivatives;\r\n\t\tvar pos:ShaderRegisterElement = sharedRegisters.localPositionVarying;\r\n\t\tvar out:ShaderRegisterElement = sharedRegisters.shadedTarget;\r\n\r\n\t\tvar curve:string = \"v2\";\r\n\t\tvar curvex:string = \"v2.x\";\r\n\t\tvar curvey:string = \"v2.y\";\r\n\t\tvar curvez:string = pos + \".z\";\r\n\r\n\r\n\t\t//get some free registers\r\n\t\tvar free:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(free, 1);\r\n\t\tvar free1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(free1, 1);\r\n\t\tvar free2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(free2, 1);\r\n\r\n\t\t//distance from curve\r\n\t\tvar d:string = free + \".x\";\r\n\t\tvar dx:string = free + \".y\";\r\n\t\tvar dy:string = free + \".z\";\r\n\t\tvar t:string = free + \".w\";\r\n\t\tvar d2:string = free1 + \".x\";\r\n\t\tvar fixa:string = free1 + \".y\";\r\n\t\tvar fixb:string = free1 + \".z\";\r\n\r\n\t\tvar _aa:string = \"fc7.z\";\r\n\t\tvar _0:string = \"fc7.x\";\r\n\t\tvar _1:string = \"fc7.y\";\r\n\r\n\t\tvar nl:string = \"\\n\";\r\n\r\n\t\tvar code:Array<string> =  new Array<string>();\r\n\r\n\t\t//distance from curve\r\n\t\tcode.push(\"mul\",d, curvex, curvex, nl);\r\n\t\tcode.push(\"sub\",d, d, curvey, nl);\r\n\t\tcode.push(\"mul\",d, d, curvez, nl);\t//flipper\r\n\r\n\t\t//code.push(\"kil\" ,d, nl);\r\n\r\n\t\tif(sd)\r\n\t\t{\r\n\r\n\t\t\t//derivatives\r\n\t\t\tcode.push(\"ddx\", dx, d, nl);\r\n\t\t\tcode.push(\"ddy\", dy, d, nl);\r\n\r\n\t\t\t//AA\r\n\t\t\tcode.push(\"mul\",dx, dx, dx, nl);\r\n\t\t\tcode.push(\"mul\",dy, dy, dy, nl);\r\n\t\t\tcode.push(\"add\",t, dx, dy, nl);\r\n\t\t\tcode.push(\"sqt\",t, t, nl);\r\n\r\n\t\t\tcode.push(\"mul\",t, t, _aa, nl);\r\n\t\t\tcode.push(\"div\",d, d, t, nl);\r\n\r\n/*\r\n\t\t\t//code.push(\"sge\", fixa, curvex, _1, nl);\r\n\t\t\tcode.push(\"slt\", fixb, curvex, _1, nl);\r\n\t\t\tcode.push(\"sub\", fixa, _1, fixb, nl);\r\n\t\t\t//code.push(\"sub\", fixb, _1, fixa, nl);\r\n\r\n\t\t\tcode.push(\"mul\", d, d, fixb, nl);\r\n\r\n*/\r\n//\t\t\tcode.push(\"abs\", d, d, nl);\r\n\t\t\tcode.push(\"max\", d, d, _0, nl);\r\n\t\t\tcode.push(\"min\", d, d, _1, nl);\r\n\r\n\t\t\tcode.push(\"mov\", out+\".w\", d, nl);\r\n\t\t}\r\n\t\treturn code.join(\" \");\r\n\t}\r\n    private _constants:Array<number> = new Array<number>(0, 1, 1, 0.5);\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public _iActivate(pass:PassBase, camera:Camera)\r\n    {\r\n        super._iActivate(pass, camera);\r\n\r\n        var context:IContextGL = this._stage.context;\r\n\r\n        context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 7, this._constants, 1);\r\n\r\n    }\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar shader:ShaderBase = pass.shader;\r\n\r\n\t\tif (shader.sceneMatrixIndex >= 0) {\r\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\r\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t} else {\r\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix3D.append(viewProjection);\r\n\r\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t}\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(CurveSubGeometry.POSITION_DATA), this.getVertexOffset(CurveSubGeometry.POSITION_DATA), CurveSubGeometry.POSITION_FORMAT);\r\n        this._stage.activateBuffer(1, this.getVertexData(CurveSubGeometry.CURVE_DATA), this.getVertexOffset(CurveSubGeometry.CURVE_DATA), CurveSubGeometry.CURVE_FORMAT);\r\n\r\n        this._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.TriangleSubMeshRenderable}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new CurveSubMeshRenderable(this._pool, <CurveSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = CurveSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\n\r\n/**\r\n * @class away.pool.LineSubMeshRenderable\r\n */\r\nclass LineSegmentRenderable extends RenderableBase\r\n{\r\n\tpublic static assetClass:IAssetClass = LineSegment;\r\n\r\n\tprivate static _lineGeometry:Object = new Object();\r\n\r\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\r\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\r\n\r\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\r\n\tprivate _calcMatrix:Matrix3D;\r\n\tprivate _thickness:number = 1.25;\r\n\r\n\r\n\tpublic static vertexAttributesOffset:number = 3;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _lineSegment:LineSegment;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param dataOffset\r\n\t */\r\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, lineSegment, lineSegment, lineSegment.material, stage, level, indexOffset);\r\n\r\n\t\tthis._lineSegment = lineSegment;\r\n\r\n\t\tthis._calcMatrix = new Matrix3D();\r\n\r\n\t\tthis._constants[1] = 1/255;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {base.LineSubGeometry}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():LineSubGeometry\r\n\t{\r\n\t\tvar geometry:LineSubGeometry = LineSegmentRenderable._lineGeometry[this._lineSegment.id] || (LineSegmentRenderable._lineGeometry[this._lineSegment.id] = new LineSubGeometry());\r\n\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\r\n\r\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\r\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\r\n\r\n\t\tvar startPositions:Array<number>;\r\n\t\tvar endPositions:Array<number>;\r\n\t\tvar thickness:Array<number>;\r\n\r\n\t\tif (geometry.indices != null) {\r\n\t\t\tstartPositions = geometry.startPositions;\r\n\t\t\tendPositions = geometry.endPositions;\r\n\t\t\tthickness = geometry.thickness;\r\n\t\t} else {\r\n\t\t\tstartPositions = new Array<number>(3);\r\n\t\t\tendPositions = new Array<number>(3);\r\n\t\t\tthickness = new Array<number>(1);\r\n\t\t}\r\n\r\n\t\tstartPositions[0] = start.x;\r\n\t\tstartPositions[1] = start.y;\r\n\t\tstartPositions[2] = start.z;\r\n\t\tendPositions[0] = end.x;\r\n\t\tendPositions[1] = end.y;\r\n\t\tendPositions[2] = end.z;\r\n\t\tthickness[0] = this._lineSegment.thickness;\r\n\r\n\t\tgeometry.updatePositions(startPositions, endPositions);\r\n\t\tgeometry.updateThickness(thickness);\r\n\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tshader.colorDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\r\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\r\n\t\t\t\t// test if behind camera near plane\r\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\r\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\r\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\r\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\r\n\r\n\t\t\t\t// p = point on the plane (0,0,-near)\r\n\t\t\t\t// n = plane normal (0,0,-1)\r\n\t\t\t\t// D = Q1 - Q0\r\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\r\n\r\n\t\t\t\t// solve for t where line crosses Camera.near\r\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\r\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\r\n\r\n\t\t\t\t// fix divide by zero for horizontal lines\r\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\r\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\r\n\r\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\r\n\r\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\r\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\r\n\r\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\r\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\r\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\r\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\r\n\r\n\t\t\t\t// calculate side vector for line\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\r\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\r\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\r\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\r\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\r\n\r\n\t\t\t\t// face the side vector properly for the given point\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\r\n\r\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\r\n\t\t\t\t// scale the side vector by that amount\r\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\r\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\r\n\r\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\r\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\r\n\r\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\r\n\t}\r\n\r\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(pass:PassBase, camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(pass, camera);\r\n\r\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\r\n\r\n\t\t// value to convert distance from camera to model length per pixel width\r\n\t\tthis._constants[2] = camera.projection.near;\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSegmentRenderable.pONE_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSegmentRenderable.pFRONT_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\r\n\r\n\t\t// projection matrix\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\r\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\r\n\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\r\n\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.LineSubMeshRenderable}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new LineSegmentRenderable(this._pool, <LineSegment> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = LineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\n\r\n/**\r\n * @class away.pool.LineSubMeshRenderable\r\n */\r\nclass LineSubMeshRenderable extends RenderableBase\r\n{\r\n\tpublic static assetClass:IAssetClass = LineSubMesh;\r\n\r\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\r\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\r\n\r\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\r\n\tprivate _calcMatrix:Matrix3D;\r\n\tprivate _thickness:number = 1.25;\r\n\r\n\r\n\tpublic static vertexAttributesOffset:number = 3;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic subMesh:LineSubMesh;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param dataOffset\r\n\t */\r\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\r\n\r\n\t\tthis.subMesh = subMesh;\r\n\r\n\t\tthis._calcMatrix = new Matrix3D();\r\n\r\n\t\tthis._constants[1] = 1/255;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {base.LineSubGeometry}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():LineSubGeometry\r\n\t{\r\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\r\n\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\r\n\r\n\t\tif (subGeometry.thickness)\r\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\r\n\r\n\t\tif (subGeometry.startColors)\r\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\r\n\r\n\t\treturn subGeometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\t\tshader.colorDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\r\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\r\n\t\t\t\t// test if behind camera near plane\r\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\r\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\r\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\r\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\r\n\r\n\t\t\t\t// p = point on the plane (0,0,-near)\r\n\t\t\t\t// n = plane normal (0,0,-1)\r\n\t\t\t\t// D = Q1 - Q0\r\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\r\n\r\n\t\t\t\t// solve for t where line crosses Camera.near\r\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\r\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\r\n\r\n\t\t\t\t// fix divide by zero for horizontal lines\r\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\r\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\r\n\r\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\r\n\r\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\r\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\r\n\r\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\r\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\r\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\r\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\r\n\r\n\t\t\t\t// calculate side vector for line\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\r\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\r\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\r\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\r\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\r\n\r\n\t\t\t\t// face the side vector properly for the given point\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\r\n\r\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\r\n\t\t\t\t// scale the side vector by that amount\r\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\r\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\r\n\r\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\r\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\r\n\r\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\r\n\t}\r\n\r\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(pass:PassBase, camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(pass, camera);\r\n\r\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\r\n\r\n\t\t// value to convert distance from camera to model length per pixel width\r\n\t\tthis._constants[2] = camera.projection.near;\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSubMeshRenderable.pONE_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSubMeshRenderable.pFRONT_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\r\n\r\n\t\t// projection matrix\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\r\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\r\n\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\r\n\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.LineSubMeshRenderable}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new LineSubMeshRenderable(this._pool, <LineSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = LineSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\r\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\r\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\r\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\n\r\n/**\r\n * @class RenderableListItem\r\n */\r\nclass RenderableBase implements IRenderable\r\n{\r\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\r\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\r\n\tprivate _onRenderOwnerUpdatedDelegate:(event:RenderableOwnerEvent) => void;\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryDirty:boolean = true;\r\n\tprivate _indexData:IndexData;\r\n\tprivate _indexDataDirty:boolean = true;\r\n\tprivate _vertexData:Object = new Object();\r\n\tpublic _pVertexDataDirty:Object = new Object();\r\n\tprivate _vertexOffset:Object = new Object();\r\n\r\n\tpublic _level:number;\r\n\tprivate _indexOffset:number;\r\n\tprivate _overflow:RenderableBase;\r\n\tprivate _numTriangles:number;\r\n\tprivate _concatenateArrays:boolean;\r\n\r\n\tpublic JOINT_INDEX_FORMAT:string;\r\n\tpublic JOINT_WEIGHT_FORMAT:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _pool:RenderablePool;\r\n\r\n\tpublic _stage:Stage;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get overflow():RenderableBase\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\treturn this._overflow;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:RenderableBase;\r\n\r\n\tpublic id:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOrderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic cascaded:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderSceneTransform:Matrix3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic sourceEntity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic render:RenderBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getIndexData():IndexData\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\treturn this._indexData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getVertexData(dataType:string):VertexData\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\tif (this._pVertexDataDirty[dataType])\r\n\t\t\tthis._updateVertexData(dataType);\r\n\r\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getVertexOffset(dataType:string):number\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\tif (this._pVertexDataDirty[dataType])\r\n\t\t\tthis._updateVertexData(dataType);\r\n\r\n\t\treturn this._vertexOffset[dataType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param sourceEntity\r\n\t * @param renderableOwner\r\n\t * @param subGeometry\r\n\t * @param animationSubGeometry\r\n\t */\r\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner, renderOwner:IRenderOwner, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\r\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\r\n\t\tthis._onRenderOwnerUpdatedDelegate = (event:RenderableOwnerEvent) => this._onRenderOwnerUpdated(event);\r\n\r\n\t\t//store a reference to the pool for later disposal\r\n\t\tthis._pool = pool;\r\n\t\tthis._stage = stage;\r\n\r\n\t\t//reference to level of overflow\r\n\t\tthis._level = level;\r\n\r\n\t\t//reference to the offset on indices (if this is an overflow renderable)\r\n\t\tthis._indexOffset = indexOffset;\r\n\r\n\t\tthis.sourceEntity = sourceEntity;\r\n\r\n\t\tthis.renderableOwner = renderableOwner;\r\n\r\n\t\tthis.renderableOwner.addEventListener(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this._onRenderOwnerUpdatedDelegate)\r\n\r\n\t\tthis.renderOwner = renderOwner;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this.renderableOwner);\r\n\r\n\t\tthis._indexData.dispose();\r\n\t\tthis._indexData = null;\r\n\r\n\t\tfor (var dataType in this._vertexData) {\r\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\r\n\t\t\tthis._vertexData[dataType] = null;\r\n\t\t}\r\n\r\n\t\tif (this._overflow) {\r\n\t\t\tthis._overflow.dispose();\r\n\t\t\tthis._overflow = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic invalidateGeometry()\r\n\t{\r\n\t\tthis._geometryDirty = true;\r\n\r\n\t\t//invalidate indices\r\n\t\tif (this._level == 0)\r\n\t\t\tthis._indexDataDirty = true;\r\n\r\n\t\tif (this._overflow)\r\n\t\t\tthis._overflow.invalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateIndexData()\r\n\t{\r\n\t\tthis._indexDataDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param dataType\r\n\t */\r\n\tpublic invalidateVertexData(dataType:string)\r\n\t{\r\n\t\tthis._pVertexDataDirty[dataType] = true;\r\n\t}\r\n\r\n\tpublic _pGetSubGeometry():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @param offset\r\n\t * @internal\r\n\t */\r\n\tpublic _iFillIndexData(indexOffset:number)\r\n\t{\r\n\t\tif (this._geometryDirty)\r\n\t\t\tthis._updateGeometry();\r\n\r\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\r\n\r\n\t\tthis._numTriangles = this._indexData.data.length/3;\r\n\r\n\t\tindexOffset = this._indexData.offset;\r\n\r\n\t\t//check if there is more to split\r\n\t\tif (indexOffset < this._subGeometry.indices.length) {\r\n\t\t\tif (!this._overflow)\r\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(indexOffset);\r\n\r\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\r\n\t\t} else if (this._overflow) {\r\n\t\t\tthis._overflow.dispose();\r\n\t\t\tthis._overflow = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\r\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\r\n\t * @param stage The Stage object which is currently used for rendering.\r\n\t * @param camera The camera from which the scene is viewed.\r\n\t * @private\r\n\t */\r\n\tpublic _iActivate(pass:IPass, camera:Camera)\r\n\t{\r\n\t\tpass._iActivate(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders an object to the current render target.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tpass._iRender(this, camera, viewProjection);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\r\n\t * @param stage The Stage used for rendering\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iDeactivate(pass:IPass)\r\n\t{\r\n\t\tpass._iDeactivate();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _updateGeometry()\r\n\t{\r\n\t\tif (this._subGeometry) {\r\n\t\t\tif (this._level == 0)\r\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\r\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._subGeometry = this._pGetSubGeometry();\r\n\r\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\r\n\r\n\t\tif (this._subGeometry) {\r\n\t\t\tif (this._level == 0)\r\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\r\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\t//dispose\r\n//\t\t\tif (this._indexData) {\r\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\r\n//\t\t\t\tthis._indexData = null;\r\n//\t\t\t}\r\n\r\n//\t\t\tfor (var dataType in this._vertexData) {\r\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\r\n//\t\t\t\tthis._vertexData[dataType] = null;\r\n//\t\t\t}\r\n\r\n\t\tthis._geometryDirty = false;\r\n\r\n\t\t//specific vertex data types have to be invalidated in the specific renderable\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _updateIndexData()\r\n\t{\r\n\t\tthis._iFillIndexData(this._indexOffset);\r\n\r\n\t\tthis._indexDataDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param dataType\r\n\t * @private\r\n\t */\r\n\tprivate _updateVertexData(dataType:string)\r\n\t{\r\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\r\n\r\n\t\tif (this._subGeometry.concatenateArrays)\r\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\r\n\r\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\r\n\r\n\t\tthis._pVertexDataDirty[dataType] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\r\n\t{\r\n\t\tthis.invalidateIndexData();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\r\n\t{\r\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\r\n\r\n\t\tthis.invalidateVertexData(event.dataType);\r\n\t}\r\n\r\n\tprivate _onRenderOwnerUpdated(event:RenderableOwnerEvent)\r\n\t{\r\n\t\t//TODO flag unused renders for deletion\r\n\t\tthis.renderOwner = event.renderOwner;\r\n\t}\r\n}\r\n\r\nexport = RenderableBase;",
    "import IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\r\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\r\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\r\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/BillboardRenderable\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSegmentRenderable\");\r\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSubMeshRenderable\");\r\nimport CurveSubMeshRenderable\t    = require(\"awayjs-renderergl/lib/renderables/CurveSubMeshRenderable\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport SkyboxRenderable\t\t\t    = require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\r\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\r\n\r\n/**\r\n * RenderablePool forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RenderablePool\r\n */\r\nclass RenderablePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _stage:Stage;\r\n\tprivate _pool:Object = new Object();\r\n\r\n\tprivate _objectPools:Object = new Object();\r\n\t\r\n\t/**\r\n\t * Creates a new RenderablePool object.\r\n\t *\r\n\t * @param stage\r\n\t * @param renderClass\r\n\t */\r\n\tconstructor(stage:Stage, renderClass:IRenderClass = null)\r\n\t{\r\n\t\tthis._stage = stage;\r\n\r\n\t\tfor (var i in RenderablePool._classPool)\r\n\t\t\tthis._objectPools[i] = new RenderPool(RenderablePool._classPool[i], this._stage, renderClass);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t * @returns IRenderable\r\n\t */\r\n\tpublic getItem(renderableOwner:IRenderableOwner):RenderableBase\r\n\t{\r\n\t\treturn this._pool[renderableOwner.id] || (this._pool[renderableOwner.id] = renderableOwner._iAddRenderable(new (RenderablePool.getClass(renderableOwner))(this, renderableOwner, this._stage)));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param image\r\n\t */\r\n\tpublic disposeItem(renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\trenderableOwner._iRemoveRenderable(this._pool[renderableOwner.id]);\r\n\r\n\t\tthis._pool[renderableOwner.id] = null;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t * @returns RenderPool\r\n\t */\r\n\tpublic getRenderPool(renderableOwner:IRenderableOwner):RenderPool\r\n\t{\r\n\t\treturn this._objectPools[renderableOwner.assetType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(renderableClass:IRenderableClass)\r\n\t{\r\n\t\tRenderablePool._classPool[renderableClass.assetClass.assetType] = renderableClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(renderableOwner:IRenderableOwner):IRenderableClass\r\n\t{\r\n\t\treturn RenderablePool._classPool[renderableOwner.assetType];\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RenderablePool.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var id in this._pool)\r\n\t\t\tthis._pool[id].dispose();\r\n\r\n\t\tthis._pool = null;\r\n\t}\r\n\r\n\r\n\tprivate static main = RenderablePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tRenderablePool.registerClass(BillboardRenderable);\r\n\t\tRenderablePool.registerClass(LineSegmentRenderable);\r\n\t\tRenderablePool.registerClass(LineSubMeshRenderable);\r\n\t\tRenderablePool.registerClass(TriangleSubMeshRenderable);\r\n\t\tRenderablePool.registerClass(CurveSubMeshRenderable);\r\n\t\tRenderablePool.registerClass(SkyboxRenderable);\r\n\t}\r\n}\r\n\r\nexport = RenderablePool;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\n\r\n/**\r\n * @class away.pool.SkyboxRenderable\r\n */\r\nclass SkyboxRenderable extends RenderableBase\r\n{\r\n\tpublic static assetClass:IAssetClass = Skybox;\r\n\r\n\tpublic static vertexAttributesOffset:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate static _geometry:TriangleSubGeometry;\r\n\r\n\tprivate _vertexArray:Array<number>;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param skybox\r\n\t */\r\n\tconstructor(pool:RenderablePool, skybox:Skybox, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, skybox, skybox, skybox, stage);\r\n\r\n\t\tthis._vertexArray = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {away.base.TriangleSubGeometry}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetSubGeometry():TriangleSubGeometry\r\n\t{\r\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\r\n\r\n\t\tif (!geometry) {\r\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\r\n\t\t\tgeometry.autoDeriveNormals = false;\r\n\t\t\tgeometry.autoDeriveTangents = false;\r\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\r\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\r\n\t\t}\r\n\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\r\n\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"mul vt0, va0, vc5\\n\" +\r\n\t\t\t\"add vt0, vt0, vc4\\n\" +\r\n\t\t\t\"m44 op, vt0, vc0\\n\";\r\n\t}\r\n\r\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tvar pos:Vector3D = camera.scenePosition;\r\n\t\tthis._vertexArray[0] = pos.x;\r\n\t\tthis._vertexArray[1] = pos.y;\r\n\t\tthis._vertexArray[2] = pos.z;\r\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n}\r\n\r\nexport = SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\r\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\r\n\r\n/**\r\n * @class away.pool.TriangleSubMeshRenderable\r\n */\r\nclass TriangleSubMeshRenderable extends RenderableBase\r\n{\r\n\tpublic static assetClass:IAssetClass = TriangleSubMesh;\r\n\r\n\tpublic static vertexAttributesOffset:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic subMesh:TriangleSubMesh;\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t */\r\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\r\n\r\n\t\tthis.subMesh = subMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {SubGeometryBase}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():TriangleSubGeometry\r\n\t{\r\n\t\tvar subGeometry:TriangleSubGeometry;\r\n\r\n\t\tif (this.subMesh.animator)\r\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\r\n\t\telse\r\n\t\t\tsubGeometry = this.subMesh.subGeometry;\r\n\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\r\n\r\n\t\tif (subGeometry.vertexNormals)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\r\n\r\n\t\tif (subGeometry.vertexTangents)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\r\n\r\n\t\tif (subGeometry.uvs)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\r\n\r\n\t\tif (subGeometry.secondaryUVs)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\r\n\r\n\t\tif (subGeometry.jointIndices)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\r\n\r\n\t\tif (subGeometry.jointWeights)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\r\n\r\n\t\tswitch(subGeometry.jointsPerVertex) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\treturn subGeometry;\r\n\t}\r\n\r\n\r\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t//get the projection coordinates\r\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\r\n\r\n\t\t//reserving vertex constants for projection matrix\r\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\r\n\r\n\t\tif (shader.projectionDependencies > 0) {\r\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\r\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\r\n\t\t\t\"mov op, \" + temp + \"\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar shader:ShaderBase = pass.shader;\r\n\r\n\t\tif (shader.sceneMatrixIndex >= 0) {\r\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\r\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t} else {\r\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix3D.append(viewProjection);\r\n\r\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t}\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.TriangleSubMeshRenderable}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new TriangleSubMeshRenderable(this._pool, <TriangleSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\r\n\r\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\n\r\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\r\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\n\r\n/**\r\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\r\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\r\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\r\n * each time a method has been compiled into the shader.\r\n *\r\n * @see RegisterPool.addUsage\r\n */\r\nclass LightingShader extends ShaderBase\r\n{\r\n\tpublic _lightingPass:ILightingPass;\r\n\r\n\tprivate _includeCasters:boolean = true;\r\n\r\n\t/**\r\n\t * The first index for the fragment constants containing the light data.\r\n\t */\r\n\tpublic lightFragmentConstantIndex:number;\r\n\r\n\t/**\r\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\r\n\t */\r\n\tpublic lightVertexConstantIndex:number;\r\n\r\n\t/**\r\n\t * Indices for the light probe diffuse textures.\r\n\t */\r\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\r\n\r\n\t/**\r\n\t * Indices for the light probe specular textures.\r\n\t */\r\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\r\n\r\n\t/**\r\n\t * The index of the fragment constant containing the weights for the light probes.\r\n\t */\r\n\tpublic probeWeightsIndex:number;\r\n\r\n\tpublic numLights:number;\r\n\tpublic numDirectionalLights:number;\r\n\tpublic numPointLights:number;\r\n\tpublic numLightProbes:number;\r\n\r\n\tpublic usesLightFallOff:boolean;\r\n\r\n\tpublic usesShadows:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the shader uses any lights.\r\n\t */\r\n\tpublic usesLights:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the shader uses any light probes.\r\n\t */\r\n\tpublic usesProbes:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the lights uses any specular components.\r\n\t */\r\n\tpublic usesLightsForSpecular:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the probes uses any specular components.\r\n\t */\r\n\tpublic usesProbesForSpecular:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the lights uses any diffuse components.\r\n\t */\r\n\tpublic usesLightsForDiffuse:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the probes uses any diffuse components.\r\n\t */\r\n\tpublic usesProbesForDiffuse:boolean;\r\n\r\n\t/**\r\n\t * Creates a new MethodCompilerVO object.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderableClass, lightingPass, stage);\r\n\r\n\t\tthis._lightingPass = lightingPass;\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies()\r\n\t{\r\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\r\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\r\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\r\n\r\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\r\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\r\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\r\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\r\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\r\n\r\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\r\n\t\tthis.numLights = numAllLights + numLightProbes;\r\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\r\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\r\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\r\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\r\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\r\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\r\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\r\n\r\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\r\n\t\tsuper._iIncludeDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method to create a concrete compiler object for this object\r\n\t *\r\n\t * @param materialPassVO\r\n\t * @returns {away.materials.LightingCompiler}\r\n\t */\r\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:ILightingPass):CompilerBase\r\n\t{\r\n\t\treturn new LightingCompiler(renderableClass, pass, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tsuper.reset();\r\n\r\n\t\tthis.numLights = 0;\r\n\t\tthis.usesLightFallOff = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param renderable\r\n\t * @param stage\r\n\t * @param camera\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(renderable, camera, viewProjection);\r\n\r\n\t\tif (this._lightingPass.lightPicker)\r\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable);\r\n\r\n\t\tif (this.usesLights)\r\n\t\t\tthis.updateLights();\r\n\r\n\t\tif (this.usesProbes)\r\n\t\t\tthis.updateProbes();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\r\n\t */\r\n\tprivate updateLights()\r\n\t{\r\n\t\tvar dirLight:DirectionalLight;\r\n\t\tvar pointLight:PointLight;\r\n\t\tvar i:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar len:number;\r\n\t\tvar dirPos:Vector3D;\r\n\t\tvar total:number = 0;\r\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\r\n\t\tvar l:number;\r\n\t\tvar offset:number;\r\n\r\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\r\n\r\n\t\tl = this.lightVertexConstantIndex;\r\n\t\tk = this.lightFragmentConstantIndex;\r\n\r\n\t\tvar cast:number = 0;\r\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\r\n\t\toffset = this._lightingPass.directionalLightsOffset;\r\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\r\n\r\n\t\tif (offset > len) {\r\n\t\t\tcast = 1;\r\n\t\t\toffset -= len;\r\n\t\t}\r\n\r\n\t\tfor (; cast < numLightTypes; ++cast) {\r\n\t\t\tif (cast)\r\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\r\n\r\n\t\t\tlen = dirLights.length;\r\n\r\n\t\t\tif (len > this.numDirectionalLights)\r\n\t\t\t\tlen = this.numDirectionalLights;\r\n\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tdirLight = dirLights[offset + i];\r\n\t\t\t\tdirPos = dirLight.sceneDirection;\r\n\r\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\r\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\r\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\r\n\r\n\t\t\t\tif (this.usesTangentSpace) {\r\n\t\t\t\t\tvar x:number = -dirPos.x;\r\n\t\t\t\t\tvar y:number = -dirPos.y;\r\n\t\t\t\t\tvar z:number = -dirPos.z;\r\n\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\r\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\r\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\r\n\t\t\t\tif (++total == this.numDirectionalLights) {\r\n\t\t\t\t\t// break loop\r\n\t\t\t\t\ti = len;\r\n\t\t\t\t\tcast = numLightTypes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// more directional supported than currently picked, need to clamp all to 0\r\n\t\tif (this.numDirectionalLights > total) {\r\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\r\n\r\n\t\t\twhile (k < i)\r\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\r\n\t\t}\r\n\r\n\t\ttotal = 0;\r\n\r\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\r\n\t\toffset = this._lightingPass.pointLightsOffset;\r\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\r\n\r\n\t\tif (offset > len) {\r\n\t\t\tcast = 1;\r\n\t\t\toffset -= len;\r\n\t\t} else {\r\n\t\t\tcast = 0;\r\n\t\t}\r\n\r\n\t\tfor (; cast < numLightTypes; ++cast) {\r\n\t\t\tif (cast)\r\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\r\n\r\n\t\t\tlen = pointLights.length;\r\n\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tpointLight = pointLights[offset + i];\r\n\t\t\t\tdirPos = pointLight.scenePosition;\r\n\r\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\r\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\r\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\r\n\r\n\t\t\t\tif (this.usesTangentSpace) {\r\n\t\t\t\t\tx = dirPos.x;\r\n\t\t\t\t\ty = dirPos.y;\r\n\t\t\t\t\tz = dirPos.z;\r\n\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\r\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\r\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\r\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\r\n\r\n\t\t\t\tvar radius:number = pointLight._pRadius;\r\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\r\n\r\n\t\t\t\tif (++total == this.numPointLights) {\r\n\t\t\t\t\t// break loop\r\n\t\t\t\t\ti = len;\r\n\t\t\t\t\tcast = numLightTypes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// more directional supported than currently picked, need to clamp all to 0\r\n\t\tif (this.numPointLights > total) {\r\n\t\t\ti = k + (total - this.numPointLights)*12;\r\n\r\n\t\t\tfor (; k < i; ++k)\r\n\t\t\t\tthis.fragmentConstantData[k] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\r\n\t */\r\n\tprivate updateProbes()\r\n\t{\r\n\t\tvar probe:LightProbe;\r\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\r\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\r\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\r\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\r\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\r\n\r\n\t\tif (!(addDiff || addSpec))\r\n\t\t\treturn;\r\n\r\n\t\tif (len > this.numLightProbes)\r\n\t\t\tlen = this.numLightProbes;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\r\n\r\n\t\t\tif (addDiff)\r\n\t\t\t\tthis._stage.getImageObject(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], false, this.useSmoothTextures, this.useMipmapping);\r\n\r\n\t\t\tif (addSpec)\r\n\t\t\t\tthis._stage.getImageObject(probe.specularMap).activate(this.lightProbeSpecularIndices[i], false, this.useSmoothTextures, this.useMipmapping);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\r\n\t}\r\n}\r\n\r\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n/**\r\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\r\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\r\n * or single components (x, y, z, w) of a single register.\r\n * It is used by ShaderRegisterCache to track usages of individual register types.\r\n *\r\n * @see away.materials.ShaderRegisterCache\r\n */\r\nclass RegisterPool\r\n{\r\n\tprivate static _regPool:Object = new Object();\r\n\tprivate static _regCompsPool:Object = new Object();\r\n\r\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\r\n\tprivate _registerComponents;\r\n\r\n\tprivate _regName:string;\r\n\tprivate _usedSingleCount:Array<Array<number>>;\r\n\tprivate _usedVectorCount:Array<number> /*uint*/;\r\n\tprivate _regCount:number;\r\n\r\n\tprivate _persistent:boolean;\r\n\r\n\t/**\r\n\t * Creates a new RegisterPool object.\r\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\r\n\t * @param regCount The amount of available registers of this type.\r\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\r\n\t */\r\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\r\n\t{\r\n\t\tthis._regName = regName;\r\n\t\tthis._regCount = regCount;\r\n\t\tthis._persistent = persistent;\r\n\t\tthis.initRegisters(regName, regCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an entire vector register that's still available.\r\n\t */\r\n\tpublic requestFreeVectorReg():ShaderRegisterElement\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\r\n\t\t\tif (!this.isRegisterUsed(i)) {\r\n\t\t\t\tif (this._persistent)\r\n\t\t\t\t\tthis._usedVectorCount[i]++;\r\n\r\n\t\t\t\treturn this._vectorRegisters[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Register overflow!\");\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a single vector component that's still available.\r\n\t */\r\n\tpublic requestFreeRegComponent():ShaderRegisterElement\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\r\n\t\t\tif (this._usedVectorCount[i] > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\r\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\r\n\t\t\t\t\tif (this._persistent)\r\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\r\n\r\n\t\t\t\t\treturn this._registerComponents[j][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Register overflow!\");\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\r\n\t * has been called usageCount times again.\r\n\t * @param register The register to mark as used.\r\n\t * @param usageCount The amount of usages to add.\r\n\t */\r\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\r\n\t{\r\n\t\tif (register._component > -1)\r\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\r\n\t\telse\r\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\r\n\t * @param register The register for which to remove a usage.\r\n\t */\r\n\tpublic removeUsage(register:ShaderRegisterElement)\r\n\t{\r\n\t\tif (register._component > -1) {\r\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\r\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\r\n\t\t} else {\r\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\r\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes any resources used by the current RegisterPool object.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._vectorRegisters = null;\r\n\t\tthis._registerComponents = null;\r\n\t\tthis._usedSingleCount = null;\r\n\t\tthis._usedVectorCount = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any registers are in use.\r\n\t */\r\n\tpublic hasRegisteredRegs():boolean\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\r\n\t\t\tif (this.isRegisterUsed(i))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes all registers.\r\n\t */\r\n\tprivate initRegisters(regName:string, regCount:number)\r\n\t{\r\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\r\n\r\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\r\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\r\n\r\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\r\n\r\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\r\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\r\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\r\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\r\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\r\n\t}\r\n\r\n\tprivate static _initPool(regName:string, regCount:number):string\r\n\t{\r\n\t\tvar hash:string = regName + regCount;\r\n\r\n\t\tif (RegisterPool._regPool[hash] != undefined)\r\n\t\t\treturn hash;\r\n\r\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\r\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\r\n\r\n\t\tvar registerComponents = [\r\n\t\t\t[],\r\n\t\t\t[],\r\n\t\t\t[],\r\n\t\t\t[]\r\n\t\t];\r\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\r\n\r\n\t\tfor (var i:number = 0; i < regCount; ++i) {\r\n\r\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\r\n\r\n\t\t\tfor (var j:number = 0; j < 4; ++j)\r\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\r\n\t\t}\r\n\r\n\t\treturn hash;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Check if the temp register is either used for single or vector use\r\n\t */\r\n\tprivate isRegisterUsed(index:number):boolean\r\n\t{\r\n\t\tif (this._usedVectorCount[index] > 0)\r\n\t\t\treturn true;\r\n\r\n\t\tfor (var i:number = 0; i < 4; ++i)\r\n\t\t\tif (this._usedSingleCount[i][index] > 0)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\r\n\t{\r\n\t\tvar l:number = a.length;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++)\r\n\t\t\ta[c] = val;\r\n\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\nexport = RegisterPool;\r\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\r\n\r\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\r\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\r\n\r\n/**\r\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\r\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\r\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\r\n * each time a method has been compiled into the shader.\r\n *\r\n * @see RegisterPool.addUsage\r\n */\r\nclass ShaderBase\r\n{\r\n\tprivate _textureVOPool:TextureVOPool;\r\n\tprivate _renderableClass:IRenderableClass;\r\n\tprivate _pass:IPass;\r\n\tpublic _stage:Stage;\r\n\tprivate _programData:ProgramData;\r\n\r\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\r\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\r\n\r\n\tprivate _invalidShader:boolean = true;\r\n\tprivate _invalidProgram:boolean = true;\r\n\tprivate _animationVertexCode:string = \"\";\r\n\tprivate _animationFragmentCode:string = \"\";\r\n\r\n\tpublic get programData():ProgramData\r\n\t{\r\n\t\tif (this._invalidProgram)\r\n\t\t\tthis._updateProgram();\r\n\r\n\t\treturn this._programData;\r\n\t}\r\n\r\n\tpublic usesBlending:boolean = false;\r\n\r\n\t/**\r\n\t * The depth compare mode used to render the renderables using this material.\r\n\t *\r\n\t * @see away.stagegl.ContextGLCompareMode\r\n\t */\r\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\r\n\r\n\r\n\t/**\r\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\r\n\t */\r\n\tpublic writeDepth:boolean = true;\r\n\r\n\tpublic profile:string;\r\n\r\n\tpublic usesAnimation:boolean;\r\n\r\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\r\n\r\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\r\n\r\n\tpublic animationRegisterCache:AnimationRegisterCache;\r\n\r\n\t/**\r\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\r\n\t */\r\n\tpublic numUsedVertexConstants:number;\r\n\r\n\t/**\r\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\r\n\t */\r\n\tpublic numUsedFragmentConstants:number;\r\n\r\n\t/**\r\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\r\n\t */\r\n\tpublic numUsedStreams:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic numUsedTextures:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic numUsedVaryings:number;\r\n\r\n\tpublic animatableAttributes:Array<string>;\r\n\tpublic animationTargetRegisters:Array<string>;\r\n\tpublic uvSource:string;\r\n\tpublic uvTarget:string;\r\n\r\n\tpublic useAlphaPremultiplied:boolean;\r\n\tpublic useBothSides:boolean;\r\n\tpublic useMipmapping:boolean;\r\n\tpublic useSmoothTextures:boolean;\r\n\tpublic repeatTextures:boolean;\r\n\tpublic usesUVTransform:boolean;\r\n\tpublic usesColorTransform:boolean;\r\n\tpublic alphaThreshold:number;\r\n\tpublic texture:TextureVOBase;\r\n\tpublic color:number;\r\n\r\n\r\n\t//set ambient values to default\r\n\tpublic ambientR:number = 0xFF;\r\n\tpublic ambientG:number = 0xFF;\r\n\tpublic ambientB:number = 0xFF;\r\n\r\n\t/**\r\n\t * Indicates whether the pass requires any fragment animation code.\r\n\t */\r\n\tpublic usesFragmentAnimation:boolean;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the projected position.\r\n\t */\r\n\tpublic projectionDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the normal vector.\r\n\t */\r\n\tpublic normalDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the vertex color.\r\n\t */\r\n\tpublic colorDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the view direction.\r\n\t */\r\n\tpublic viewDirDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the primary UV coordinates.\r\n\t */\r\n\tpublic uvDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the secondary UV coordinates.\r\n\t */\r\n\tpublic secondaryUVDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\r\n\t * the global position is used as a temporary value (fe to calculate the view direction)\r\n\t */\r\n\tpublic globalPosDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of tangent vector dependencies (fragment shader).\r\n\t */\r\n\tpublic tangentDependencies:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic outputsColors:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are output.\r\n\t */\r\n\tpublic outputsNormals:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether or not normal calculations are output in tangent space.\r\n\t */\r\n\tpublic outputsTangentNormals:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\r\n\t * dependencies exist and normals are being output.\r\n\t */\r\n\tpublic usesTangentSpace:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether there are any dependencies on the world-space position vector.\r\n\t */\r\n\tpublic usesGlobalPosFragment:boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether there are any dependencies on the local position vector.\r\n\t */\r\n\tpublic usesLocalPosFragment:boolean = false;\r\n\r\n\tpublic vertexConstantData:Array<number> = new Array<number>();\r\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\r\n\r\n\t/**\r\n\t * The index for the common data register.\r\n\t */\r\n\tpublic commonsDataIndex:number;\r\n\r\n\t/**\r\n\t * The index for the UV vertex attribute stream.\r\n\t */\r\n\tpublic uvBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the secondary UV vertex attribute stream.\r\n\t */\r\n\tpublic secondaryUVBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the vertex normal attribute stream.\r\n\t */\r\n\tpublic normalBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the color attribute stream.\r\n\t */\r\n\tpublic colorBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the vertex tangent attribute stream.\r\n\t */\r\n\tpublic tangentBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the view matrix.\r\n\t */\r\n\tpublic viewMatrixIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the scene matrix.\r\n\t */\r\n\tpublic sceneMatrixIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\r\n\t */\r\n\tpublic sceneNormalMatrixIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the camera position.\r\n\t */\r\n\tpublic cameraPositionIndex:number;\r\n\r\n\t/**\r\n\t * The index for the UV transformation matrix vertex constant.\r\n\t */\r\n\tpublic uvTransformIndex:number;\r\n\r\n\t/**\r\n\t * The index for the colorTrtansform fragment constant.\r\n\t */\r\n\tpublic colorTransformIndex:number;\r\n\r\n\t/**\r\n\t * Creates a new MethodCompilerVO object.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, stage:Stage)\r\n\t{\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._pass = pass;\r\n\t\tthis._stage = stage;\r\n\t\tthis.profile = this._stage.profile;\r\n\r\n\t\tthis._textureVOPool = new TextureVOPool(this._stage);\r\n\t}\r\n\r\n\tpublic getTextureVO(texture:TextureBase):TextureVOBase\r\n\t{\r\n\t\treturn this._textureVOPool.getItem(texture);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies()\r\n\t{\r\n\t\tthis._pass._iIncludeDependencies(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method to create a concrete compiler object for this object\r\n\t *\r\n\t * @param renderableClass\r\n\t * @param pass\r\n\t * @param stage\r\n\t * @returns {CompilerBase}\r\n\t */\r\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:IPass):CompilerBase\r\n\t{\r\n\t\treturn new CompilerBase(renderableClass, pass, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tthis.projectionDependencies = 0;\r\n\t\tthis.normalDependencies = 0;\r\n\t\tthis.colorDependencies = 0;\r\n\t\tthis.viewDirDependencies = 0;\r\n\t\tthis.uvDependencies = 0;\r\n\t\tthis.secondaryUVDependencies = 0;\r\n\t\tthis.globalPosDependencies = 0;\r\n\t\tthis.tangentDependencies = 0;\r\n\t\tthis.usesGlobalPosFragment = false;\r\n\t\tthis.usesLocalPosFragment = false;\r\n\t\tthis.usesFragmentAnimation = false;\r\n\t\tthis.usesTangentSpace = false;\r\n\t\tthis.outputsNormals = false;\r\n\t\tthis.outputsTangentNormals = false;\r\n\t}\r\n\r\n\tpublic pInitRegisterIndices()\r\n\t{\r\n\t\tthis.commonsDataIndex = -1;\r\n\t\tthis.cameraPositionIndex = -1;\r\n\t\tthis.uvBufferIndex = -1;\r\n\t\tthis.uvTransformIndex = -1;\r\n\t\tthis.colorTransformIndex = -1;\r\n\t\tthis.secondaryUVBufferIndex = -1;\r\n\t\tthis.normalBufferIndex = -1;\r\n\t\tthis.colorBufferIndex = -1;\r\n\t\tthis.tangentBufferIndex = -1;\r\n\t\tthis.sceneMatrixIndex = -1;\r\n\t\tthis.sceneNormalMatrixIndex = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the unchanging constant data for this shader object.\r\n\t */\r\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\r\n\t{\r\n\t\t//Updates the amount of used register indices.\r\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\r\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\r\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\r\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\r\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\r\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\r\n\r\n\t\tthis.animatableAttributes = animatableAttributes;\r\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\r\n\t\tthis.uvSource = uvSource;\r\n\t\tthis.uvTarget = uvTarget;\r\n\r\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\r\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\r\n\r\n\t\t//Initializes commonly required constant values.\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\r\n\r\n\t\t//Initializes the default UV transformation matrix.\r\n\t\tif (this.uvTransformIndex >= 0) {\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\r\n\t\t}\r\n\r\n\t\t//Initializes the default colorTransform.\r\n\t\tif (this.colorTransformIndex >= 0) {\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\r\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\r\n\t\t}\r\n\t\tif (this.cameraPositionIndex >= 0)\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic setBlendMode(value:string)\r\n\t{\r\n\t\tswitch (value) {\r\n\t\t\tcase BlendMode.NORMAL:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\r\n\t\t\t\tthis.usesBlending = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.LAYER:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\r\n\t\t\t\tthis.usesBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.MULTIPLY:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\r\n\t\t\t\tthis.usesBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.ADD:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\r\n\t\t\t\tthis.usesBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.ALPHA:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\r\n\t\t\t\tthis.usesBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tif (this.usesAnimation)\r\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\r\n\r\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\r\n\r\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\r\n\t\t\tvar pos:Vector3D = camera.scenePosition;\r\n\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\r\n\t\t}\r\n\r\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\r\n\r\n\t\tif (this.usesBlending)\r\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iDeactivate()\r\n\t{\r\n\t\tif (this.usesAnimation)\r\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\r\n\r\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\r\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param renderable\r\n\t * @param stage\r\n\t * @param camera\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tif (renderable.renderableOwner.animator)\r\n\t\t\t(<AnimatorBase> renderable.renderableOwner.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\r\n\r\n\t\tif (this.uvBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\r\n\r\n\t\tif (this.secondaryUVBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\r\n\r\n\t\tif (this.normalBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\r\n\t\tif (this.tangentBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\r\n\r\n\t\tif (this.colorBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.colorBufferIndex, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\r\n\r\n\r\n\t\tif (this.usesUVTransform) {\r\n\t\t\tvar uvTransform:Matrix = renderable.renderableOwner.uvTransform.matrix;\r\n\r\n\t\t\tif (uvTransform) {\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\r\n\t\t\t} else {\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.usesColorTransform) {\r\n\r\n\t\t\tvar colorTransform:ColorTransform = renderable.renderableOwner.colorTransform;\r\n\r\n\t\t\tif (colorTransform) {\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset;\r\n\t\t\t} else {\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\r\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.sceneNormalMatrixIndex >= 0)\r\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\r\n\r\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\r\n\r\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\r\n\t\t\tvar pos:Vector3D = camera.scenePosition;\r\n\t\t\tvar x:number = pos.x;\r\n\t\t\tvar y:number = pos.y;\r\n\t\t\tvar z:number = pos.z;\r\n\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic invalidateProgram()\r\n\t{\r\n\t\tthis._invalidProgram = true;\r\n\t}\r\n\r\n\tpublic invalidateShader()\r\n\t{\r\n\t\tthis._invalidShader = true;\r\n\t\tthis._invalidProgram = true;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._programData.dispose();\r\n\t\tthis._programData = null;\r\n\t}\r\n\r\n\tprivate _updateProgram()\r\n\t{\r\n\t\tthis._invalidProgram = false;\r\n\r\n\t\tvar compiler:CompilerBase;\r\n\r\n\t\tif (this._invalidShader) {\r\n\t\t\tthis._invalidShader = false;\r\n\r\n\t\t\tcompiler = this.createCompiler(this._renderableClass, this._pass);\r\n\t\t\tcompiler.compile();\r\n\t\t}\r\n\r\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\r\n\r\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\r\n\r\n\t\t//check program data hasn't changed, keep count of program usages\r\n\t\tif (this._programData != programData) {\r\n\t\t\tif (this._programData)\r\n\t\t\t\tthis._programData.dispose();\r\n\r\n\t\t\tthis._programData = programData;\r\n\r\n\t\t\tprogramData.usages++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calcAnimationCode(shadedTarget:string)\r\n\t{\r\n\t\t//reset code\r\n\t\tthis._animationVertexCode = \"\";\r\n\t\tthis._animationFragmentCode = \"\";\r\n\r\n\t\t//check to see if GPU animation is used\r\n\t\tif (this.usesAnimation) {\r\n\r\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\r\n\r\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\r\n\r\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\r\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\r\n\r\n\t\t\tif (this.usesFragmentAnimation)\r\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\r\n\r\n\t\t\tanimationSet.doneAGALCode(this);\r\n\r\n\t\t} else {\r\n\t\t\t// simply write attributes to targets, do not animate them\r\n\t\t\t// projection will pick up on targets[0] to do the projection\r\n\t\t\tvar len:number = this.animatableAttributes.length;\r\n\t\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\r\n\r\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\r\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n/**\r\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\r\n */\r\nclass ShaderRegisterCache\r\n{\r\n\tprivate _fragmentTempCache:RegisterPool;\r\n\tprivate _vertexTempCache:RegisterPool;\r\n\tprivate _varyingCache:RegisterPool;\r\n\tprivate _fragmentConstantsCache:RegisterPool;\r\n\tprivate _vertexConstantsCache:RegisterPool;\r\n\tprivate _textureCache:RegisterPool;\r\n\tprivate _vertexAttributesCache:RegisterPool;\r\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\r\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\r\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\r\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\r\n\r\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\r\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\r\n\tprivate _numUsedVertexConstants:number = 0;\r\n\tprivate _numUsedFragmentConstants:number = 0;\r\n\tprivate _numUsedStreams:number = 0;\r\n\tprivate _numUsedTextures:number = 0;\r\n\tprivate _numUsedVaryings:number = 0;\r\n\tprivate _profile:string;\r\n\r\n\t/**\r\n\t * Create a new ShaderRegisterCache object.\r\n\t *\r\n\t * @param profile The compatibility profile used by the renderer.\r\n\t */\r\n\tconstructor(profile:string)\r\n\t{\r\n\t\tthis._profile = profile;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all registers.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\r\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\r\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\r\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\r\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\r\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\r\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\r\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\r\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\r\n\t\tthis._numUsedVertexConstants = 0;\r\n\t\tthis._numUsedStreams = 0;\r\n\t\tthis._numUsedTextures = 0;\r\n\t\tthis._numUsedVaryings = 0;\r\n\t\tthis._numUsedFragmentConstants = 0;\r\n\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\r\n\t\t\tthis.getFreeVertexAttribute();\r\n\r\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\r\n\t\t\tthis.getFreeVertexConstant();\r\n\r\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\r\n\t\t\tthis.getFreeVarying();\r\n\r\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\r\n\t\t\tthis.getFreeFragmentConstant();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all resources used.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._fragmentTempCache.dispose();\r\n\t\tthis._vertexTempCache.dispose();\r\n\t\tthis._varyingCache.dispose();\r\n\t\tthis._fragmentConstantsCache.dispose();\r\n\t\tthis._vertexAttributesCache.dispose();\r\n\r\n\t\tthis._fragmentTempCache = null;\r\n\t\tthis._vertexTempCache = null;\r\n\t\tthis._varyingCache = null;\r\n\t\tthis._fragmentConstantsCache = null;\r\n\t\tthis._vertexAttributesCache = null;\r\n\t\tthis._fragmentOutputRegister = null;\r\n\t\tthis._vertexOutputRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\r\n\t * has been called usageCount times again.\r\n\t * @param register The register to mark as used.\r\n\t * @param usageCount The amount of usages to add.\r\n\t */\r\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\r\n\t{\r\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\r\n\t * @param register The register for which to remove a usage.\r\n\t */\r\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\r\n\t{\r\n\t\tthis._fragmentTempCache.removeUsage(register);\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\r\n\t * until removeUsage has been called usageCount times again.\r\n\t * @param register The register to mark as used.\r\n\t * @param usageCount The amount of usages to add.\r\n\t */\r\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\r\n\t{\r\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\r\n\t * @param register The register for which to remove a usage.\r\n\t */\r\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\r\n\t{\r\n\t\tthis._vertexTempCache.removeUsage(register);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\r\n\t * has been called usageCount times again.\r\n\t */\r\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a single component from a fragment temporary register that's still available.\r\n\t */\r\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available varying register\r\n\t */\r\n\tpublic getFreeVarying():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedVaryings;\r\n\t\treturn this._varyingCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available fragment constant register\r\n\t */\r\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedFragmentConstants;\r\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available vertex constant register\r\n\t */\r\n\tpublic getFreeVertexConstant():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedVertexConstants;\r\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an entire vertex temporary register that's still available.\r\n\t */\r\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a single component from a vertex temporary register that's still available.\r\n\t */\r\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available vertex attribute register\r\n\t */\r\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedStreams;\r\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available texture register\r\n\t */\r\n\tpublic getFreeTextureReg():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedTextures;\r\n\t\treturn this._textureCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve vertex constants.\r\n\t */\r\n\tpublic get vertexConstantOffset():number\r\n\t{\r\n\t\treturn this._vertexConstantOffset;\r\n\t}\r\n\r\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\r\n\t{\r\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve vertex attributes.\r\n\t */\r\n\tpublic get vertexAttributesOffset():number\r\n\t{\r\n\t\treturn this._vertexAttributesOffset;\r\n\t}\r\n\r\n\tpublic set vertexAttributesOffset(value:number)\r\n\t{\r\n\t\tthis._vertexAttributesOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve varying registers.\r\n\t */\r\n\tpublic get varyingsOffset():number\r\n\t{\r\n\t\treturn this._varyingsOffset;\r\n\t}\r\n\r\n\tpublic set varyingsOffset(value:number)\r\n\t{\r\n\t\tthis._varyingsOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve fragment constants.\r\n\t */\r\n\tpublic get fragmentConstantOffset():number\r\n\t{\r\n\t\treturn this._fragmentConstantOffset;\r\n\t}\r\n\r\n\tpublic set fragmentConstantOffset(value:number)\r\n\t{\r\n\t\tthis._fragmentConstantOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The fragment output register.\r\n\t */\r\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._fragmentOutputRegister;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used vertex constant registers.\r\n\t */\r\n\tpublic get numUsedVertexConstants():number\r\n\t{\r\n\t\treturn this._numUsedVertexConstants;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used fragment constant registers.\r\n\t */\r\n\tpublic get numUsedFragmentConstants():number\r\n\t{\r\n\t\treturn this._numUsedFragmentConstants;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used vertex streams.\r\n\t */\r\n\tpublic get numUsedStreams():number\r\n\t{\r\n\t\treturn this._numUsedStreams;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used texture slots.\r\n\t */\r\n\tpublic get numUsedTextures():number\r\n\t{\r\n\t\treturn this._numUsedTextures;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used varying registers.\r\n\t */\r\n\tpublic get numUsedVaryings():number\r\n\t{\r\n\t\treturn this._numUsedVaryings;\r\n\t}\r\n}\r\n\r\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n/**\r\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\r\n */\r\nclass ShaderRegisterData\r\n{\r\n\tpublic normalVarying:ShaderRegisterElement;\r\n\tpublic colorVarying:ShaderRegisterElement\r\n\tpublic tangentVarying:ShaderRegisterElement;\r\n\tpublic bitangentVarying:ShaderRegisterElement;\r\n\tpublic uvVarying:ShaderRegisterElement;\r\n\tpublic secondaryUVVarying:ShaderRegisterElement;\r\n\tpublic viewDirVarying:ShaderRegisterElement;\r\n\tpublic shadowTarget:ShaderRegisterElement;\r\n\tpublic shadedTarget:ShaderRegisterElement;\r\n\tpublic globalPositionVertex:ShaderRegisterElement;\r\n\tpublic globalPositionVarying:ShaderRegisterElement;\r\n    public localPositionVarying:ShaderRegisterElement;\r\n\tpublic localPosition:ShaderRegisterElement;\r\n\tpublic normalInput:ShaderRegisterElement;\r\n\tpublic colorInput:ShaderRegisterElement;\r\n\tpublic tangentInput:ShaderRegisterElement;\r\n\tpublic animatedNormal:ShaderRegisterElement;\r\n\tpublic animatedTangent:ShaderRegisterElement;\r\n\tpublic commons:ShaderRegisterElement;\r\n\tpublic projectionFragment:ShaderRegisterElement;\r\n\tpublic normalFragment:ShaderRegisterElement;\r\n\tpublic viewDirFragment:ShaderRegisterElement;\r\n\tpublic bitangent:ShaderRegisterElement;\r\n\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = ShaderRegisterData;",
    "/**\r\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\r\n */\r\nclass ShaderRegisterElement\r\n{\r\n\tprivate _regName:string;\r\n\tprivate _index:number;\r\n\tprivate _toStr:string;\r\n\r\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\r\n\r\n\tpublic _component:number;\r\n\r\n\t/**\r\n\t * Creates a new ShaderRegisterElement object.\r\n\t *\r\n\t * @param regName The name of the register.\r\n\t * @param index The index of the register.\r\n\t * @param component The register's component, if not the entire register is represented.\r\n\t */\r\n\tconstructor(regName:string, index:number, component:number = -1)\r\n\t{\r\n\t\tthis._component = component;\r\n\t\tthis._regName = regName;\r\n\t\tthis._index = index;\r\n\r\n\t\tthis._toStr = this._regName;\r\n\r\n\t\tif (this._index >= 0)\r\n\t\t\tthis._toStr += this._index;\r\n\r\n\t\tif (component > -1)\r\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the register or the components AGAL string representation.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._toStr;\r\n\t}\r\n\r\n\t/**\r\n\t * The register's name.\r\n\t */\r\n\tpublic get regName():string\r\n\t{\r\n\t\treturn this._regName;\r\n\t}\r\n\r\n\t/**\r\n\t * The register's index.\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n}\r\n\r\nexport = ShaderRegisterElement;",
    "import RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\n\r\n/**\r\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\r\n * material. Concrete subclasses are used by the default materials.\r\n *\r\n * @see away.materials.ShadingMethodBase\r\n */\r\nclass CompilerBase\r\n{\r\n\tpublic _pShader:ShaderBase;\r\n\tpublic _pSharedRegisters:ShaderRegisterData;\r\n\tpublic _pRegisterCache:ShaderRegisterCache;\r\n\tpublic _pRenderableClass:IRenderableClass;\r\n\tpublic _pRenderPass:IPass;\r\n\r\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\r\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\r\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\r\n\r\n\t//The attributes that need to be animated by animators.\r\n\tpublic _pAnimatableAttributes:Array<string>;\r\n\r\n\t//The target registers for animated properties, written to by the animators.\r\n\tpublic _pAnimationTargetRegisters:Array<string>;\r\n\r\n\t//The target register to place the animated UV coordinate.\r\n\tprivate _uvTarget:string;\r\n\r\n\t//The souce register providing the UV coordinate to animate.\r\n\tprivate _uvSource:string;\r\n\r\n\t/**\r\n\t * Creates a new CompilerBase object.\r\n\t * @param profile The compatibility profile of the renderer.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, shader:ShaderBase)\r\n\t{\r\n\t\tthis._pRenderableClass = renderableClass;\r\n\t\tthis._pRenderPass = pass;\r\n\t\tthis._pShader = shader;\r\n\r\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\r\n\r\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\r\n\t\tthis._pRegisterCache.vertexAttributesOffset = renderableClass.vertexAttributesOffset;\r\n\t\tthis._pRegisterCache.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles the code after all setup on the compiler has finished.\r\n\t */\r\n\tpublic compile()\r\n\t{\r\n\t\tthis._pShader.reset();\r\n\r\n\t\tthis._pShader._iIncludeDependencies();\r\n\r\n\t\tthis.pInitRegisterIndices();\r\n\r\n\t\tthis.pCompileDependencies();\r\n\r\n\t\t//compile custom vertex & fragment codes\r\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\tconsole.log(\"uses ct:\",this._pShader.usesColorTransform);\r\n\t\tif (this._pShader.usesColorTransform)\r\n\t\t{\r\n\t\t\tthis.compileColorTransformCode();\r\n\t\t}else{\r\n\t\t\tthis._pShader.colorTransformIndex = -1;\r\n\t\t}\r\n\r\n\t\t//assign the final output color to the output register\r\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\r\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\r\n\r\n\t\t//initialise the required shader constants\r\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\r\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\r\n\t}\r\n\t/**\r\n\t * Calculate the transformed colours\r\n\t */\r\n\tprivate compileColorTransformCode()\r\n\t{\r\n\t\t// rm, gm, bm, am - multiplier\r\n\t\t// ro, go, bo, ao - offset\r\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\r\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\r\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\r\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\r\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\r\n\t}\r\n\t/**\r\n\t * Compile the code for the methods.\r\n\t */\r\n\tpublic pCompileDependencies()\r\n\t{\r\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\r\n\r\n\t\t//compile the world-space position if required\r\n\t\tif (this._pShader.globalPosDependencies > 0)\r\n\t\t\tthis.compileGlobalPositionCode();\r\n\r\n        //compile the local-space position if required\r\n        if (this._pShader.usesLocalPosFragment)\r\n            this.compileLocalPositionCode();\r\n\r\n\t\t//Calculate the (possibly animated) UV coordinates.\r\n\t\tif (this._pShader.uvDependencies > 0)\r\n\t\t\tthis.compileUVCode();\r\n\r\n\t\tif (this._pShader.secondaryUVDependencies > 0)\r\n\t\t\tthis.compileSecondaryUVCode();\r\n\r\n\t\tif (this._pShader.normalDependencies > 0)\r\n\t\t\tthis.compileNormalCode();\r\n\r\n\t\tif (this._pShader.viewDirDependencies > 0)\r\n\t\t\tthis.compileViewDirCode();\r\n\r\n\t\t//collect code from material\r\n\t\tthis._pVertexCode += this._pRenderableClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pFragmentCode += this._pRenderableClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t//collect code from pass\r\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\t}\r\n\r\n\tprivate compileGlobalPositionCode()\r\n\t{\r\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\r\n\r\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\r\n\r\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\r\n\r\n\t\tif (this._pShader.usesGlobalPosFragment) {\r\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\r\n\t\t}\r\n\t}\r\n    private compileLocalPositionCode()\r\n    {\r\n        this._pSharedRegisters.localPositionVarying = this._pRegisterCache.getFreeVarying();\r\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.localPositionVarying + \", \" + this._pSharedRegisters.localPosition + \"\\n\";\r\n    }\r\n\t/**\r\n\t * Calculate the (possibly animated) UV coordinates.\r\n\t */\r\n\tprivate compileUVCode()\r\n\t{\r\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\tthis._pShader.uvBufferIndex = uvAttributeReg.index;\r\n\r\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\r\n\r\n\t\tif (this._pShader.usesUVTransform) {\r\n\t\t\t// a, b, 0, tx\r\n\t\t\t// c, d, 0, ty\r\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tthis._pShader.uvTransformIndex = uvTransform1.index*4;\r\n\r\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\r\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\r\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\r\n\t\t} else {\r\n\t\t\tthis._pShader.uvTransformIndex = -1;\r\n\t\t\tthis._uvTarget = varying.toString();\r\n\t\t\tthis._uvSource = uvAttributeReg.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provide the secondary UV coordinates.\r\n\t */\r\n\tprivate compileSecondaryUVCode()\r\n\t{\r\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\tthis._pShader.secondaryUVBufferIndex = uvAttributeReg.index;\r\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\r\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the view direction.\r\n\t */\r\n\tpublic compileViewDirCode()\r\n\t{\r\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\r\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\r\n\r\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\r\n\r\n\t\tif (this._pShader.usesTangentSpace) {\r\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\r\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\r\n\t\t} else {\r\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\r\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\r\n\t\t}\r\n\r\n\t\t//TODO is this required in all cases? (re: distancemappass)\r\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\r\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the normal.\r\n\t */\r\n\tpublic compileNormalCode()\r\n\t{\r\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\r\n\r\n\t\t//simple normal aquisition if no tangent space is being used\r\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\r\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\r\n\r\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\r\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\r\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\r\n\r\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t}\r\n\r\n\t\tif (this._pShader.outputsNormals) {\r\n\t\t\tif (this._pShader.usesTangentSpace) {\r\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\r\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\r\n\r\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\r\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\r\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\r\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\r\n\r\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\r\n\r\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\r\n\t\t\t\tvar t:ShaderRegisterElement;\r\n\t\t\t\tvar b:ShaderRegisterElement;\r\n\t\t\t\tvar n:ShaderRegisterElement;\r\n\r\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\r\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\r\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\r\n\r\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\r\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\r\n\r\n\t\t\t\t//compile custom fragment code for normal calcs\r\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\r\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\r\n\r\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\r\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\r\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// no output, world space is enough\r\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\r\n\r\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\r\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\r\n\r\n\t\t\tif (this._pShader.tangentDependencies > 0) {\r\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\r\n\r\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._pShader.usesTangentSpace)\r\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\r\n\t}\r\n\r\n\t/**\r\n\t * Reset all the indices to \"unused\".\r\n\t */\r\n\tpublic pInitRegisterIndices()\r\n\t{\r\n\t\tthis._pShader.pInitRegisterIndices();\r\n\r\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\r\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\r\n\t\tthis._pVertexCode = \"\";\r\n\t\tthis._pFragmentCode = \"\";\r\n\t\tthis._pPostAnimationFragmentCode = \"\";\r\n\r\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\r\n\r\n\t\t//create commonly shared constant registers\r\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\r\n\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\r\n\r\n\t\t//Creates the registers to contain the tangent data.\r\n\t\t// need to be created FIRST and in this order (for when using tangent space)\r\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\r\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\t\tthis._pShader.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\r\n\r\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\r\n\r\n\t\t\tif (this._pShader.usesTangentSpace) {\r\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\r\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\r\n\t\t}\r\n\r\n\t\tif (this._pShader.normalDependencies > 0) {\r\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\t\tthis._pShader.normalBufferIndex = this._pSharedRegisters.normalInput.index;\r\n\r\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\r\n\r\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\r\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\r\n\t\t}\r\n\r\n\t\tif (this._pShader.colorDependencies > 0) {\r\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\r\n\r\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all resources used by the compiler.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRegisterCache.dispose();\r\n\t\tthis._pRegisterCache = null;\r\n\t\tthis._pSharedRegisters = null;\r\n\t}\r\n\r\n\t/**\r\n\t * The generated vertex code.\r\n\t */\r\n\tpublic get vertexCode():string\r\n\t{\r\n\t\treturn this._pVertexCode;\r\n\t}\r\n\r\n\t/**\r\n\t * The generated fragment code.\r\n\t */\r\n\tpublic get fragmentCode():string\r\n\t{\r\n\t\treturn this._pFragmentCode;\r\n\t}\r\n\r\n\t/**\r\n\t * The generated fragment code.\r\n\t */\r\n\tpublic get postAnimationFragmentCode():string\r\n\t{\r\n\t\treturn this._pPostAnimationFragmentCode;\r\n\t}\r\n\r\n\t/**\r\n\t * The register name containing the final shaded colour.\r\n\t */\r\n\tpublic get shadedTarget():string\r\n\t{\r\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\r\n\t}\r\n}\r\n\r\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\r\n\r\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\r\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\r\n\r\n/**\r\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\r\n * material. Concrete subclasses are used by the default materials.\r\n *\r\n * @see away.materials.ShadingMethodBase\r\n */\r\nclass LightingCompiler extends CompilerBase\r\n{\r\n\tprivate _shaderLightingObject:LightingShader;\r\n\tprivate _lightingPass:ILightingPass;\r\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\r\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\r\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\r\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\r\n\r\n\tpublic _pNumProbeRegisters:number;\r\n\r\n\t/**\r\n\t * Creates a new CompilerBase object.\r\n\t * @param profile The compatibility profile of the renderer.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\r\n\t{\r\n\t\tsuper(renderableClass, lightingPass, shaderLightingObject);\r\n\r\n\t\tthis._shaderLightingObject = shaderLightingObject;\r\n\t\tthis._lightingPass = lightingPass;\r\n\t}\r\n\r\n\t/**\r\n\t * Compile the code for the methods.\r\n\t */\r\n\tpublic pCompileDependencies()\r\n\t{\r\n\t\tsuper.pCompileDependencies();\r\n\r\n\t\t//compile the lighting code\r\n\t\tif (this._shaderLightingObject.usesShadows)\r\n\t\t\tthis.pCompileShadowCode();\r\n\r\n\t\tif (this._shaderLightingObject.usesLights) {\r\n\t\t\tthis.initLightRegisters();\r\n\t\t\tthis.compileLightCode();\r\n\t\t}\r\n\r\n\t\tif (this._shaderLightingObject.usesProbes)\r\n\t\t\tthis.compileLightProbeCode();\r\n\r\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the code to provide shadow mapping.\r\n\t */\r\n\tpublic pCompileShadowCode()\r\n\t{\r\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\r\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\r\n\t\t} else {\r\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes constant registers to contain light data.\r\n\t */\r\n\tprivate initLightRegisters()\r\n\t{\r\n\t\t// init these first so we're sure they're in sequence\r\n\t\tvar i:number, len:number;\r\n\r\n\t\tif (this._dirLightVertexConstants) {\r\n\t\t\tlen = this._dirLightVertexConstants.length;\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\r\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pointLightVertexConstants) {\r\n\t\t\tlen = this._pointLightVertexConstants.length;\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\r\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlen = this._dirLightFragmentConstants.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\r\n\r\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\r\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\r\n\t\t}\r\n\r\n\t\tlen = this._pointLightFragmentConstants.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\r\n\r\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\r\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles the shading code for directional and point lights.\r\n\t */\r\n\tprivate compileLightCode()\r\n\t{\r\n\t\tvar diffuseColorReg:ShaderRegisterElement;\r\n\t\tvar specularColorReg:ShaderRegisterElement;\r\n\t\tvar lightPosReg:ShaderRegisterElement;\r\n\t\tvar lightDirReg:ShaderRegisterElement;\r\n\t\tvar vertexRegIndex:number = 0;\r\n\t\tvar fragmentRegIndex:number = 0;\r\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\r\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\r\n\r\n\t\t//compile the shading code for directional lights.\r\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\r\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\r\n\r\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\r\n\r\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\r\n\r\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\r\n\r\n\t\t\t} else {\r\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\r\n\t\t\t}\r\n\r\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\r\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\r\n\r\n\t\t\tif (addDiff)\r\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tif (addSpec)\r\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\r\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\r\n\t\t}\r\n\r\n\t\tvertexRegIndex = 0;\r\n\t\tfragmentRegIndex = 0;\r\n\r\n\t\t//compile the shading code for point lights\r\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\r\n\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\r\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\r\n\t\t\telse\r\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\r\n\r\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\r\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\r\n\r\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\r\n\r\n\t\t\tvar lightVarying:ShaderRegisterElement;\r\n\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\r\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\r\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\r\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\r\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tlightVarying = lightDirReg;\r\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\r\n\t\t\t\t// calculate attenuation\r\n\t\t\t\tthis._pFragmentCode += // attenuate\r\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\r\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\r\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\r\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\r\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\r\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\r\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\r\n\r\n\t\t\tif (addDiff)\r\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tif (addSpec)\r\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles shading code for light probes.\r\n\t */\r\n\tprivate compileLightProbeCode()\r\n\t{\r\n\t\tvar weightReg:string;\r\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\r\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\r\n\t\tvar i:number;\r\n\t\tvar texReg:ShaderRegisterElement;\r\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\r\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\r\n\r\n\t\tif (addDiff)\r\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\r\n\r\n\t\tif (addSpec)\r\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\r\n\r\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\r\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\r\n\r\n\t\t\tif (i == 0)\r\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\r\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\r\n\r\n\t\t\tif (addDiff) {\r\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\r\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\r\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\t}\r\n\r\n\t\t\tif (addSpec) {\r\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\r\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\r\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reset all the indices to \"unused\".\r\n\t */\r\n\tpublic pInitRegisterIndices()\r\n\t{\r\n\t\tsuper.pInitRegisterIndices();\r\n\r\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\r\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\r\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\r\n\r\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\r\n\r\n\t\t//init light data\r\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\r\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\r\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\r\n\t\t} else {\r\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\r\n\t\t}\r\n\r\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\r\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\r\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\r\n\t\t} else {\r\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = LightingCompiler;",
    "import Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\r\n */\r\nclass Merge\r\n{\r\n\r\n\t//private const LIMIT:uint = 196605;\r\n\tprivate _objectSpace:boolean;\r\n\tprivate _keepMaterial:boolean;\r\n\tprivate _disposeSources:boolean;\r\n\tprivate _geomVOs:Array<GeometryVO>;\r\n\tprivate _toDispose:Array<Mesh>;\r\n\r\n\t/**\r\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\r\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\r\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\r\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\r\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\r\n\t */\r\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\r\n\t{\r\n\t\tthis._keepMaterial = keepMaterial;\r\n\t\tthis._disposeSources = disposeSources;\r\n\t\tthis._objectSpace = objectSpace;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\r\n\t */\r\n\tpublic set disposeSources(b:boolean)\r\n\t{\r\n\t\tthis._disposeSources = b;\r\n\t}\r\n\r\n\tpublic get disposeSources():boolean\r\n\t{\r\n\t\treturn this._disposeSources;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\r\n\t */\r\n\tpublic set keepMaterial(b:boolean)\r\n\t{\r\n\t\tthis._keepMaterial = b;\r\n\t}\r\n\r\n\tpublic get keepMaterial():boolean\r\n\t{\r\n\t\treturn this._keepMaterial;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\r\n\t */\r\n\tpublic set objectSpace(b:boolean)\r\n\t{\r\n\t\tthis._objectSpace = b;\r\n\t}\r\n\r\n\tpublic get objectSpace():boolean\r\n\t{\r\n\t\treturn this._objectSpace;\r\n\t}\r\n\r\n\t/**\r\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\r\n\t *\r\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\r\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\r\n\t *\r\n\t * @return The merged Mesh instance.\r\n\t */\r\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\t//collect container meshes\r\n\t\tthis.parseContainer(receiver, objectContainer);\r\n\r\n\t\t//collect receiver\r\n\t\tthis.collect(receiver, false);\r\n\r\n\t\t//merge to receiver\r\n\t\tthis.merge(receiver, this._disposeSources);\r\n\t}\r\n\r\n\t/**\r\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\r\n\t *\r\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\r\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\r\n\t */\r\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\tif (!meshes.length)\r\n\t\t\treturn;\r\n\r\n\t\t//collect meshes in vector\r\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\r\n\t\t\tif (meshes[i] != receiver)\r\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\r\n\r\n\t\t//collect receiver\r\n\t\tthis.collect(receiver, false);\r\n\r\n\t\t//merge to receiver\r\n\t\tthis.merge(receiver, this._disposeSources);\r\n\t}\r\n\r\n\t/**\r\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\r\n\t *\r\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\r\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\r\n\t */\r\n\tpublic apply(receiver:Mesh, mesh:Mesh)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\t//collect mesh\r\n\t\tthis.collect(mesh, this._disposeSources);\r\n\r\n\t\t//collect receiver\r\n\t\tthis.collect(receiver, false);\r\n\r\n\t\t//merge to receiver\r\n\t\tthis.merge(receiver, this._disposeSources);\r\n\t}\r\n\r\n\tprivate reset()\r\n\t{\r\n\t\tthis._toDispose  = new Array<Mesh>();\r\n\t\tthis._geomVOs = new Array<GeometryVO>();\r\n\t}\r\n\r\n\tprivate merge(destMesh:Mesh, dispose:boolean)\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar subIdx:number /*uint*/;\r\n\t\tvar oldGeom:Geometry;\r\n\t\tvar destGeom:Geometry;\r\n\t\tvar useSubMaterials:boolean;\r\n\r\n\t\toldGeom = destMesh.geometry;\r\n\t\tdestGeom = destMesh.geometry = new Geometry();\r\n\t\tsubIdx = destMesh.subMeshes.length;\r\n\r\n\t\t// Only apply materials directly to sub-meshes if necessary,\r\n\t\t// i.e. if there is more than one material available.\r\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\r\n\r\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\r\n\t\t\tvar s:number /*uint*/;\r\n\t\t\tvar data:GeometryVO;\r\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\tsub.autoDeriveNormals = false;\r\n\t\t\tsub.autoDeriveTangents = false;\r\n\r\n\t\t\tdata = this._geomVOs[i];\r\n\t\t\tsub.updateIndices(data.indices);\r\n\t\t\tsub.updatePositions(data.vertices);\r\n\t\t\tsub.updateVertexNormals(data.normals);\r\n\t\t\tsub.updateVertexTangents(data.tangents);\r\n\t\t\tsub.updateUVs(data.uvs);\r\n\r\n\t\t\tdestGeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (this._keepMaterial && useSubMaterials)\r\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\r\n\t\t}\r\n\r\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\r\n\t\t\tdestMesh.material = this._geomVOs[0].material;\r\n\r\n\t\tif (dispose) {\r\n\t\t\tvar m:Mesh;\r\n\t\t\tvar len:number = this._toDispose.length;\r\n\t\t\tfor (var i:number; i < len; i++) {\r\n\t\t\t\tm = this._toDispose[i];\r\n\t\t\t\tm.geometry.dispose();\r\n\t\t\t\tm.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t//dispose of the original receiver geometry\r\n\t\t\toldGeom.dispose();\r\n\t\t}\r\n\r\n\t\tthis._toDispose = null;\r\n\t}\r\n\r\n\tprivate collect(mesh:Mesh, dispose:boolean)\r\n\t{\r\n\t\tif (mesh.geometry) {\r\n\t\t\tvar subIdx:number /*uint*/;\r\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\r\n\t\t\tvar calc:number /*uint*/;\r\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\r\n\t\t\t\tvar i:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\r\n\t\t\t\tvar indexOffset:number /*uint*/;\r\n\t\t\t\tvar subGeom:TriangleSubGeometry;\r\n\t\t\t\tvar vo:GeometryVO;\r\n\t\t\t\tvar vertices:Array<number>;\r\n\t\t\t\tvar normals:Array<number>;\r\n\t\t\t\tvar tangents:Array<number>;\r\n\t\t\t\tvar pd:Array<number>, nd:Array<number>, td:Array<number>, ud:Array<number>;\r\n\r\n\t\t\t\tsubGeom = subGeometries[subIdx];\r\n\t\t\t\tpd = subGeom.positions;\r\n\t\t\t\tnd = subGeom.vertexNormals;\r\n\t\t\t\ttd = subGeom.vertexTangents;\r\n\t\t\t\tud = subGeom.uvs;\r\n\r\n\t\t\t\t// Get (or create) a VO for this material\r\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\r\n\r\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\r\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\r\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\r\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\r\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\r\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\r\n\r\n\t\t\t\t// Copy over vertex attributes\r\n\t\t\t\tvIdx = vertices.length;\r\n\t\t\t\tnIdx = normals.length;\r\n\t\t\t\ttIdx = tangents.length;\r\n\t\t\t\tuIdx = vo.uvs.length;\r\n\t\t\t\tlen = subGeom.numVertices;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcalc = i*3;\r\n\r\n\t\t\t\t\t// Position\r\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\r\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\r\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\r\n\r\n\t\t\t\t\t// Normal\r\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\r\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\r\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\r\n\r\n\t\t\t\t\t// Tangent\r\n\t\t\t\t\ttangents[tIdx++] = td[calc];\r\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\r\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\r\n\r\n\t\t\t\t\t// UV\r\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\r\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy over triangle indices\r\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\r\n\t\t\t\tiIdx = vo.indices.length;\r\n\t\t\t\tlen = subGeom.numTriangles;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcalc = i*3;\r\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc] + indexOffset;\r\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 1] + indexOffset;\r\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 2] + indexOffset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._objectSpace) {\r\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\r\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\r\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\r\n\r\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\r\n\t\t\t\t\tvIdx = vo.vertices.length;\r\n\t\t\t\t\tnIdx = vo.normals.length;\r\n\t\t\t\t\ttIdx = vo.tangents.length;\r\n\t\t\t\t\tlen = vertices.length;\r\n\t\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\r\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\r\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (dispose)\r\n\t\t\t\tthis._toDispose.push(mesh);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\r\n\t{\r\n\t\tvar data:GeometryVO;\r\n\r\n\t\tif (this._keepMaterial) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tlen = this._geomVOs.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tif (this._geomVOs[i].material == material) {\r\n\t\t\t\t\tdata = this._geomVOs[i];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (this._geomVOs.length) {\r\n\t\t\t// If materials are not to be kept, all data can be\r\n\t\t\t// put into a single VO, so return that one.\r\n\t\t\tdata = this._geomVOs[0];\r\n\t\t}\r\n\r\n\t\t// No data (for this material) found, create new.\r\n\t\tif (!data) {\r\n\t\t\tdata = new GeometryVO();\r\n\t\t\tdata.vertices = new Array<number>();\r\n\t\t\tdata.normals = new Array<number>();\r\n\t\t\tdata.tangents = new Array<number>();\r\n\t\t\tdata.uvs = new Array<number>();\r\n\t\t\tdata.indices = new Array<number /*uint*/>();\r\n\t\t\tdata.material = material;\r\n\r\n\t\t\tthis._geomVOs.push(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\r\n\t{\r\n\t\tvar child:DisplayObjectContainer;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\r\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\r\n\r\n\t\tfor (i = 0; i < object.numChildren; ++i) {\r\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\r\n\t\t\tthis.parseContainer(receiver, child);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Merge;\r\n\r\nclass GeometryVO\r\n{\r\n\tpublic uvs:Array<number>;\r\n\tpublic vertices:Array<number>;\r\n\tpublic normals:Array<number>;\r\n\tpublic tangents:Array<number>;\r\n\tpublic indices:Array<number /*uint*/>;\r\n\tpublic material:MaterialBase;\r\n}\r\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleGeometryTransform\r\n{\r\n\tprivate _defaultVertexTransform:Matrix3D;\r\n\tprivate _defaultInvVertexTransform:Matrix3D;\r\n\tprivate _defaultUVTransform:Matrix;\r\n\r\n\tpublic set vertexTransform(value:Matrix3D)\r\n\t{\r\n\t\tthis._defaultVertexTransform = value;\r\n\t\tthis._defaultInvVertexTransform = value.clone();\r\n\t\tthis._defaultInvVertexTransform.invert();\r\n\t\tthis._defaultInvVertexTransform.transpose();\r\n\t}\r\n\r\n\tpublic set UVTransform(value:Matrix)\r\n\t{\r\n\t\tthis._defaultUVTransform = value;\r\n\t}\r\n\r\n\tpublic get UVTransform():Matrix\r\n\t{\r\n\t\treturn this._defaultUVTransform;\r\n\t}\r\n\r\n\tpublic get vertexTransform():Matrix3D\r\n\t{\r\n\t\treturn this._defaultVertexTransform;\r\n\t}\r\n\r\n\tpublic get invVertexTransform():Matrix3D\r\n\t{\r\n\t\treturn this._defaultInvVertexTransform;\r\n\t}\r\n}\r\n\r\nexport = ParticleGeometryTransform;",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\r\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleGeometryHelper\r\n{\r\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\r\n\r\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\r\n\t{\r\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\r\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\r\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\r\n\t\tvar numParticles:number /*uint*/ = geometries.length;\r\n\r\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\r\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\r\n\t\tvar numSubGeometries:number /*uint*/;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar vertexCounter:number /*uint*/;\r\n\t\tvar subGeometry:TriangleSubGeometry;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\r\n\t\tvar tempVertex:Vector3D = new Vector3D;\r\n\t\tvar tempNormal:Vector3D = new Vector3D;\r\n\t\tvar tempTangents:Vector3D = new Vector3D;\r\n\t\tvar tempUV:Point = new Point;\r\n\r\n\t\tfor (i = 0; i < numParticles; i++) {\r\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\r\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\r\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\r\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\r\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\r\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\r\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\r\n\t\t\t\t\tpositionsVector.push(new Array<number>());\r\n\t\t\t\t\tnormalsVector.push(new Array<number>());\r\n\t\t\t\t\ttangentsVector.push(new Array<number>());\r\n\t\t\t\t\tuvsVector.push(new Array<number>());\r\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\r\n\t\t\t\t\tvertexCounters.push(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\r\n\r\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\r\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\r\n\t\t\t\t\t//update submap and add new subgeom vectors\r\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\r\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\r\n\t\t\t\t\tpositionsVector.push(new Array<number>());\r\n\t\t\t\t\tnormalsVector.push(new Array<number>());\r\n\t\t\t\t\ttangentsVector.push(new Array<number>());\r\n\t\t\t\t\tuvsVector.push(new Array<number>());\r\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\r\n\t\t\t\t\tvertexCounters.push(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tj = sub2SubMap[srcIndex];\r\n\r\n\t\t\t\t//select the correct vector\r\n\t\t\t\tindices = indicesVector[j];\r\n\t\t\t\tpositions = positionsVector[j];\r\n\t\t\t\tnormals = normalsVector[j];\r\n\t\t\t\ttangents = tangentsVector[j];\r\n\t\t\t\tuvs = uvsVector[j];\r\n\t\t\t\tvertexCounter = vertexCounters[j];\r\n\t\t\t\tsubGeometry = subGeometries[j];\r\n\r\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\r\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\r\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\r\n\t\t\t\tparticleData.particleIndex = i;\r\n\t\t\t\tparticleData.subGeometry = subGeometry;\r\n\t\t\t\tparticles.push(particleData);\r\n\r\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\r\n\r\n\t\t\t\tvar k:number /*int*/;\r\n\t\t\t\tvar tempLen:number /*int*/;\r\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\r\n\t\t\t\tvar product:number /*uint*/;\r\n\t\t\t\tvar sourcePositions:Array<number>;\r\n\t\t\t\tvar sourceNormals:Array<number>;\r\n\t\t\t\tvar sourceTangents:Array<number>;\r\n\t\t\t\tvar sourceUVs:Array<number>;\r\n\r\n\t\t\t\tif (compact) {\r\n\t\t\t\t\ttempLen = compact.numVertices;\r\n\t\t\t\t\tcompact.numTriangles;\r\n\t\t\t\t\tsourcePositions = compact.positions;\r\n\t\t\t\t\tsourceNormals = compact.vertexNormals;\r\n\t\t\t\t\tsourceTangents = compact.vertexTangents;\r\n\t\t\t\t\tsourceUVs = compact.uvs;\r\n\r\n\t\t\t\t\tif (transforms) {\r\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\r\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\r\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\r\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\r\n\r\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\r\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\r\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\r\n\t\t\t\t\t\t\t * 9 - 10: U V\r\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\r\n\t\t\t\t\t\t\tproduct = k*3;\r\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\r\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\r\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\r\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\r\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\r\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\r\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\r\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\r\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\r\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\r\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\r\n\t\t\t\t\t\t\tif (vertexTransform) {\r\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\r\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\r\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (UVTransform)\r\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\r\n\t\t\t\t\t\t\t//this is faster than that only push one data\r\n\t\t\t\t\t\t\tsourcePositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\r\n\t\t\t\t\t\t\tsourceNormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\r\n\t\t\t\t\t\t\tsourceTangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\r\n\t\t\t\t\t\t\tsourceUVs.push(tempUV.x, tempUV.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\r\n\t\t\t\t\t\t\tproduct = k*3;\r\n\t\t\t\t\t\t\t//this is faster than that only push one data\r\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\r\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\r\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\r\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Todo\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sourceIndices:Array<number> /*uint*/ = sourceSubGeometry.indices;\r\n\t\t\t\ttempLen = sourceSubGeometry.numTriangles;\r\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\r\n\t\t\t\t\tproduct = k*3;\r\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\r\n\t\tparticleGeometry.particles = particles;\r\n\t\tparticleGeometry.numParticles = numParticles;\r\n\r\n\t\tnumParticles = subGeometries.length;\r\n\t\tfor (i = 0; i < numParticles; i++) {\r\n\t\t\tsubGeometry = subGeometries[i];\r\n\t\t\tsubGeometry.autoDeriveNormals = false;\r\n\t\t\tsubGeometry.autoDeriveTangents = false;\r\n\t\t\tsubGeometry.updateIndices(indicesVector[i]);\r\n\t\t\tsubGeometry.updatePositions(positionsVector[i]);\r\n\t\t\tsubGeometry.updateVertexNormals(normalsVector[i]);\r\n\t\t\tsubGeometry.updateVertexTangents(tangentsVector[i]);\r\n\t\t\tsubGeometry.updateUVs(uvsVector[i]);\r\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\r\n\t\t}\r\n\r\n\t\treturn particleGeometry;\r\n\t}\r\n}\r\n\r\nexport = ParticleGeometryHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\n/**\r\n *\r\n */\r\nclass PerspectiveMatrix3D extends Matrix3D\r\n{\r\n\tconstructor(v:Array<number> = null)\r\n\t{\r\n\t\tsuper(v);\r\n\t}\r\n\r\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\r\n\t{\r\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\r\n\t\tvar xScale:number = yScale/aspectRatio;\r\n\r\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\r\n\t}\r\n}\r\n\r\nexport = PerspectiveMatrix3D;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\r\n\r\n/**\r\n *\r\n * @class away.pool.Sampler2DVO\r\n */\r\nclass Sampler2DVO extends SamplerVOBase\r\n{\r\n\tpublic sampler2D:Sampler2D;\r\n\r\n\tpublic fragmentReg:ShaderRegisterElement;\r\n\r\n\tpublic fragmentIndex:number;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tsuper(stage);\r\n\t}\r\n\r\n\r\n\tpublic initProperties(sampler2D:Sampler2D, regCache:ShaderRegisterCache)\r\n\t{\r\n\t\tthis.sampler2D = sampler2D;\r\n\r\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\r\n\t\tthis.samplerIndex = this.samplerReg.index;\r\n\r\n\t\tif (this.sampler2D.imageRect) {\r\n\t\t\tthis.fragmentReg = regCache.getFreeFragmentConstant();\r\n\t\t\tthis.fragmentIndex = this.fragmentReg.index*4;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar wrap:string = (shader.repeatTextures? \"wrap\":\"clamp\");\r\n\t\tvar format:string = this.getFormatString(this.sampler2D);\r\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\r\n\r\n\t\tvar temp:ShaderRegisterElement;\r\n\r\n\t\t//handles texture atlasing\r\n\t\tif (this.sampler2D.imageRect) {\r\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\r\n\r\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + this.fragmentReg + \".xy\\n\";\r\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + this.fragmentReg + \".zw\\n\";\r\n\t\t} else {\r\n\t\t\ttemp = inputReg;\r\n\t\t}\r\n\r\n\t\tcode += \"tex \" + targetReg + \", \" + temp + \", \" + this.samplerReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic activate(shader:ShaderBase)\r\n\t{\r\n\t\tthis._stage.getImageObject(this.sampler2D.image2D).activate(this.samplerIndex, this.sampler2D.repeat || shader.repeatTextures, this.sampler2D.smooth || shader.useSmoothTextures, this.sampler2D.mipmap || shader.useMipmapping);\r\n\r\n\t\tif (this.sampler2D.imageRect) {\r\n\t\t\tvar index:number = this.fragmentIndex;\r\n\t\t\tvar data:Array<number> = shader.fragmentConstantData;\r\n\t\t\tdata[index] = this.sampler2D.scaleX;\r\n\t\t\tdata[index + 1] = this.sampler2D.scaleY;\r\n\t\t\tdata[index + 2] = this.sampler2D.offsetX;\r\n\t\t\tdata[index + 3] = this.sampler2D.offsetY;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Sampler2DVO;",
    "import SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\r\n\r\n/**\r\n *\r\n * @class away.pool.BitmapObject\r\n */\r\nclass SamplerCubeVO extends SamplerVOBase\r\n{\r\n\tpublic samplerCube:SamplerCube;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tsuper(stage);\r\n\t}\r\n\r\n\tpublic initProperties(samplerCube:SamplerCube, regCache:ShaderRegisterCache)\r\n\t{\r\n\t\tthis.samplerCube = samplerCube;\r\n\r\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\r\n\r\n\t\tthis.samplerIndex = this.samplerReg.index;\r\n\t}\r\n\r\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\r\n\t{\r\n\t\tvar filter:string;\r\n\t\tvar format:string = this.getFormatString(this.samplerCube);\r\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\r\n\r\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + this.samplerReg + \" <cube,\" + format + filter + \">\\n\";\r\n\t}\r\n\r\n\tpublic activate(shader:ShaderBase)\r\n\t{\r\n\t\tthis._stage.getImageObject(this.samplerCube.imageCube).activate(this.samplerIndex, false, this.samplerCube.smooth || shader.useSmoothTextures, this.samplerCube.mipmap || shader.useMipmapping);\r\n\t}\r\n}\r\n\r\nexport = SamplerCubeVO;",
    "import SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\r\n\r\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\n\r\n\r\n/**\r\n *\r\n * @class away.pool.SamplerVOBase\r\n */\r\nclass SamplerVOBase\r\n{\r\n\tpublic _stage:Stage;\r\n\r\n\tpublic samplerReg:ShaderRegisterElement;\r\n\r\n\tpublic samplerIndex:number;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tthis._stage = stage;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a texture format string for the sample instruction.\r\n\t * @param texture The texture for which to get the format string.\r\n\t * @return\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic getFormatString(bitmap:SamplerBase):string\r\n\t{\r\n\t\tswitch (bitmap.format) {\r\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\r\n\t\t\t\treturn \"dxt1,\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\r\n\t\t\t\treturn \"dxt5,\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SamplerVOBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\r\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\r\nimport Sampler2DVO\t\t\t\t= require(\"awayjs-renderergl/lib/vos/Sampler2DVO\");\r\n\r\n/**\r\n *\r\n * @class away.pool.Single2DTextureVO\r\n */\r\nclass Single2DTextureVO extends TextureVOBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static assetClass:IAssetClass = Single2DTexture;\r\n\r\n\tprivate _single2DTexture:Single2DTexture;\r\n\r\n\tprivate _sampler2DVO:Sampler2DVO;\r\n\r\n\tconstructor(pool:TextureVOPool, single2DTexture:Single2DTexture, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, single2DTexture, stage);\r\n\r\n\t\tthis._single2DTexture = single2DTexture;\r\n\r\n\t\tthis._sampler2DVO = new Sampler2DVO(stage);\r\n\t}\r\n\r\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\r\n\t{\r\n\t\tthis._sampler2DVO.initProperties(this._single2DTexture.sampler2D, regCache);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param shader\r\n\t * @param regCache\r\n\t * @param targetReg The register in which to store the sampled colour.\r\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\r\n\t{\r\n\t\treturn this._sampler2DVO.getFragmentCode(shader, targetReg, regCache, inputReg);\r\n\t}\r\n\r\n\tpublic activate(shader:ShaderBase)\r\n\t{\r\n\t\tthis._sampler2DVO.activate(shader);\r\n\t}\r\n}\r\n\r\nexport = Single2DTextureVO;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\r\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\r\nimport SamplerCubeVO\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerCubeVO\");\r\n\r\n/**\r\n *\r\n * @class away.pool.TextureDataBase\r\n */\r\nclass SingleCubeTextureVO extends TextureVOBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static assetClass:IAssetClass = SingleCubeTexture;\r\n\r\n\r\n\tprivate _singleCubeTexture:SingleCubeTexture;\r\n\r\n\tprivate _samplerCubeVO:SamplerCubeVO;\r\n\r\n\tconstructor(pool:TextureVOPool, singleCubeTexture:SingleCubeTexture, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, singleCubeTexture, stage);\r\n\r\n\t\tthis._singleCubeTexture = singleCubeTexture;\r\n\r\n\t\tthis._samplerCubeVO = new SamplerCubeVO(stage);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shader:ShaderBase, includeInput:boolean = true)\r\n\t{\r\n\t\tif (includeInput)\r\n\t\t\tshader.usesLocalPosFragment = true;\r\n\t}\r\n\r\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\r\n\t{\r\n\t\tthis._samplerCubeVO.initProperties(this._singleCubeTexture.samplerCube, regCache);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param shader\r\n\t * @param regCache\r\n\t * @param targetReg The register in which to store the sampled colour.\r\n\t * @param uvReg The direction vector with which to sample the cube map.\r\n\t * @returns {string}\r\n\t * @private\r\n\t */\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\r\n\t{\r\n\t\treturn this._samplerCubeVO.getFragmentCode(shader, targetReg, regCache, inputReg);\r\n\t}\r\n\r\n\tpublic activate(shader:ShaderBase)\r\n\t{\r\n\t\tthis._samplerCubeVO.activate(shader);\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTextureVO;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ITextureVO\t\t\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\r\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\r\n\r\n/**\r\n *\r\n * @class away.pool.TextureVOBaseBase\r\n */\r\nclass TextureVOBase implements ITextureVO\r\n{\r\n\tprivate _pool:TextureVOPool;\r\n\tprivate _texture:TextureBase;\r\n\r\n\tpublic _stage:Stage;\r\n\r\n\tpublic invalid:boolean;\r\n\r\n\tconstructor(pool:TextureVOPool, texture:TextureBase, stage:Stage)\r\n\t{\r\n\t\tthis._pool = pool;\r\n\t\tthis._texture = texture;\r\n\t\tthis._stage = stage;\r\n\t}\r\n\r\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this._texture);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis.invalid = true;\r\n\t}\r\n\r\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement = null):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic activate(shader:ShaderBase)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = TextureVOBase;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nimport ITextureVOClass\t\t\t= require(\"awayjs-renderergl/lib/vos/ITextureVOClass\");\r\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\r\nimport Single2DTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/Single2DTextureVO\");\r\nimport SingleCubeTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/SingleCubeTextureVO\");\r\n\r\n/**\r\n * @class away.pool.TextureVOPool\r\n */\r\nclass TextureVOPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\tpublic static _pools:Object = new Object();\r\n\r\n\tpublic _stage:Stage;\r\n\tprivate _pool:Object = new Object();\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param textureDataClass\r\n\t */\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tthis._stage = stage;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param materialOwner\r\n\t * @returns ITexture\r\n\t */\r\n\tpublic getItem(texture:TextureBase):TextureVOBase\r\n\t{\r\n\t\treturn (this._pool[texture.id] || (this._pool[texture.id] = texture._iAddTextureVO(new (TextureVOPool.getClass(texture))(this, texture, this._stage))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param materialOwner\r\n\t */\r\n\tpublic disposeItem(texture:TextureBase)\r\n\t{\r\n\t\ttexture._iRemoveTextureVO(this._pool[texture.id]);\r\n\r\n\t\tthis._pool[texture.id] = null;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var id in this._pool)\r\n\t\t\tthis._pool[id].dispose();\r\n\r\n\t\tTextureVOPool.disposePool(this._stage);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t * @returns RenderPool\r\n\t */\r\n\tpublic static getPool(stage:Stage):TextureVOPool\r\n\t{\r\n\t\treturn (TextureVOPool._pools[stage.stageIndex] || (TextureVOPool._pools[stage.stageIndex] = new TextureVOPool(stage)));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t */\r\n\tpublic static disposePool(stage:Stage)\r\n\t{\r\n\t\tTextureVOPool._pools[stage.stageIndex] = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(textureVOClass:ITextureVOClass)\r\n\t{\r\n\t\tTextureVOPool.classPool[textureVOClass.assetClass.assetType] = textureVOClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(texture:TextureBase):ITextureVOClass\r\n\t{\r\n\t\treturn TextureVOPool.classPool[texture.assetType];\r\n\t}\r\n\r\n\tprivate static main = TextureVOPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tTextureVOPool.registerClass(Single2DTextureVO);\r\n\t\tTextureVOPool.registerClass(SingleCubeTextureVO);\r\n\t}\r\n}\r\n\r\nexport = TextureVOPool;"
  ],
  "sourceRoot": ""
}