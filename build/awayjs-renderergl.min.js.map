{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-renderergl.js","awayjs-renderergl/lib/DefaultRenderer.ts","awayjs-renderergl/lib/DepthRenderer.ts","awayjs-renderergl/lib/DistanceRenderer.ts","awayjs-renderergl/lib/Filter3DRenderer.ts","awayjs-renderergl/lib/animators/AnimationSetBase.ts","awayjs-renderergl/lib/animators/AnimatorBase.ts","awayjs-renderergl/lib/animators/ParticleAnimationSet.ts","awayjs-renderergl/lib/animators/ParticleAnimator.ts","awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts","awayjs-renderergl/lib/animators/SkeletonAnimator.ts","awayjs-renderergl/lib/animators/VertexAnimationSet.ts","awayjs-renderergl/lib/animators/VertexAnimator.ts","awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts","awayjs-renderergl/lib/animators/data/AnimationSubGeometry.ts","awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts","awayjs-renderergl/lib/animators/data/JointPose.ts","awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts","awayjs-renderergl/lib/animators/data/ParticleData.ts","awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts","awayjs-renderergl/lib/animators/data/ParticleProperties.ts","awayjs-renderergl/lib/animators/data/SkeletonJoint.ts","awayjs-renderergl/lib/animators/data/SkeletonPose.ts","awayjs-renderergl/lib/animators/data/Skeleton.ts","awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts","awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts","awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts","awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts","awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts","awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts","awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts","awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts","awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts","awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts","awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts","awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts","awayjs-renderergl/lib/animators/states/AnimationClipState.ts","awayjs-renderergl/lib/animators/states/AnimationStateBase.ts","awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts","awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts","awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts","awayjs-renderergl/lib/animators/states/ParticleColorState.ts","awayjs-renderergl/lib/animators/states/ParticleFollowState.ts","awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts","awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts","awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts","awayjs-renderergl/lib/animators/states/ParticlePositionState.ts","awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts","awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts","awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts","awayjs-renderergl/lib/animators/states/ParticleScaleState.ts","awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts","awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts","awayjs-renderergl/lib/animators/states/ParticleStateBase.ts","awayjs-renderergl/lib/animators/states/ParticleTimeState.ts","awayjs-renderergl/lib/animators/states/ParticleUVState.ts","awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts","awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts","awayjs-renderergl/lib/animators/states/SkeletonClipState.ts","awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts","awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts","awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts","awayjs-renderergl/lib/animators/states/VertexClipState.ts","awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts","awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts","awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts","awayjs-renderergl/lib/base/ParticleGeometry.ts","awayjs-renderergl/lib/base/RendererBase.ts","awayjs-renderergl/lib/compilation/DepthRenderObject.ts","awayjs-renderergl/lib/compilation/DistanceRenderObject.ts","awayjs-renderergl/lib/compilation/RegisterPool.ts","awayjs-renderergl/lib/compilation/RenderBasicMaterialObject.ts","awayjs-renderergl/lib/compilation/RenderObjectBase.ts","awayjs-renderergl/lib/compilation/RenderObjectPool.ts","awayjs-renderergl/lib/compilation/ShaderCompilerBase.ts","awayjs-renderergl/lib/compilation/ShaderLightingCompiler.ts","awayjs-renderergl/lib/compilation/ShaderLightingObject.ts","awayjs-renderergl/lib/compilation/ShaderObjectBase.ts","awayjs-renderergl/lib/compilation/ShaderRegisterCache.ts","awayjs-renderergl/lib/compilation/ShaderRegisterData.ts","awayjs-renderergl/lib/compilation/ShaderRegisterElement.ts","awayjs-renderergl/lib/compilation/SkyboxRenderObject.ts","awayjs-renderergl/lib/errors/AnimationSetError.ts","awayjs-renderergl/lib/events/AnimationStateEvent.ts","awayjs-renderergl/lib/events/AnimatorEvent.ts","awayjs-renderergl/lib/events/ShadingMethodEvent.ts","awayjs-renderergl/lib/filters/Filter3DBase.ts","awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts","awayjs-renderergl/lib/managers/DefaultMaterialManager.ts","awayjs-renderergl/lib/managers/RTTBufferManager.ts","awayjs-renderergl/lib/passes/BasicMaterialPass.ts","awayjs-renderergl/lib/passes/DepthPass.ts","awayjs-renderergl/lib/passes/DistancePass.ts","awayjs-renderergl/lib/passes/RenderPassBase.ts","awayjs-renderergl/lib/passes/SkyboxPass.ts","awayjs-renderergl/lib/pick/JSPickingCollider.ts","awayjs-renderergl/lib/pick/PickingColliderBase.ts","awayjs-renderergl/lib/pick/ShaderPicker.ts","awayjs-renderergl/lib/pool/BillboardRenderable.ts","awayjs-renderergl/lib/pool/CurveSubMeshRenderable.ts","awayjs-renderergl/lib/pool/LineSegmentRenderable.ts","awayjs-renderergl/lib/pool/LineSubMeshRenderable.ts","awayjs-renderergl/lib/pool/RenderableBase.ts","awayjs-renderergl/lib/pool/RenderablePoolBase.ts","awayjs-renderergl/lib/pool/RendererPoolBase.ts","awayjs-renderergl/lib/pool/SkyboxRenderable.ts","awayjs-renderergl/lib/pool/TriangleSubMeshRenderable.ts","awayjs-renderergl/lib/tools/commands/Merge.ts","awayjs-renderergl/lib/tools/data/ParticleGeometryTransform.ts","awayjs-renderergl/lib/utils/ParticleGeometryHelper.ts","awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts","awayjs-renderergl/lib/utils/ShaderCompilerHelper.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-renderergl\\lib\\DefaultRenderer","module","__extends","this","d","b","p","hasOwnProperty","__","constructor","prototype","Matrix3D","Vector3D","RenderTexture","ContextGLCompareMode","ContextGLClearMask","DepthRenderer","DistanceRenderer","Filter3DRenderer","RendererBase","RenderablePoolBase","SkyboxRenderable","RTTBufferManager","DefaultRenderer","_super","rendererPoolClass","stage","_skyboxProjection","_width","width","window","innerWidth","_pRttBufferManager","viewWidth","_height","height","innerHeight","viewHeight","Object","defineProperty","get","_antiAlias","set","value","_pBackBufferInvalid","enumerable","configurable","_depthPrepass","_pFilter3DRenderer","filters","dispose","_pStage","_pRequireDepthRender","requireDepthRender","_pDepthRender","render","entityCollector","recoverFromDisposal","pUpdateBackBuffer","_shareContext","_pContext","clear","DEPTH","textureRatioX","textureRatioY","pRenderSceneDepthToTexture","pRenderDepthPrepass","_iRender","_pScissorRect","present","bufferClear","pExecuteRender","target","scissorRect","surfaceSelector","updateLights","dirLights","directionalLights","pointLights","len","light","shadowMapper","castsShadows","autoUpdateShadows","_iShadowsInvalid","iRenderDepthMap","_pDepthRenderer","_pDistanceRenderer","pDraw","skyBox","setDepthTest","ALWAYS","drawSkybox","_pGetRenderObject","renderable","renderObjectOwner","getRenderObject","_pool","_skyboxRenderablePool","getItem","camera","updateSkyboxProjection","renderObject","pass","passes","activatePass","deactivatePass","near","copyFrom","_pRttViewProjectionMatrix","copyRowTo","camPos","scenePosition","cx","x","cy","y","cz","z","cw","Math","sqrt","signX","signY","inverse","clone","invert","q","transformVector","w","copyRowFrom","disableColor","_pDepthTextureInvalid","initDepthTexture","context","configureBackBuffer","iSetStage","getInstance","_pRendererPoolClass","getPool","textureWidth","textureHeight","awayjs-core/lib/geom/Matrix3D","undefined","awayjs-core/lib/geom/Vector3D","awayjs-core/lib/textures/RenderTexture","awayjs-renderergl/lib/DepthRenderer","awayjs-renderergl/lib/DistanceRenderer","awayjs-renderergl/lib/Filter3DRenderer","awayjs-renderergl/lib/base/RendererBase","awayjs-renderergl/lib/managers/RTTBufferManager","awayjs-renderergl/lib/pool/RenderablePoolBase","awayjs-renderergl/lib/pool/SkyboxRenderable","awayjs-stagegl/lib/base/ContextGLClearMask","awayjs-stagegl/lib/base/ContextGLCompareMode","awayjs-renderergl\\lib\\DepthRenderer","_iBackgroundR","_iBackgroundG","_iBackgroundB","getDepthRenderObject","awayjs-renderergl\\lib\\DistanceRenderer","getDistanceRenderObject","awayjs-renderergl\\lib\\Filter3DRenderer","Event","ContextGLBlendFactor","ContextGLVertexBufferFormat","_this","_filterSizesInvalid","_onRTTResizeDelegate","event","onRTTResize","_stage","_rttManager","addEventListener","RESIZE","_requireDepthRender","getMainInputTexture","_filterTasksInvalid","updateFilterTasks","_mainInputTexture","_filters","updateFilterSizes","_tasks","Array","filter","setRenderTargets","concat","tasks","depthTexture","task","indexBuffer","vertexBuffer","renderToTextureVertexBuffer","update","setVertexBufferAt","FLOAT_2","renderToScreenVertexBuffer","setTextureAt","setProgram","getProgram","activate","setBlendFactors","ONE","ZERO","drawTriangles","deactivate","removeEventListener","awayjs-core/lib/events/Event","awayjs-stagegl/lib/base/ContextGLBlendFactor","awayjs-stagegl/lib/base/ContextGLVertexBufferFormat","awayjs-renderergl\\lib\\animators\\AnimationSetBase","AssetType","NamedAssetBase","AbstractMethodError","AnimationSetError","AnimationSetBase","_animations","_animationNames","_animationDictionary","_pFindTempReg","exclude","excludeAnother","reg","indexOf","_usesCPU","resetGPUCompatibility","cancelGPUCompatibility","getAGALVertexCode","shaderObject","getAGALFragmentCode","shadedTarget","getAGALUVCode","doneAGALCode","ANIMATION_SET","hasAnimation","name","getAnimation","addAnimation","node","push","awayjs-core/lib/errors/AbstractMethodError","awayjs-core/lib/library/AssetType","awayjs-core/lib/library/NamedAssetBase","awayjs-renderergl/lib/errors/AnimationSetError","awayjs-renderergl\\lib\\animators\\AnimatorBase","RequestAnimationFrame","getTimer","AnimatorEvent","AnimatorBase","animationSet","_autoUpdate","_time","_playbackSpeed","_pOwners","_pAbsoluteTime","_animationStates","updatePosition","_pAnimationSet","_broadcaster","onEnterFrame","getAnimationState","className","stateClass","uID","id","getAnimationStateByName","_pActiveState","_pActiveAnimationName","start","stop","phase","setRenderState","vertexConstantOffset","vertexStreamOffset","_isPlaying","hasEventListener","START","_startEvent","dispatchEvent","STOP","_stopEvent","time","dt","playbackSpeed","_pUpdateDeltaTime","reset","offset","addOwner","mesh","removeOwner","splice","applyPositionDelta","delta","positionDelta","dist","translateLocal","dispatchCycleEvent","CYCLE_COMPLETE","_cycleEvent","testGPUCompatibility","ANIMATOR","getRenderableSubGeometry","sourceSubGeometry","awayjs-core/lib/utils/RequestAnimationFrame","awayjs-core/lib/utils/getTimer","awayjs-renderergl/lib/events/AnimatorEvent","awayjs-renderergl\\lib\\animators\\ParticleAnimationSet","AnimationRegisterCache","AnimationSubGeometry","ParticleAnimationData","ParticleProperties","ParticlePropertiesMode","ParticleTimeNode","ParticleAnimationSet","usesDuration","usesLooping","usesDelay","_animationSubGeometries","_particleNodes","_localDynamicNodes","_localStaticNodes","_totalLenOfOneVertex","_timeNode","_iProcessAnimationSetting","mode","LOCAL_STATIC","_iDataOffset","dataLength","LOCAL_DYNAMIC","priority","_iAnimationRegisterCache","animationRegisterCache","profile","numUsedVertexConstants","vertexAttributesOffset","numUsedStreams","varyingsOffset","numUsedVaryings","fragmentConstantOffset","numUsedFragmentConstants","hasUVNode","needVelocity","hasBillboard","sourceRegisters","animatableAttributes","targetRegisters","animationTargetRegisters","needFragmentAnimation","usesFragmentAnimation","needUVAnimation","usesUVTransform","hasColorAddNode","hasColorMulNode","getInitCode","POST_PRIORITY","getCombinationCode","COLOR_PRIORITY","initColorRegisters","getColorPassCode","setUVSourceAndTarget","uvSource","uvTarget","uvAttribute","toString","uvVar","getColorCombinationCode","setDataLength","setVertexConst","vertexZeroConst","index","key","getAnimationSubGeometry","subMesh","parentMesh","animationSubGeometry","subGeometry","_iGenerateAnimationSubGeometries","initParticleFunc","geometry","j","k","newAnimationSubGeometry","localNode","subMeshes","shareAnimationGeometry","createVertexData","numVertices","particles","particlesLength","numParticles","particleProperties","particle","oneDataLen","oneDataOffset","counterForVertex","counterForOneData","oneData","vertexData","vertexLength","startingOffset","vertexOffset","total","startTime","duration","delay","initParticleScope","_iGeneratePropertyOfOneParticle","particleIndex","numProcessedVertices","animationParticles","awayjs-renderergl/lib/animators/AnimationSetBase","awayjs-renderergl/lib/animators/data/AnimationRegisterCache","awayjs-renderergl/lib/animators/data/AnimationSubGeometry","awayjs-renderergl/lib/animators/data/ParticleAnimationData","awayjs-renderergl/lib/animators/data/ParticleProperties","awayjs-renderergl/lib/animators/data/ParticlePropertiesMode","awayjs-renderergl/lib/animators/nodes/ParticleTimeNode","awayjs-renderergl\\lib\\animators\\ParticleAnimator","ContextGLProgramType","ParticleAnimator","particleAnimationSet","_animationParticleStates","_animatorParticleStates","_timeParticleStates","_animatorSubGeometries","_particleAnimationSet","state","particleNodes","needUpdateTime","animatorSubGeometry","getAnimatorSubGeometry","setProgramConstantsFromArray","VERTEX","vertexConstantData","numVertexConstant","numFragmentConstant","FRAGMENT","fragmentConstantData","resetTime","awayjs-renderergl/lib/animators/AnimatorBase","awayjs-stagegl/lib/base/ContextGLProgramType","awayjs-renderergl\\lib\\animators\\SkeletonAnimationSet","SkeletonAnimationSet","jointsPerVertex","_jointsPerVertex","indexOffset0","indexOffset1","indexOffset2","indexStream","weightStream","indices","weights","temp1","temp2","dot","src","awayjs-renderergl\\lib\\animators\\SkeletonAnimator","TriangleSubGeometry","SubGeometryEvent","JointPose","SkeletonPose","AnimationStateEvent","SkeletonAnimator","skeleton","forceCPU","_globalPose","_morphedSubGeometry","_morphedSubGeometryDirty","_skeleton","_forceCPU","_numJoints","numJoints","_globalMatrices","_onTransitionCompleteDelegate","onTransitionComplete","_onIndicesUpdateDelegate","onIndicesUpdate","_onVerticesUpdateDelegate","onVerticesUpdate","_globalPropertiesDirty","updateGlobalProperties","_useCondensedIndices","play","transition","NaN","_pActiveNode","getAnimationNode","TRANSITION_COMPLETE","_activeSkeletonState","isNaN","useCondensedIndices","updateCondensedMatrices","condensedIndexLookUp","numCondensedJoints","_condensedMatrices","usesCPU","morphSubGeometry","activateBuffer","getVertexData","JOINT_INDEX_DATA","getVertexOffset","JOINT_INDEX_FORMAT","JOINT_WEIGHT_DATA","JOINT_WEIGHT_FORMAT","srcIndex","localToGlobalPose","getSkeletonPose","mtxOffset","globalPoses","jointPoses","raw","ox","oy","oz","ow","xy2","xz2","xw2","yz2","yw2","zw2","n11","n12","n13","n21","n22","n23","n31","n32","n33","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","joints","pose","quat","vec","orientation","translation","inverseBindPose","targetSubGeometry","autoDeriveNormals","autoDeriveTangents","autoDeriveUVs","INDICES_UPDATED","VERTICES_UPDATED","sourcePositions","positions","sourceNormals","vertexNormals","sourceTangents","vertexTangents","jointIndices","jointWeights","targetPositions","targetNormals","targetTangents","vx","vy","vz","nx","ny","nz","tx","ty","tz","weight","vertX","vertY","vertZ","normX","normY","normZ","tangX","tangY","tangZ","updatePositions","updateVertexNormals","updateVertexTangents","sourcePose","targetPose","globalJointPose","numJointPoses","parentIndex","joint","parentPose","or","tr","x1","y1","z1","w1","x2","y2","z2","w2","x3","y3","z3","type","animationNode","animationState","updateIndices","morphGeometry","dataType","UV_DATA","updateUVs","uvs","SECONDARY_UV_DATA","secondaryUVs","awayjs-display/lib/base/TriangleSubGeometry","awayjs-display/lib/events/SubGeometryEvent","awayjs-renderergl/lib/animators/data/JointPose","awayjs-renderergl/lib/animators/data/SkeletonPose","awayjs-renderergl/lib/events/AnimationStateEvent","awayjs-renderergl\\lib\\animators\\VertexAnimationSet","VertexAnimationMode","VertexAnimationSet","numPoses","blendMode","_numPoses","_blendMode","ABSOLUTE","getAbsoluteAGALCode","getAdditiveAGALCode","regs","constantReg","streamIndex","tangentDependencies","outputsNormals","normalDependencies","awayjs-renderergl/lib/animators/data/VertexAnimationMode","awayjs-renderergl\\lib\\animators\\VertexAnimator","VertexDataPool","VertexAnimator","vertexAnimationSet","_poses","_weights","_vertexAnimationSet","_activeVertexState","geometryFlag","currentGeometry","nextGeometry","blendWeight","_iInvalidateRenderableGeometries","setNullPose","subGeom","subGeometries","_iIndex","getIndexData","POSITION_DATA","getOffset","POSITION_FORMAT","NORMAL_DATA","NORMAL_FORMAT","awayjs-stagegl/lib/pool/VertexDataPool","awayjs-renderergl\\lib\\animators\\data\\AnimationRegisterCache","ShaderRegisterCache","ShaderRegisterElement","indexDictionary","rotationRegisters","positionAttribute","getRegisterFromString","scaleAndRotateTarget","addVertexTempUsages","regName","getFreeVertexConstant","vertexOneConst","vertexTwoConst","positionTarget","getFreeVertexVectorTemp","velocityTarget","vertexTime","vertexLife","tempTime","UVAttribute","UVVaring","setRegisterIndex","parameterIndex","registerIndex","getRegisterIndex","colorMulTarget","colorMulVary","getFreeVarying","colorAddTarget","colorAddVary","colorTarget","addFragmentTempUsages","temp","split","parseInt","_numVertexConstant","_numFragmentConstant","_index","setVertexConstFromArray","data","setVertexConstFromMatrix","matrix","rawData","setFragmentConst","awayjs-renderergl/lib/compilation/ShaderRegisterCache","awayjs-renderergl/lib/compilation/ShaderRegisterElement","awayjs-renderergl\\lib\\animators\\data\\AnimationSubGeometry","_pVertexBuffer","_pBufferContext","_pBufferDirty","previousTime","Number","NEGATIVE_INFINITY","_iUniqueId","SUBGEOM_ID_COUNT","totalLenOfOneVertex","_numVertices","_pVertexData","activateVertexBuffer","bufferOffset","format","contextIndex","stageIndex","buffer","createVertexBuffer","uploadFromArray","pop","invalidateBuffer","awayjs-renderergl\\lib\\animators\\data\\ColorSegmentPoint","ColorSegmentPoint","life","color","_life","_color","awayjs-renderergl\\lib\\animators\\data\\JointPose","Quaternion","toMatrix3D","appendTranslation","awayjs-core/lib/geom/Quaternion","awayjs-renderergl\\lib\\animators\\data\\ParticleAnimationData","totalTime","startVertexIndex","awayjs-renderergl\\lib\\animators\\data\\ParticleData","ParticleData","awayjs-renderergl\\lib\\animators\\data\\ParticlePropertiesMode","GLOBAL","awayjs-renderergl\\lib\\animators\\data\\ParticleProperties","awayjs-renderergl\\lib\\animators\\data\\SkeletonJoint","SkeletonJoint","awayjs-renderergl\\lib\\animators\\data\\SkeletonPose","SKELETON_POSE","jointPoseFromName","jointName","jointPoseIndex","jointPoseIndexFromName","jointPose","cloneJointPose","thisJointPose","awayjs-renderergl\\lib\\animators\\data\\Skeleton","Skeleton","jointFromName","jointIndex","jointIndexFromName","SKELETON","awayjs-renderergl\\lib\\animators\\data\\VertexAnimationMode","ADDITIVE","awayjs-renderergl\\lib\\animators\\nodes\\AnimationClipNodeBase","AnimationNodeBase","AnimationClipNodeBase","_pLooping","_pTotalDuration","_pStitchDirty","_pStitchFinalFrame","_pNumFrames","_pDurations","_pTotalDelta","fixedFrameRate","_pUpdateStitch","_pLastFrame","awayjs-display/lib/animators/nodes/AnimationNodeBase","awayjs-renderergl\\lib\\animators\\nodes\\ParticleAccelerationNode","ParticleNodeBase","ParticleAccelerationState","ParticleAccelerationNode","acceleration","_pStateClass","_acceleration","pGetAGALVertexCode","accelerationValue","_pMode","getFreeVertexAttribute","ACCELERATION_INDEX","removeVertexTempUsage","animator","param","tempAcceleration","ACCELERATION_VECTOR3D","_pOneData","awayjs-renderergl/lib/animators/nodes/ParticleNodeBase","awayjs-renderergl/lib/animators/states/ParticleAccelerationState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleBezierCurveNode","ParticleBezierCurveState","ParticleBezierCurveNode","controlPoint","endPoint","_iControlPoint","_iEndPoint","controlValue","BEZIER_CONTROL_INDEX","endValue","BEZIER_END_INDEX","rev_time","time_2","time_temp","distance","bezierControl","BEZIER_CONTROL_VECTOR3D","bezierEnd","BEZIER_END_VECTOR3D","awayjs-renderergl/lib/animators/states/ParticleBezierCurveState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleBillboardNode","ParticleBillboardState","ParticleBillboardNode","billboardAxis","_iBillboardAxis","rotationMatrixRegister","MATRIX_INDEX","shaderRegisterElement","awayjs-renderergl/lib/animators/states/ParticleBillboardState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleColorNode","ColorTransform","ParticleColorState","ParticleColorNode","usesMultiplier","usesOffset","usesCycle","usesPhase","startColor","endColor","cycleDuration","cyclePhase","_iUsesMultiplier","_iUsesOffset","_iUsesCycle","_iUsesPhase","_iStartColor","_iEndColor","_iCycleDuration","_iCyclePhase","cycleConst","CYCLE_INDEX","sin","getFreeVertexSingleTemp","startMultiplierValue","deltaMultiplierValue","START_MULTIPLIER_INDEX","DELTA_MULTIPLIER_INDEX","startOffsetValue","deltaOffsetValue","START_OFFSET_INDEX","DELTA_OFFSET_INDEX","COLOR_START_COLORTRANSFORM","COLOR_END_COLORTRANSFORM","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","awayjs-core/lib/geom/ColorTransform","awayjs-renderergl/lib/animators/ParticleAnimationSet","awayjs-renderergl/lib/animators/states/ParticleColorState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleFollowNode","ParticleFollowState","ParticleFollowNode","usesPosition","usesRotation","smooth","_iUsesPosition","_iUsesRotation","_iSmooth","rotationAttribute","FOLLOW_ROTATION_INDEX","temp3","temp4","FOLLOW_POSITION_INDEX","awayjs-renderergl/lib/animators/states/ParticleFollowState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleInitialColorNode","ParticleInitialColorState","ParticleInitialColorNode","initialColor","_iInitialColor","multiplierValue","MULTIPLIER_INDEX","offsetValue","OFFSET_INDEX","COLOR_INITIAL_COLORTRANSFORM","awayjs-renderergl/lib/animators/states/ParticleInitialColorState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleNodeBase","_pDataLength","MODES","_priority",1,2,"awayjs-renderergl\\lib\\animators\\nodes\\ParticleOrbitNode","ParticleOrbitState","ParticleOrbitNode","usesEulers","radius","eulers","_iUsesEulers","_iRadius","_iEulers","orbitRegister","ORBIT_INDEX","eulersMatrixRegister","EULERS_INDEX","cos","degree","orbit","ORBIT_VECTOR3D","PI","awayjs-renderergl/lib/animators/states/ParticleOrbitState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleOscillatorNode","ParticleOscillatorState","ParticleOscillatorNode","oscillator","_iOscillator","oscillatorRegister","OSCILLATOR_INDEX","dgree","drift","OSCILLATOR_VECTOR3D","awayjs-renderergl/lib/animators/states/ParticleOscillatorState","awayjs-renderergl\\lib\\animators\\nodes\\ParticlePositionNode","ParticlePositionState","ParticlePositionNode","position","_iPosition","POSITION_INDEX","POSITION_VECTOR3D","awayjs-renderergl/lib/animators/states/ParticlePositionState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleRotateToHeadingNode","ParticleRotateToHeadingState","ParticleRotateToHeadingNode","nrmVel","xAxis","R","R_rev","cos2","tempSingle","awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleRotateToPositionNode","ParticleRotateToPositionState","ParticleRotateToPositionNode","nrmDirection","o_temp","awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleRotationalVelocityNode","ParticleRotationalVelocityState","ParticleRotationalVelocityNode","rotationalVelocity","_iRotationalVelocity","rotationRegister","ROTATIONALVELOCITY_INDEX","Rtemp","rotate","ROTATIONALVELOCITY_VECTOR3D","normalize","awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleScaleNode","ParticleScaleState","ParticleScaleNode","minScale","maxScale","_iMinScale","_iMaxScale","scaleRegister","SCALE_INDEX","scale","SCALE_VECTOR3D","abs","awayjs-renderergl/lib/animators/states/ParticleScaleState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleSegmentedColorNode","ParticleSegmentedColorState","ParticleSegmentedColorNode","numSegmentPoint","segmentPoints","_iNumSegmentPoint","_iSegmentPoints","accMultiplierColor","tempColor","accTime","lifeTimeRegister","TIME_DATA_INDEX","startMulValue","deltaMulValues","deltaOffsetValues","awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleSpriteSheetNode","ParticleSpriteSheetState","ParticleSpriteSheetNode","numColumns","numRows","totalFrames","MAX_VALUE","_iNumColumns","_iNumRows","_iTotalFrames","min","uvParamConst1","uvParamConst2","UV_INDEX_0","UV_INDEX_1","uTotal","uStep","vStep","uSpeed","cycle","phaseTime","vOffset","v","uvCycle","UV_VECTOR3D","awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleTimeNode","ParticleTimeState","_iUsesDuration","_iUsesLooping","_iUsesDelay","timeStreamRegister","TIME_STREAM_INDEX","timeConst","TIME_CONSTANT_INDEX","div","sge","awayjs-renderergl/lib/animators/states/ParticleTimeState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleUVNode","ParticleUVState","ParticleUVNode","axis","_cycle","_scale","_axis","updateUVData","uvConst","UV_INDEX","axisIndex","_iUvData","U_AXIS","V_AXIS","awayjs-renderergl/lib/animators/states/ParticleUVState","awayjs-renderergl\\lib\\animators\\nodes\\ParticleVelocityNode","ParticleVelocityState","ParticleVelocityNode","velocity","_iVelocity","velocityValue","VELOCITY_INDEX","_tempVelocity","VELOCITY_VECTOR3D","awayjs-renderergl/lib/animators/states/ParticleVelocityState","awayjs-renderergl\\lib\\animators\\nodes\\SkeletonBinaryLERPNode","SkeletonBinaryLERPState","SkeletonBinaryLERPNode","awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState","awayjs-renderergl\\lib\\animators\\nodes\\SkeletonClipNode","SkeletonClipState","SkeletonClipNode","_frames","highQuality","addFrame","skeletonPose","p1","p2","subtract","awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase","awayjs-renderergl/lib/animators/states/SkeletonClipState","awayjs-renderergl\\lib\\animators\\nodes\\SkeletonDifferenceNode","SkeletonDifferenceState","SkeletonDifferenceNode","awayjs-renderergl/lib/animators/states/SkeletonDifferenceState","awayjs-renderergl\\lib\\animators\\nodes\\SkeletonDirectionalNode","SkeletonDirectionalState","SkeletonDirectionalNode","awayjs-renderergl/lib/animators/states/SkeletonDirectionalState","awayjs-renderergl\\lib\\animators\\nodes\\SkeletonNaryLERPNode","SkeletonNaryLERPState","SkeletonNaryLERPNode","_iInputs","_numInputs","getInputIndex","input","getInputAt","addInput","awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState","awayjs-renderergl\\lib\\animators\\nodes\\VertexClipNode","VertexClipState","VertexClipNode","_translations","awayjs-renderergl/lib/animators/states/VertexClipState","awayjs-renderergl\\lib\\animators\\states\\AnimationClipState","AnimationStateBase","AnimationClipState","animationClipNode","_pFramesDirty","_animationClipNode","_pUpdateFrames","_pBlendWeight","_pCurrentFrame","_pNextFrame","looping","_pStartTime","totalDuration","_pTime","_pUpdateTime","_pTimeDir","lastFrame","notifyPlaybackComplete","floor","dur","frameTime","durations","_animationStatePlaybackComplete","PLAYBACK_COMPLETE","_pAnimator","awayjs-renderergl/lib/animators/states/AnimationStateBase","awayjs-renderergl\\lib\\animators\\states\\AnimationStateBase","_pRootDelta","_pPositionDeltaDirty","_pAnimationNode","_pUpdatePositionDelta","awayjs-renderergl\\lib\\animators\\states\\IAnimationState","awayjs-renderergl\\lib\\animators\\states\\ISkeletonAnimationState","awayjs-renderergl\\lib\\animators\\states\\IVertexAnimationState","awayjs-renderergl\\lib\\animators\\states\\ParticleAccelerationState","ParticleStateBase","particleAccelerationNode","_particleAccelerationNode","updateAccelerationData","FLOAT_3","_halfAcceleration","awayjs-renderergl/lib/animators/states/ParticleStateBase","awayjs-renderergl\\lib\\animators\\states\\ParticleBezierCurveState","particleBezierCurveNode","_particleBezierCurveNode","_controlPoint","_endPoint","controlIndex","endIndex","awayjs-renderergl\\lib\\animators\\states\\ParticleBillboardState","MathConsts","Orientation3D","particleNode","_matrix","_billboardAxis","comps","pos","sourceEntity","sceneTransform","look","right","crossProduct","decompose","AXIS_ANGLE","copyColumnFrom","appendRotation","RADIANS_TO_DEGREES","append","inverseSceneTransform","identity","awayjs-core/lib/geom/MathConsts","awayjs-core/lib/geom/Orientation3D","awayjs-renderergl\\lib\\animators\\states\\ParticleColorState","particleColorNode","_particleColorNode","_usesMultiplier","_usesOffset","_usesCycle","_usesPhase","_startColor","_endColor","_cycleDuration","_cyclePhase","updateColorData","dataOffset","_cycleData","FLOAT_4","_startMultiplierData","_deltaMultiplierData","_startOffsetData","_deltaOffsetData","awayjs-renderergl\\lib\\animators\\states\\ParticleFollowState","particleFollowNode","_targetPos","_targetEuler","_temp","_particleFollowNode","_smooth","_followTarget","transform","scaleX","scaleY","scaleZ","rotationX","rotationY","rotationZ","scaleBy","DEGREES_TO_RADIANS","_prePos","_preEuler","currentTime","deltaTime","needProcess","processPositionAndRotation","processPosition","precessRotation","changed","interpolatedPos","posVelocity","inc","add","interpolatedRotation","rotationVelocity","awayjs-renderergl\\lib\\animators\\states\\ParticleInitialColorState","particleInitialColorNode","_particleInitialColorNode","_initialColor","_multiplierData","_offsetData","awayjs-renderergl\\lib\\animators\\states\\ParticleOrbitState","particleOrbitNode","_particleOrbitNode","_usesEulers","_eulers","_radius","updateOrbitData","_orbitData","_eulersMatrix","X_AXIS","Y_AXIS","Z_AXIS","awayjs-renderergl\\lib\\animators\\states\\ParticleOscillatorState","particleOscillatorNode","_particleOscillatorNode","_oscillator","updateOscillatorData","_oscillatorData","awayjs-renderergl\\lib\\animators\\states\\ParticlePositionState","particlePositionNode","_particlePositionNode","_position","getPositions","_pDynamicProperties","setPositions","_pDynamicPropertiesDirty","_pUpdateDynamicProperties","awayjs-renderergl\\lib\\animators\\states\\ParticleRotateToHeadingState","awayjs-renderergl\\lib\\animators\\states\\ParticleRotateToPositionState","particleRotateToPositionNode","_particleRotateToPositionNode","_offset","awayjs-renderergl\\lib\\animators\\states\\ParticleRotationalVelocityState","particleRotationNode","_particleRotationalVelocityNode","_rotationalVelocity","updateRotationalVelocityData","getRotationalVelocities","setRotationalVelocities","_rotationalVelocityData","rotation","awayjs-renderergl\\lib\\animators\\states\\ParticleScaleState","particleScaleNode","_particleScaleNode","_minScale","_maxScale","updateScaleData","_scaleData","awayjs-renderergl\\lib\\animators\\states\\ParticleSegmentedColorState","particleSegmentedColorNode","_segmentPoints","_numSegmentPoint","_timeLifeData","awayjs-renderergl\\lib\\animators\\states\\ParticleSpriteSheetState","particleSpriteSheetNode","_particleSpriteSheetNode","_totalFrames","_numColumns","_numRows","updateSpriteSheetData","_spriteSheetData","awayjs-renderergl\\lib\\animators\\states\\ParticleStateBase","_particleNode","_pNeedUpdateTime","animationParticle","awayjs-renderergl\\lib\\animators\\states\\ParticleTimeState","particleTimeNode","_particleTimeNode","particleTime","awayjs-renderergl\\lib\\animators\\states\\ParticleUVState","particleUVNode","_particleUVNode","awayjs-renderergl\\lib\\animators\\states\\ParticleVelocityState","particleVelocityNode","_particleVelocityNode","_velocity","getVelocities","setVelocities","awayjs-renderergl\\lib\\animators\\states\\SkeletonBinaryLERPState","skeletonAnimationNode","_blendWeight","_skeletonPose","_skeletonPoseDirty","_skeletonAnimationNode","_inputA","inputA","_inputB","inputB","updateSkeletonPose","deltA","deltB","endPose","endPoses","poses1","poses2","pose1","pose2","lerp","awayjs-renderergl\\lib\\animators\\states\\SkeletonClipState","skeletonClipNode","_rootPos","_skeletonClipNode","frames","_currentPose","_nextPose","currentPose","nextPose","slerp","p3","totalDelta","_pOldFrame","dx","dy","dz","stitchFinalFrame","awayjs-renderergl/lib/animators/states/AnimationClipState","awayjs-renderergl\\lib\\animators\\states\\SkeletonDifferenceState","_baseInput","baseInput","_differenceInput","differenceInput","basePoses","diffPoses","base","diff","basePos","diffPos","_tempQuat","multiply","awayjs-renderergl\\lib\\animators\\states\\SkeletonDirectionalState","_direction","_blendDirty","_forward","forward","_backward","backward","_left","left","_right","updateBlend","_pUdateTime","awayjs-renderergl\\lib\\animators\\states\\SkeletonNaryLERPState","_blendWeights","_inputs","numInputs","getBlendWeightAt","setBlendWeightAt","poses","endTr","endQuat","firstPose","w0","x0","y0","z0","awayjs-renderergl\\lib\\animators\\states\\VertexClipState","vertexClipNode","_vertexClipNode","_currentGeometry","_nextGeometry","awayjs-renderergl\\lib\\animators\\transitions\\CrossfadeTransitionNode","CrossfadeTransitionState","CrossfadeTransitionNode","awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode","awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState","awayjs-renderergl\\lib\\animators\\transitions\\CrossfadeTransitionState","_crossfadeTransitionNode","startBlend","blendSpeed","_animationStateTransitionComplete","awayjs-renderergl\\lib\\animators\\transitions\\CrossfadeTransition","CrossfadeTransition","startNode","endNode","crossFadeTransitionNode","awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode","awayjs-renderergl\\lib\\animators\\transitions\\IAnimationTransition","awayjs-renderergl\\lib\\base\\ParticleGeometry","Geometry","ParticleGeometry","apply","arguments","awayjs-display/lib/base/Geometry","awayjs-renderergl\\lib\\base\\RendererBase","Point","Rectangle","EventDispatcher","RenderableMergeSort","RendererEvent","StageEvent","EntityCollector","DefaultMaterialManager","AGALMiniAssembler","StageManager","RendererPoolBase","_numUsedStreams","_numUsedTextures","_viewPort","_backgroundR","_backgroundG","_backgroundB","_backgroundAlpha","_localPos","_globalPos","_pNumTriangles","_disableColor","_renderBlended","_onViewportUpdatedDelegate","onViewportUpdated","_onContextUpdateDelegate","onContextUpdate","renderableSorter","_rendererPool","getFreeStage","updateGlobalPos","notifyScissorUpdate","shader","numUsedTextures","programData","program","createProgram","vertexByteCode","assemble","vertexString","fragmentByteCode","fragmentString","upload","_iActivate","_iDeactivate","_iCreateEntityCollector","CONTEXT_CREATED","CONTEXT_RECREATED","VIEWPORT_UPDATED","_viewportDirty","_scissorDirty","viewProjection","appendScale","_iRenderCascades","numCascades","scissorRects","cameras","pCollectRenderables","setRenderTarget","LESS","head","_pOpaqueRenderableHead","first","LESS_EQUAL","_pBlendedRenderableHead","item","entityHead","_pCamera","_iEntryPoint","_pCameraForward","forwardVector","entity","_iCollectRenderables","next","sortOpaqueRenderables","sortBlendedRenderables","_snapshotRequired","_snapshotBitmapData","drawToBitmapData","queueSnapshot","bmd","setColorMask","drawRenderables","renderable2","_renderObjectOwner","alphaThreshold","_scissorUpdated","SCISSOR_UPDATED","notifyViewportUpdate","_viewPortUpdated","viewPort","applyRenderable","getDefaultMaterial","renderableOwner","renderObjectId","renderOrderId","cascaded","zIndex","zOffset","dotProduct","renderSceneTransform","getRenderSceneTransform","requiresBlending","numTriangles","overflow","awayjs-core/lib/events/EventDispatcher","awayjs-core/lib/geom/Point","awayjs-core/lib/geom/Rectangle","awayjs-display/lib/events/RendererEvent","awayjs-display/lib/events/StageEvent","awayjs-display/lib/managers/DefaultMaterialManager","awayjs-display/lib/sort/RenderableMergeSort","awayjs-display/lib/traverse/EntityCollector","awayjs-renderergl/lib/pool/RendererPoolBase","awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler","awayjs-stagegl/lib/managers/StageManager","awayjs-renderergl\\lib\\compilation\\DepthRenderObject","RenderObjectBase","DepthPass","DepthRenderObject","pool","renderableClass","_pAddScreenPass","awayjs-renderergl/lib/compilation/RenderObjectBase","awayjs-renderergl/lib/passes/DepthPass","awayjs-renderergl\\lib\\compilation\\DistanceRenderObject","DistancePass","DistanceRenderObject","awayjs-renderergl/lib/passes/DistancePass","awayjs-renderergl\\lib\\compilation\\IRenderObjectClass","awayjs-renderergl\\lib\\compilation\\RegisterPool","RegisterPool","regCount","persistent","_regName","_regCount","_persistent","initRegisters","requestFreeVectorReg","isRegisterUsed","_usedVectorCount","_vectorRegisters","requestFreeRegComponent","_usedSingleCount","_registerComponents","addUsage","register","usageCount","_component","removeUsage","hasRegisteredRegs","hash","_initPool","_regPool","_regCompsPool","_initArray","vectorRegisters","registerComponents","val","c","awayjs-renderergl\\lib\\compilation\\RenderBasicMaterialObject","BlendMode","BasicMaterialPass","RenderBasicMaterialObject","material","_material","_screenPass","_pUpdateRenderObject","_pRequiresBlending","NORMAL","alphaBlending","colorTransform","preserveAlpha","setBlendMode","LAYER","awayjs-core/lib/base/BlendMode","awayjs-renderergl/lib/passes/BasicMaterialPass","awayjs-renderergl\\lib\\compilation\\RenderObjectBase","_forceSeparateMVP","_invalidAnimation","_invalidRenderObject","_passes","_renderableClass","_onPassChangeDelegate","onPassChange","_updateAnimation","_renderOrderId","_iIncludeDependencies","useMipmapping","mipmap","useSmoothTextures","assetType","MATERIAL","useAlphaPremultiplied","alphaPremultiplied","useBothSides","bothSides","repeatTextures","repeat","animateUVs","texture","_pClearScreenPasses","disposeItem","invalidateRenderObject","invalidatePasses","invalidatePass","invalidateAnimation","enabledGPUAnimation","_getEnabledGPUAnimation","mult","usesAnimation","invalidateProgram","_pRemoveScreenPass","CHANGE","owners","iOwners","numOwners","awayjs-renderergl\\lib\\compilation\\RenderObjectPool","RenderObjectPool","renderObjectClass","_renderObjectPool","_renderObjectClass","_iAddRenderObject","_iRemoveRenderObject","awayjs-renderergl\\lib\\compilation\\ShaderCompilerBase","ShaderRegisterData","ShaderCompilerBase","renderPass","_pVertexCode","_pFragmentCode","_pPostAnimationFragmentCode","_pRenderableClass","_pRenderPass","_pShaderObject","_pSharedRegisters","_pRegisterCache","compile","pIncludeDependencies","pInitRegisterIndices","pCompileDependencies","_iGetVertexCode","_iGetFragmentCode","fragmentOutputRegister","removeFragmentTempUsage","initConstantData","_pAnimatableAttributes","_pAnimationTargetRegisters","_uvSource","_uvTarget","_iInitConstantData","_pOutputsNormals","outputsTangentNormals","_pOutputsTangentNormals","usesTangentSpace","_pUsesTangentSpace","viewDirDependencies","globalPosDependencies","getFreeFragmentVectorTemp","compileGlobalPositionCode","localPosDependencies","compileLocalPositionCode","uvDependencies","compileUVCode","secondaryUVDependencies","compileSecondaryUVCode","compileNormalCode","compileViewDirCode","_iGetPreLightingVertexCode","_iGetPreLightingFragmentCode","globalPositionVertex","sceneMatrixReg","sceneMatrixIndex","localPosition","usesGlobalPosFragment","globalPositionVarying","localPositionVarying","uvAttributeReg","uvBufferIndex","varying","uvVarying","uvTransform1","uvTransform2","uvTransformIndex","secondaryUVBufferIndex","secondaryUVVarying","cameraPositionReg","viewDirVarying","viewDirFragment","cameraPositionIndex","animatedTangent","normalFragment","_iGetNormalVertexCode","_iGetNormalFragmentCode","normalMatrix","sceneNormalMatrixIndex","normalVarying","animatedNormal","bitangent","tangentVarying","bitangentVarying","normalInput","commons","getFreeFragmentConstant","commonsDataIndex","tangentInput","tangentBufferIndex","normalBufferIndex","colorDependencies","colorInput","colorBufferIndex","colorVarying","awayjs-renderergl/lib/compilation/ShaderRegisterData","awayjs-renderergl\\lib\\compilation\\ShaderLightingCompiler","ShaderLightingCompiler","renderLightingPass","shaderLightingObject","_shaderLightingObject","_renderLightingPass","usesShadows","pCompileShadowCode","usesLights","initLightRegisters","compileLightCode","usesProbes","compileLightProbeCode","_iGetPostLightingVertexCode","_iGetPostLightingFragmentCode","shadowTarget","_dirLightVertexConstants","lightVertexConstantIndex","_pointLightVertexConstants","_dirLightFragmentConstants","lightFragmentConstantIndex","_pointLightFragmentConstants","diffuseColorReg","specularColorReg","lightPosReg","lightDirReg","vertexRegIndex","fragmentRegIndex","addSpec","usesLightsForSpecular","addDiff","usesLightsForDiffuse","numDirectionalLights","lightVarying","_iGetPerLightDiffuseFragmentCode","_iGetPerLightSpecularFragmentCode","numPointLights","usesLightFallOff","weightReg","weightComponents","weightRegisters","texReg","usesProbesForSpecular","usesProbesForDiffuse","lightProbeDiffuseIndices","lightProbeSpecularIndices","_pNumProbeRegisters","probeWeightsIndex","numLightProbes","getFreeTextureReg","_iGetPerProbeDiffuseFragmentCode","_iGetPerProbeSpecularFragmentCode","ceil","awayjs-renderergl/lib/compilation/ShaderCompilerBase","awayjs-renderergl\\lib\\compilation\\ShaderLightingObject","LightSources","ContextGLProfile","ShaderObjectBase","ShaderLightingObject","_includeCasters","numAllLights","diffuseLightSources","_iUsesDiffuse","specularLightSources","_iUsesSpecular","combinedLightSources","enableLightFallOff","BASELINE_CONSTRAINED","numLights","LIGHTS","PROBES","_iUsesShadows","createCompiler","lightPicker","collectLights","updateProbes","dirLight","pointLight","dirPos","numLightTypes","ambientR","ambientG","ambientB","cast","directionalLightsOffset","castingDirectionalLights","sceneDirection","_iAmbientR","_iAmbientG","_iAmbientB","_pInverseSceneMatrix","_iDiffuseR","_iDiffuseG","_iDiffuseB","_iSpecularR","_iSpecularG","_iSpecularB","pointLightsOffset","castingPointLights","_pRadius","_pFallOffFactor","probe","lightProbes","lightProbeWeights","lightProbesOffset","activateCubeTexture","diffuseMap","specularMap","awayjs-display/lib/materials/LightSources","awayjs-renderergl/lib/compilation/ShaderLightingCompiler","awayjs-renderergl/lib/compilation/ShaderObjectBase","awayjs-stagegl/lib/base/ContextGLProfile","awayjs-renderergl\\lib\\compilation\\ShaderObjectBase","LineSubGeometry","ContextGLTriangleFace","_invalidShader","_invalidProgram","_animationVertexCode","_animationFragmentCode","_defaultCulling","BACK","_renderPass","_updateProgram","_programData","projectionDependencies","registerCache","setCulling","NONE","projection","coordinateSystem","UV_FORMAT","SECONDARY_UV_FORMAT","TANGENT_DATA","TANGENT_FORMAT","COLOR_DATA","COLOR_FORMAT","uvTransform","copyRawDataTo","invalidateShader","compiler","_calcAnimationCode","getProgramData","vertexCode","fragmentCode","postAnimationFragmentCode","usages","awayjs-display/lib/base/LineSubGeometry","awayjs-stagegl/lib/base/ContextGLTriangleFace","awayjs-renderergl\\lib\\compilation\\ShaderRegisterCache","_numUsedVertexConstants","_numUsedFragmentConstants","_numUsedVaryings","_profile","_fragmentTempCache","_vertexTempCache","_varyingCache","_textureCache","_vertexAttributesCache","_fragmentConstantsCache","_vertexConstantsCache","_fragmentOutputRegister","_vertexOutputRegister","_vertexAttributesOffset","_vertexConstantOffset","_varyingsOffset","_fragmentConstantOffset","getFreeFragmentSingleTemp","awayjs-renderergl/lib/compilation/RegisterPool","awayjs-renderergl\\lib\\compilation\\ShaderRegisterData","awayjs-renderergl\\lib\\compilation\\ShaderRegisterElement","component","_toStr","COMPONENTS","awayjs-renderergl\\lib\\compilation\\SkyboxRenderObject","SkyboxPass","SkyboxRenderObject","awayjs-renderergl/lib/passes/SkyboxPass","awayjs-renderergl\\lib\\errors\\AnimationSetError","message","awayjs-core/lib/errors/Error","awayjs-renderergl\\lib\\events\\AnimationStateEvent","_animator","_animationState","_animationNode","awayjs-renderergl\\lib\\events\\AnimatorEvent","awayjs-renderergl\\lib\\events\\ShadingMethodEvent","ShadingMethodEvent","SHADER_INVALIDATED","awayjs-renderergl\\lib\\filters\\Filter3DBase","Filter3DBase","pAddTask","_textureWidth","_textureHeight","mainTarget","awayjs-renderergl\\lib\\filters\\tasks\\Filter3DTaskBase","ContextGLTextureFormat","Filter3DTaskBase","_scaledTextureWidth","_scaledTextureHeight","_textureDimensionsInvalid","_program3DInvalid","_textureScale","_target","pUpdateTextures","_program3D","pInvalidateProgram","pUpdateProgram","pGetVertexCode","pGetFragmentCode","createTexture","BGRA","awayjs-stagegl/lib/base/ContextGLTextureFormat","awayjs-renderergl\\lib\\managers\\DefaultMaterialManager","BitmapData","BitmapTexture","BasicMaterial","LINE_SUB_MESH","_defaultLineMaterial","createDefaultLineMaterial","_defaultTriangleMaterial","createDefaultTriangleMaterial","getDefaultTexture","_defaultTexture","createDefaultTexture","_defaultBitmapData","createCheckeredBitmapData","setPixel","awayjs-core/lib/base/BitmapData","awayjs-core/lib/textures/BitmapTexture","awayjs-display/lib/materials/BasicMaterial","awayjs-renderergl\\lib\\managers\\RTTBufferManager","TextureUtils","_viewWidth","_viewHeight","_buffersInvalid","_renderToTextureRect","_instances","rttBufferManager","getRTTBufferManagerFromStage","vo","RTTBufferManagerVO","stage3d","rttbfm","deleteRTTBufferManager","updateRTTBuffers","_textureRatioX","_textureRatioY","getBestPowerOf2","_renderToTextureVertexBuffer","_renderToScreenVertexBuffer","_indexBuffer","textureVerts","screenVerts","createIndexBuffer","u1","u2","v1","v2","awayjs-core/lib/utils/TextureUtils","awayjs-renderergl\\lib\\passes\\BasicMaterialPass","ShaderCompilerHelper","RenderPassBase","_diffuseR","_diffuseG","_diffuseB","_diffuseA","_shader","regCache","sharedReg","alphaReg","targetReg","diffuseInputReg","_texturesIndex","getTex2DSampleCode","cutOffReg","_fragmentConstantsIndex","activateTexture","awayjs-renderergl/lib/passes/RenderPassBase","awayjs-renderergl/lib/utils/ShaderCompilerHelper","awayjs-renderergl\\lib\\passes\\DepthPass","sharedRegisters","dataReg1","dataReg2","projectionFragment","albedo","awayjs-renderergl\\lib\\passes\\DistancePass","far","awayjs-renderergl\\lib\\passes\\IRenderLightingPass","awayjs-renderergl\\lib\\passes\\IRenderPassBase","awayjs-renderergl\\lib\\passes\\RenderPassBase","ArgumentError","_preserveAlpha","_depthCompareMode","_blendFactorSource","_blendFactorDest","_pEnableBlending","_writeDepth","_renderObject","SOURCE_ALPHA","ONE_MINUS_SOURCE_ALPHA","MULTIPLY","SOURCE_COLOR","ADD","ALPHA","awayjs-core/lib/errors/ArgumentError","awayjs-renderergl\\lib\\passes\\SkyboxPass","_skybox","mip","getFormatStringForTexture","cubeMap","awayjs-renderergl\\lib\\pick\\JSPickingCollider","PickingColliderBase","JSPickingCollider","findClosestCollision","_findClosestCollision","_pTestRenderableCollision","pickingCollisionVO","shortestCollisionDistance","i0","i1","i2","rx","ry","rz","coeff","p0x","p0y","p0z","p1x","p1y","p1z","p2x","p2y","p2z","s0x","s0y","s0z","s1x","s1y","s1z","nl","nDotV","D","disToPlane","Q1Q2","Q1Q1","Q2Q2","RQ1","RQ2","indexData","collisionTriangleIndex","positionData","positionStride","dataPerVertex","positionOffset","uvData","uvStride","uvOffset","numIndices","rayDirection","rayPosition","rayEntryDistance","localNormal","uv","_pGetCollisionUV","awayjs-renderergl/lib/pick/PickingColliderBase","awayjs-renderergl\\lib\\pick\\PickingColliderBase","BillboardRenderable","TriangleSubMeshRenderable","_billboardRenderablePool","_subMeshRenderablePool","_pPetCollisionNormal","triangleIndex","normal","p0","side0","side1","uIndex","uv0","uv1","uv2","setLocalRay","localDirection","testBillboardCollision","billboard","localRayPosition","localRayDirection","testMeshCollision","findClosest","awayjs-renderergl/lib/pool/BillboardRenderable","awayjs-renderergl/lib/pool/TriangleSubMeshRenderable","awayjs-renderergl\\lib\\pick\\ShaderPicker","Debug","Matrix3DUtils","ShaderPicker","shaderPickingDetails","_onlyMouseEnabled","_interactives","_localHitPosition","_hitUV","_localHitNormal","_rayPos","_rayDir","_shaderPickingDetails","_id","_viewportData","_boundOffsetScale","getViewCollision","view","collector","iEntityCollector","renderer","_context","_projX","_projY","_potentialFound","_blendedRenderableHead","_opaqueRenderableHead","_bitmapData","_hitColor","getPixel","_hitRenderable","_hitEntity","_iIsMouseEnabled","_collisionVO","_iPickingCollisionVO","getHitDetails","_faceIndex","getSceneCollision","direction","scene","MOUSE_SCISSOR_RECT","_interactiveId","_objectProgram","initObjectProgram","CALCULATION_MATRIX","setProgramConstantsFromMatrix","getIndexBuffer","updateRay","getRay","throwPIR","initTriangleProgram","_triangleProgram","getApproximatePosition","getPreciseDetails","bounds","getBox","col","scX","scY","scZ","offsX","offsY","offsZ","localViewProjection","depth","setScissorRectangle","t1","t2","t3","v0x","v0y","v0z","v1x","v1y","v1z","v2x","v2y","v2z","ni1","ni2","ni3","n1","n2","n3","nLength","dot00","dot01","dot02","dot11","dot12","invDenom","ui1","ui2","ui3","normals","normalStride","normalOffset","getPrecisePosition","invSceneTransform","px","py","pz","RAW_DATA_CONTAINER","awayjs-core/lib/geom/Matrix3DUtils","awayjs-core/lib/utils/Debug","awayjs-renderergl\\lib\\pool\\BillboardRenderable","RenderableBase","_billboard","_pGetSubGeometry","_materialGeometry","_pVertexDataDirty","viewMatrixReg","viewMatrixIndex","matrix3D","awayjs-renderergl/lib/pool/RenderableBase","awayjs-renderergl\\lib\\pool\\CurveSubMeshRenderable","CurveSubGeometry","CurveSubMeshRenderable","level","indexOffset","_constants","curves","CURVE_DATA","curve","out","free","less","half","console","log","CURVE_FORMAT","_pGetOverflowRenderable","_level","awayjs-display/lib/base/CurveSubGeometry","awayjs-renderergl\\lib\\pool\\IRenderableClass","awayjs-renderergl\\lib\\pool\\IRendererPoolClass","awayjs-renderergl\\lib\\pool\\LineSegmentRenderable","LineSegmentRenderable","lineSegment","_thickness","_lineSegment","_calcMatrix","_lineGeometry","START_POSITION_DATA","END_POSITION_DATA","THICKNESS_DATA","startPostion","end","endPosition","startPositions","endPositions","thickness","updateThickness","pONE_VECTOR","pFRONT_VECTOR","THICKNESS_FORMAT","awayjs-renderergl\\lib\\pool\\LineSubMeshRenderable","LineSubMeshRenderable","startColors","awayjs-renderergl\\lib\\pool\\RenderableBase","SubGeometryBase","RenderableOwnerEvent","IndexDataPool","_geometryDirty","_indexDataDirty","_vertexData","_vertexOffset","_onIndicesUpdatedDelegate","_onIndicesUpdated","_onVerticesUpdatedDelegate","_onVerticesUpdated","_onRenderObjectOwnerUpdatedDelegate","_onRenderObjectOwnerUpdated","_indexOffset","RENDER_OBJECT_OWNER_UPDATED","_updateIndexData","_overflow","_numTriangles","_indexData","_updateVertexData","_concatenateArrays","VERTEX_DATA","invalidateGeometry","invalidateIndexData","invalidateVertexData","_iFillIndexData","_updateGeometry","_subGeometry","concatenateArrays","awayjs-display/lib/base/SubGeometryBase","awayjs-display/lib/events/RenderableOwnerEvent","awayjs-stagegl/lib/pool/IndexDataPool","awayjs-renderergl\\lib\\pool\\RenderablePoolBase","_renderablePool","_materialRenderObjectPool","_skyboxRenderObjectPool","_depthRenderObjectPool","_distanceRenderObjectPool","_iAddRenderable","getMaterialRenderObject","getSkyboxRenderObject","_iRemoveRenderable","disposePool","pools","_pools","awayjs-renderergl/lib/compilation/DepthRenderObject","awayjs-renderergl/lib/compilation/DistanceRenderObject","awayjs-renderergl/lib/compilation/RenderBasicMaterialObject","awayjs-renderergl/lib/compilation/RenderObjectPool","awayjs-renderergl/lib/compilation/SkyboxRenderObject","awayjs-renderergl\\lib\\pool\\RendererPoolBase","_renderer","_pUpdatePool","_lineSegmentRenderablePool","_triangleSubMeshRenderablePool","_lineSubMeshRenderablePool","_curveSubMeshRenderablePool","applyBillboard","applyLineSegment","applyTriangleSubMesh","triangleSubMesh","applyCurveSubMesh","curveSubMesh","applyLineSubMesh","lineSubMesh","awayjs-renderergl/lib/pool/CurveSubMeshRenderable","awayjs-renderergl/lib/pool/LineSegmentRenderable","awayjs-renderergl/lib/pool/LineSubMeshRenderable","awayjs-renderergl\\lib\\pool\\SkyboxRenderable","skybox","_vertexArray","_geometry","awayjs-renderergl\\lib\\pool\\TriangleSubMeshRenderable","FLOAT_1","awayjs-renderergl\\lib\\tools\\commands\\Merge","Mesh","Merge","keepMaterial","disposeSources","objectSpace","_keepMaterial","_disposeSources","_objectSpace","applyToContainer","receiver","objectContainer","parseContainer","collect","merge","applyToMeshes","meshes","_toDispose","_geomVOs","destMesh","subIdx","oldGeom","destGeom","useSubMaterials","sub","vertices","tangents","addSubGeometry","m","calc","iIdx","vIdx","nIdx","tIdx","uIdx","pd","nd","td","ud","getSubGeomData","transformVectors","deltaTransformVectors","GeometryVO","object","child","numChildren","getChildAt","awayjs-display/lib/entities/Mesh","awayjs-renderergl\\lib\\tools\\data\\ParticleGeometryTransform","ParticleGeometryTransform","_defaultVertexTransform","_defaultInvVertexTransform","transpose","_defaultUVTransform","awayjs-renderergl\\lib\\utils\\ParticleGeometryHelper","ParticleGeometryHelper","generateGeometry","geometries","transforms","indicesVector","positionsVector","normalsVector","tangentsVector","uvsVector","vertexCounters","sourceSubGeometries","numSubGeometries","vertexCounter","sub2SubMap","tempVertex","tempNormal","tempTangents","tempUV","MAX_VERTEX","particleData","tempLen","compact","product","sourceUVs","particleGeometryTransform","vertexTransform","invVertexTransform","UVTransform","deltaTransformVector","transformPoint","sourceIndices","particleGeometry","awayjs-renderergl/lib/animators/data/ParticleData","awayjs-renderergl/lib/base/ParticleGeometry","awayjs-renderergl\\lib\\utils\\PerspectiveMatrix3D","PerspectiveMatrix3D","perspectiveFieldOfViewLH","fieldOfViewY","aspectRatio","zNear","zFar","yScale","tan","xScale","copyRawDataFrom","awayjs-renderergl\\lib\\utils\\ShaderCompilerHelper","inputReg","mipmaps","uvReg","forceWrap","wrap","getTexCubeSampleCode","COMPRESSED","COMPRESSED_ALPHA"],"mappings":"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","file":"awayjs-renderergl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\n\r\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\r\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\r\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/SkyboxRenderable\");\r\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\r\n * materials assigned to them.\r\n *\r\n * @class away.render.DefaultRenderer\r\n */\r\nclass DefaultRenderer extends RendererBase implements IRenderer\r\n{\r\n\tpublic _pRequireDepthRender:boolean;\r\n\tprivate _skyboxRenderablePool:RenderablePoolBase;\r\n\r\n\tprivate _pDistanceRenderer:DepthRenderer;\r\n\tprivate _pDepthRenderer:DepthRenderer;\r\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\r\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\r\n\r\n\tpublic _pDepthRender:TextureProxyBase;\r\n\r\n\tprivate _antiAlias:number;\r\n\r\n\tpublic get antiAlias():number\r\n\t{\r\n\t\treturn this._antiAlias;\r\n\t}\r\n\r\n\tpublic set antiAlias(value:number)\r\n\t{\r\n\t\tif (this._antiAlias == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._antiAlias = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get depthPrepass():boolean\r\n\t{\r\n\t\treturn this._depthPrepass;\r\n\t}\r\n\r\n\tpublic set depthPrepass(value:boolean)\r\n\t{\r\n\t\tthis._depthPrepass = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {*}\r\n\t */\r\n\tpublic get filters3d():Array<Filter3DBase>\r\n\t{\r\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\r\n\t}\r\n\tpublic set filters3d(value:Array<Filter3DBase>)\r\n\t{\r\n\t\tif (value && value.length == 0)\r\n\t\t\tvalue = null;\r\n\r\n\t\tif (this._pFilter3DRenderer && !value) {\r\n\t\t\tthis._pFilter3DRenderer.dispose();\r\n\t\t\tthis._pFilter3DRenderer = null;\r\n\t\t} else if (!this._pFilter3DRenderer && value) {\r\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\r\n\t\t\tthis._pFilter3DRenderer.filters = value;\r\n\t\t}\r\n\r\n\t\tif (this._pFilter3DRenderer) {\r\n\t\t\tthis._pFilter3DRenderer.filters = value;\r\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\r\n\t\t} else {\r\n\t\t\tthis._pRequireDepthRender = false;\r\n\r\n\t\t\tif (this._pDepthRender) {\r\n\t\t\t\tthis._pDepthRender.dispose();\r\n\t\t\t\tthis._pDepthRender = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new DefaultRenderer object.\r\n\t *\r\n\t * @param antiAlias The amount of anti-aliasing to use.\r\n\t * @param renderMode The render mode to use.\r\n\t */\r\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\r\n\t{\r\n\t\tsuper(rendererPoolClass, stage);\r\n\r\n\t\tif (this._width == 0)\r\n\t\t\tthis.width = window.innerWidth;\r\n\t\telse\r\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\r\n\r\n\t\tif (this._height == 0)\r\n\t\t\tthis.height = window.innerHeight;\r\n\t\telse\r\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\r\n\t\t\tthis._pBackBufferInvalid = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\r\n\t\t\tthis.pUpdateBackBuffer();\r\n\r\n\t\tif (this._shareContext && this._pContext)\r\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\r\n\r\n\t\tif (this._pFilter3DRenderer) {\r\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\r\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\r\n\t\t} else {\r\n\t\t\tthis.textureRatioX = 1;\r\n\t\t\tthis.textureRatioY = 1;\r\n\t\t}\r\n\r\n\t\tif (this._pRequireDepthRender)\r\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\r\n\r\n\t\tif (this._depthPrepass)\r\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\r\n\r\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\r\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\r\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif (this._shareContext)\r\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\r\n\t\t\telse\r\n\t\t\t\tthis._iRender(entityCollector);\r\n\t\t}\r\n\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (!this._shareContext && this._pContext)\r\n\t\t\tthis._pContext.present();\r\n\r\n\t\t// register that a view has been rendered\r\n\t\tthis._pStage.bufferClear = false;\r\n\t}\r\n\r\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tthis.updateLights(entityCollector);\r\n\r\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\r\n\t}\r\n\r\n\tprivate updateLights(entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\r\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\r\n\t\tvar len:number, i:number;\r\n\t\tvar light:LightBase;\r\n\t\tvar shadowMapper:ShadowMapperBase;\r\n\r\n\t\tlen = dirLights.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tlight = dirLights[i];\r\n\r\n\t\t\tshadowMapper = light.shadowMapper;\r\n\r\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\r\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\r\n\t\t}\r\n\r\n\t\tlen = pointLights.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tlight = pointLights[i];\r\n\r\n\t\t\tshadowMapper = light.shadowMapper;\r\n\r\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\r\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector)\r\n\t{\r\n\t\tif (entityCollector.skyBox) {\r\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\r\n\r\n\t\t\tthis.drawSkybox(entityCollector);\r\n\t\t}\r\n\r\n\t\tsuper.pDraw(entityCollector);\r\n\t}\r\n\r\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn <RenderObjectBase> renderObjectOwner.getRenderObject(renderable._pool);\r\n\t}\r\n\r\n\t/**\r\n\t * Draw the skybox if present.\r\n\t *\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawSkybox(entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar skyBox:SkyboxRenderable = <SkyboxRenderable> this._skyboxRenderablePool.getItem(entityCollector.skyBox);\r\n\r\n\t\tvar camera:Camera = entityCollector.camera;\r\n\r\n\t\tthis.updateSkyboxProjection(camera);\r\n\r\n\t\tvar renderObject:RenderObjectBase = skyBox.renderObject = this._pGetRenderObject(skyBox, skyBox.renderObjectOwner);\r\n\t\tvar pass:RenderPassBase = renderObject.passes[0];\r\n\r\n\t\tthis.activatePass(skyBox, pass, camera);\r\n\t\tskyBox._iRender(pass, camera, this._skyboxProjection);\r\n\t\tthis.deactivatePass(skyBox, pass);\r\n\t}\r\n\r\n\tprivate updateSkyboxProjection(camera:Camera)\r\n\t{\r\n\t\tvar near:Vector3D = new Vector3D();\r\n\r\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\r\n\t\tthis._skyboxProjection.copyRowTo(2, near);\r\n\r\n\t\tvar camPos:Vector3D = camera.scenePosition;\r\n\r\n\t\tvar cx:number = near.x;\r\n\t\tvar cy:number = near.y;\r\n\t\tvar cz:number = near.z;\r\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\r\n\r\n\t\tvar signX:number = cx >= 0? 1 : -1;\r\n\t\tvar signY:number = cy >= 0? 1 : -1;\r\n\r\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\r\n\r\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\r\n\t\tinverse.invert();\r\n\r\n\t\tvar q:Vector3D = inverse.transformVector(p);\r\n\r\n\t\tthis._skyboxProjection.copyRowTo(3, p);\r\n\r\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\r\n\r\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (!this._shareContext)\r\n\t\t\tthis._pStage.dispose();\r\n\r\n\t\tthis._skyboxRenderablePool.dispose();\r\n\t\tthis._skyboxRenderablePool = null;\r\n\r\n\t\tthis._pRttBufferManager.dispose();\r\n\t\tthis._pRttBufferManager = null;\r\n\r\n\t\tthis._pDepthRenderer.dispose();\r\n\t\tthis._pDistanceRenderer.dispose();\r\n\t\tthis._pDepthRenderer = null;\r\n\t\tthis._pDistanceRenderer = null;\r\n\r\n\t\tthis._pDepthRender = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\r\n\t{\r\n\t\tthis._pDepthRenderer.disableColor = true;\r\n\r\n\t\tif (this._pFilter3DRenderer) { //TODO\r\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\r\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\r\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\r\n\t\t} else {\r\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\r\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\r\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\r\n\t\t}\r\n\r\n\t\tthis._pDepthRenderer.disableColor = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\r\n\t{\r\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\r\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\r\n\r\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\r\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\r\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the backbuffer dimensions.\r\n\t */\r\n\tpublic pUpdateBackBuffer()\r\n\t{\r\n\t\t// No reason trying to configure back buffer if there is no context available.\r\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\r\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\r\n\t\tif (this._pStage.context && !this._shareContext) {\r\n\t\t\tif (this._width && this._height) {\r\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\r\n\t\t\t\tthis._pBackBufferInvalid = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic iSetStage(value:Stage)\r\n\t{\r\n\t\tsuper.iSetStage(value);\r\n\r\n\t\tif (this._pStage) {\r\n\t\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\r\n\r\n\t\t\tthis._pDepthRenderer = new DepthRenderer(this._pRendererPoolClass, this._pStage);\r\n\t\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pRendererPoolClass, this._pStage);\r\n\r\n\t\t\tthis._skyboxRenderablePool = RenderablePoolBase.getPool(SkyboxRenderable, this._pStage);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate initDepthTexture(context:IContextGL):void\r\n\t{\r\n\t\tthis._pDepthTextureInvalid = false;\r\n\r\n\t\tif (this._pDepthRender)\r\n\t\t\tthis._pDepthRender.dispose();\r\n\r\n\t\tthis._pDepthRender = new RenderTexture(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\r\n\t}\r\n}\r\n\r\nexport = DefaultRenderer;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\r\n\r\n\r\n/**\r\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\r\n *\r\n * @class away.render.DepthRenderer\r\n */\r\nclass DepthRenderer extends RendererBase\r\n{\r\n\t/**\r\n\t * Creates a new DepthRenderer object.\r\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\r\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\r\n\t */\r\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\r\n\t{\r\n\t\tsuper(rendererPoolClass, stage);\r\n\r\n\t\tthis._iBackgroundR = 1;\r\n\t\tthis._iBackgroundG = 1;\r\n\t\tthis._iBackgroundB = 1;\r\n\r\n\t}\r\n\r\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn renderable._pool.getDepthRenderObject(renderObjectOwner);\r\n\t}\r\n}\r\n\r\nexport = DepthRenderer;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\r\n\r\n\r\n/**\r\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\r\n *\r\n * @class away.render.DistanceRenderer\r\n */\r\nclass DistanceRenderer extends RendererBase\r\n{\r\n\t/**\r\n\t * Creates a new DistanceRenderer object.\r\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\r\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\r\n\t */\r\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\r\n\t{\r\n\t\tsuper(rendererPoolClass, stage);\r\n\r\n\t\tthis._iBackgroundR = 1;\r\n\t\tthis._iBackgroundG = 1;\r\n\t\tthis._iBackgroundB = 1;\r\n\r\n\t}\r\n\r\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn renderable._pool.getDistanceRenderObject(renderObjectOwner);\r\n\t}\r\n}\r\n\r\nexport = DistanceRenderer;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\r\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\r\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\r\n\r\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\r\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\r\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\r\n\r\n/**\r\n * @class away.render.Filter3DRenderer\r\n */\r\nclass Filter3DRenderer\r\n{\r\n\tprivate _filters:Array<Filter3DBase>;\r\n\tprivate _tasks:Array<Filter3DTaskBase>;\r\n\tprivate _filterTasksInvalid:boolean;\r\n\tprivate _mainInputTexture:ITexture;\r\n\tprivate _requireDepthRender:boolean;\r\n\tprivate _rttManager:RTTBufferManager;\r\n\tprivate _stage:Stage;\r\n\tprivate _filterSizesInvalid:boolean = true;\r\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\r\n\r\n\t\tthis._stage = stage;\r\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\r\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\r\n\r\n\t}\r\n\r\n\tprivate onRTTResize(event:Event)\r\n\t{\r\n\t\tthis._filterSizesInvalid = true;\r\n\t}\r\n\r\n\tpublic get requireDepthRender():boolean\r\n\t{\r\n\t\treturn this._requireDepthRender;\r\n\t}\r\n\r\n\tpublic getMainInputTexture(stage:Stage):ITexture\r\n\t{\r\n\t\tif (this._filterTasksInvalid) {\r\n\r\n\t\t\tthis.updateFilterTasks(stage);\r\n\r\n\t\t}\r\n\r\n\t\treturn this._mainInputTexture;\r\n\t}\r\n\r\n\tpublic get filters():Filter3DBase[]\r\n\t{\r\n\t\treturn this._filters;\r\n\t}\r\n\r\n\tpublic set filters(value:Filter3DBase[])\r\n\t{\r\n\t\tthis._filters = value;\r\n\r\n\t\tthis._filterTasksInvalid = true;\r\n\r\n\t\tthis._requireDepthRender = false;\r\n\r\n\t\tif (!this._filters) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\r\n\r\n\t\t\t// TODO: check logic:\r\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\r\n\r\n\t\t\tvar s:any = this._filters[i];\r\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\r\n\r\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\r\n\r\n\t\t}\r\n\r\n\t\tthis._filterSizesInvalid = true;\r\n\r\n\t}\r\n\r\n\tprivate updateFilterTasks(stage:Stage)\r\n\t{\r\n\t\tvar len:number;\r\n\r\n\t\tif (this._filterSizesInvalid) {\r\n\r\n\t\t\tthis.updateFilterSizes();\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._filters) {\r\n\t\t\tthis._tasks = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\r\n\r\n\t\tlen = this._filters.length - 1;\r\n\r\n\t\tvar filter:Filter3DBase;\r\n\r\n\t\tfor (var i:number = 0; i <= len; ++i) {\r\n\r\n\t\t\t// make sure all internal tasks are linked together\r\n\t\t\tfilter = this._filters[i];\r\n\r\n\t\t\t// TODO: check logic\r\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\r\n\r\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\r\n\r\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\r\n\r\n\t\t}\r\n\r\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\r\n\r\n\t}\r\n\r\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\r\n\t{\r\n\t\tvar len:number;\r\n\t\tvar i:number;\r\n\t\tvar task:Filter3DTaskBase;\r\n\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n\r\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\r\n\r\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\r\n\r\n\t\tif (!this._filters) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._filterSizesInvalid) {\r\n\t\t\tthis.updateFilterSizes();\r\n\t\t}\r\n\r\n\t\tif (this._filterTasksInvalid) {\r\n\t\t\tthis.updateFilterTasks(stage);\r\n\t\t}\r\n\r\n\t\tlen = this._filters.length;\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._filters[i].update(stage, camera);\r\n\t\t}\r\n\r\n\t\tlen = this._tasks.length;\r\n\r\n\t\tif (len > 1) {\r\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\ttask = this._tasks[i];\r\n\r\n\t\t\t//stage.setRenderTarget(task.target); //TODO\r\n\r\n\t\t\tif (!task.target) {\r\n\r\n\t\t\t\tstage.scissorRect = null;\r\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\r\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\r\n\t\t\tcontext.setProgram(task.getProgram(stage));\r\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\r\n\r\n\t\t\ttask.activate(stage, camera, depthTexture);\r\n\r\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\r\n\r\n\t\t\ttask.deactivate(stage);\r\n\t\t}\r\n\r\n\t\tcontext.setTextureAt(0, null);\r\n\t\tcontext.setVertexBufferAt(0, null);\r\n\t\tcontext.setVertexBufferAt(1, null);\r\n\t}\r\n\r\n\tprivate updateFilterSizes()\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\r\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\r\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\r\n\t\t}\r\n\r\n\t\tthis._filterSizesInvalid = true;\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\r\n\t\tthis._rttManager = null;\r\n\t\tthis._stage = null;\r\n\t}\r\n}\r\n\r\nexport = Filter3DRenderer;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\n/**\r\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\r\n *\r\n * @see away.animators.AnimatorBase\r\n */\r\nclass AnimationSetBase extends NamedAssetBase implements IAsset\r\n{\r\n\tprivate _usesCPU:boolean;\r\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\r\n\tprivate _animationNames:Array<string> = new Array<string>();\r\n\tprivate _animationDictionary:Object = new Object();\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a temporary GPU register that's still free.\r\n\t *\r\n\t * @param exclude An array of non-free temporary registers.\r\n\t * @param excludeAnother An additional register that's not free.\r\n\t * @return A temporary register that can be used.\r\n\t */\r\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\r\n\t{\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\tvar reg:string;\r\n\r\n\t\twhile (true) {\r\n\t\t\treg = \"vt\" + i;\r\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\r\n\t\t\t\treturn reg;\r\n\t\t\t++i;\r\n\t\t}\r\n\r\n\t\t// can't be reached\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the properties of the animation data contained within the set combined with\r\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\r\n\t * GPU calls.\r\n\t */\r\n\tpublic get usesCPU():boolean\r\n\t{\r\n\t\treturn this._usesCPU;\r\n\t}\r\n\r\n\t/**\r\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\r\n\t * is available for running GPU-based animation code.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic resetGPUCompatibility()\r\n\t{\r\n\t\tthis._usesCPU = false;\r\n\t}\r\n\r\n\tpublic cancelGPUCompatibility()\r\n\t{\r\n\t\tthis._usesCPU = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.ANIMATION_SET;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\r\n\t */\r\n\tpublic get animations():Array<AnimationNodeBase>\r\n\t{\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\r\n\t */\r\n\tpublic get animationNames():Array<string>\r\n\t{\r\n\t\treturn this._animationNames;\r\n\t}\r\n\r\n\t/**\r\n\t * Check to determine whether a state is registered in the animation set under the given name.\r\n\t *\r\n\t * @param stateName The name of the animation state object to be checked.\r\n\t */\r\n\tpublic hasAnimation(name:string):boolean\r\n\t{\r\n\t\treturn this._animationDictionary[name] != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the animation state object registered in the animation data set under the given name.\r\n\t *\r\n\t * @param stateName The name of the animation state object to be retrieved.\r\n\t */\r\n\tpublic getAnimation(name:string):AnimationNodeBase\r\n\t{\r\n\t\treturn this._animationDictionary[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an animation state object to the aniamtion data set under the given name.\r\n\t *\r\n\t * @param stateName The name under which the animation state object will be stored.\r\n\t * @param animationState The animation state object to be staored in the set.\r\n\t */\r\n\tpublic addAnimation(node:AnimationNodeBase)\r\n\t{\r\n\t\tif (this._animationDictionary[node.name])\r\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\r\n\r\n\t\tthis._animationDictionary[node.name] = node;\r\n\r\n\t\tthis._animations.push(node);\r\n\r\n\t\tthis._animationNames.push(node.name);\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up any resources used by the current object.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = AnimationSetBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\n\r\n/**\r\n * Dispatched when playback of an animation inside the animator object starts.\r\n *\r\n * @eventType away3d.events.AnimatorEvent\r\n */\r\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\r\n\r\n/**\r\n * Dispatched when playback of an animation inside the animator object stops.\r\n *\r\n * @eventType away3d.events.AnimatorEvent\r\n */\r\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\r\n\r\n/**\r\n * Dispatched when playback of an animation reaches the end of an animation.\r\n *\r\n * @eventType away3d.events.AnimatorEvent\r\n */\r\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\r\n\r\n/**\r\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\r\n *\r\n * @see away.animators.AnimationSetBase\r\n */\r\nclass AnimatorBase extends NamedAssetBase implements IAnimator\r\n{\r\n\tprivate _broadcaster:RequestAnimationFrame;\r\n\tprivate _isPlaying:boolean;\r\n\tprivate _autoUpdate:boolean = true;\r\n\tprivate _startEvent:AnimatorEvent;\r\n\tprivate _stopEvent:AnimatorEvent;\r\n\tprivate _cycleEvent:AnimatorEvent;\r\n\tprivate _time:number /*int*/ = 0;\r\n\tprivate _playbackSpeed:number = 1;\r\n\r\n\tpublic _pAnimationSet:IAnimationSet;\r\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\r\n\tpublic _pActiveNode:AnimationNodeBase;\r\n\tpublic _pActiveState:IAnimationState;\r\n\tpublic _pActiveAnimationName:string;\r\n\tpublic _pAbsoluteTime:number = 0;\r\n\r\n\tprivate _animationStates:Object = new Object();\r\n\r\n\t/**\r\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\r\n\t *\r\n\t * @see away.animators.IAnimationState#positionDelta\r\n\t */\r\n\tpublic updatePosition:boolean = true;\r\n\r\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\r\n\t{\r\n\t\tvar className:any = node.stateClass;\r\n\t\tvar uID:number = node.id;\r\n\r\n\t\tif (this._animationStates[uID] == null)\r\n\t\t\tthis._animationStates[uID] = new className(this, node);\r\n\r\n\t\treturn this._animationStates[uID];\r\n\t}\r\n\r\n\tpublic getAnimationStateByName(name:string):IAnimationState\r\n\t{\r\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\r\n\t *\r\n\t * @see #time\r\n\t * @see #playbackSpeed\r\n\t */\r\n\tpublic get absoluteTime():number\r\n\t{\r\n\t\treturn this._pAbsoluteTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the animation data set in use by the animator.\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._pAnimationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current active animation state.\r\n\t */\r\n\tpublic get activeState():IAnimationState\r\n\t{\r\n\t\treturn this._pActiveState;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current active animation node.\r\n\t */\r\n\tpublic get activeAnimation():AnimationNodeBase\r\n\t{\r\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current active animation node.\r\n\t */\r\n\tpublic get activeAnimationName():string\r\n\t{\r\n\t\treturn this._pActiveAnimationName;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\r\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\r\n\t * Defaults to true.\r\n\t *\r\n\t * @see #time\r\n\t * @see #update()\r\n\t */\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._autoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(value:boolean)\r\n\t{\r\n\t\tif (this._autoUpdate == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoUpdate = value;\r\n\r\n\t\tif (this._autoUpdate)\r\n\t\t\tthis.start(); else\r\n\t\t\tthis.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets and sets the internal time clock of the animator.\r\n\t */\r\n\tpublic get time():number /*int*/\r\n\t{\r\n\t\treturn this._time;\r\n\t}\r\n\r\n\tpublic set time(value:number /*int*/)\r\n\t{\r\n\t\tif (this._time == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.update(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the animation phase of the current active state's animation clip(s).\r\n\t *\r\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._pActiveState.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimatorBase</code> object.\r\n\t *\r\n\t * @param animationSet The animation data set to be used by the animator object.\r\n\t */\r\n\tconstructor(animationSet:IAnimationSet)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pAnimationSet = animationSet;\r\n\r\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\r\n\t}\r\n\r\n\t/**\r\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\r\n\t */\r\n\tpublic get playbackSpeed():number\r\n\t{\r\n\t\treturn this._playbackSpeed;\r\n\t}\r\n\r\n\tpublic set playbackSpeed(value:number)\r\n\t{\r\n\t\tthis._playbackSpeed = value;\r\n\t}\r\n\r\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Resumes the automatic playback clock controling the active state of the animator.\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tif (this._isPlaying || !this._autoUpdate)\r\n\t\t\treturn;\r\n\r\n\t\tthis._time = this._pAbsoluteTime = getTimer();\r\n\r\n\t\tthis._isPlaying = true;\r\n\r\n\t\tthis._broadcaster.start();\r\n\r\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\r\n\t\t\treturn;\r\n\r\n\t\tif (this._startEvent == null)\r\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\r\n\r\n\t\tthis.dispatchEvent(this._startEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\r\n\t * <code>time</code> property or <code>update()</code> method.\r\n\t *\r\n\t * @see #time\r\n\t * @see #update()\r\n\t */\r\n\tpublic stop()\r\n\t{\r\n\t\tif (!this._isPlaying)\r\n\t\t\treturn;\r\n\r\n\t\tthis._isPlaying = false;\r\n\r\n\t\tthis._broadcaster.stop();\r\n\r\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\r\n\t\t\treturn;\r\n\r\n\t\tif (this._stopEvent == null)\r\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\r\n\r\n\t\tthis.dispatchEvent(this._stopEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a way to manually update the active state of the animator when automatic\r\n\t * updates are disabled.\r\n\t *\r\n\t * @see #stop()\r\n\t * @see #autoUpdate\r\n\t */\r\n\tpublic update(time:number /*int*/)\r\n\t{\r\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\r\n\r\n\t\tthis._pUpdateDeltaTime(dt);\r\n\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\tpublic reset(name:string, offset:number = 0)\r\n\t{\r\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\r\n\t}\r\n\r\n\t/**\r\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic addOwner(mesh:Mesh)\r\n\t{\r\n\t\tthis._pOwners.push(mesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic removeOwner(mesh:Mesh)\r\n\t{\r\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tthis._pAbsoluteTime += dt;\r\n\r\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\r\n\r\n\t\tif (this.updatePosition)\r\n\t\t\tthis.applyPositionDelta();\r\n\t}\r\n\r\n\t/**\r\n\t * Enter frame event handler for automatically updating the active state of the animator.\r\n\t */\r\n\tprivate onEnterFrame(event:Event = null)\r\n\t{\r\n\t\tthis.update(getTimer());\r\n\t}\r\n\r\n\tprivate applyPositionDelta()\r\n\t{\r\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\r\n\t\tvar dist:number = delta.length;\r\n\t\tvar len:number /*uint*/;\r\n\t\tif (dist > 0) {\r\n\t\t\tlen = this._pOwners.length;\r\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\r\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *  for internal use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic dispatchCycleEvent()\r\n\t{\r\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\r\n\t\t\tif (this._cycleEvent == null)\r\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\r\n\r\n\t\t\tthis.dispatchEvent(this._cycleEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.ANIMATOR;\r\n\t}\r\n\r\n\r\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\r\n\t{\r\n\t\t//nothing to do here\r\n\t\treturn sourceSubGeometry;\r\n\t}\r\n}\r\n\r\nexport = AnimatorBase;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\r\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\n\r\n\r\n/**\r\n * The animation data set used by particle-based animators, containing particle animation data.\r\n *\r\n * @see away.animators.ParticleAnimator\r\n */\r\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\r\n{\r\n\t/** @private */\r\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\r\n\r\n\t//all other nodes dependent on it\r\n\tprivate _timeNode:ParticleTimeNode;\r\n\r\n\t/**\r\n\t * Property used by particle nodes that require compilation at the end of the shader\r\n\t */\r\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\r\n\r\n\t/**\r\n\t * Property used by particle nodes that require color compilation\r\n\t */\r\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\r\n\r\n\tprivate _animationSubGeometries:Object = new Object();\r\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\r\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\r\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\r\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\r\n\r\n\t//set true if has an node which will change UV\r\n\tpublic hasUVNode:boolean;\r\n\t//set if the other nodes need to access the velocity\r\n\tpublic needVelocity:boolean;\r\n\t//set if has a billboard node.\r\n\tpublic hasBillboard:boolean;\r\n\t//set if has an node which will apply color multiple operation\r\n\tpublic hasColorMulNode:boolean;\r\n\t//set if has an node which will apply color add operation\r\n\tpublic hasColorAddNode:boolean;\r\n\r\n\t/**\r\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\r\n\t *\r\n\t * <code>\r\n\t * initParticleFunc(prop:ParticleProperties)\r\n\t * {\r\n\t * \t\t//code for settings local properties\r\n\t * }\r\n\t * </code>\r\n\t *\r\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\r\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\r\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\r\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\r\n\t */\r\n\tpublic initParticleFunc:Function;\r\n\r\n\t/**\r\n\t * Initialiser function scope for static particle properties\r\n\t */\r\n\tpublic initParticleScope:Object;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleAnimationSet</code>\r\n\t *\r\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\r\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\r\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\r\n\t */\r\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//automatically add a particle time node to the set\r\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of the particle animation nodes contained within the set.\r\n\t */\r\n\tpublic get particleNodes():Array<ParticleNodeBase>\r\n\t{\r\n\t\treturn this._particleNodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic addAnimation(node:AnimationNodeBase)\r\n\t{\r\n\t\tvar i:number /*int*/;\r\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\r\n\t\tn._iProcessAnimationSetting(this);\r\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\r\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\r\n\t\t\tthis._localStaticNodes.push(n);\r\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\r\n\t\t\tthis._localDynamicNodes.push(n);\r\n\r\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\r\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis._particleNodes.splice(i + 1, 0, n);\r\n\r\n\t\tsuper.addAnimation(node);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\r\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\r\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\r\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\r\n\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache;\r\n\r\n\t\tif (this._iAnimationRegisterCache == null)\r\n\t\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache = new AnimationRegisterCache(shaderObject.profile);\r\n\r\n\t\t//reset animationRegisterCache\r\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shaderObject.numUsedVertexConstants;\r\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shaderObject.numUsedStreams;\r\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shaderObject.numUsedVaryings;\r\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shaderObject.numUsedFragmentConstants;\r\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\r\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\r\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\r\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shaderObject.animatableAttributes;\r\n\t\tthis._iAnimationRegisterCache.targetRegisters = shaderObject.animationTargetRegisters;\r\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shaderObject.usesFragmentAnimation;\r\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shaderObject.usesUVTransform;\r\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\r\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\r\n\t\tthis._iAnimationRegisterCache.reset();\r\n\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\r\n\r\n\t\tvar node:ParticleNodeBase;\r\n\t\tvar i:number /*int*/;\r\n\r\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\r\n\t\t\tnode = this._particleNodes[i];\r\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\r\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\r\n\t\t}\r\n\r\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\r\n\r\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\r\n\t\t\tnode = this._particleNodes[i];\r\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\r\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\r\n\t\t}\r\n\r\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\r\n\r\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\r\n\t\t\tnode = this._particleNodes[i];\r\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\r\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\r\n\t\t}\r\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.hasUVNode) {\r\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shaderObject.uvSource, shaderObject.uvTarget);\r\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\r\n\t\t\tvar node:ParticleNodeBase;\r\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\r\n\t\t\t\tnode = this._particleNodes[i];\r\n\t\t\t\tcode += node.getAGALUVCode(shaderObject, this._iAnimationRegisterCache);\r\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\r\n\t{\r\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tthis._iAnimationRegisterCache.setDataLength();\r\n\r\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\r\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get usesCPU():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic cancelGPUCompatibility()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var key in this._animationSubGeometries)\r\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\r\n\t{\r\n\t\tvar mesh:Mesh = subMesh.parentMesh;\r\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\r\n\r\n\t\tif (animationSubGeometry)\r\n\t\t\treturn animationSubGeometry;\r\n\r\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\r\n\r\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\r\n\t}\r\n\r\n\r\n\t/** @private */\r\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\r\n\t{\r\n\t\tif (this.initParticleFunc == null)\r\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\r\n\r\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\r\n\r\n\t\tif (!geometry)\r\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\r\n\r\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\r\n\t\tvar animationSubGeometry:AnimationSubGeometry;\r\n\t\tvar newAnimationSubGeometry:boolean = false;\r\n\t\tvar subGeometry:SubGeometryBase;\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar localNode:ParticleNodeBase;\r\n\r\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\r\n\t\t\tsubMesh = mesh.subMeshes[i];\r\n\t\t\tsubGeometry = subMesh.subGeometry;\r\n\t\t\tif (mesh.shareAnimationGeometry) {\r\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\r\n\r\n\t\t\t\tif (animationSubGeometry)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\r\n\r\n\t\t\tif (mesh.shareAnimationGeometry)\r\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\r\n\t\t\telse\r\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\r\n\r\n\t\t\tnewAnimationSubGeometry = true;\r\n\r\n\t\t\t//create the vertexData vector that will be used for local node data\r\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\r\n\t\t}\r\n\r\n\t\tif (!newAnimationSubGeometry)\r\n\t\t\treturn;\r\n\r\n\t\tvar particles:Array<ParticleData> = geometry.particles;\r\n\t\tvar particlesLength:number /*uint*/ = particles.length;\r\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\r\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\r\n\t\tvar particle:ParticleData;\r\n\r\n\t\tvar oneDataLen:number /*int*/;\r\n\t\tvar oneDataOffset:number /*int*/;\r\n\t\tvar counterForVertex:number /*int*/;\r\n\t\tvar counterForOneData:number /*int*/;\r\n\t\tvar oneData:Array<number>;\r\n\t\tvar numVertices:number /*uint*/;\r\n\t\tvar vertexData:Array<number>;\r\n\t\tvar vertexLength:number /*uint*/;\r\n\t\tvar startingOffset:number /*uint*/;\r\n\t\tvar vertexOffset:number /*uint*/;\r\n\r\n\t\t//default values for particle param\r\n\t\tparticleProperties.total = numParticles;\r\n\t\tparticleProperties.startTime = 0;\r\n\t\tparticleProperties.duration = 1000;\r\n\t\tparticleProperties.delay = 0.1;\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\twhile (i < numParticles) {\r\n\t\t\tparticleProperties.index = i;\r\n\r\n\t\t\t//call the init on the particle parameters\r\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\r\n\r\n\t\t\t//create the next set of node properties for the particle\r\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\r\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\r\n\r\n\t\t\t//loop through all particle data for the curent particle\r\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\r\n\t\t\t\t//find the target animationSubGeometry\r\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\r\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\r\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\r\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnumVertices = particle.numVertices;\r\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\r\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\r\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\r\n\r\n\t\t\t\t//loop through each static local node in the animation set\r\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\r\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\r\n\t\t\t\t\toneData = localNode.oneData;\r\n\t\t\t\t\toneDataLen = localNode.dataLength;\r\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\r\n\r\n\t\t\t\t\t//loop through each vertex set in the vertex data\r\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\r\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\r\n\r\n\t\t\t\t\t\t//add the data for the local node to the vertex data\r\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\r\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\r\n\t\t\t\tif (this._localDynamicNodes.length)\r\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\r\n\r\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\r\n\r\n\t\t\t\t//next index\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\r\n\t\t\t//next particle\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleAnimationSet;","import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\n\r\n/**\r\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\r\n * and controlling the various available states of animation through an interative playhead that can be\r\n * automatically updated or manually triggered.\r\n *\r\n * Requires that the containing geometry of the parent mesh is particle geometry\r\n *\r\n * @see away.base.ParticleGeometry\r\n */\r\nclass ParticleAnimator extends AnimatorBase\r\n{\r\n\r\n\tprivate _particleAnimationSet:ParticleAnimationSet;\r\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\r\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\r\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\r\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\r\n\tprivate _animatorSubGeometries:Object = new Object();\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleAnimator</code> object.\r\n\t *\r\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\r\n\t */\r\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tsuper(particleAnimationSet);\r\n\t\tthis._particleAnimationSet = particleAnimationSet;\r\n\r\n\t\tvar state:ParticleStateBase;\r\n\t\tvar node:ParticleNodeBase;\r\n\r\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\r\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\r\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\r\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\r\n\t\t\t\tthis._animatorParticleStates.push(state);\r\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\r\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\r\n\t\t\t} else {\r\n\t\t\t\tthis._animationParticleStates.push(state);\r\n\t\t\t}\r\n\t\t\tif (state.needUpdateTime)\r\n\t\t\t\tthis._timeParticleStates.push(state);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\r\n\r\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\r\n\t\tvar state:ParticleStateBase;\r\n\t\tvar i:number;\r\n\r\n\t\tif (!subMesh)\r\n\t\t\tthrow(new Error(\"Must be subMesh\"));\r\n\r\n\t\t//process animation sub geometries\r\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\r\n\r\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\r\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\r\n\r\n\t\t//process animator subgeometries\r\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\r\n\r\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\r\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\r\n\r\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\r\n\r\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\r\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic start()\r\n\t{\r\n\t\tsuper.start();\r\n\r\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\r\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tthis._pAbsoluteTime += dt;\r\n\r\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\r\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic resetTime(offset:number /*int*/ = 0)\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\r\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\r\n\t\tthis.update(this.time);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var key in this._animatorSubGeometries)\r\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\r\n\t}\r\n\r\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\r\n\t{\r\n\t\tif (!this._animatorParticleStates.length)\r\n\t\t\treturn;\r\n\r\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\r\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\r\n\r\n\t\t//create the vertexData vector that will be used for local state data\r\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\r\n\r\n\t\t//pass the particles data to the animator subGeometry\r\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\r\n\t}\r\n}\r\n\r\nexport = ParticleAnimator;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\n\r\n/**\r\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\r\n *\r\n * @see away.animators.SkeletonAnimator\r\n */\r\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\r\n{\r\n\tprivate _jointsPerVertex:number /*uint*/;\r\n\r\n\t/**\r\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\r\n\t * maximum allowed value is 4.\r\n\t */\r\n\tpublic get jointsPerVertex():number /*uint*/\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\r\n\t *\r\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\r\n\t */\r\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._jointsPerVertex = jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\r\n\r\n\t\tvar indexOffset0:number /*uint*/ = shaderObject.numUsedVertexConstants;\r\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\r\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\r\n\t\tvar indexStream:string = \"va\" + shaderObject.numUsedStreams;\r\n\t\tvar weightStream:string = \"va\" + (shaderObject.numUsedStreams + 1);\r\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\r\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\r\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\r\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\r\n\t\tvar dot:string = \"dp4\";\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\r\n\t\t\tvar src:string = shaderObject.animatableAttributes[i];\r\n\r\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\r\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\r\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\r\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\r\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\r\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\r\n\r\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\r\n\t\t\t\tif (j == 0)\r\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\r\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\r\n\t\t\tdot = \"dp3\";\r\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\r\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\r\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = SkeletonAnimationSet;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\n\r\n/**\r\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\r\n * and controlling the various available states of animation through an interative playhead that can be\r\n * automatically updated or manually triggered.\r\n */\r\nclass SkeletonAnimator extends AnimatorBase\r\n{\r\n\tprivate _globalMatrices:Array<number>;\r\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _globalPropertiesDirty:boolean;\r\n\tprivate _numJoints:number /*uint*/;\r\n\tprivate _morphedSubGeometry:Object = new Object();\r\n\tprivate _morphedSubGeometryDirty:Object = new Object();\r\n\tprivate _condensedMatrices:Array<number>;\r\n\r\n\tprivate _skeleton:Skeleton;\r\n\tprivate _forceCPU:boolean;\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _jointsPerVertex:number /*uint*/;\r\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\r\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\r\n\r\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\r\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\r\n\r\n\t/**\r\n\t * returns the calculated global matrices of the current skeleton pose.\r\n\t *\r\n\t * @see #globalPose\r\n\t */\r\n\tpublic get globalMatrices():Array<number>\r\n\t{\r\n\t\tif (this._globalPropertiesDirty)\r\n\t\t\tthis.updateGlobalProperties();\r\n\r\n\t\treturn this._globalMatrices;\r\n\t}\r\n\r\n\t/**\r\n\t * returns the current skeleton pose output from the animator.\r\n\t *\r\n\t * @see away.animators.data.SkeletonPose\r\n\t */\r\n\tpublic get globalPose():SkeletonPose\r\n\t{\r\n\t\tif (this._globalPropertiesDirty)\r\n\t\t\tthis.updateGlobalProperties();\r\n\r\n\t\treturn this._globalPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\r\n\t * skinned geoemtry to which skeleon animator is applied.\r\n\t */\r\n\tpublic get skeleton():Skeleton\r\n\t{\r\n\t\treturn this._skeleton;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\r\n\t * Defaults to false.\r\n\t */\r\n\tpublic get forceCPU():boolean\r\n\t{\r\n\t\treturn this._forceCPU;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonAnimator</code> object.\r\n\t *\r\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\r\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\r\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\r\n\t */\r\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\r\n\t{\r\n\t\tsuper(animationSet);\r\n\r\n\t\tthis._skeleton = skeleton;\r\n\t\tthis._forceCPU = forceCPU;\r\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\r\n\r\n\t\tthis._numJoints = this._skeleton.numJoints;\r\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\r\n\r\n\t\tvar j:number /*int*/ = 0;\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tthis._globalMatrices[j++] = 1;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 1;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t\tthis._globalMatrices[j++] = 1;\r\n\t\t\tthis._globalMatrices[j++] = 0;\r\n\t\t}\r\n\r\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\r\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\r\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\r\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\r\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\r\n\t}\r\n\r\n\t/**\r\n\t * Plays an animation state registered with the given name in the animation data set.\r\n\t *\r\n\t * @param name The data set name of the animation state to be played.\r\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\r\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\r\n\t */\r\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\r\n\t{\r\n\t\tif (this._pActiveAnimationName == name)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pActiveAnimationName = name;\r\n\r\n\t\tif (!this._pAnimationSet.hasAnimation(name))\r\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\r\n\r\n\t\tif (transition && this._pActiveNode) {\r\n\t\t\t//setup the transition\r\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\r\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\r\n\t\t} else\r\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\r\n\r\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\r\n\r\n\t\tif (this.updatePosition) {\r\n\t\t\t//update straight away to reset position deltas\r\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\r\n\t\t\tthis._pActiveState.positionDelta;\r\n\t\t}\r\n\r\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\r\n\r\n\t\tthis.start();\r\n\r\n\t\t//apply a time offset if specified\r\n\t\tif (!isNaN(offset))\r\n\t\t\tthis.reset(name, offset);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\t// do on request of globalProperties\r\n\t\tif (this._globalPropertiesDirty)\r\n\t\t\tthis.updateGlobalProperties();\r\n\r\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\r\n\r\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\r\n\r\n\t\tif (this._useCondensedIndices) {\r\n\t\t\t// using a condensed data set\r\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp, subGeometry.numCondensedJoints);\r\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, subGeometry.numCondensedJoints*3);\r\n\t\t} else {\r\n\t\t\tif (this._pAnimationSet.usesCPU) {\r\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\r\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\r\n\t\t}\r\n\r\n\t\tstage.activateBuffer(vertexStreamOffset, renderable.getVertexData(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.JOINT_INDEX_FORMAT);\r\n\t\tstage.activateBuffer(vertexStreamOffset + 1, renderable.getVertexData(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.JOINT_WEIGHT_FORMAT);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shaderObject.numUsedVertexConstants + this._numJoints*3 > 128))\r\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the calculated time delta to the active animation state node or state transition object.\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tsuper._pUpdateDeltaTime(dt);\r\n\r\n\t\t//invalidate pose matrices\r\n\t\tthis._globalPropertiesDirty = true;\r\n\r\n\t\t//trigger geometry invalidation if using CPU animation\r\n\t\tif (this._pAnimationSet.usesCPU)\r\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\r\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\r\n\t}\r\n\r\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number> /*uint*/, numJoints:number /*uint*/)\r\n\t{\r\n\t\tvar i:number /*uint*/ = 0, j:number /*uint*/ = 0;\r\n\t\tvar len:number /*uint*/;\r\n\t\tvar srcIndex:number /*uint*/;\r\n\r\n\t\tthis._condensedMatrices = new Array<number>();\r\n\r\n\t\tdo {\r\n\t\t\tsrcIndex = condensedIndexLookUp[i]*4;\r\n\t\t\tlen = srcIndex + 12;\r\n\t\t\t// copy into condensed\r\n\t\t\twhile (srcIndex < len)\r\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\r\n\t\t} while (++i < numJoints);\r\n\t}\r\n\r\n\tprivate updateGlobalProperties()\r\n\t{\r\n\t\tthis._globalPropertiesDirty = false;\r\n\r\n\t\t//get global pose\r\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\r\n\r\n\t\t// convert pose to matrix\r\n\t\tvar mtxOffset:number /*uint*/ = 0;\r\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\r\n\t\tvar raw:Array<number>;\r\n\t\tvar ox:number, oy:number, oz:number, ow:number;\r\n\t\tvar xy2:number, xz2:number, xw2:number;\r\n\t\tvar yz2:number, yw2:number, zw2:number;\r\n\t\tvar n11:number, n12:number, n13:number;\r\n\t\tvar n21:number, n22:number, n23:number;\r\n\t\tvar n31:number, n32:number, n33:number;\r\n\t\tvar m11:number, m12:number, m13:number, m14:number;\r\n\t\tvar m21:number, m22:number, m23:number, m24:number;\r\n\t\tvar m31:number, m32:number, m33:number, m34:number;\r\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\r\n\t\tvar pose:JointPose;\r\n\t\tvar quat:Quaternion;\r\n\t\tvar vec:Vector3D;\r\n\t\tvar t:number;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\r\n\t\t\tpose = globalPoses[i];\r\n\t\t\tquat = pose.orientation;\r\n\t\t\tvec = pose.translation;\r\n\t\t\tox = quat.x;\r\n\t\t\toy = quat.y;\r\n\t\t\toz = quat.z;\r\n\t\t\tow = quat.w;\r\n\r\n\t\t\txy2 = (t = 2.0*ox)*oy;\r\n\t\t\txz2 = t*oz;\r\n\t\t\txw2 = t*ow;\r\n\t\t\tyz2 = (t = 2.0*oy)*oz;\r\n\t\t\tyw2 = t*ow;\r\n\t\t\tzw2 = 2.0*oz*ow;\r\n\r\n\t\t\tyz2 = 2.0*oy*oz;\r\n\t\t\tyw2 = 2.0*oy*ow;\r\n\t\t\tzw2 = 2.0*oz*ow;\r\n\t\t\tox *= ox;\r\n\t\t\toy *= oy;\r\n\t\t\toz *= oz;\r\n\t\t\tow *= ow;\r\n\r\n\t\t\tn11 = (t = ox - oy) - oz + ow;\r\n\t\t\tn12 = xy2 - zw2;\r\n\t\t\tn13 = xz2 + yw2;\r\n\t\t\tn21 = xy2 + zw2;\r\n\t\t\tn22 = -t - oz + ow;\r\n\t\t\tn23 = yz2 - xw2;\r\n\t\t\tn31 = xz2 - yw2;\r\n\t\t\tn32 = yz2 + xw2;\r\n\t\t\tn33 = -ox - oy + oz + ow;\r\n\r\n\t\t\t// prepend inverse bind pose\r\n\t\t\traw = joints[i].inverseBindPose;\r\n\t\t\tm11 = raw[0];\r\n\t\t\tm12 = raw[4];\r\n\t\t\tm13 = raw[8];\r\n\t\t\tm14 = raw[12];\r\n\t\t\tm21 = raw[1];\r\n\t\t\tm22 = raw[5];\r\n\t\t\tm23 = raw[9];\r\n\t\t\tm24 = raw[13];\r\n\t\t\tm31 = raw[2];\r\n\t\t\tm32 = raw[6];\r\n\t\t\tm33 = raw[10];\r\n\t\t\tm34 = raw[14];\r\n\r\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\r\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\r\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\r\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\r\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\r\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\r\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\r\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\r\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\r\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\r\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\r\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\r\n\r\n\t\t\tmtxOffset = mtxOffset + 12;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\r\n\t{\r\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\r\n\r\n\t\t//early out for GPU animations\r\n\t\tif (!this._pAnimationSet.usesCPU)\r\n\t\t\treturn sourceSubGeometry;\r\n\r\n\t\tvar targetSubGeometry:TriangleSubGeometry;\r\n\r\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\r\n\t\t\t//not yet stored\r\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\r\n\t\t\t//turn off auto calculations on the morphed geometry\r\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\r\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\r\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\r\n\t\t\t//add event listeners for any changes in UV values on the source geometry\r\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\r\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\r\n\t\t}\r\n\r\n\t\treturn targetSubGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * If the animation can't be performed on GPU, transform vertices manually\r\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\r\n\t * @param pass The material pass for which we need to transform the vertices\r\n\t */\r\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\r\n\t{\r\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\r\n\r\n\t\tvar sourcePositions:Array<number> = sourceSubGeometry.positions;\r\n\t\tvar sourceNormals:Array<number> = sourceSubGeometry.vertexNormals;\r\n\t\tvar sourceTangents:Array<number> = sourceSubGeometry.vertexTangents;\r\n\r\n\t\tvar jointIndices:Array<number> = sourceSubGeometry.jointIndices;\r\n\t\tvar jointWeights:Array<number> = sourceSubGeometry.jointWeights;\r\n\r\n\t\tvar targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\r\n\r\n\t\tvar targetPositions:Array<number> = targetSubGeometry.positions;\r\n\t\tvar targetNormals:Array<number> = targetSubGeometry.vertexNormals;\r\n\t\tvar targetTangents:Array<number> = targetSubGeometry.vertexTangents;\r\n\r\n\t\tvar index:number /*uint*/ = 0;\r\n\t\tvar j:number /*uint*/ = 0;\r\n\t\tvar k:number /*uint*/;\r\n\t\tvar vx:number, vy:number, vz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar tx:number, ty:number, tz:number;\r\n\t\tvar len:number /*int*/ = sourcePositions.length;\r\n\t\tvar weight:number;\r\n\t\tvar vertX:number, vertY:number, vertZ:number;\r\n\t\tvar normX:number, normY:number, normZ:number;\r\n\t\tvar tangX:number, tangY:number, tangZ:number;\r\n\t\tvar m11:number, m12:number, m13:number, m14:number;\r\n\t\tvar m21:number, m22:number, m23:number, m24:number;\r\n\t\tvar m31:number, m32:number, m33:number, m34:number;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tvertX = sourcePositions[index];\r\n\t\t\tvertY = sourcePositions[index + 1];\r\n\t\t\tvertZ = sourcePositions[index + 2];\r\n\t\t\tnormX = sourceNormals[index];\r\n\t\t\tnormY = sourceNormals[index + 1];\r\n\t\t\tnormZ = sourceNormals[index + 2];\r\n\t\t\ttangX = sourceTangents[index];\r\n\t\t\ttangY = sourceTangents[index + 1];\r\n\t\t\ttangZ = sourceTangents[index + 2];\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\t\t\tvz = 0;\r\n\t\t\tnx = 0;\r\n\t\t\tny = 0;\r\n\t\t\tnz = 0;\r\n\t\t\ttx = 0;\r\n\t\t\tty = 0;\r\n\t\t\ttz = 0;\r\n\t\t\tk = 0;\r\n\t\t\twhile (k < this._jointsPerVertex) {\r\n\t\t\t\tweight = jointWeights[j];\r\n\t\t\t\tif (weight > 0) {\r\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\r\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\r\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\r\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\r\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\r\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\r\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\r\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\r\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\r\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\r\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\r\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\r\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\r\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\r\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\r\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\r\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\r\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\r\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\r\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\r\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\r\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\r\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\r\n\t\t\t\t\t++k;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tj += (this._jointsPerVertex - k);\r\n\t\t\t\t\tk = this._jointsPerVertex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttargetPositions[index] = vx;\r\n\t\t\ttargetPositions[index + 1] = vy;\r\n\t\t\ttargetPositions[index + 2] = vz;\r\n\t\t\ttargetNormals[index] = nx;\r\n\t\t\ttargetNormals[index + 1] = ny;\r\n\t\t\ttargetNormals[index + 2] = nz;\r\n\t\t\ttargetTangents[index] = tx;\r\n\t\t\ttargetTangents[index + 1] = ty;\r\n\t\t\ttargetTangents[index + 2] = tz;\r\n\r\n\t\t\tindex += 3;\r\n\t\t}\r\n\r\n\t\ttargetSubGeometry.updatePositions(targetPositions);\r\n\t\ttargetSubGeometry.updateVertexNormals(targetNormals);\r\n\t\ttargetSubGeometry.updateVertexTangents(targetTangents);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a local hierarchical skeleton pose to a global pose\r\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\r\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\r\n\t */\r\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\r\n\t{\r\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\r\n\t\tvar globalJointPose:JointPose;\r\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\r\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\r\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\r\n\t\tvar parentIndex:number /*int*/;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tvar parentPose:JointPose;\r\n\t\tvar pose:JointPose;\r\n\t\tvar or:Quaternion;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar t:Vector3D;\r\n\t\tvar q:Quaternion;\r\n\r\n\t\tvar x1:number, y1:number, z1:number, w1:number;\r\n\t\tvar x2:number, y2:number, z2:number, w2:number;\r\n\t\tvar x3:number, y3:number, z3:number;\r\n\r\n\t\t// :s\r\n\t\tif (globalPoses.length != len)\r\n\t\t\tglobalPoses.length = len;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tglobalJointPose = globalPoses[i];\r\n\r\n\t\t\tif (globalJointPose == null)\r\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\r\n\r\n\t\t\tjoint = joints[i];\r\n\t\t\tparentIndex = joint.parentIndex;\r\n\t\t\tpose = jointPoses[i];\r\n\r\n\t\t\tq = globalJointPose.orientation;\r\n\t\t\tt = globalJointPose.translation;\r\n\r\n\t\t\tif (parentIndex < 0) {\r\n\t\t\t\ttr = pose.translation;\r\n\t\t\t\tor = pose.orientation;\r\n\t\t\t\tq.x = or.x;\r\n\t\t\t\tq.y = or.y;\r\n\t\t\t\tq.z = or.z;\r\n\t\t\t\tq.w = or.w;\r\n\t\t\t\tt.x = tr.x;\r\n\t\t\t\tt.y = tr.y;\r\n\t\t\t\tt.z = tr.z;\r\n\t\t\t} else {\r\n\t\t\t\t// append parent pose\r\n\t\t\t\tparentPose = globalPoses[parentIndex];\r\n\r\n\t\t\t\t// rotate point\r\n\t\t\t\tor = parentPose.orientation;\r\n\t\t\t\ttr = pose.translation;\r\n\t\t\t\tx2 = or.x;\r\n\t\t\t\ty2 = or.y;\r\n\t\t\t\tz2 = or.z;\r\n\t\t\t\tw2 = or.w;\r\n\t\t\t\tx3 = tr.x;\r\n\t\t\t\ty3 = tr.y;\r\n\t\t\t\tz3 = tr.z;\r\n\r\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\r\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\r\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\r\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\r\n\r\n\t\t\t\t// append parent translation\r\n\t\t\t\ttr = parentPose.translation;\r\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\r\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\r\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\r\n\r\n\t\t\t\t// append parent orientation\r\n\t\t\t\tx1 = or.x;\r\n\t\t\t\ty1 = or.y;\r\n\t\t\t\tz1 = or.z;\r\n\t\t\t\tw1 = or.w;\r\n\t\t\t\tor = pose.orientation;\r\n\t\t\t\tx2 = or.x;\r\n\t\t\t\ty2 = or.y;\r\n\t\t\t\tz2 = or.z;\r\n\t\t\t\tw2 = or.w;\r\n\r\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\r\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\r\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\r\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTransitionComplete(event:AnimationStateEvent)\r\n\t{\r\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\r\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\r\n\t\t\t//if this is the current active state transition, revert control to the active node\r\n\t\t\tif (this._pActiveState == event.animationState) {\r\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\r\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\r\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\r\n\t{\r\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\r\n\r\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).updateIndices(subGeometry.indices);\r\n\t}\r\n\r\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\r\n\t{\r\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\r\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\r\n\r\n\t\tswitch(event.dataType) {\r\n\t\t\tcase TriangleSubGeometry.UV_DATA:\r\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.uvs);\r\n\t\t\tcase TriangleSubGeometry.SECONDARY_UV_DATA:\r\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.secondaryUVs);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonAnimator;","import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\n\r\n/**\r\n * The animation data set used by vertex-based animators, containing vertex animation state data.\r\n *\r\n * @see VertexAnimator\r\n */\r\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\r\n{\r\n\tprivate _numPoses:number /*uint*/;\r\n\tprivate _blendMode:string;\r\n\r\n\t/**\r\n\t * Returns the number of poses made available at once to the GPU animation code.\r\n\t */\r\n\tpublic get numPoses():number /*uint*/\r\n\t{\r\n\t\treturn this._numPoses;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the active blend mode of the vertex animator object.\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._blendMode;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\r\n\t */\r\n//\t\tpublic get useNormals():boolean\r\n//\t\t{\r\n//\t\t\treturn this._uploadNormals;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>VertexAnimationSet</code> object.\r\n\t *\r\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\r\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\r\n\t *\r\n\t * @see away3d.animators.data.VertexAnimationMode\r\n\t */\r\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._numPoses = numPoses;\r\n\t\tthis._blendMode = blendMode;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\r\n\t\t\treturn this.getAbsoluteAGALCode(shaderObject);\r\n\t\telse\r\n\t\t\treturn this.getAdditiveAGALCode(shaderObject);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar uID:number = pass._iUniqueId;\r\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\r\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\r\n\t{\r\n//\t\t\tvar uID:number = pass._iUniqueId;\r\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\r\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n//\t\t\tcontext.setVertexBufferAt(index, null);\r\n//\t\t\tif (this._uploadNormals)\r\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\r\n//\t\t\tif (this._uploadTangents)\r\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates the vertex AGAL code for absolute blending.\r\n\t */\r\n\tprivate getAbsoluteAGALCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\r\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\r\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\r\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\r\n\t\tvar constantReg:string = \"vc\" + shaderObject.numUsedVertexConstants;\r\n\r\n\t\tif (len > 2)\r\n\t\t\tlen = 2;\r\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tcode += \"mul \" + temp1 + \", \" + shaderObject.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\r\n\r\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\r\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\r\n\r\n\t\t\t\tif (j < this._numPoses - 1)\r\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\r\n\t\t\t\t++streamIndex;\r\n\t\t\t}\r\n\r\n\t\t\tcode += \"add \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\t\t}\r\n\r\n\t\t// add code for bitangents if tangents are used\r\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\r\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\r\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\r\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates the vertex AGAL code for additive blending.\r\n\t */\r\n\tprivate getAdditiveAGALCode(shaderObject:ShaderObjectBase):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\r\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\r\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\r\n\t\tvar k:number /*uint*/;\r\n\r\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\r\n\r\n\t\tif (len > 2)\r\n\t\t\tlen = 2;\r\n\r\n\t\tcode += \"mov  \" + shaderObject.animationTargetRegisters[0] + \", \" + shaderObject.animatableAttributes[0] + \"\\n\";\r\n\t\tif (shaderObject.normalDependencies > 0)\r\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[1] + \", \" + shaderObject.animatableAttributes[1] + \"\\n\";\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\r\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\r\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shaderObject.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\r\n\t\t\t\t\t\"add \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\r\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\r\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\r\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nexport = VertexAnimationSet;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport VertexDataPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\r\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\r\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\r\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\n\r\n/**\r\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\r\n * and controlling the various available states of animation through an interative playhead that can be\r\n * automatically updated or manually triggered.\r\n */\r\nclass VertexAnimator extends AnimatorBase\r\n{\r\n\tprivate _vertexAnimationSet:VertexAnimationSet;\r\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\r\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\r\n\tprivate _numPoses:number /*uint*/;\r\n\tprivate _blendMode:string;\r\n\tprivate _activeVertexState:IVertexAnimationState;\r\n\r\n\t/**\r\n\t * Creates a new <code>VertexAnimator</code> object.\r\n\t *\r\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\r\n\t */\r\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\r\n\t{\r\n\t\tsuper(vertexAnimationSet);\r\n\r\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\r\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\r\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic clone():AnimatorBase\r\n\t{\r\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\r\n\t}\r\n\r\n\t/**\r\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\r\n\t * @param sequenceName The name of the clip to be played.\r\n\t */\r\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\r\n\t{\r\n\t\tif (this._pActiveAnimationName == name)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pActiveAnimationName = name;\r\n\r\n\t\t//TODO: implement transitions in vertex animator\r\n\r\n\t\tif (!this._pAnimationSet.hasAnimation(name))\r\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\r\n\r\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\r\n\r\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\r\n\r\n\t\tif (this.updatePosition) {\r\n\t\t\t//update straight away to reset position deltas\r\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\r\n\t\t\tthis._pActiveState.positionDelta;\r\n\t\t}\r\n\r\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\r\n\r\n\t\tthis.start();\r\n\r\n\t\t//apply a time offset if specified\r\n\t\tif (!isNaN(offset))\r\n\t\t\tthis.reset(name, offset);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateDeltaTime(dt:number)\r\n\t{\r\n\t\tsuper._pUpdateDeltaTime(dt);\r\n\r\n\t\tvar geometryFlag:boolean = false;\r\n\r\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\r\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\r\n\t\t\tgeometryFlag = true;\r\n\t\t}\r\n\r\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\r\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\r\n\t\t\tgeometryFlag = true;\r\n\t\t}\r\n\r\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\r\n\r\n\t\tif (geometryFlag) {\r\n\t\t\t//invalidate meshes\r\n\t\t\tvar mesh:Mesh;\r\n\t\t\tvar len:number = this._pOwners.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\tmesh = this._pOwners[i];\r\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\t// todo: add code for when running on cpu\r\n\r\n\t\t// if no poses defined, set temp data\r\n\t\tif (!this._poses.length) {\r\n\t\t\tthis.setNullPose(shaderObject, renderable, stage, vertexConstantOffset, vertexStreamOffset);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// this type of animation can only be SubMesh\r\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar len:number /*uint*/ = this._numPoses;\r\n\r\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\r\n\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\r\n\t\t\ti = 1;\r\n\t\telse\r\n\t\t\ti = 0;\r\n\r\n\t\tfor (; i < len; ++i) {\r\n\t\t\tsubGeom = this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\r\n\r\n\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.POSITION_DATA), subGeom.getOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\r\n\t\t\tif (shaderObject.normalDependencies > 0)\r\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.NORMAL_DATA), subGeom.getOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setNullPose(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\r\n\t{\r\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\r\n\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\r\n\t\t\tvar len:number /*uint*/ = this._numPoses;\r\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\r\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\r\n\t\t\t\tif (shaderObject.normalDependencies > 0)\r\n\t\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// todo: set temp data for additive?\r\n\t}\r\n\r\n\t/**\r\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\r\n\t * Needs to be called if gpu code is potentially required.\r\n\t */\r\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t}\r\n\r\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\r\n\t{\r\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\r\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\r\n\r\n\t\t//nothing to do here\r\n\t\treturn sourceSubGeometry;\r\n\t}\r\n}\r\n\r\nexport = VertexAnimator;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\n\r\n/**\r\n * ...\r\n */\r\nclass AnimationRegisterCache extends ShaderRegisterCache\r\n{\r\n\t//vertex\r\n\tpublic positionAttribute:ShaderRegisterElement;\r\n\tpublic uvAttribute:ShaderRegisterElement;\r\n\tpublic positionTarget:ShaderRegisterElement;\r\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\r\n\tpublic velocityTarget:ShaderRegisterElement;\r\n\tpublic vertexTime:ShaderRegisterElement;\r\n\tpublic vertexLife:ShaderRegisterElement;\r\n\tpublic vertexZeroConst:ShaderRegisterElement;\r\n\tpublic vertexOneConst:ShaderRegisterElement;\r\n\tpublic vertexTwoConst:ShaderRegisterElement;\r\n\tpublic uvTarget:ShaderRegisterElement;\r\n\tpublic colorAddTarget:ShaderRegisterElement;\r\n\tpublic colorMulTarget:ShaderRegisterElement;\r\n\t//vary\r\n\tpublic colorAddVary:ShaderRegisterElement;\r\n\tpublic colorMulVary:ShaderRegisterElement;\r\n\r\n\t//fragment\r\n\r\n\tpublic uvVar:ShaderRegisterElement;\r\n\r\n\t//these are targets only need to rotate ( normal and tangent )\r\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\r\n\r\n\tpublic needFragmentAnimation:boolean;\r\n\tpublic needUVAnimation:boolean;\r\n\r\n\tpublic sourceRegisters:Array<string>;\r\n\tpublic targetRegisters:Array<string>;\r\n\r\n\tprivate indexDictionary:Object = new Object();\r\n\r\n\t//set true if has an node which will change UV\r\n\tpublic hasUVNode:boolean;\r\n\t//set if the other nodes need to access the velocity\r\n\tpublic needVelocity:boolean;\r\n\t//set if has a billboard node.\r\n\tpublic hasBillboard:boolean;\r\n\t//set if has an node which will apply color multiple operation\r\n\tpublic hasColorMulNode:boolean;\r\n\t//set if has an node which will apply color add operation\r\n\tpublic hasColorAddNode:boolean;\r\n\r\n\tconstructor(profile:string)\r\n\t{\r\n\t\tsuper(profile);\r\n\t}\r\n\r\n\tpublic reset()\r\n\t{\r\n\t\tsuper.reset();\r\n\r\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\r\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\r\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\r\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\r\n\r\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\r\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\r\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\r\n\t\t}\r\n\r\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\r\n\r\n\t\t//allot const register\r\n\r\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\r\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\r\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\r\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\r\n\r\n\t\t//allot temp register\r\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\r\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\r\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\r\n\r\n\t\tif (this.needVelocity) {\r\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\r\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\r\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\r\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\r\n\t\t} else {\r\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\r\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\r\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\r\n\t{\r\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\r\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\r\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\r\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\r\n\t}\r\n\r\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\r\n\t{\r\n\t\t//8 should be enough for any node.\r\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\r\n\r\n\t\tif (t == null)\r\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\r\n\r\n\t\tt[parameterIndex] = registerIndex;\r\n\t}\r\n\r\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\r\n\t}\r\n\r\n\tpublic getInitCode():string\r\n\t{\r\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\r\n\t\tvar code:string = \"\";\r\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\r\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\r\n\r\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\r\n\r\n\t\tif (this.needVelocity)\r\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic getCombinationCode():string\r\n\t{\r\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\r\n\t}\r\n\r\n\tpublic initColorRegisters():string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.hasColorMulNode) {\r\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\r\n\t\t\tthis.colorMulVary = this.getFreeVarying();\r\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\r\n\t\t}\r\n\t\tif (this.hasColorAddNode) {\r\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\r\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\r\n\t\t\tthis.colorAddVary = this.getFreeVarying();\r\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic getColorPassCode():string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\r\n\t\t\tif (this.hasColorMulNode)\r\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\r\n\t\t\tif (this.hasColorAddNode)\r\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic getColorCombinationCode(shadedTarget:string):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\r\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\r\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\r\n\t\t\tif (this.hasColorMulNode)\r\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\r\n\t\t\tif (this.hasColorAddNode)\r\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\r\n\t{\r\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\r\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\r\n\t}\r\n\r\n\tpublic vertexConstantData:Array<number> = new Array<number>();\r\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\r\n\r\n\tprivate _numVertexConstant:number /*int*/;\r\n\tprivate _numFragmentConstant:number /*int*/;\r\n\r\n\tpublic get numVertexConstant():number /*int*/\r\n\t{\r\n\t\treturn this._numVertexConstant;\r\n\t}\r\n\r\n\tpublic get numFragmentConstant():number /*int*/\r\n\t{\r\n\t\treturn this._numFragmentConstant;\r\n\t}\r\n\r\n\tpublic setDataLength()\r\n\t{\r\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\r\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\r\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\r\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\r\n\t}\r\n\r\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\r\n\t\tthis.vertexConstantData[_index++] = x;\r\n\t\tthis.vertexConstantData[_index++] = y;\r\n\t\tthis.vertexConstantData[_index++] = z;\r\n\t\tthis.vertexConstantData[_index] = w;\r\n\t}\r\n\r\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\r\n\t{\r\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\r\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\r\n\t\t\tthis.vertexConstantData[_index++] = data[i];\r\n\t}\r\n\r\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\r\n\t{\r\n\t\tvar rawData:Array<number> = matrix.rawData;\r\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\r\n\t\tthis.vertexConstantData[_index++] = rawData[0];\r\n\t\tthis.vertexConstantData[_index++] = rawData[4];\r\n\t\tthis.vertexConstantData[_index++] = rawData[8];\r\n\t\tthis.vertexConstantData[_index++] = rawData[12];\r\n\t\tthis.vertexConstantData[_index++] = rawData[1];\r\n\t\tthis.vertexConstantData[_index++] = rawData[5];\r\n\t\tthis.vertexConstantData[_index++] = rawData[9];\r\n\t\tthis.vertexConstantData[_index++] = rawData[13];\r\n\t\tthis.vertexConstantData[_index++] = rawData[2];\r\n\t\tthis.vertexConstantData[_index++] = rawData[6];\r\n\t\tthis.vertexConstantData[_index++] = rawData[10];\r\n\t\tthis.vertexConstantData[_index++] = rawData[14];\r\n\t\tthis.vertexConstantData[_index++] = rawData[3];\r\n\t\tthis.vertexConstantData[_index++] = rawData[7];\r\n\t\tthis.vertexConstantData[_index++] = rawData[11];\r\n\t\tthis.vertexConstantData[_index] = rawData[15];\r\n\r\n\t}\r\n\r\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\r\n\t{\r\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\r\n\t\tthis.fragmentConstantData[_index++] = x;\r\n\t\tthis.fragmentConstantData[_index++] = y;\r\n\t\tthis.fragmentConstantData[_index++] = z;\r\n\t\tthis.fragmentConstantData[_index] = w;\r\n\t}\r\n}\r\n\r\nexport = AnimationRegisterCache;","import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\r\n\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass AnimationSubGeometry\r\n{\r\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\r\n\r\n\tpublic _pVertexData:Array<number>;\r\n\r\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\r\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\r\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\r\n\r\n\tprivate _numVertices:number /*uint*/;\r\n\r\n\tprivate _totalLenOfOneVertex:number /*uint*/;\r\n\r\n\tpublic numProcessedVertices:number /*int*/ = 0;\r\n\r\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\r\n\r\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\r\n\r\n\t/**\r\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iUniqueId:number;//Arcane\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\r\n\t\t\tthis._pBufferDirty[i] = true;\r\n\r\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\r\n\t}\r\n\r\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\r\n\t{\r\n\t\tthis._numVertices = numVertices;\r\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\r\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\r\n\t}\r\n\r\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\r\n\t{\r\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\r\n\t\tvar context:IContextGL = <IContextGL> stage.context;\r\n\r\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\r\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\r\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex);\r\n\t\t\tthis._pBufferContext[contextIndex] = context;\r\n\t\t\tthis._pBufferDirty[contextIndex] = true;\r\n\t\t}\r\n\t\tif (this._pBufferDirty[contextIndex]) {\r\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\r\n\t\t\tthis._pBufferDirty[contextIndex] = false;\r\n\t\t}\r\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset, format);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._pVertexBuffer.length) {\r\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\r\n\r\n\t\t\tif (vertexBuffer)\r\n\t\t\t\tvertexBuffer.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic invalidateBuffer()\r\n\t{\r\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\r\n\t\t\tthis._pBufferDirty[i] = true;\r\n\t}\r\n\r\n\tpublic get vertexData():Array<number>\r\n\t{\r\n\t\treturn this._pVertexData;\r\n\t}\r\n\r\n\tpublic get numVertices():number /*uint*/\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\tpublic get totalLenOfOneVertex():number /*uint*/\r\n\t{\r\n\t\treturn this._totalLenOfOneVertex;\r\n\t}\r\n}\r\n\r\nexport = AnimationSubGeometry;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nclass ColorSegmentPoint\r\n{\r\n\tprivate _color:ColorTransform;\r\n\tprivate _life:number;\r\n\r\n\tconstructor(life:number, color:ColorTransform)\r\n\t{\r\n\t\t//0<life<1\r\n\t\tif (life <= 0 || life >= 1)\r\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\r\n\t\tthis._life = life;\r\n\t\tthis._color = color;\r\n\t}\r\n\r\n\tpublic get color():ColorTransform\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic get life():number\r\n\t{\r\n\t\treturn this._life;\r\n\t}\r\n\r\n}\r\n\r\nexport = ColorSegmentPoint;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n/**\r\n * Contains transformation data for a skeleton joint, used for skeleton animation.\r\n *\r\n * @see away.animation.Skeleton\r\n * @see away.animation.SkeletonJoint\r\n *\r\n * todo: support (uniform) scale\r\n */\r\nclass JointPose\r\n{\r\n\t/**\r\n\t * The name of the joint to which the pose is associated\r\n\t */\r\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\r\n\r\n\t/**\r\n\t * The rotation of the pose stored as a quaternion\r\n\t */\r\n\tpublic orientation:Quaternion = new Quaternion();\r\n\r\n\t/**\r\n\t * The translation of the pose\r\n\t */\r\n\tpublic translation:Vector3D = new Vector3D();\r\n\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the transformation to a Matrix3D representation.\r\n\t *\r\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\r\n\t * @return The transformation matrix of the pose.\r\n\t */\r\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\tthis.orientation.toMatrix3D(target);\r\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the transformation data from a source pose object into the existing pose object.\r\n\t *\r\n\t * @param pose The source pose to copy from.\r\n\t */\r\n\tpublic copyFrom(pose:JointPose)\r\n\t{\r\n\t\tvar or:Quaternion = pose.orientation;\r\n\t\tvar tr:Vector3D = pose.translation;\r\n\t\tthis.orientation.x = or.x;\r\n\t\tthis.orientation.y = or.y;\r\n\t\tthis.orientation.z = or.z;\r\n\t\tthis.orientation.w = or.w;\r\n\t\tthis.translation.x = tr.x;\r\n\t\tthis.translation.y = tr.y;\r\n\t\tthis.translation.z = tr.z;\r\n\t}\r\n}\r\n\r\nexport = JointPose;","import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleAnimationData\r\n{\r\n\tpublic index:number /*uint*/;\r\n\tpublic startTime:number;\r\n\tpublic totalTime:number;\r\n\tpublic duration:number;\r\n\tpublic delay:number;\r\n\tpublic startVertexIndex:number /*uint*/;\r\n\tpublic numVertices:number /*uint*/;\r\n\r\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\r\n\t{\r\n\t\tthis.index = index;\r\n\t\tthis.startTime = startTime;\r\n\t\tthis.totalTime = duration + delay;\r\n\t\tthis.duration = duration;\r\n\t\tthis.delay = delay;\r\n\t\tthis.startVertexIndex = particle.startVertexIndex;\r\n\t\tthis.numVertices = particle.numVertices;\r\n\t}\r\n}\r\n\r\nexport = ParticleAnimationData;","import TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\n\r\nclass ParticleData\r\n{\r\n\tpublic particleIndex:number /*uint*/;\r\n\tpublic numVertices:number /*uint*/;\r\n\tpublic startVertexIndex:number /*uint*/;\r\n\tpublic subGeometry:TriangleSubGeometry;\r\n}\r\n\r\nexport = ParticleData","/**\r\n * Options for setting the properties mode of a particle animation node.\r\n */\r\nclass ParticlePropertiesMode\r\n{\r\n\t/**\r\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\r\n\t */\r\n\tpublic static GLOBAL:number /*uint*/ = 0;\r\n\r\n\t/**\r\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\r\n\t */\r\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\r\n\r\n\t/**\r\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\r\n\t */\r\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\r\n}\r\n\r\nexport = ParticlePropertiesMode;","/**\r\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\r\n * of particles in the particle animation set before beginning upload to the GPU.\r\n */\r\nclass ParticleProperties\r\n{\r\n\t/**\r\n\t * The index of the current particle being set.\r\n\t */\r\n\tpublic index:number /*uint*/;\r\n\r\n\t/**\r\n\t * The total number of particles being processed by the particle animation set.\r\n\t */\r\n\tpublic total:number /*uint*/;\r\n\r\n\t/**\r\n\t * The start time of the particle.\r\n\t */\r\n\tpublic startTime:number;\r\n\r\n\t/**\r\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t */\r\n\tpublic duration:number;\r\n\r\n\t/**\r\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t */\r\n\tpublic delay:number;\r\n}\r\n\r\nexport = ParticleProperties;","/**\r\n * A value obect representing a single joint in a skeleton object.\r\n *\r\n * @see away.animators.Skeleton\r\n */\r\nclass SkeletonJoint\r\n{\r\n\t/**\r\n\t * The index of the parent joint in the skeleton's joints vector.\r\n\t *\r\n\t * @see away.animators.Skeleton#joints\r\n\t */\r\n\tpublic parentIndex:number /*int*/ = -1;\r\n\r\n\t/**\r\n\t * The name of the joint\r\n\t */\r\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\r\n\r\n\t/**\r\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\r\n\t */\r\n\tpublic inverseBindPose:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonJoint</code> object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = SkeletonJoint;","import AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\n\r\n\r\n/**\r\n * A collection of pose objects, determining the pose for an entire skeleton.\r\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\r\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\r\n * clips are added to any animator with a valid skeleton)\r\n *\r\n * @see away.animators.Skeleton\r\n * @see away.animators.JointPose\r\n */\r\nclass SkeletonPose extends NamedAssetBase implements IAsset\r\n{\r\n\t/**\r\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\r\n\t *\r\n\t * @see away.animators.Skeleton#joints\r\n\t */\r\n\tpublic jointPoses:Array<JointPose>;\r\n\r\n\t/**\r\n\t * The total number of joint poses in the skeleton pose.\r\n\t */\r\n\tpublic get numJointPoses():number /*uint*/\r\n\t{\r\n\t\treturn this.jointPoses.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonPose</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.jointPoses = new Array<JointPose>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.SKELETON_POSE;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\r\n\t *\r\n\t * @param jointName The name of the joint object whose pose is to be found.\r\n\t * @return The pose object with the given joint name.\r\n\t */\r\n\tpublic jointPoseFromName(jointName:string):JointPose\r\n\t{\r\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\r\n\t\tif (jointPoseIndex != -1)\r\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\r\n\t *\r\n\t * @param The name of the joint object whose pose is to be found.\r\n\t * @return The index of the pose object in the jointPoses Array\r\n\t *\r\n\t * @see #jointPoses\r\n\t */\r\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\r\n\t{\r\n\t\t// this is implemented as a linear search, rather than a possibly\r\n\t\t// more optimal method (Dictionary lookup, for example) because:\r\n\t\t// a) it is assumed that it will be called once for each joint\r\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\r\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\r\n\t\t//    rather than direct array access.  this would be sub-optimal.\r\n\t\tvar jointPoseIndex:number /*int*/;\r\n\t\tvar jointPose:JointPose;\r\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\r\n\t\t\tjointPose = this.jointPoses[i];\r\n\t\t\tif (jointPose.name == jointName)\r\n\t\t\t\treturn jointPoseIndex;\r\n\t\t\tjointPoseIndex++;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\r\n\t *\r\n\t * @return SkeletonPose\r\n\t */\r\n\tpublic clone():SkeletonPose\r\n\t{\r\n\t\tvar clone:SkeletonPose = new SkeletonPose();\r\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\r\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\r\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\r\n\t\t\tcloneJointPose.name = thisJointPose.name;\r\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\r\n\t\t\tclone.jointPoses[i] = cloneJointPose;\r\n\t\t}\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.jointPoses.length = 0;\r\n\t}\r\n}\r\n\r\nexport = SkeletonPose;","import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\r\n\r\nimport AssetType\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n/**\r\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\r\n *\r\n * @see away.animators.SkeletonJoint\r\n */\r\nclass Skeleton extends NamedAssetBase implements IAsset\r\n{\r\n\t/**\r\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\r\n\t * property that is an index into this list.\r\n\t * A child joint should always have a higher index than its parent.\r\n\t */\r\n\tpublic joints:Array<SkeletonJoint>;\r\n\r\n\t/**\r\n\t * The total number of joints in the skeleton.\r\n\t */\r\n\tpublic get numJoints():number /*uint*/\r\n\t{\r\n\t\treturn this.joints.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Skeleton</code> object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\r\n\t\tthis.joints = new Array<SkeletonJoint>();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\r\n\t *\r\n\t * @param jointName The name of the joint object to be found.\r\n\t * @return The joint object with the given name.\r\n\t *\r\n\t * @see #joints\r\n\t */\r\n\tpublic jointFromName(jointName:string):SkeletonJoint\r\n\t{\r\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\r\n\t\tif (jointIndex != -1)\r\n\t\t\treturn this.joints[jointIndex]; else\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\r\n\t *\r\n\t * @param jointName The name of the joint object to be found.\r\n\t * @return The index of the joint object in the joints Array\r\n\t *\r\n\t * @see #joints\r\n\t */\r\n\tpublic jointIndexFromName(jointName:string):number /*int*/\r\n\t{\r\n\t\t// this is implemented as a linear search, rather than a possibly\r\n\t\t// more optimal method (Dictionary lookup, for example) because:\r\n\t\t// a) it is assumed that it will be called once for each joint\r\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\r\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\r\n\t\t//    rather than direct array access.  this would be sub-optimal.\r\n\t\tvar jointIndex:number /*int*/;\r\n\t\tvar joint:SkeletonJoint;\r\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\r\n\t\t\tjoint = this.joints[i];\r\n\t\t\tif (joint.name == jointName)\r\n\t\t\t\treturn jointIndex;\r\n\t\t\tjointIndex++;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.joints.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.SKELETON;\r\n\t}\r\n}\r\n\r\nexport = Skeleton;","/**\r\n * Options for setting the animation mode of a vertex animator object.\r\n *\r\n * @see away.animators.VertexAnimator\r\n */\r\nclass VertexAnimationMode\r\n{\r\n\t/**\r\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\r\n\t */\r\n\tpublic static ADDITIVE:string = \"additive\";\r\n\r\n\t/**\r\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\r\n\t */\r\n\tpublic static ABSOLUTE:string = \"absolute\";\r\n}\r\n\r\nexport = VertexAnimationMode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\r\n */\r\nclass AnimationClipNodeBase extends AnimationNodeBase\r\n{\r\n\tpublic _pLooping:boolean = true;\r\n\tpublic _pTotalDuration:number /*uint*/ = 0;\r\n\tpublic _pLastFrame:number /*uint*/;\r\n\r\n\tpublic _pStitchDirty:boolean = true;\r\n\tpublic _pStitchFinalFrame:boolean = false;\r\n\tpublic _pNumFrames:number /*uint*/ = 0;\r\n\r\n\tpublic _pDurations:Array<number> = new Array<number>();\r\n\t/*uint*/\r\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\r\n\r\n\tpublic fixedFrameRate:boolean = true;\r\n\r\n\t/**\r\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\r\n\t */\r\n\tpublic get looping():boolean\r\n\t{\r\n\t\treturn this._pLooping;\r\n\t}\r\n\r\n\tpublic set looping(value:boolean)\r\n\t{\r\n\t\tif (this._pLooping == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pLooping = value;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\r\n\t * assumption that both first and last frames are identical (false). Defaults to false.\r\n\t */\r\n\tpublic get stitchFinalFrame():boolean\r\n\t{\r\n\t\treturn this._pStitchFinalFrame;\r\n\t}\r\n\r\n\tpublic set stitchFinalFrame(value:boolean)\r\n\t{\r\n\t\tif (this._pStitchFinalFrame == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pStitchFinalFrame = value;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\tpublic get totalDuration():number /*uint*/\r\n\t{\r\n\t\tif (this._pStitchDirty)\r\n\t\t\tthis._pUpdateStitch();\r\n\r\n\t\treturn this._pTotalDuration;\r\n\t}\r\n\r\n\tpublic get totalDelta():Vector3D\r\n\t{\r\n\t\tif (this._pStitchDirty)\r\n\t\t\tthis._pUpdateStitch();\r\n\r\n\t\treturn this._pTotalDelta;\r\n\t}\r\n\r\n\tpublic get lastFrame():number /*uint*/\r\n\t{\r\n\t\tif (this._pStitchDirty)\r\n\t\t\tthis._pUpdateStitch();\r\n\r\n\t\treturn this._pLastFrame;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\r\n\t */\r\n\tpublic get durations():Array<number> /*uint*/\r\n\t{\r\n\t\treturn this._pDurations;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the node's final frame stitch state.\r\n\t *\r\n\t * @see #stitchFinalFrame\r\n\t */\r\n\tpublic _pUpdateStitch()\r\n\t{\r\n\t\tthis._pStitchDirty = false;\r\n\r\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\r\n\r\n\t\tthis._pTotalDuration = 0;\r\n\t\tthis._pTotalDelta.x = 0;\r\n\t\tthis._pTotalDelta.y = 0;\r\n\t\tthis._pTotalDelta.z = 0;\r\n\t}\r\n}\r\n\r\nexport = AnimationClipNodeBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\r\n\r\n/**\r\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\r\n */\r\nclass ParticleAccelerationNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _acceleration:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\r\n\t */\r\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleAccelerationNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\r\n\r\n\t\tthis._pStateClass = ParticleAccelerationState;\r\n\r\n\t\tthis._acceleration = acceleration || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pGetAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\r\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t}\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\r\n\t{\r\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\r\n\t\tif (!tempAcceleration)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\r\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\r\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\r\n\t}\r\n}\r\n\r\nexport = ParticleAccelerationNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\r\n\r\n/**\r\n * A particle animation node used to control the position of a particle over time along a bezier curve.\r\n */\r\nclass ParticleBezierCurveNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iControlPoint:Vector3D;\r\n\t/** @private */\r\n\tpublic _iEndPoint:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\r\n\t */\r\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\r\n\r\n\t/**\r\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\r\n\t */\r\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleBezierCurveNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\r\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\r\n\r\n\t\tthis._pStateClass = ParticleBezierCurveState;\r\n\r\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\r\n\t\tthis._iEndPoint = endPoint || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\r\n\r\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\r\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\r\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\r\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\r\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\r\n\t{\r\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\r\n\t\tif (!bezierControl)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\r\n\r\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\r\n\t\tif (!bezierEnd)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = bezierControl.x;\r\n\t\tthis._pOneData[1] = bezierControl.y;\r\n\t\tthis._pOneData[2] = bezierControl.z;\r\n\t\tthis._pOneData[3] = bezierEnd.x;\r\n\t\tthis._pOneData[4] = bezierEnd.y;\r\n\t\tthis._pOneData[5] = bezierEnd.z;\r\n\t}\r\n}\r\n\r\nexport = ParticleBezierCurveNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\r\n\r\n/**\r\n * A particle animation node that controls the rotation of a particle to always face the camera.\r\n */\r\nclass ParticleBillboardNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iBillboardAxis:Vector3D;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleBillboardNode</code>\r\n\t */\r\n\tconstructor(billboardAxis:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\r\n\r\n\t\tthis._pStateClass = ParticleBillboardState;\r\n\r\n\t\tthis._iBillboardAxis = billboardAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\r\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\r\n\r\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\r\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\r\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\r\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\r\n\t{\r\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.hasBillboard = true;\r\n\t}\r\n}\r\n\r\nexport = ParticleBillboardNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\r\n\r\n/**\r\n * A particle animation node used to control the color variation of a particle over time.\r\n */\r\nclass ParticleColorNode extends ParticleNodeBase\r\n{\r\n\t//default values used when creating states\r\n\t/** @private */\r\n\tpublic _iUsesMultiplier:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesOffset:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\t/** @private */\r\n\tpublic _iStartColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iEndColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\r\n\t/**\r\n\t * Reference for color node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\r\n\t */\r\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\r\n\r\n\t/**\r\n\t * Reference for color node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\r\n\t */\r\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleColorNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\r\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\r\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\r\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\r\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\r\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\r\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\r\n\t{\r\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleColorState;\r\n\r\n\t\tthis._iUsesMultiplier = usesMultiplier;\r\n\t\tthis._iUsesOffset = usesOffset;\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iStartColor = startColor || new ColorTransform();\r\n\t\tthis._iEndColor = endColor || new ColorTransform();\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tif (this._iUsesCycle) {\r\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\r\n\r\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\r\n\r\n\t\t\t\tif (this._iUsesPhase)\r\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\r\n\r\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\r\n\r\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\r\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\r\n\r\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\r\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\r\n\t{\r\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tif (this._iUsesMultiplier)\r\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\r\n\t\tif (this._iUsesOffset)\r\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\r\n\t\tif (!startColor)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\r\n\r\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\r\n\t\tif (!endColor)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\r\n\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\tif (!this._iUsesCycle) {\r\n\t\t\t//multiplier\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\r\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\r\n\t\t\t}\r\n\r\n\t\t\t//offset\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\r\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//multiplier\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\r\n\t\t\t}\r\n\r\n\t\t\t//offset\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\r\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport = ParticleColorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\r\n\r\n/**\r\n * A particle animation node used to create a follow behaviour on a particle system.\r\n */\r\nclass ParticleFollowNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesPosition:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesRotation:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iSmooth:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleFollowNode</code>\r\n\t *\r\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\r\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\r\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\r\n\t */\r\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\r\n\t{\r\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleFollowState;\r\n\r\n\t\tthis._iUsesPosition = usesPosition;\r\n\t\tthis._iUsesRotation = usesRotation;\r\n\t\tthis._iSmooth = smooth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\t//TODO: use Quaternion to implement this function\r\n\t\tvar code:string = \"\";\r\n\t\tif (this._iUsesRotation) {\r\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\r\n\r\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\r\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tvar temp4:ShaderRegisterElement;\r\n\t\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\r\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t}\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\r\n\t\t\tif (animationRegisterCache.hasBillboard)\r\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\r\n\r\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\t\tvar i:number /*int*/;\r\n\r\n\t\t\t//x axis\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\r\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\r\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\r\n\r\n\t\t\tif (animationRegisterCache.hasBillboard)\r\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\telse {\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t//y axis\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\r\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\r\n\r\n\t\t\tif (animationRegisterCache.hasBillboard)\r\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\telse {\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t//z axis\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\r\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\r\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\r\n\t\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._iUsesPosition) {\r\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\r\n\t{\r\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = ParticleFollowNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\r\n\r\n/**\r\n *\r\n */\r\nclass ParticleInitialColorNode extends ParticleNodeBase\r\n{\r\n\t//default values used when creating states\r\n\t/** @private */\r\n\tpublic _iUsesMultiplier:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesOffset:boolean;\r\n\t/** @private */\r\n\tpublic _iInitialColor:ColorTransform;\r\n\r\n\t/**\r\n\t * Reference for color node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\r\n\t */\r\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\r\n\r\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\r\n\t{\r\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleInitialColorState;\r\n\r\n\t\tthis._iUsesMultiplier = usesMultiplier;\r\n\t\tthis._iUsesOffset = usesOffset;\r\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\r\n\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\r\n\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tif (this._iUsesMultiplier)\r\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\r\n\t\tif (this._iUsesOffset)\r\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\r\n\t\tif (!initialColor)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\r\n\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\t//multiplier\r\n\t\tif (this._iUsesMultiplier) {\r\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\r\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\r\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\r\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\r\n\t\t}\r\n\t\t//offset\r\n\t\tif (this._iUsesOffset) {\r\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\r\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\r\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\r\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleInitialColorNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\n\r\n/**\r\n * Provides an abstract base class for particle animation nodes.\r\n */\r\nclass ParticleNodeBase extends AnimationNodeBase\r\n{\r\n\tprivate _priority:number /*int*/;\r\n\r\n\tpublic _pMode:number /*uint*/;\r\n\tpublic _pDataLength:number /*uint*/ = 3;\r\n\tpublic _pOneData:Array<number>;\r\n\r\n\tpublic _iDataOffset:number /*uint*/;\r\n\r\n\t//modes alias\r\n\tprivate static GLOBAL:string = 'Global';\r\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\r\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\r\n\r\n\t//modes list\r\n\tprivate static MODES:Object =\r\n\t{\r\n\t\t0:ParticleNodeBase.GLOBAL,\r\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\r\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\r\n\t *\r\n\t * @see away.animators.ParticlePropertiesMode\r\n\t */\r\n\tpublic get mode():number /*uint*/\r\n\t{\r\n\t\treturn this._pMode;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t * @see #getAGALVertexCode\r\n\t */\r\n\tpublic get priority():number /*int*/\r\n\t{\r\n\t\treturn this._priority;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t * @see #getAGALVertexCode\r\n\t */\r\n\tpublic get dataLength():number /*int*/\r\n\t{\r\n\t\treturn this._pDataLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet\r\n\t * @see #generatePropertyOfOneParticle\r\n\t */\r\n\tpublic get oneData():Array<number>\r\n\t{\r\n\t\treturn this._pOneData;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleNodeBase</code> object.\r\n\t *\r\n\t * @param               name            Defines the generic name of the particle animation node.\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\r\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\r\n\t */\r\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tname = name + ParticleNodeBase.MODES[mode];\r\n\r\n\t\tthis.name = name;\r\n\t\tthis._pMode = mode;\r\n\t\tthis._priority = priority;\r\n\t\tthis._pDataLength = dataLength;\r\n\r\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\r\n\t */\r\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\r\n\t *\r\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = ParticleNodeBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\r\n\r\n/**\r\n * A particle animation node used to control the position of a particle over time around a circular orbit.\r\n */\r\nclass ParticleOrbitNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesEulers:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iRadius:number;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\t/** @private */\r\n\tpublic _iEulers:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for orbit node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\r\n\t */\r\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleOrbitNode</code> object.\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\r\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\r\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\r\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\r\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\r\n\t{\r\n\t\tvar len:number /*int*/ = 3;\r\n\t\tif (usesPhase)\r\n\t\t\tlen++;\r\n\t\tsuper(\"ParticleOrbit\", mode, len);\r\n\r\n\t\tthis._pStateClass = ParticleOrbitState;\r\n\r\n\t\tthis._iUsesEulers = usesEulers;\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iRadius = radius;\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t\tthis._iEulers = eulers || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\r\n\r\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\r\n\r\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\r\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\r\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\r\n\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\r\n\r\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\r\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\r\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\r\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\r\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\tif (this._iUsesEulers)\r\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\r\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\r\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tif (this._iUsesEulers)\r\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\r\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\r\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\r\n\t\t\tif (!this._iUsesCycle)\r\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\r\n\t{\r\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\r\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\r\n\t\tif (!orbit)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = orbit.x;\r\n\t\tif (this._iUsesCycle && orbit.y <= 0)\r\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\r\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\r\n\t\tif (this._iUsesPhase)\r\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\r\n\t}\r\n}\r\n\r\nexport = ParticleOrbitNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\r\n\r\n/**\r\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\r\n */\r\nclass ParticleOscillatorNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iOscillator:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\r\n\t */\r\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleOscillatorNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleOscillator\", mode, 4);\r\n\r\n\t\tthis._pStateClass = ParticleOscillatorState;\r\n\r\n\t\tthis._iOscillator = oscillator || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\r\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\r\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity) {\r\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\r\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\r\n\t{\r\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\r\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\r\n\t\tif (!drift)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\r\n\r\n\t\tthis._pOneData[0] = drift.x;\r\n\t\tthis._pOneData[1] = drift.y;\r\n\t\tthis._pOneData[2] = drift.z;\r\n\t\tif (drift.w <= 0)\r\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\r\n\t}\r\n}\r\n\r\nexport = ParticleOscillatorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\r\n\r\n/**\r\n * A particle animation node used to set the starting position of a particle.\r\n */\r\nclass ParticlePositionNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for position node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\r\n\t */\r\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticlePositionNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticlePosition\", mode, 3);\r\n\r\n\t\tthis._pStateClass = ParticlePositionState;\r\n\r\n\t\tthis._iPosition = position || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\r\n\r\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\r\n\t{\r\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\r\n\t\tif (!offset)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\r\n\r\n\t\tthis._pOneData[0] = offset.x;\r\n\t\tthis._pOneData[1] = offset.y;\r\n\t\tthis._pOneData[2] = offset.z;\r\n\t}\r\n}\r\n\r\nexport = ParticlePositionNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\r\n\r\n/**\r\n * A particle animation node used to control the rotation of a particle to match its heading vector.\r\n */\r\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\r\n{\r\n\t/**\r\n\t * Creates a new <code>ParticleBillboardNode</code>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\r\n\r\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\tvar i:number /*int*/;\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\r\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\r\n\r\n\t\t\t//process the velocity\r\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\r\n\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\r\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\r\n\r\n\t\t\t//temp3.x=cos,temp3.y=sin\r\n\t\t\t//only process z axis\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t} else {\r\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\r\n\r\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\r\n\r\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\r\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\r\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\r\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\r\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\r\n\r\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\r\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\r\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\r\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\r\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\r\n\r\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\r\n\r\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\r\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\r\n\r\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\r\n\t\t\t//use cos as R.w\r\n\r\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t\t//use cos as R_rev.w\r\n\r\n\t\t\t//nrmVel and xAxis are used as temp register\r\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\r\n\t\t\t//use cos as R.w\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\r\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t//just repeat the calculate above\r\n\t\t\t\t//because of the limited registers, no need to optimise\r\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\r\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\r\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\r\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\r\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\r\n\t{\r\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.needVelocity = true;\r\n\t}\r\n}\r\n\r\nexport = ParticleRotateToHeadingNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\r\n\r\n/**\r\n * A particle animation node used to control the rotation of a particle to face to a position\r\n */\r\nclass ParticleRotateToPositionNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\r\n\t */\r\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\r\n\t */\r\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\r\n\r\n\t\tthis._pStateClass = ParticleRotateToPositionState;\r\n\r\n\t\tthis._iPosition = position || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\tvar i:number /*int*/;\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\r\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\r\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\r\n\r\n\t\t\t//process the position\r\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\r\n\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\r\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\r\n\r\n\t\t\t//temp3.x=cos,temp3.y=sin\r\n\t\t\t//only process z axis\r\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\r\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\r\n\t\t} else {\r\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\r\n\r\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\r\n\r\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\r\n\r\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\r\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\r\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\r\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\r\n\r\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\r\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\r\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\r\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\r\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\r\n\t\t\t//judgu if nrmDirection=(0,1,0);\r\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\r\n\r\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\r\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\r\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\r\n\r\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\r\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\r\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\r\n\r\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\r\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\r\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\r\n\r\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t//just repeat the calculate above\r\n\t\t\t\t//because of the limited registers, no need to optimise\r\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\r\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\r\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\r\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\r\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\r\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\r\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\r\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\r\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\r\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\r\n\t{\r\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\r\n\t\tif (!offset)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\r\n\r\n\t\tthis._pOneData[0] = offset.x;\r\n\t\tthis._pOneData[1] = offset.y;\r\n\t\tthis._pOneData[2] = offset.z;\r\n\t}\r\n}\r\n\r\nexport = ParticleRotateToPositionNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\r\n\r\n/**\r\n * A particle animation node used to set the starting rotational velocity of a particle.\r\n */\r\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iRotationalVelocity:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\r\n\t */\r\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\r\n\r\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\r\n\r\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\r\n\r\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\r\n\r\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\r\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\r\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\r\n\r\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\r\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\r\n\r\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\r\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\r\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\r\n\r\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\r\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\r\n\r\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\r\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t//nrmVel and xAxis are used as temp register\r\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\r\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\r\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\r\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\t//use cos as R_rev.w\r\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\r\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\r\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\r\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\r\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\r\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\r\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\r\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\r\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\r\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\r\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\r\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\r\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\r\n\t{\r\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\r\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\r\n\t\tif (!rotate)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\r\n\r\n\t\tif (rotate.length <= 0)\r\n\t\t\trotate.z = 1; //set the default direction\r\n\t\telse\r\n\t\t\trotate.normalize();\r\n\r\n\t\tthis._pOneData[0] = rotate.x;\r\n\t\tthis._pOneData[1] = rotate.y;\r\n\t\tthis._pOneData[2] = rotate.z;\r\n\t\tif (rotate.w <= 0)\r\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\t\t// it's used as angle/2 in agal\r\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\r\n\t}\r\n}\r\n\r\nexport = ParticleRotationalVelocityNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\r\n\r\n/**\r\n * A particle animation node used to control the scale variation of a particle over time.\r\n */\r\nclass ParticleScaleNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iMinScale:number;\r\n\t/** @private */\r\n\tpublic _iMaxScale:number;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\r\n\t/**\r\n\t * Reference for scale node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\r\n\t */\r\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleScaleNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\r\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\r\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\r\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\r\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\r\n\t{\r\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\r\n\r\n\t\tthis._pStateClass = ParticleScaleState;\r\n\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iMinScale = minScale;\r\n\t\tthis._iMaxScale = maxScale;\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\r\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\r\n\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\r\n\r\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\r\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\r\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\r\n\t{\r\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\r\n\t\tif (!scale)\r\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\r\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\r\n\t\t\tif (scale.z <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\r\n\t\t} else {\r\n\t\t\tthis._pOneData[0] = scale.x;\r\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleScaleNode;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\r\n\r\n/**\r\n *\r\n */\r\nclass ParticleSegmentedColorNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesMultiplier:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesOffset:boolean;\r\n\t/** @private */\r\n\tpublic _iStartColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iEndColor:ColorTransform;\r\n\t/** @private */\r\n\tpublic _iNumSegmentPoint:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\r\n\r\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\r\n\t{\r\n\t\t//because of the stage3d register limitation, it only support the global mode\r\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\r\n\r\n\t\tthis._pStateClass = ParticleSegmentedColorState;\r\n\r\n\t\tif (numSegmentPoint > 4)\r\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\r\n\t\tthis._iUsesMultiplier = usesMultiplier;\r\n\t\tthis._iUsesOffset = usesOffset;\r\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\r\n\t\tthis._iStartColor = startColor;\r\n\t\tthis._iEndColor = endColor;\r\n\t\tthis._iSegmentPoints = segmentPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tif (this._iUsesMultiplier)\r\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\r\n\t\tif (this._iUsesOffset)\r\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\r\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\r\n\t\t\t}\r\n\r\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\r\n\r\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\r\n\t\t\tif (this._iUsesMultiplier)\r\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\r\n\r\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\r\n\r\n\t\t\t//for saving all the life values (at most 4)\r\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\r\n\r\n\t\t\tvar i:number /*int*/;\r\n\r\n\t\t\tvar startMulValue:ShaderRegisterElement;\r\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\r\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\r\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\r\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\r\n\t\t\t}\r\n\r\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\r\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\r\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\r\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\r\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\r\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUsesMultiplier)\r\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\r\n\t\t\tif (this._iUsesOffset)\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\r\n\r\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\r\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\r\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\r\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\r\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\r\n\t\t\t\t}\r\n\t\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\r\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//for the last segment:\r\n\t\t\tif (this._iNumSegmentPoint == 0)\r\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\r\n\t\t\telse {\r\n\t\t\t\tswitch (this._iNumSegmentPoint) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\t\t}\r\n\t\t\tif (this._iUsesMultiplier) {\r\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\r\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\r\n\t\t\t}\r\n\t\t\tif (this._iUsesOffset) {\r\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\r\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn code;\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleSegmentedColorNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\r\n\r\n/**\r\n * A particle animation node used when a spritesheet texture is required to animate the particle.\r\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\r\n */\r\nclass ParticleSpriteSheetNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesCycle:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iUsesPhase:boolean;\r\n\r\n\t/** @private */\r\n\tpublic _iTotalFrames:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iNumColumns:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iNumRows:number /*int*/;\r\n\t/** @private */\r\n\tpublic _iCycleDuration:number;\r\n\t/** @private */\r\n\tpublic _iCyclePhase:number;\r\n\r\n\t/**\r\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\r\n\t */\r\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\r\n\r\n\t/**\r\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\r\n\t */\r\n\tpublic get numColumns():number\r\n\t{\r\n\t\treturn this._iNumColumns;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\r\n\t */\r\n\tpublic get numRows():number\r\n\t{\r\n\t\treturn this._iNumRows;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\r\n\t */\r\n\tpublic get totalFrames():number\r\n\t{\r\n\t\treturn this._iTotalFrames;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\r\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\r\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\r\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\r\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\r\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\r\n\t{\r\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\r\n\r\n\t\tthis._pStateClass = ParticleSpriteSheetState;\r\n\r\n\t\tthis._iUsesCycle = usesCycle;\r\n\t\tthis._iUsesPhase = usesPhase;\r\n\r\n\t\tthis._iNumColumns = numColumns;\r\n\t\tthis._iNumRows = numRows;\r\n\t\tthis._iCyclePhase = cyclePhase;\r\n\t\tthis._iCycleDuration = cycleDuration;\r\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\t//get 2 vc\r\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\r\n\r\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\r\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\r\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\r\n\r\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\r\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\r\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\r\n\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\r\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\r\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\r\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\r\n\r\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\r\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\t//scale uv\r\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\r\n\t\tif (this._iNumRows > 1)\r\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\r\n\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\r\n\t\t\telse\r\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\r\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\r\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\r\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\r\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\r\n\t\t} else\r\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\r\n\r\n\t\tif (this._iNumRows > 1) {\r\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\r\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\r\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\r\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\r\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\r\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\r\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\r\n\r\n\t\tif (this._iNumRows > 1)\r\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\r\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\r\n\t{\r\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.hasUVNode = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tif (this._iUsesCycle) {\r\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\r\n\t\t\tif (!uvCycle)\r\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\r\n\t\t\tif (uvCycle.x <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\r\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\r\n\t\t\tthis._pOneData[1] = uvCycle.x;\r\n\t\t\tif (this._iUsesPhase)\r\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleSpriteSheetNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\r\n\r\n/**\r\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\r\n */\r\nclass ParticleTimeNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUsesDuration:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesDelay:boolean;\r\n\t/** @private */\r\n\tpublic _iUsesLooping:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleTimeNode</code>\r\n\t *\r\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\r\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\r\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\r\n\t */\r\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\r\n\t{\r\n\t\tthis._pStateClass = ParticleTimeState;\r\n\r\n\t\tthis._iUsesDuration = usesDuration;\r\n\t\tthis._iUsesLooping = usesLooping;\r\n\t\tthis._iUsesDelay = usesDelay;\r\n\r\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\r\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\r\n\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\r\n\t\t//if time=0,set the position to zero.\r\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\r\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\r\n\t\tif (this._iUsesDuration) {\r\n\t\t\tif (this._iUsesLooping) {\r\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\t\t\tif (this._iUsesDelay) {\r\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\r\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\r\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\r\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\r\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\r\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\r\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\r\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\r\n\t{\r\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tthis._pOneData[0] = param.startTime;\r\n\t\tthis._pOneData[1] = param.duration;\r\n\t\tthis._pOneData[2] = param.delay + param.duration;\r\n\t\tthis._pOneData[3] = 1/param.duration;\r\n\r\n\t}\r\n}\r\n\r\nexport = ParticleTimeNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\r\n\r\n/**\r\n * A particle animation node used to control the UV offset and scale of a particle over time.\r\n */\r\nclass ParticleUVNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iUvData:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static U_AXIS:string = \"x\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static V_AXIS:string = \"y\";\r\n\r\n\tprivate _cycle:number;\r\n\tprivate _scale:number;\r\n\tprivate _axis:string;\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleTimeNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\r\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\r\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\r\n\t{\r\n\t\t//because of the stage3d register limitation, it only support the global mode\r\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\r\n\r\n\t\tthis._pStateClass = ParticleUVState;\r\n\r\n\t\tthis._cycle = cycle;\r\n\t\tthis._scale = scale;\r\n\t\tthis._axis = axis;\r\n\r\n\t\tthis.updateUVData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cycle():number\r\n\t{\r\n\t\treturn this._cycle;\r\n\t}\r\n\r\n\tpublic set cycle(value:number)\r\n\t{\r\n\t\tthis._cycle = value;\r\n\r\n\t\tthis.updateUVData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scale():number\r\n\t{\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\tpublic set scale(value:number)\r\n\t{\r\n\t\tthis._scale = value;\r\n\r\n\t\tthis.updateUVData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get axis():string\r\n\t{\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\tpublic set axis(value:string)\r\n\t{\r\n\t\tthis._axis = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\r\n\r\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\r\n\r\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\r\n\r\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\r\n\r\n\t\tif (this._scale != 1)\r\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\r\n\r\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\r\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\r\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\r\n\t{\r\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\tprivate updateUVData()\r\n\t{\r\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\r\n\t{\r\n\t\tparticleAnimationSet.hasUVNode = true;\r\n\t}\r\n}\r\n\r\nexport = ParticleUVNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\r\n\r\n/**\r\n * A particle animation node used to set the starting velocity of a particle.\r\n */\r\nclass ParticleVelocityNode extends ParticleNodeBase\r\n{\r\n\t/** @private */\r\n\tpublic _iVelocity:Vector3D;\r\n\r\n\t/**\r\n\t * Reference for velocity node properties on a single particle (when in local property mode).\r\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\r\n\t */\r\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\r\n\r\n\t/**\r\n\t * Creates a new <code>ParticleVelocityNode</code>\r\n\t *\r\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\r\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\r\n\t */\r\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\r\n\t{\r\n\t\tsuper(\"ParticleVelocity\", mode, 3);\r\n\r\n\t\tthis._pStateClass = ParticleVelocityState;\r\n\r\n\t\tthis._iVelocity = velocity || new Vector3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\r\n\t{\r\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\r\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\r\n\r\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\r\n\t\tvar code:string = \"\";\r\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\r\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\r\n\r\n\t\tif (animationRegisterCache.needVelocity)\r\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\r\n\t{\r\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\r\n\t{\r\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\r\n\t\tif (!_tempVelocity)\r\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\r\n\r\n\t\tthis._pOneData[0] = _tempVelocity.x;\r\n\t\tthis._pOneData[1] = _tempVelocity.y;\r\n\t\tthis._pOneData[2] = _tempVelocity.z;\r\n\t}\r\n}\r\n\r\nexport = ParticleVelocityNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\r\n\r\n/**\r\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\r\n{\r\n\t/**\r\n\t * Defines input node A to use for the blended output.\r\n\t */\r\n\tpublic inputA:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines input node B to use for the blended output.\r\n\t */\r\n\tpublic inputB:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\r\n\t{\r\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = SkeletonBinaryLERPNode;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\r\n\r\n/**\r\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\r\n */\r\nclass SkeletonClipNode extends AnimationClipNodeBase\r\n{\r\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\r\n\r\n\t/**\r\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\r\n\t * of the output skeleton pose. Defaults to false.\r\n\t */\r\n\tpublic highQuality:boolean = false;\r\n\r\n\t/**\r\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\r\n\t */\r\n\tpublic get frames():Array<SkeletonPose>\r\n\t{\r\n\t\treturn this._frames;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonClipNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonClipState;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\r\n\t *\r\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\r\n\t * @param duration The specified duration of the frame in milliseconds.\r\n\t */\r\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\r\n\t{\r\n\t\tthis._frames.push(skeletonPose);\r\n\t\tthis._pDurations.push(duration);\r\n\r\n\t\tthis._pNumFrames = this._pDurations.length;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\r\n\t{\r\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateStitch()\r\n\t{\r\n\t\tsuper._pUpdateStitch();\r\n\r\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\r\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\r\n\t\twhile (i--) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[i];\r\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\r\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\r\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonClipNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\r\n\r\n/**\r\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonDifferenceNode extends AnimationNodeBase\r\n{\r\n\t/**\r\n\t * Defines a base input node to use for the blended output.\r\n\t */\r\n\tpublic baseInput:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines a difference input node to use for the blended output.\r\n\t */\r\n\tpublic differenceInput:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonDifferenceState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\r\n\t{\r\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = SkeletonDifferenceNode","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\r\n\r\n/**\r\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonDirectionalNode extends AnimationNodeBase\r\n{\r\n\t/**\r\n\t * Defines the forward configured input node to use for the blended output.\r\n\t */\r\n\tpublic forward:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines the backwards configured input node to use for the blended output.\r\n\t */\r\n\tpublic backward:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines the left configured input node to use for the blended output.\r\n\t */\r\n\tpublic left:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Defines the right configured input node to use for the blended output.\r\n\t */\r\n\tpublic right:AnimationNodeBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonDirectionalState;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\r\n\t{\r\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\r\n\t}\r\n\r\n}\r\n\r\nexport = SkeletonDirectionalNode;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\r\n\r\n/**\r\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\r\n */\r\nclass SkeletonNaryLERPNode extends AnimationNodeBase\r\n{\r\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\r\n\r\n\tprivate _numInputs:number /*uint*/;\r\n\r\n\tpublic get numInputs():number /*uint*/\r\n\t{\r\n\t\treturn this._numInputs;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = SkeletonNaryLERPState;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an integer representing the input index of the given skeleton animation node.\r\n\t *\r\n\t * @param input The skeleton animation node for with the input index is requested.\r\n\t */\r\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\r\n\t{\r\n\t\treturn this._iInputs.indexOf(input);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the skeleton animation node object that resides at the given input index.\r\n\t *\r\n\t * @param index The input index for which the skeleton animation node is requested.\r\n\t */\r\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\r\n\t{\r\n\t\treturn this._iInputs[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new skeleton animation node input to the animation node.\r\n\t */\r\n\tpublic addInput(input:AnimationNodeBase)\r\n\t{\r\n\t\tthis._iInputs[this._numInputs++] = input;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\r\n\t{\r\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\r\n\t}\r\n}\r\n\r\nexport = SkeletonNaryLERPNode","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\r\n\r\n/**\r\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\r\n */\r\nclass VertexClipNode extends AnimationClipNodeBase\r\n{\r\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\r\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\r\n\r\n\t/**\r\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\r\n\t */\r\n\tpublic get frames():Array<Geometry>\r\n\t{\r\n\t\treturn this._frames;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>VertexClipNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = VertexClipState;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a geometry object to the internal timeline of the animation node.\r\n\t *\r\n\t * @param geometry The geometry object to add to the timeline of the node.\r\n\t * @param duration The specified duration of the frame in milliseconds.\r\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\r\n\t */\r\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\r\n\t{\r\n\t\tthis._frames.push(geometry);\r\n\t\tthis._pDurations.push(duration);\r\n\t\tthis._translations.push(translation || new Vector3D());\r\n\r\n\t\tthis._pNumFrames = this._pDurations.length;\r\n\r\n\t\tthis._pStitchDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateStitch()\r\n\t{\r\n\t\tsuper._pUpdateStitch();\r\n\r\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\r\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\r\n\t\twhile (i--) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[i];\r\n\t\t\tp1 = this._translations[i];\r\n\t\t\tp2 = this._translations[i + 1];\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\r\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\r\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\r\n\t\t\tp1 = this._translations[0];\r\n\t\t\tp2 = this._translations[1];\r\n\t\t\tdelta = p2.subtract(p1);\r\n\t\t\tthis._pTotalDelta.x += delta.x;\r\n\t\t\tthis._pTotalDelta.y += delta.y;\r\n\t\t\tthis._pTotalDelta.z += delta.z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = VertexClipNode;","import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\n\r\n/**\r\n *\r\n */\r\nclass AnimationClipState extends AnimationStateBase\r\n{\r\n\tprivate _animationClipNode:AnimationClipNodeBase;\r\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\r\n\tpublic _pBlendWeight:number;\r\n\tpublic _pCurrentFrame:number /*uint*/;\r\n\tpublic _pNextFrame:number /*uint*/;\r\n\r\n\tpublic _pOldFrame:number /*uint*/;\r\n\tpublic _pTimeDir:number /*int*/;\r\n\tpublic _pFramesDirty:boolean = true;\r\n\r\n\t/**\r\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\r\n\t * between the current frame (0) and next frame (1) of the animation.\r\n\t *\r\n\t * @see #currentFrame\r\n\t * @see #nextFrame\r\n\t */\r\n\tpublic get blendWeight():number\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._pBlendWeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get currentFrame():number /*uint*/\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._pCurrentFrame;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get nextFrame():number /*uint*/\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._pNextFrame;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\r\n\t{\r\n\t\tsuper(animator, animationClipNode);\r\n\r\n\t\tthis._animationClipNode = animationClipNode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic update(time:number /*int*/)\r\n\t{\r\n\t\tif (!this._animationClipNode.looping) {\r\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\r\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\r\n\t\t\t\ttime = this._pStartTime;\r\n\t\t}\r\n\r\n\t\tif (this._pTime == time - this._pStartTime)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\r\n\r\n\t\tif (this._pTime == time - this._pStartTime)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._pFramesDirty = true;\r\n\r\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\r\n\t *\r\n\t * @see #currentFrame\r\n\t * @see #nextFrame\r\n\t * @see #blendWeight\r\n\t */\r\n\tpublic _pUpdateFrames()\r\n\t{\r\n\t\tthis._pFramesDirty = false;\r\n\r\n\t\tvar looping:boolean = this._animationClipNode.looping;\r\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\r\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\r\n\t\tvar time:number /*int*/ = this._pTime;\r\n\r\n\t\t//trace(\"time\", time, totalDuration)\r\n\t\tif (looping && (time >= totalDuration || time < 0)) {\r\n\t\t\ttime %= totalDuration;\r\n\t\t\tif (time < 0)\r\n\t\t\t\ttime += totalDuration;\r\n\t\t}\r\n\r\n\t\tif (!looping && time >= totalDuration) {\r\n\t\t\tthis.notifyPlaybackComplete();\r\n\t\t\tthis._pCurrentFrame = lastFrame;\r\n\t\t\tthis._pNextFrame = lastFrame;\r\n\t\t\tthis._pBlendWeight = 0;\r\n\t\t} else if (!looping && time <= 0) {\r\n\t\t\tthis._pCurrentFrame = 0;\r\n\t\t\tthis._pNextFrame = 0;\r\n\t\t\tthis._pBlendWeight = 0;\r\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\r\n\t\t\tvar t:number = time/totalDuration*lastFrame;\r\n\t\t\tthis._pCurrentFrame = Math.floor(t);\r\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\r\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\r\n\t\t} else {\r\n\t\t\tthis._pCurrentFrame = 0;\r\n\t\t\tthis._pNextFrame = 0;\r\n\r\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\r\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\r\n\r\n\t\t\tdo {\r\n\t\t\t\tframeTime = dur;\r\n\t\t\t\tdur += durations[this._pNextFrame];\r\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\r\n\t\t\t} while (time > dur);\r\n\r\n\t\t\tif (this._pCurrentFrame == lastFrame) {\r\n\t\t\t\tthis._pCurrentFrame = 0;\r\n\t\t\t\tthis._pNextFrame = 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate notifyPlaybackComplete()\r\n\t{\r\n\t\tif (this._animationStatePlaybackComplete == null)\r\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\r\n\r\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\r\n\t}\r\n}\r\n\r\nexport = AnimationClipState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\r\n\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\n\r\n/**\r\n *\r\n */\r\nclass AnimationStateBase implements IAnimationState\r\n{\r\n\tpublic _pAnimationNode:AnimationNodeBase;\r\n\tpublic _pRootDelta:Vector3D = new Vector3D();\r\n\tpublic _pPositionDeltaDirty:boolean = true;\r\n\r\n\tpublic _pTime:number;\r\n\tpublic _pStartTime:number = 0;\r\n\tpublic _pAnimator:AnimatorBase;\r\n\r\n\t/**\r\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\r\n\t */\r\n\tpublic get positionDelta():Vector3D\r\n\t{\r\n\t\tif (this._pPositionDeltaDirty) {\r\n\r\n\t\t\tthis._pUpdatePositionDelta();\r\n\t\t}\r\n\r\n\t\treturn this._pRootDelta;\r\n\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\r\n\t{\r\n\t\tthis._pAnimator = animator;\r\n\t\tthis._pAnimationNode = animationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the start time of the node to a  new value.\r\n\t *\r\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\r\n\t */\r\n\tpublic offset(startTime:number)\r\n\t{\r\n\t\tthis._pStartTime = startTime;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the configuration of the node to its current state.\r\n\t *\r\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\r\n\t *\r\n\t * @see AnimatorBase#update()\r\n\t */\r\n\tpublic update(time:number)\r\n\t{\r\n\t\tif (this._pTime == time - this._pStartTime) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._pUpdateTime(time);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the animation phase of the node.\r\n\t *\r\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the node's internal playhead position.\r\n\t *\r\n\t * @param time The local time (in milliseconds) of the node's playhead position.\r\n\t */\r\n\tpublic _pUpdateTime(time:number)\r\n\t{\r\n\t\tthis._pTime = time - this._pStartTime;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the node's root delta position\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = AnimationStateBase;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleAccelerationState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _halfAcceleration:Vector3D;\r\n\t\r\n\t/**\r\n\t * Defines the acceleration vector of the state, used when in global mode.\r\n\t */\r\n\tpublic get acceleration():Vector3D\r\n\t{\r\n\t\treturn this._acceleration;\r\n\t}\r\n\t\r\n\tpublic set acceleration(value:Vector3D)\r\n\t{\r\n\t\tthis._acceleration.x = value.x;\r\n\t\tthis._acceleration.y = value.y;\r\n\t\tthis._acceleration.z = value.z;\r\n\r\n\t\tthis.updateAccelerationData();\r\n\t}\r\n\t\r\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\r\n\t{\r\n\t\tsuper(animator, particleAccelerationNode);\r\n\r\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\r\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\r\n\r\n\t\tthis.updateAccelerationData();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\r\n\t\t\r\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\telse\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\r\n\t}\r\n\t\r\n\tprivate updateAccelerationData()\r\n\t{\r\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\r\n\t}\r\n}\r\n\r\nexport = ParticleAccelerationState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n/**\r\n * ...\r\n */\r\nclass ParticleBezierCurveState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\r\n\r\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\r\n\tprivate _controlPoint:Vector3D;\r\n\tprivate _endPoint:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default control point of the node, used when in global mode.\r\n\t */\r\n\tpublic get controlPoint():Vector3D\r\n\t{\r\n\t\treturn this._controlPoint;\r\n\t}\r\n\r\n\tpublic set controlPoint(value:Vector3D)\r\n\t{\r\n\t\tthis._controlPoint = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the default end point of the node, used when in global mode.\r\n\t */\r\n\tpublic get endPoint():Vector3D\r\n\t{\r\n\t\treturn this._endPoint;\r\n\t}\r\n\r\n\tpublic set endPoint(value:Vector3D)\r\n\t{\r\n\t\tthis._endPoint = value;\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\r\n\t{\r\n\t\tsuper(animator, particleBezierCurveNode);\r\n\r\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\r\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\r\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\r\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\r\n\r\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else {\r\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\r\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleBezierCurveState;","import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleBillboardState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _matrix:Matrix3D = new Matrix3D;\r\n\r\n\tprivate _billboardAxis:Vector3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\r\n\t{\r\n\t\tsuper(animator, particleNode);\r\n\r\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar comps:Array<Vector3D>;\r\n\t\tif (this._billboardAxis) {\r\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\r\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\r\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\r\n\t\t\tright.normalize();\r\n\t\t\tlook = this.billboardAxis.crossProduct(right);\r\n\t\t\tlook.normalize();\r\n\r\n\t\t\t//create a quick inverse projection matrix\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\r\n\t\t\tthis._matrix.copyColumnFrom(0, right);\r\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\r\n\t\t\tthis._matrix.copyColumnFrom(2, look);\r\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\r\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\r\n\t\t} else {\r\n\t\t\t//create a quick inverse projection matrix\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\r\n\r\n\t\t\t//decompose using axis angle rotations\r\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\r\n\r\n\t\t\t//recreate the matrix with just the rotation data\r\n\t\t\tthis._matrix.identity();\r\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\r\n\t\t}\r\n\r\n\t\t//set a new matrix transform constant\r\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the billboard axis.\r\n\t */\r\n\tpublic get billboardAxis():Vector3D\r\n\t{\r\n\t\treturn this.billboardAxis;\r\n\t}\r\n\r\n\tpublic set billboardAxis(value:Vector3D)\r\n\t{\r\n\t\tthis.billboardAxis = value? value.clone() : null;\r\n\t\tif (this.billboardAxis)\r\n\t\t\tthis.billboardAxis.normalize();\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleBillboardState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nclass ParticleColorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\r\n\r\n\t/** @private */\r\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\r\n\r\n\t/** @private */\r\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\r\n\r\n\t/** @private */\r\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\r\n\r\n\tprivate _particleColorNode:ParticleColorNode;\r\n\tprivate _usesMultiplier:boolean;\r\n\tprivate _usesOffset:boolean;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _startColor:ColorTransform;\r\n\tprivate _endColor:ColorTransform;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _cycleData:Vector3D;\r\n\tprivate _startMultiplierData:Vector3D;\r\n\tprivate _deltaMultiplierData:Vector3D;\r\n\tprivate _startOffsetData:Vector3D;\r\n\tprivate _deltaOffsetData:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the start color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get startColor():ColorTransform\r\n\t{\r\n\t\treturn this._startColor;\r\n\t}\r\n\r\n\tpublic set startColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._startColor = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the end color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get endColor():ColorTransform\r\n\t{\r\n\t\treturn this._endColor;\r\n\t}\r\n\r\n\tpublic set endColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._endColor = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\r\n\t{\r\n\t\tsuper(animator, particleColorNode);\r\n\r\n\t\tthis._particleColorNode = particleColorNode;\r\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\r\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\r\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\r\n\t\tthis._startColor = this._particleColorNode._iStartColor;\r\n\t\tthis._endColor = this._particleColorNode._iEndColor;\r\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\r\n\t\t\tif (this._usesCycle)\r\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\r\n\r\n\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._usesOffset) {\r\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateColorData()\r\n\t{\r\n\t\tif (this._usesCycle) {\r\n\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\r\n\t\t}\r\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\r\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._usesOffset) {\r\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\r\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\r\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._usesOffset) {\r\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\r\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleColorState;","import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleFollowState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleFollowNode:ParticleFollowNode;\r\n\tprivate _followTarget:DisplayObject;\r\n\r\n\tprivate _targetPos:Vector3D = new Vector3D();\r\n\tprivate _targetEuler:Vector3D = new Vector3D();\r\n\tprivate _prePos:Vector3D;\r\n\tprivate _preEuler:Vector3D;\r\n\tprivate _smooth:boolean;\r\n\r\n\t//temporary vector3D for calculation\r\n\tprivate _temp:Vector3D = new Vector3D();\r\n\r\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\r\n\t{\r\n\t\tsuper(animator, particleFollowNode, true);\r\n\r\n\t\tthis._particleFollowNode = particleFollowNode;\r\n\t\tthis._smooth = particleFollowNode._iSmooth;\r\n\t}\r\n\r\n\tpublic get followTarget():DisplayObject\r\n\t{\r\n\t\treturn this._followTarget;\r\n\t}\r\n\r\n\tpublic set followTarget(value:DisplayObject)\r\n\t{\r\n\t\tthis._followTarget = value;\r\n\t}\r\n\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tthis._smooth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._followTarget) {\r\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\r\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\r\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\r\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\r\n\t\t\t}\r\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\r\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\r\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\r\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\r\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//initialization\r\n\t\tif (!this._prePos)\r\n\t\t\tthis._prePos = this._targetPos.clone();\r\n\t\tif (!this._preEuler)\r\n\t\t\tthis._preEuler = this._targetEuler.clone();\r\n\r\n\t\tvar currentTime:number = this._pTime/1000;\r\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\r\n\t\tvar deltaTime:number = currentTime - previousTime;\r\n\r\n\t\tvar needProcess:boolean = previousTime != currentTime;\r\n\r\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\r\n\t\t\tif (needProcess)\r\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\r\n\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\r\n\t\t\tif (needProcess)\r\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\r\n\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\r\n\t\t\tif (needProcess)\r\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\r\n\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t}\r\n\r\n\t\tthis._prePos.copyFrom(this._targetPos);\r\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\r\n\t\tanimationSubGeometry.previousTime = currentTime;\r\n\t}\r\n\r\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\r\n\t\tvar changed:boolean = false;\r\n\t\tvar len:number /*uint*/ = data.length;\r\n\t\tvar interpolatedPos:Vector3D;\r\n\t\tvar posVelocity:Vector3D;\r\n\t\tif (this._smooth) {\r\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\r\n\t\t\tposVelocity.scaleBy(1/deltaTime);\r\n\t\t} else\r\n\t\t\tinterpolatedPos = this._targetPos;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\r\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\r\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\r\n\t\t\tif (t - deltaTime <= 0) {\r\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\r\n\r\n\t\t\t\tif (this._smooth) {\r\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changed)\r\n\t\t\tanimationSubGeometry.invalidateBuffer();\r\n\r\n\t}\r\n\r\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\r\n\t\tvar changed:boolean = false;\r\n\t\tvar len:number /*uint*/ = data.length;\r\n\r\n\t\tvar interpolatedRotation:Vector3D;\r\n\t\tvar rotationVelocity:Vector3D;\r\n\r\n\t\tif (this._smooth) {\r\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\r\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\r\n\t\t} else\r\n\t\t\tinterpolatedRotation = this._targetEuler;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\r\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\r\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\r\n\t\t\tif (t - deltaTime <= 0) {\r\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\r\n\r\n\t\t\t\tif (this._smooth) {\r\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changed)\r\n\t\t\tanimationSubGeometry.invalidateBuffer();\r\n\r\n\t}\r\n\r\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\r\n\t\tvar changed:boolean = false;\r\n\t\tvar len:number /*uint*/ = data.length;\r\n\r\n\t\tvar interpolatedPos:Vector3D;\r\n\t\tvar interpolatedRotation:Vector3D;\r\n\r\n\t\tvar posVelocity:Vector3D;\r\n\t\tvar rotationVelocity:Vector3D;\r\n\t\tif (this._smooth) {\r\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\r\n\t\t\tposVelocity.scaleBy(1/deltaTime);\r\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\r\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\r\n\t\t} else {\r\n\t\t\tinterpolatedPos = this._targetPos;\r\n\t\t\tinterpolatedRotation = this._targetEuler;\r\n\t\t}\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\r\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\r\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\r\n\t\t\tif (t - deltaTime <= 0) {\r\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\r\n\t\t\t\tif (this._smooth) {\r\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\r\n\r\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\r\n\t\t\t\t\tthis._temp.scaleBy(t);\r\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\r\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changed)\r\n\t\t\tanimationSubGeometry.invalidateBuffer();\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleFollowState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n*\r\n*/\r\nclass ParticleInitialColorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\r\n\t/** @private */\r\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\r\n\tprivate _usesMultiplier:boolean;\r\n\tprivate _usesOffset:boolean;\r\n\tprivate _initialColor:ColorTransform;\r\n\tprivate _multiplierData:Vector3D;\r\n\tprivate _offsetData:Vector3D;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\r\n\t{\r\n\t\tsuper(animator, particleInitialColorNode);\r\n\r\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\r\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\r\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\r\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the initial color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get initialColor():ColorTransform\r\n\t{\r\n\t\treturn this._initialColor;\r\n\t}\r\n\r\n\tpublic set initialColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._initialColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\t// TODO: not used\r\n\t\trenderable = renderable;\r\n\t\tcamera = camera;\r\n\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\r\n\t\t\t\tif (this._usesMultiplier) {\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\t\tdataOffset += 4;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._usesOffset)\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t} else {\r\n\t\t\t\tif (this._usesMultiplier)\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\r\n\t\t\t\tif (this._usesOffset)\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateColorData()\r\n\t{\r\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._usesMultiplier)\r\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\r\n\t\t\tif (this._usesOffset)\r\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleInitialColorState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleOrbitState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleOrbitNode:ParticleOrbitNode;\r\n\tprivate _usesEulers:boolean;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _radius:number;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _eulers:Vector3D;\r\n\tprivate _orbitData:Vector3D;\r\n\tprivate _eulersMatrix:Matrix3D;\r\n\r\n\t/**\r\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._eulers = value;\r\n\r\n\t\tthis.updateOrbitData();\r\n\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\r\n\t{\r\n\t\tsuper(animator, particleOrbitNode);\r\n\r\n\t\tthis._particleOrbitNode = particleOrbitNode;\r\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\r\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\r\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\r\n\t\tthis._radius = this._particleOrbitNode._iRadius;\r\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\r\n\t\tthis.updateOrbitData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\r\n\r\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tif (this._usesPhase)\r\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\telse\r\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t} else\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\r\n\r\n\t\tif (this._usesEulers)\r\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\r\n\t}\r\n\r\n\tprivate updateOrbitData()\r\n\t{\r\n\t\tif (this._usesEulers) {\r\n\t\t\tthis._eulersMatrix = new Matrix3D();\r\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\r\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\r\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\r\n\t\t}\r\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\r\n\t\t\t} else\r\n\t\t\t\tthis._orbitData.y = Math.PI*2;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleOrbitState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleOscillatorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\r\n\tprivate _oscillator:Vector3D;\r\n\tprivate _oscillatorData:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\r\n\t */\r\n\tpublic get oscillator():Vector3D\r\n\t{\r\n\t\treturn this._oscillator;\r\n\t}\r\n\r\n\tpublic set oscillator(value:Vector3D)\r\n\t{\r\n\t\tthis._oscillator = value;\r\n\r\n\t\tthis.updateOscillatorData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\r\n\t{\r\n\t\tsuper(animator, particleOscillatorNode);\r\n\r\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\r\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\r\n\r\n\t\tthis.updateOscillatorData();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\r\n\r\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\telse\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\r\n\t}\r\n\r\n\tprivate updateOscillatorData()\r\n\t{\r\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._oscillator.w <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\r\n\t\t\tif (this._oscillatorData == null)\r\n\t\t\t\tthis._oscillatorData = new Vector3D();\r\n\r\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\r\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\r\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\r\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleOscillatorState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nclass ParticlePositionState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particlePositionNode:ParticlePositionNode;\r\n\tprivate _position:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._position = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getPositions():Array<Vector3D>\r\n\t{\r\n\t\treturn this._pDynamicProperties;\r\n\t}\r\n\r\n\tpublic setPositions(value:Array<Vector3D>)\r\n\t{\r\n\t\tthis._pDynamicProperties = value;\r\n\r\n\t\tthis._pDynamicPropertiesDirty = new Object();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\r\n\t{\r\n\t\tsuper(animator, particlePositionNode);\r\n\r\n\t\tthis._particlePositionNode = particlePositionNode;\r\n\t\tthis._position = this._particlePositionNode._iPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\r\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\r\n\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\r\n\r\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\r\n\t\telse\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t}\r\n}\r\n\r\nexport = ParticlePositionState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleRotateToHeadingState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _matrix:Matrix3D = new Matrix3D();\r\n\r\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\r\n\t{\r\n\t\tsuper(animator, particleNode);\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\r\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleRotateToHeadingState;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleRotateToPositionState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\r\n\t/** @private */\r\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\r\n\r\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\r\n\tprivate _position:Vector3D;\r\n\tprivate _matrix:Matrix3D = new Matrix3D();\r\n\tprivate _offset:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._position = value;\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\r\n\t{\r\n\t\tsuper(animator, particleRotateToPositionNode);\r\n\r\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\r\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\r\n\r\n\t\tif (animationRegisterCache.hasBillboard) {\r\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\r\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\r\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\r\n\t\t}\r\n\r\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\r\n\t\t} else\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleRotateToPositionState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleRotationalVelocityState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\r\n\tprivate _rotationalVelocityData:Vector3D;\r\n\tprivate _rotationalVelocity:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\r\n\t */\r\n\tpublic get rotationalVelocity():Vector3D\r\n\t{\r\n\t\treturn this._rotationalVelocity;\r\n\t}\r\n\r\n\tpublic set rotationalVelocity(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationalVelocity = value;\r\n\r\n\t\tthis.updateRotationalVelocityData();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRotationalVelocities():Array<Vector3D>\r\n\t{\r\n\t\treturn this._pDynamicProperties;\r\n\t}\r\n\r\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\r\n\t{\r\n\t\tthis._pDynamicProperties = value;\r\n\r\n\t\tthis._pDynamicPropertiesDirty = new Object();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\r\n\t{\r\n\t\tsuper(animator, particleRotationNode);\r\n\r\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\r\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\r\n\r\n\t\tthis.updateRotationalVelocityData();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\r\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\r\n\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\r\n\r\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\r\n\t\telse\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t}\r\n\r\n\tprivate updateRotationalVelocityData()\r\n\t{\r\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._rotationalVelocity.w <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\r\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\r\n\r\n\t\t\tif (rotation.length <= 0)\r\n\t\t\t\trotation.z = 1; //set the default direction\r\n\t\t\telse\r\n\t\t\t\trotation.normalize();\r\n\t\t\t// w is used as angle/2 in agal\r\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleRotationalVelocityState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleScaleState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleScaleNode:ParticleScaleNode;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _minScale:number;\r\n\tprivate _maxScale:number;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _scaleData:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get minScale():number\r\n\t{\r\n\t\treturn this._minScale;\r\n\t}\r\n\r\n\tpublic set minScale(value:number)\r\n\t{\r\n\t\tthis._minScale = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get maxScale():number\r\n\t{\r\n\t\treturn this._maxScale;\r\n\t}\r\n\r\n\tpublic set maxScale(value:number)\r\n\t{\r\n\t\tthis._maxScale = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\r\n\t{\r\n\t\tsuper(animator, particleScaleNode);\r\n\r\n\t\tthis._particleScaleNode = particleScaleNode;\r\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\r\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\r\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\r\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\r\n\r\n\t\tthis.updateScaleData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\r\n\r\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._usesPhase)\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\t\t\t\telse\r\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\t} else\r\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t} else\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\r\n\t}\r\n\r\n\tprivate updateScaleData()\r\n\t{\r\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\r\n\t\t\t} else\r\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleScaleState;","import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n *\r\n */\r\nclass ParticleSegmentedColorState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\r\n\r\n\t/** @private */\r\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\r\n\r\n\tprivate _usesMultiplier:boolean;\r\n\tprivate _usesOffset:boolean;\r\n\tprivate _startColor:ColorTransform;\r\n\tprivate _endColor:ColorTransform;\r\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\r\n\tprivate _numSegmentPoint:number /*int*/;\r\n\r\n\tprivate _timeLifeData:Array<number>;\r\n\tprivate _multiplierData:Array<number>;\r\n\tprivate _offsetData:Array<number>;\r\n\r\n\t/**\r\n\t * Defines the start color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get startColor():ColorTransform\r\n\t{\r\n\t\treturn this._startColor;\r\n\t}\r\n\r\n\tpublic set startColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._startColor = value;\r\n\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the end color transform of the state, when in global mode.\r\n\t */\r\n\tpublic get endColor():ColorTransform\r\n\t{\r\n\t\treturn this._endColor;\r\n\t}\r\n\r\n\tpublic set endColor(value:ColorTransform)\r\n\t{\r\n\t\tthis._endColor = value;\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of segments.\r\n\t */\r\n\tpublic get numSegmentPoint():number /*int*/\r\n\t{\r\n\t\treturn this._numSegmentPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the key points of color\r\n\t */\r\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\r\n\t{\r\n\t\treturn this._segmentPoints;\r\n\t}\r\n\r\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\r\n\t{\r\n\t\tthis._segmentPoints = value;\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tpublic get usesMultiplier():boolean\r\n\t{\r\n\t\treturn this._usesMultiplier;\r\n\t}\r\n\r\n\tpublic get usesOffset():boolean\r\n\t{\r\n\t\treturn this._usesOffset;\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\r\n\t{\r\n\t\tsuper(animator, particleSegmentedColorNode);\r\n\r\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\r\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\r\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\r\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\r\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\r\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\r\n\t\tthis.updateColorData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needFragmentAnimation) {\r\n\t\t\tif (this._numSegmentPoint > 0)\r\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\r\n\t\t\tif (this._usesMultiplier)\r\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\r\n\t\t\tif (this._usesOffset)\r\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateColorData()\r\n\t{\r\n\t\tthis._timeLifeData = new Array<number>();\r\n\t\tthis._multiplierData = new Array<number>();\r\n\t\tthis._offsetData = new Array<number>();\r\n\t\tvar i:number /*int*/;\r\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\r\n\t\t\tif (i == 0)\r\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\r\n\t\t\telse\r\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\r\n\t\t}\r\n\t\tif (this._numSegmentPoint == 0)\r\n\t\t\tthis._timeLifeData.push(1);\r\n\t\telse\r\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\r\n\r\n\t\tif (this._usesMultiplier) {\r\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\r\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\r\n\t\t\t\tif (i == 0)\r\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\r\n\t\t\t}\r\n\t\t\tif (this._numSegmentPoint == 0)\r\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\r\n\t\t\telse\r\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\r\n\t\t}\r\n\r\n\t\tif (this._usesOffset) {\r\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\r\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\r\n\t\t\t\tif (i == 0)\r\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\r\n\t\t\t}\r\n\t\t\tif (this._numSegmentPoint == 0)\r\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\r\n\t\t\telse\r\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\r\n\t\t}\r\n\t\t//cut off the data\r\n\t\tthis._timeLifeData.length = 4;\r\n\t}\r\n}\r\n\r\nexport = ParticleSegmentedColorState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleSpriteSheetState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\r\n\r\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\r\n\tprivate _usesCycle:boolean;\r\n\tprivate _usesPhase:boolean;\r\n\tprivate _totalFrames:number /*int*/;\r\n\tprivate _numColumns:number /*int*/;\r\n\tprivate _numRows:number /*int*/;\r\n\tprivate _cycleDuration:number;\r\n\tprivate _cyclePhase:number;\r\n\tprivate _spriteSheetData:Array<number>;\r\n\r\n\t/**\r\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\r\n\t */\r\n\tpublic get cyclePhase():number\r\n\t{\r\n\t\treturn this._cyclePhase;\r\n\t}\r\n\r\n\tpublic set cyclePhase(value:number)\r\n\t{\r\n\t\tthis._cyclePhase = value;\r\n\r\n\t\tthis.updateSpriteSheetData();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\r\n\t */\r\n\tpublic get cycleDuration():number\r\n\t{\r\n\t\treturn this._cycleDuration;\r\n\t}\r\n\r\n\tpublic set cycleDuration(value:number)\r\n\t{\r\n\t\tthis._cycleDuration = value;\r\n\r\n\t\tthis.updateSpriteSheetData();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\r\n\t{\r\n\t\tsuper(animator, particleSpriteSheetNode);\r\n\r\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\r\n\r\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\r\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\r\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\r\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\r\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\r\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\r\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\r\n\r\n\t\tthis.updateSpriteSheetData();\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needUVAnimation) {\r\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\r\n\t\t\tif (this._usesCycle) {\r\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\r\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\r\n\t\t\t\t\tif (this._usesPhase)\r\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\r\n\t\t\t\t} else\r\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateSpriteSheetData()\r\n\t{\r\n\t\tthis._spriteSheetData = new Array<number>(8);\r\n\r\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\r\n\r\n\t\tthis._spriteSheetData[0] = uTotal;\r\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\r\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\r\n\r\n\t\tif (this._usesCycle) {\r\n\t\t\tif (this._cycleDuration <= 0)\r\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\r\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\r\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\r\n\t\t\tif (this._usesPhase)\r\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ParticleSpriteSheetState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\r\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleStateBase extends AnimationStateBase\r\n{\r\n\tprivate _particleNode:ParticleNodeBase;\r\n\r\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\r\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\r\n\r\n\tpublic _pNeedUpdateTime:boolean;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\r\n\t{\r\n\t\tsuper(animator, particleNode);\r\n\r\n\t\tthis._particleNode = particleNode;\r\n\t\tthis._pNeedUpdateTime = needUpdateTime;\r\n\t}\r\n\r\n\tpublic get needUpdateTime():boolean\r\n\t{\r\n\t\treturn this._pNeedUpdateTime;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\r\n\t{\r\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\r\n\r\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\r\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\r\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\r\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\r\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\r\n\t\tvar vertexLength:number /*uint*/;\r\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\r\n\t\tvar startingOffset:number /*uint*/;\r\n\t\tvar vertexOffset:number /*uint*/;\r\n\t\tvar data:Vector3D;\r\n\t\tvar animationParticle:ParticleAnimationData;\r\n\r\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\r\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\t\tvar j:number /*uint*/ = 0;\r\n\t\tvar k:number /*uint*/ = 0;\r\n\r\n\t\t//loop through all particles\r\n\t\twhile (i < numParticles) {\r\n\t\t\t//loop through each particle data for the current particle\r\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\r\n\t\t\t\tdata = this._pDynamicProperties[i];\r\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\r\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\r\n\t\t\t\t//loop through each vertex in the particle data\r\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\r\n\t\t\t\t\tvertexOffset = startingOffset + k;\r\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\r\n\t\t\t\t\t//loop through all vertex data for the current particle data\r\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\r\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\r\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\r\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\r\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\r\n\r\n\t\t\t\t\t\tif (dataLength == 4)\r\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t//loop through each value in the particle vertex\r\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\r\n\t\t\t\t\t\t//\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\tanimationSubGeometry.invalidateBuffer();\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleStateBase;","import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleTimeState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\r\n\r\n\t/** @private */\r\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\r\n\r\n\tprivate _particleTimeNode:ParticleTimeNode;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\r\n\t{\r\n\t\tsuper(animator, particleTimeNode, true);\r\n\r\n\t\tthis._particleTimeNode = particleTimeNode;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\r\n\r\n\t\tvar particleTime:number = this._pTime/1000;\r\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleTimeState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleUVState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static UV_INDEX:number /*uint*/ = 0;\r\n\r\n\tprivate _particleUVNode:ParticleUVNode;\r\n\r\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\r\n\t{\r\n\t\tsuper(animator, particleUVNode);\r\n\r\n\t\tthis._particleUVNode = particleUVNode;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (animationRegisterCache.needUVAnimation) {\r\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\r\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\r\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = ParticleUVState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\n\r\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\r\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\r\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\r\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\r\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleVelocityState extends ParticleStateBase\r\n{\r\n\t/** @private */\r\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\r\n\r\n\tprivate _particleVelocityNode:ParticleVelocityNode;\r\n\tprivate _velocity:Vector3D;\r\n\r\n\t/**\r\n\t * Defines the default velocity vector of the state, used when in global mode.\r\n\t */\r\n\tpublic get velocity():Vector3D\r\n\t{\r\n\t\treturn this._velocity;\r\n\t}\r\n\r\n\tpublic set velocity(value:Vector3D)\r\n\t{\r\n\t\tthis._velocity = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getVelocities():Array<Vector3D>\r\n\t{\r\n\t\treturn this._pDynamicProperties;\r\n\t}\r\n\r\n\tpublic setVelocities(value:Array<Vector3D>)\r\n\t{\r\n\t\tthis._pDynamicProperties = value;\r\n\r\n\t\tthis._pDynamicPropertiesDirty = new Object();\r\n\t}\r\n\r\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\r\n\t{\r\n\t\tsuper(animator, particleVelocityNode);\r\n\r\n\t\tthis._particleVelocityNode = particleVelocityNode;\r\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\r\n\t}\r\n\r\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\r\n\t{\r\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\r\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\r\n\r\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\r\n\r\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\r\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\r\n\t\telse\r\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\r\n\t}\r\n}\r\n\r\nexport = ParticleVelocityState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _blendWeight:number = 0;\r\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _inputA:ISkeletonAnimationState;\r\n\tprivate _inputB:ISkeletonAnimationState;\r\n\r\n\t/**\r\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\r\n\t * used to produce the skeleton pose output.\r\n\t *\r\n\t * @see inputA\r\n\t * @see inputB\r\n\t */\r\n\tpublic get blendWeight():number\r\n\t{\r\n\t\treturn this._blendWeight;\r\n\t}\r\n\r\n\tpublic set blendWeight(value:number)\r\n\t{\r\n\t\tthis._blendWeight = value;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\r\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tthis._inputA.phase(value);\r\n\t\tthis._inputB.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._inputA.update(time);\r\n\t\tthis._inputB.update(time);\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\r\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\r\n\r\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\r\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\r\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tvar endPose:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar pose1:JointPose, pose2:JointPose;\r\n\t\tvar p1:Vector3D, p2:Vector3D;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tpose1 = poses1[i];\r\n\t\t\tpose2 = poses2[i];\r\n\t\t\tp1 = pose1.translation;\r\n\t\t\tp2 = pose2.translation;\r\n\r\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\r\n\r\n\t\t\ttr = endPose.translation;\r\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\r\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\r\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonBinaryLERPState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\r\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\r\n{\r\n\tprivate _rootPos:Vector3D = new Vector3D();\r\n\tprivate _frames:Array<SkeletonPose>;\r\n\tprivate _skeletonClipNode:SkeletonClipNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _currentPose:SkeletonPose;\r\n\tprivate _nextPose:SkeletonPose;\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get currentPose():SkeletonPose\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._currentPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic get nextPose():SkeletonPose\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._nextPose;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\r\n\t{\r\n\t\tsuper(animator, skeletonClipNode);\r\n\r\n\t\tthis._skeletonClipNode = skeletonClipNode;\r\n\t\tthis._frames = this._skeletonClipNode.frames;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateFrames()\r\n\t{\r\n\t\tsuper._pUpdateFrames();\r\n\r\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\r\n\r\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\r\n\t\t\tthis._nextPose = this._frames[0];\r\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\r\n\t\t} else\r\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tif (!this._skeletonClipNode.totalDuration)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\r\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\t\tvar p1:Vector3D, p2:Vector3D;\r\n\t\tvar pose1:JointPose, pose2:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar endPose:JointPose;\r\n\t\tvar tr:Vector3D;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\r\n\t\t\tthrow new Error(\"joint counts don't match!\");\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tpose1 = currentPose[i];\r\n\t\t\tpose2 = nextPose[i];\r\n\t\t\tp1 = pose1.translation;\r\n\t\t\tp2 = pose2.translation;\r\n\r\n\t\t\tif (this._skeletonClipNode.highQuality)\r\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\r\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\r\n\r\n\t\t\tif (i > 0) {\r\n\t\t\t\ttr = endPose.translation;\r\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\r\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\r\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\r\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\r\n\r\n\t\t// jumping back, need to reset position\r\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\r\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\r\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\r\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\r\n\t\t}\r\n\r\n\t\tvar dx:number = this._rootPos.x;\r\n\t\tvar dy:number = this._rootPos.y;\r\n\t\tvar dz:number = this._rootPos.z;\r\n\r\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\r\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\r\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\r\n\r\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\r\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\r\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\r\n\t\t} else {\r\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\r\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\r\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\r\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\r\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\r\n\t\t}\r\n\r\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\r\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\r\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\r\n\r\n\t\tthis._pOldFrame = this._pNextFrame;\r\n\t}\r\n}\r\n\r\nexport = SkeletonClipState;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _blendWeight:number = 0;\r\n\tprivate static _tempQuat:Quaternion = new Quaternion();\r\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _baseInput:ISkeletonAnimationState;\r\n\tprivate _differenceInput:ISkeletonAnimationState;\r\n\r\n\t/**\r\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\r\n\t * used to produce the skeleton pose output.\r\n\t *\r\n\t * @see #baseInput\r\n\t * @see #differenceInput\r\n\t */\r\n\tpublic get blendWeight():number\r\n\t{\r\n\t\treturn this._blendWeight;\r\n\t}\r\n\r\n\tpublic set blendWeight(value:number)\r\n\t{\r\n\t\tthis._blendWeight = value;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\r\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tthis._baseInput.phase(value);\r\n\t\tthis._baseInput.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._baseInput.update(time);\r\n\t\tthis._differenceInput.update(time);\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\r\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\r\n\r\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\r\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\r\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tvar endPose:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar base:JointPose, diff:JointPose;\r\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tbase = basePoses[i];\r\n\t\t\tdiff = diffPoses[i];\r\n\t\t\tbasePos = base.translation;\r\n\t\t\tdiffPos = diff.translation;\r\n\r\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\r\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\r\n\r\n\t\t\ttr = endPose.translation;\r\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\r\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\r\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonDifferenceState;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _inputA:ISkeletonAnimationState;\r\n\tprivate _inputB:ISkeletonAnimationState;\r\n\tprivate _blendWeight:number = 0;\r\n\tprivate _direction:number = 0;\r\n\tprivate _blendDirty:boolean = true;\r\n\tprivate _forward:ISkeletonAnimationState;\r\n\tprivate _backward:ISkeletonAnimationState;\r\n\tprivate _left:ISkeletonAnimationState;\r\n\tprivate _right:ISkeletonAnimationState;\r\n\r\n\t/**\r\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\r\n\t * used to produce the skeleton pose output.\r\n\t */\r\n\tpublic set direction(value:number)\r\n\t{\r\n\t\tif (this._direction == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._direction = value;\r\n\r\n\t\tthis._blendDirty = true;\r\n\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t}\r\n\r\n\tpublic get direction():number\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\r\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\r\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\r\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tthis._inputA.phase(value);\r\n\t\tthis._inputB.phase(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUdateTime(time:number /*int*/)\r\n\t{\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._inputA.update(time);\r\n\t\tthis._inputB.update(time);\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\r\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\r\n\r\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\r\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\r\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tif (this._blendDirty)\r\n\t\t\tthis.updateBlend();\r\n\r\n\t\tvar endPose:JointPose;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\r\n\t\tvar pose1:JointPose, pose2:JointPose;\r\n\t\tvar p1:Vector3D, p2:Vector3D;\r\n\t\tvar tr:Vector3D;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\r\n\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\tif (endPose == null)\r\n\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\tpose1 = poses1[i];\r\n\t\t\tpose2 = poses2[i];\r\n\t\t\tp1 = pose1.translation;\r\n\t\t\tp2 = pose2.translation;\r\n\r\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\r\n\r\n\t\t\ttr = endPose.translation;\r\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\r\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\r\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate updateBlend()\r\n\t{\r\n\t\tthis._blendDirty = false;\r\n\r\n\t\tif (this._direction < 0 || this._direction > 360) {\r\n\t\t\tthis._direction %= 360;\r\n\t\t\tif (this._direction < 0)\r\n\t\t\t\tthis._direction += 360;\r\n\t\t}\r\n\r\n\t\tif (this._direction < 90) {\r\n\t\t\tthis._inputA = this._forward;\r\n\t\t\tthis._inputB = this._right;\r\n\t\t\tthis._blendWeight = this._direction/90;\r\n\t\t} else if (this._direction < 180) {\r\n\t\t\tthis._inputA = this._right;\r\n\t\t\tthis._inputB = this._backward;\r\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\r\n\t\t} else if (this._direction < 270) {\r\n\t\t\tthis._inputA = this._backward;\r\n\t\t\tthis._inputB = this._left;\r\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\r\n\t\t} else {\r\n\t\t\tthis._inputA = this._left;\r\n\t\t\tthis._inputB = this._forward;\r\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = SkeletonDirectionalState;","import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\r\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\r\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\r\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\r\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\r\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\r\n{\r\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\r\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\r\n\tprivate _skeletonPoseDirty:boolean = true;\r\n\tprivate _blendWeights:Array<number> = new Array<number>();\r\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\r\n\t{\r\n\t\tsuper(animator, skeletonAnimationNode);\r\n\r\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\r\n\r\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\r\n\r\n\t\twhile (i--)\r\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic phase(value:number)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = true;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tif (this._blendWeights[j])\r\n\t\t\t\tthis._inputs[j].update(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUdateTime(time:number /*int*/)\r\n\t{\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tif (this._blendWeights[j])\r\n\t\t\t\tthis._inputs[j].update(time);\r\n\t\t}\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\r\n\t */\r\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\r\n\t{\r\n\t\tif (this._skeletonPoseDirty)\r\n\t\t\tthis.updateSkeletonPose(skeleton);\r\n\r\n\t\treturn this._skeletonPose;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\r\n\t *\r\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\r\n\t */\r\n\tpublic getBlendWeightAt(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._blendWeights[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\r\n\t *\r\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\r\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\r\n\t */\r\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\r\n\t{\r\n\t\tthis._blendWeights[index] = blendWeight;\r\n\r\n\t\tthis._pPositionDeltaDirty = true;\r\n\t\tthis._skeletonPoseDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\tthis._pPositionDeltaDirty = false;\r\n\r\n\t\tvar delta:Vector3D;\r\n\t\tvar weight:number;\r\n\r\n\t\tthis.positionDelta.x = 0;\r\n\t\tthis.positionDelta.y = 0;\r\n\t\tthis.positionDelta.z = 0;\r\n\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tweight = this._blendWeights[j];\r\n\r\n\t\t\tif (weight) {\r\n\t\t\t\tdelta = this._inputs[j].positionDelta;\r\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\r\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\r\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\r\n\t *\r\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\r\n\t */\r\n\tprivate updateSkeletonPose(skeleton:Skeleton)\r\n\t{\r\n\t\tthis._skeletonPoseDirty = false;\r\n\r\n\t\tvar weight:number;\r\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\r\n\t\tvar poses:Array<JointPose>;\r\n\t\tvar endPose:JointPose, pose:JointPose;\r\n\t\tvar endTr:Vector3D, tr:Vector3D;\r\n\t\tvar endQuat:Quaternion, q:Quaternion;\r\n\t\tvar firstPose:Array<JointPose>;\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar w0:number, x0:number, y0:number, z0:number;\r\n\t\tvar w1:number, x1:number, y1:number, z1:number;\r\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\r\n\r\n\t\t// :s\r\n\t\tif (endPoses.length != numJoints)\r\n\t\t\tendPoses.length = numJoints;\r\n\r\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\r\n\t\t\tweight = this._blendWeights[j];\r\n\r\n\t\t\tif (!weight)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\r\n\r\n\t\t\tif (!firstPose) {\r\n\t\t\t\tfirstPose = poses;\r\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\r\n\t\t\t\t\tendPose = endPoses[i];\r\n\r\n\t\t\t\t\tif (endPose == null)\r\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\r\n\r\n\t\t\t\t\tpose = poses[i];\r\n\t\t\t\t\tq = pose.orientation;\r\n\t\t\t\t\ttr = pose.translation;\r\n\r\n\t\t\t\t\tendQuat = endPose.orientation;\r\n\r\n\t\t\t\t\tendQuat.x = weight*q.x;\r\n\t\t\t\t\tendQuat.y = weight*q.y;\r\n\t\t\t\t\tendQuat.z = weight*q.z;\r\n\t\t\t\t\tendQuat.w = weight*q.w;\r\n\r\n\t\t\t\t\tendTr = endPose.translation;\r\n\t\t\t\t\tendTr.x = weight*tr.x;\r\n\t\t\t\t\tendTr.y = weight*tr.y;\r\n\t\t\t\t\tendTr.z = weight*tr.z;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\r\n\t\t\t\t\tendPose = endPoses[i];\r\n\t\t\t\t\tpose = poses[i];\r\n\r\n\t\t\t\t\tq = firstPose[i].orientation;\r\n\t\t\t\t\tx0 = q.x;\r\n\t\t\t\t\ty0 = q.y;\r\n\t\t\t\t\tz0 = q.z;\r\n\t\t\t\t\tw0 = q.w;\r\n\r\n\t\t\t\t\tq = pose.orientation;\r\n\t\t\t\t\ttr = pose.translation;\r\n\r\n\t\t\t\t\tx1 = q.x;\r\n\t\t\t\t\ty1 = q.y;\r\n\t\t\t\t\tz1 = q.z;\r\n\t\t\t\t\tw1 = q.w;\r\n\t\t\t\t\t// find shortest direction\r\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\r\n\t\t\t\t\t\tx1 = -x1;\r\n\t\t\t\t\t\ty1 = -y1;\r\n\t\t\t\t\t\tz1 = -z1;\r\n\t\t\t\t\t\tw1 = -w1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tendQuat = endPose.orientation;\r\n\t\t\t\t\tendQuat.x += weight*x1;\r\n\t\t\t\t\tendQuat.y += weight*y1;\r\n\t\t\t\t\tendQuat.z += weight*z1;\r\n\t\t\t\t\tendQuat.w += weight*w1;\r\n\r\n\t\t\t\t\tendTr = endPose.translation;\r\n\t\t\t\t\tendTr.x += weight*tr.x;\r\n\t\t\t\t\tendTr.y += weight*tr.y;\r\n\t\t\t\t\tendTr.z += weight*tr.z;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\r\n\t\t\tendPoses[i].orientation.normalize();\r\n\t}\r\n}\r\n\r\nexport = SkeletonNaryLERPState;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\r\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\r\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\r\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\r\n\r\n/**\r\n *\r\n */\r\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\r\n{\r\n\tprivate _frames:Array<Geometry>;\r\n\tprivate _vertexClipNode:VertexClipNode;\r\n\tprivate _currentGeometry:Geometry;\r\n\tprivate _nextGeometry:Geometry;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get currentGeometry():Geometry\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._currentGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get nextGeometry():Geometry\r\n\t{\r\n\t\tif (this._pFramesDirty)\r\n\t\t\tthis._pUpdateFrames();\r\n\r\n\t\treturn this._nextGeometry;\r\n\t}\r\n\r\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\r\n\t{\r\n\t\tsuper(animator, vertexClipNode);\r\n\r\n\t\tthis._vertexClipNode = vertexClipNode;\r\n\t\tthis._frames = this._vertexClipNode.frames;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateFrames()\r\n\t{\r\n\t\tsuper._pUpdateFrames();\r\n\r\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\r\n\r\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\r\n\t\t\tthis._nextGeometry = this._frames[0];\r\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\r\n\t\t} else\r\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdatePositionDelta()\r\n\t{\r\n\t\t//TODO:implement positiondelta functionality for vertex animations\r\n\t}\r\n}\r\n\r\nexport = VertexClipState;","import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\r\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\r\n\r\n/**\r\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\r\n */\r\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\r\n{\r\n\tpublic blendSpeed:number;\r\n\r\n\tpublic startBlend:number /*int*/;\r\n\r\n\t/**\r\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pStateClass = CrossfadeTransitionState;\r\n\t}\r\n}\r\n\r\nexport = CrossfadeTransitionNode;","import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\r\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\r\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\r\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\r\n\r\n/**\r\n *\r\n */\r\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\r\n{\r\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\r\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\r\n\r\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\r\n\t{\r\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\r\n\r\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateTime(time:number /*int*/)\r\n\t{\r\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\r\n\r\n\t\tif (this.blendWeight >= 1) {\r\n\t\t\tthis.blendWeight = 1;\r\n\r\n\t\t\tif (this._animationStateTransitionComplete == null)\r\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\r\n\r\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\r\n\t\t}\r\n\r\n\t\tsuper._pUpdateTime(time);\r\n\t}\r\n}\r\n\r\nexport = CrossfadeTransitionState;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\r\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\r\n\r\n/**\r\n *\r\n */\r\nclass CrossfadeTransition implements IAnimationTransition\r\n{\r\n\tpublic blendSpeed:number = 0.5;\r\n\r\n\tconstructor(blendSpeed:number)\r\n\t{\r\n\t\tthis.blendSpeed = blendSpeed;\r\n\t}\r\n\r\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\r\n\t{\r\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\r\n\t\tcrossFadeTransitionNode.inputA = startNode;\r\n\t\tcrossFadeTransitionNode.inputB = endNode;\r\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\r\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\r\n\r\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\r\n\t}\r\n}\r\n\r\nexport = CrossfadeTransition;","import Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\n\r\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\n\r\n/**\r\n * @class away.base.ParticleGeometry\r\n */\r\nclass ParticleGeometry extends Geometry\r\n{\r\n\tpublic particles:Array<ParticleData>;\r\n\r\n\tpublic numParticles:number /*uint*/;\r\n\r\n}\r\n\r\nexport = ParticleGeometry;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport StageEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StageEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\r\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\r\n\r\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\r\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\nimport RendererPoolBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RendererPoolBase\");\r\n\r\n\r\n/**\r\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererBase\r\n */\r\nclass RendererBase extends EventDispatcher\r\n{\r\n\tprivate _numUsedStreams:number = 0;\r\n\tprivate _numUsedTextures:number = 0;\r\n\r\n\tprivate _rendererPool:RendererPoolBase;\r\n\r\n\tpublic _pRendererPoolClass:IRendererPoolClass;\r\n\tpublic _pContext:IContextGL;\r\n\tpublic _pStage:Stage;\r\n\r\n\tpublic _pCamera:Camera;\r\n\tpublic _iEntryPoint:Vector3D;\r\n\tpublic _pCameraForward:Vector3D;\r\n\r\n\tpublic _pRttBufferManager:RTTBufferManager;\r\n\tprivate _viewPort:Rectangle = new Rectangle();\r\n\tprivate _viewportDirty:boolean;\r\n\tprivate _scissorDirty:boolean;\r\n\r\n\tpublic _pBackBufferInvalid:boolean = true;\r\n\tpublic _pDepthTextureInvalid:boolean = true;\r\n\tpublic _depthPrepass:boolean = false;\r\n\tprivate _backgroundR:number = 0;\r\n\tprivate _backgroundG:number = 0;\r\n\tprivate _backgroundB:number = 0;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\tpublic _shareContext:boolean = false;\r\n\r\n\t// only used by renderers that need to render geometry to textures\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\r\n\tpublic textureRatioX:number = 1;\r\n\tpublic textureRatioY:number = 1;\r\n\r\n\tprivate _snapshotBitmapData:BitmapData;\r\n\tprivate _snapshotRequired:boolean;\r\n\r\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _localPos:Point = new Point();\r\n\tprivate _globalPos:Point = new Point();\r\n\tpublic _pScissorRect:Rectangle = new Rectangle();\r\n\r\n\tprivate _scissorUpdated:RendererEvent;\r\n\tprivate _viewPortUpdated:RendererEvent;\r\n\r\n\tprivate _onContextUpdateDelegate:Function;\r\n\tprivate _onViewportUpdatedDelegate;\r\n\r\n\tpublic _pNumTriangles:number = 0;\r\n\r\n\tpublic _pOpaqueRenderableHead:RenderableBase;\r\n\tpublic _pBlendedRenderableHead:RenderableBase;\r\n\tpublic _disableColor:boolean = false;\r\n\tpublic _renderBlended:boolean = true;\r\n\r\n\r\n\tpublic get renderBlended():boolean\r\n\t{\r\n\t\treturn this._renderBlended;\r\n\t}\r\n\r\n\tpublic set renderBlended(value:boolean)\r\n\t{\r\n\t\tthis._renderBlended = value;\r\n\t}\r\n\r\n\r\n\tpublic get disableColor():boolean\r\n\t{\r\n\t\treturn this._disableColor;\r\n\t}\r\n\r\n\tpublic set disableColor(value:boolean)\r\n\t{\r\n\t\tthis._disableColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._pNumTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableSorter:IEntitySorter;\r\n\r\n\r\n\t/**\r\n\t * A viewPort rectangle equivalent of the Stage size and position.\r\n\t */\r\n\tpublic get viewPort():Rectangle\r\n\t{\r\n\t\treturn this._viewPort;\r\n\t}\r\n\r\n\t/**\r\n\t * A scissor rectangle equivalent of the view size and position.\r\n\t */\r\n\tpublic get scissorRect():Rectangle\r\n\t{\r\n\t\treturn this._pScissorRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._localPos.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.x = this._localPos.x = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._localPos.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.y = this._localPos.y = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._pScissorRect.width = value;\r\n\r\n\t\tif (this._pRttBufferManager)\r\n\t\t\tthis._pRttBufferManager.viewWidth = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._pDepthTextureInvalid = true;\r\n\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._pScissorRect.height = value;\r\n\r\n\t\tif (this._pRttBufferManager)\r\n\t\t\tthis._pRttBufferManager.viewHeight = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._pDepthTextureInvalid = true;\r\n\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RendererBase object.\r\n\t */\r\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pRendererPoolClass = rendererPoolClass;\r\n\r\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event)\r\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\r\n\r\n\t\t//default sorting algorithm\r\n\t\tthis.renderableSorter = new RenderableMergeSort();\r\n\r\n\t\tthis._rendererPool = (rendererPoolClass)? new this._pRendererPoolClass(this) : new RendererPoolBase(this);\r\n\r\n\t\tthis.stage = stage || StageManager.getInstance().getFreeStage();\r\n\t}\r\n\r\n\tpublic activatePass(renderable:RenderableBase, pass:RenderPassBase, camera:Camera)\r\n\t{\r\n\t\t//clear unused vertex streams\r\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\r\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\r\n\r\n\t\t//clear unused texture streams\r\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\r\n\t\t\tthis._pContext.setTextureAt(i, null);\r\n\r\n\t\t//check program data is uploaded\r\n\t\tvar programData:ProgramData = pass.shader.programData;\r\n\r\n\t\tif (!programData.program) {\r\n\t\t\tprogramData.program = this._pContext.createProgram();\r\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\r\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\r\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\r\n\t\t}\r\n\r\n\t\t//set program data\r\n\t\tthis._pContext.setProgram(programData.program);\r\n\r\n\t\t//activate shader object through renderable\r\n\t\trenderable._iActivate(pass, camera);\r\n\t}\r\n\r\n\tpublic deactivatePass(renderable:RenderableBase, pass:RenderPassBase)\r\n\t{\r\n\t\t//deactivate shader object\r\n\t\trenderable._iDeactivate(pass);\r\n\r\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\r\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\r\n\t}\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn new EntityCollector();\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's red component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundR():number\r\n\t{\r\n\t\treturn this._backgroundR;\r\n\t}\r\n\r\n\tpublic set _iBackgroundR(value:number)\r\n\t{\r\n\t\tif (this._backgroundR == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundR = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's green component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundG():number\r\n\t{\r\n\t\treturn this._backgroundG;\r\n\t}\r\n\r\n\tpublic set _iBackgroundG(value:number)\r\n\t{\r\n\t\tif (this._backgroundG == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundG = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's blue component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundB():number\r\n\t{\r\n\t\treturn this._backgroundB;\r\n\t}\r\n\r\n\tpublic set _iBackgroundB(value:number)\r\n\t{\r\n\t\tif (this._backgroundB == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundB = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\tpublic get context():IContextGL\r\n\t{\r\n\t\treturn this._pContext;\r\n\t}\r\n\r\n\t/**\r\n\t * The Stage that will provide the ContextGL used for rendering.\r\n\t */\r\n\tpublic get stage():Stage\r\n\t{\r\n\t\treturn this._pStage;\r\n\t}\r\n\r\n\tpublic set stage(value:Stage)\r\n\t{\r\n\t\tif (this._pStage == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.iSetStage(value);\r\n\t}\r\n\r\n\tpublic iSetStage(value:Stage)\r\n\t{\r\n\t\tif (this._pStage)\r\n\t\t\tthis.dispose();\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pStage = value;\r\n\r\n\t\t\tthis._rendererPool.stage = this._pStage;\r\n\r\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\r\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\r\n\t\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\r\n\t\t\t/*\r\n\t\t\t if (_backgroundImageRenderer)\r\n\t\t\t _backgroundImageRenderer.stage = value;\r\n\t\t\t */\r\n\t\t\tif (this._pStage.context)\r\n\t\t\t\tthis._pContext = <IContextGL> this._pStage.context;\r\n\t\t}\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\r\n\t * to share the same ContextGL object.\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._rendererPool.dispose();\r\n\r\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\r\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\r\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\r\n\t\tthis._pStage = null;\r\n\t\tthis._pContext = null;\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer) {\r\n\t\t _backgroundImageRenderer.dispose();\r\n\t\t _backgroundImageRenderer = null;\r\n\t\t }\r\n\t\t */\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._viewportDirty = false;\r\n\t\tthis._scissorDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param target An option target texture to render to.\r\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\r\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\r\n\t */\r\n\tpublic _iRender(entityCollector:CollectorBase, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\r\n\t\tif (!this._pStage || !this._pContext)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\r\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\r\n\r\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\r\n\r\n\t\t// generate mip maps on target (if target exists) //TODO\r\n\t\t//if (target)\r\n\t\t//\t(<Texture>target).generateMipmaps();\r\n\r\n\t\t// clear buffers\r\n\t\tfor (var i:number = 0; i < 8; ++i) {\r\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\r\n\t\t\tthis._pContext.setTextureAt(i, null);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\r\n\t{\r\n\t\tthis.pCollectRenderables(entityCollector);\r\n\r\n\t\tthis._pStage.setRenderTarget(target, true, 0);\r\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\r\n\r\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\r\n\r\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\r\n\r\n\t\tvar first:boolean = true;\r\n\r\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\r\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\r\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\r\n\t\t\tfirst = false;\r\n\t\t}\r\n\r\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\r\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\r\n\r\n\t\tthis._pStage.scissorRect = null;\r\n\t}\r\n\r\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\r\n\t{\r\n\t\t//reset head values\r\n\t\tthis._pBlendedRenderableHead = null;\r\n\t\tthis._pOpaqueRenderableHead = null;\r\n\t\tthis._pNumTriangles = 0;\r\n\r\n\t\t//grab entity head\r\n\t\tvar item:EntityListItem = entityCollector.entityHead;\r\n\r\n\t\t//set temp values for entry point and camera forward vector\r\n\t\tthis._pCamera = entityCollector.camera;\r\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\r\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\r\n\r\n\t\t//iterate through all entities\r\n\t\twhile (item) {\r\n\t\t\titem.entity._iCollectRenderables(this._rendererPool);\r\n\t\t\titem = item.next;\r\n\t\t}\r\n\r\n\t\t//sort the resulting renderables\r\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\r\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\r\n\t *\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param target An option target texture to render to.\r\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\r\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\r\n\t */\r\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\r\n\r\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\r\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\r\n\r\n\t\tthis._pStage.scissorRect = scissorRect;\r\n\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer)\r\n\t\t _backgroundImageRenderer.render();\r\n\t\t */\r\n\t\tthis.pCollectRenderables(entityCollector);\r\n\r\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\r\n\t\tthis.pDraw(entityCollector);\r\n\r\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\r\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\r\n\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapData) {\r\n\t\t\t\tthis._pContext.drawToBitmapData(this._snapshotBitmapData);\r\n\t\t\t\tthis._snapshotRequired = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pStage.scissorRect = null;\r\n\t}\r\n\r\n\t/*\r\n\t * Will draw the renderer's output on next render to the provided bitmap data.\r\n\t * */\r\n\tpublic queueSnapshot(bmd:BitmapData)\r\n\t{\r\n\t\tthis._snapshotRequired = true;\r\n\t\tthis._snapshotBitmapData = bmd;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the actual drawing of geometry to the target.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t */\r\n\tpublic pDraw(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\r\n\r\n\t\tif (this._disableColor)\r\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\r\n\r\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\r\n\r\n\t\tif (this._renderBlended)\r\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\r\n\r\n\t\tif (this._disableColor)\r\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\r\n\t}\r\n\r\n\t//private drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\r\n\t//{\r\n\t//\tvar renderable2:RenderableBase;\r\n\t//\tvar renderObject:RenderObjectBase;\r\n\t//\tvar pass:RenderPassBase;\r\n\t//\r\n\t//\twhile (renderable) {\r\n\t//\t\trenderable2 = renderable;\r\n\t//\t\trenderObject = renderable.renderObject;\r\n\t//\t\tpass = renderObject.passes[0] //assuming only one pass per material\r\n\t//\r\n\t//\t\tthis.activatePass(renderable, pass, camera);\r\n\t//\r\n\t//\t\tdo {\r\n\t//\t\t\t// if completely in front, it will fall in a different cascade\r\n\t//\t\t\t// do not use near and far planes\r\n\t//\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\r\n\t//\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\r\n\t//\t\t\t} else {\r\n\t//\t\t\t\trenderable2.cascaded = true;\r\n\t//\t\t\t}\r\n\t//\r\n\t//\t\t\trenderable2 = renderable2.next;\r\n\t//\r\n\t//\t\t} while (renderable2 && renderable2.renderObject == renderObject && !renderable2.cascaded);\r\n\t//\r\n\t//\t\tthis.deactivatePass(renderable, pass);\r\n\t//\r\n\t//\t\trenderable = renderable2;\r\n\t//\t}\r\n\t//}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t *\r\n\t * @param renderables The renderables to draw.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tpublic drawRenderables(renderable:RenderableBase, entityCollector:CollectorBase)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\t\tvar renderable2:RenderableBase;\r\n\t\tvar renderObject:RenderObjectBase;\r\n\t\tvar passes:Array<RenderPassBase>;\r\n\t\tvar pass:RenderPassBase;\r\n\t\tvar camera:Camera = entityCollector.camera;\r\n\r\n\r\n\t\twhile (renderable) {\r\n\t\t\trenderObject = renderable.renderObject;\r\n\t\t\tpasses = renderObject.passes;\r\n\r\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\r\n\t\t\tif (this._disableColor && renderObject._renderObjectOwner.alphaThreshold != 0) {\r\n\t\t\t\trenderable2 = renderable;\r\n\t\t\t\t// fast forward\r\n\t\t\t\tdo {\r\n\t\t\t\t\trenderable2 = renderable2.next;\r\n\r\n\t\t\t\t} while (renderable2 && renderable2.renderObject == renderObject);\r\n\t\t\t} else {\r\n\t\t\t\t//iterate through each shader object\r\n\t\t\t\tlen = passes.length;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\trenderable2 = renderable;\r\n\t\t\t\t\tpass = passes[i];\r\n\r\n\t\t\t\t\tthis.activatePass(renderable, pass, camera);\r\n\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\r\n\r\n\t\t\t\t\t\trenderable2 = renderable2.next;\r\n\r\n\t\t\t\t\t} while (renderable2 && renderable2.renderObject == renderObject);\r\n\r\n\t\t\t\t\tthis.deactivatePass(renderable, pass);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trenderable = renderable2;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Assign the context once retrieved\r\n\t */\r\n\tprivate onContextUpdate(event:Event)\r\n\t{\r\n\t\tthis._pContext = <IContextGL> this._pStage.context;\r\n\t}\r\n\r\n\tpublic get _iBackgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\tpublic set _iBackgroundAlpha(value:number)\r\n\t{\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundAlpha = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/*\r\n\t public get iBackground():Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\r\n\t/*\r\n\t public set iBackground(value:Texture2DBase)\r\n\t {\r\n\t if (this._backgroundImageRenderer && !value) {\r\n\t this._backgroundImageRenderer.dispose();\r\n\t this._backgroundImageRenderer = null;\r\n\t }\r\n\r\n\t if (!this._backgroundImageRenderer && value)\r\n\t {\r\n\r\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\r\n\r\n\t }\r\n\r\n\r\n\t this._background = value;\r\n\r\n\t if (this._backgroundImageRenderer)\r\n\t this._backgroundImageRenderer.texture = value;\r\n\t }\r\n\t */\r\n\t/*\r\n\t public get backgroundImageRenderer():BackgroundImageRenderer\r\n\t {\r\n\t return _backgroundImageRenderer;\r\n\t }\r\n\t */\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScissorUpdate()\r\n\t{\r\n\t\tif (this._scissorDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scissorDirty = true;\r\n\r\n\t\tif (!this._scissorUpdated)\r\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._scissorUpdated);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyViewportUpdate()\r\n\t{\r\n\t\tif (this._viewportDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewportDirty = true;\r\n\r\n\t\tif (!this._viewPortUpdated)\r\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._viewPortUpdated);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic onViewportUpdated(event:StageEvent)\r\n\t{\r\n\t\tthis._viewPort = this._pStage.viewPort;\r\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\r\n\r\n\t\tif (this._shareContext) {\r\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\r\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\r\n\t\t\tthis.notifyScissorUpdate();\r\n\t\t}\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateGlobalPos()\r\n\t{\r\n\t\tif (this._shareContext) {\r\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\r\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\r\n\t\t} else {\r\n\t\t\tthis._pScissorRect.x = 0;\r\n\t\t\tthis._pScissorRect.y = 0;\r\n\t\t\tthis._viewPort.x = this._globalPos.x;\r\n\t\t\tthis._viewPort.y = this._globalPos.y;\r\n\t\t}\r\n\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderable\r\n\t * @protected\r\n\t */\r\n\tpublic applyRenderable(renderable:RenderableBase)\r\n\t{\r\n\t\t//set local vars for faster referencing\r\n\t\tvar renderObject:RenderObjectBase = this._pGetRenderObject(renderable, renderable.renderObjectOwner || DefaultMaterialManager.getDefaultMaterial(renderable.renderableOwner));\r\n\r\n\t\trenderable.renderObject = renderObject;\r\n\t\trenderable.renderObjectId = renderObject.renderObjectId;\r\n\t\trenderable.renderOrderId = renderObject.renderOrderId;\r\n\r\n\t\trenderable.cascaded = false;\r\n\r\n\t\tvar entity:IEntity = renderable.sourceEntity;\r\n\t\tvar position:Vector3D = entity.scenePosition;\r\n\r\n\t\t// project onto camera's z-axis\r\n\t\tposition = this._iEntryPoint.subtract(position);\r\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\r\n\r\n\t\t//store reference to scene transform\r\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\r\n\r\n\t\tif (renderObject.requiresBlending) {\r\n\t\t\trenderable.next = this._pBlendedRenderableHead;\r\n\t\t\tthis._pBlendedRenderableHead = renderable;\r\n\t\t} else {\r\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\r\n\t\t\tthis._pOpaqueRenderableHead = renderable;\r\n\t\t}\r\n\r\n\t\tthis._pNumTriangles += renderable.numTriangles;\r\n\r\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\r\n\t\tif (renderable.overflow)\r\n\t\t\tthis.applyRenderable(renderable.overflow);\r\n\t}\r\n\r\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = RendererBase;","import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport DepthPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/DepthPass\");\r\n\r\n/**\r\n * DepthRenderObject forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass DepthRenderObject extends RenderObjectBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"depth\";\r\n\r\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._pAddScreenPass(new DepthPass(this, renderObjectOwner, renderableClass, this._stage));\r\n\t}\r\n}\r\n\r\nexport = DepthRenderObject;","﻿import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport DistancePass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/DistancePass\");\r\n\r\n/**\r\n * DistanceRenderObject is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\r\n * This is used to render omnidirectional shadow maps.\r\n */\r\nclass DistanceRenderObject extends RenderObjectBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"distance\";\r\n\r\n\t/**\r\n\t * Creates a new DistanceRenderObject object.\r\n\t *\r\n\t * @param material The material to which this pass belongs.\r\n\t */\r\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._pAddScreenPass(new DistancePass(this, renderObjectOwner, renderableClass, this._stage));\r\n\t}\r\n}\r\n\r\nexport = DistanceRenderObject;","import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\n/**\r\n * RegisterPool is used by the shader compilation process to keep track of which registers of a certain type are\r\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\r\n * or single components (x, y, z, w) of a single register.\r\n * It is used by ShaderRegisterCache to track usages of individual register types.\r\n *\r\n * @see away.materials.ShaderRegisterCache\r\n */\r\nclass RegisterPool\r\n{\r\n\tprivate static _regPool:Object = new Object();\r\n\tprivate static _regCompsPool:Object = new Object();\r\n\r\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\r\n\tprivate _registerComponents;\r\n\r\n\tprivate _regName:string;\r\n\tprivate _usedSingleCount:Array<Array<number>>;\r\n\tprivate _usedVectorCount:Array<number> /*uint*/;\r\n\tprivate _regCount:number;\r\n\r\n\tprivate _persistent:boolean;\r\n\r\n\t/**\r\n\t * Creates a new RegisterPool object.\r\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\r\n\t * @param regCount The amount of available registers of this type.\r\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\r\n\t */\r\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\r\n\t{\r\n\t\tthis._regName = regName;\r\n\t\tthis._regCount = regCount;\r\n\t\tthis._persistent = persistent;\r\n\t\tthis.initRegisters(regName, regCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an entire vector register that's still available.\r\n\t */\r\n\tpublic requestFreeVectorReg():ShaderRegisterElement\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\r\n\t\t\tif (!this.isRegisterUsed(i)) {\r\n\t\t\t\tif (this._persistent)\r\n\t\t\t\t\tthis._usedVectorCount[i]++;\r\n\r\n\t\t\t\treturn this._vectorRegisters[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Register overflow!\");\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a single vector component that's still available.\r\n\t */\r\n\tpublic requestFreeRegComponent():ShaderRegisterElement\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\r\n\t\t\tif (this._usedVectorCount[i] > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\r\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\r\n\t\t\t\t\tif (this._persistent)\r\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\r\n\r\n\t\t\t\t\treturn this._registerComponents[j][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Register overflow!\");\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\r\n\t * has been called usageCount times again.\r\n\t * @param register The register to mark as used.\r\n\t * @param usageCount The amount of usages to add.\r\n\t */\r\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\r\n\t{\r\n\t\tif (register._component > -1)\r\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\r\n\t\telse\r\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\r\n\t * @param register The register for which to remove a usage.\r\n\t */\r\n\tpublic removeUsage(register:ShaderRegisterElement)\r\n\t{\r\n\t\tif (register._component > -1) {\r\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\r\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\r\n\t\t} else {\r\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\r\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes any resources used by the current RegisterPool object.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._vectorRegisters = null;\r\n\t\tthis._registerComponents = null;\r\n\t\tthis._usedSingleCount = null;\r\n\t\tthis._usedVectorCount = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any registers are in use.\r\n\t */\r\n\tpublic hasRegisteredRegs():boolean\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\r\n\t\t\tif (this.isRegisterUsed(i))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes all registers.\r\n\t */\r\n\tprivate initRegisters(regName:string, regCount:number)\r\n\t{\r\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\r\n\r\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\r\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\r\n\r\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\r\n\r\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\r\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\r\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\r\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\r\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\r\n\t}\r\n\r\n\tprivate static _initPool(regName:string, regCount:number):string\r\n\t{\r\n\t\tvar hash:string = regName + regCount;\r\n\r\n\t\tif (RegisterPool._regPool[hash] != undefined)\r\n\t\t\treturn hash;\r\n\r\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\r\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\r\n\r\n\t\tvar registerComponents = [\r\n\t\t\t[],\r\n\t\t\t[],\r\n\t\t\t[],\r\n\t\t\t[]\r\n\t\t];\r\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\r\n\r\n\t\tfor (var i:number = 0; i < regCount; ++i) {\r\n\r\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\r\n\r\n\t\t\tfor (var j:number = 0; j < 4; ++j)\r\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\r\n\t\t}\r\n\r\n\t\treturn hash;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Check if the temp register is either used for single or vector use\r\n\t */\r\n\tprivate isRegisterUsed(index:number):boolean\r\n\t{\r\n\t\tif (this._usedVectorCount[index] > 0)\r\n\t\t\treturn true;\r\n\r\n\t\tfor (var i:number = 0; i < 4; ++i)\r\n\t\t\tif (this._usedSingleCount[i][index] > 0)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\r\n\t{\r\n\t\tvar l:number = a.length;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++)\r\n\t\t\ta[c] = val;\r\n\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\nexport = RegisterPool;\r\n","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/passes/BasicMaterialPass\");\r\n\r\n/**\r\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass RenderBasicMaterialObject extends RenderObjectBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"basic\";\r\n\r\n\tprivate _material:BasicMaterial;\r\n\tprivate _screenPass:BasicMaterialPass;\r\n\r\n\r\n\tconstructor(pool:RenderObjectPool, material:BasicMaterial, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, material, renderableClass, stage);\r\n\r\n\t\tthis._material = material;\r\n\r\n\t\tthis._pAddScreenPass(this._screenPass = new BasicMaterialPass(this, material, renderableClass, this._stage));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateRenderObject()\r\n\t{\r\n\t\tsuper._pUpdateRenderObject();\r\n\r\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\r\n\t\tthis._screenPass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\r\n\t\tthis._screenPass.setBlendMode((this._renderObjectOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\r\n\t\t//this._screenPass.forceSeparateMVP = false;\r\n\t}\r\n}\r\n\r\nexport = RenderBasicMaterialObject;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\n/**\r\n *\r\n * @class away.pool.ScreenPasses\r\n */\r\nclass RenderObjectBase implements IRenderObject\r\n{\r\n\tpublic _forceSeparateMVP:boolean = false;\r\n\r\n\tprivate _pool:RenderObjectPool;\r\n\tpublic _renderObjectOwner:IRenderObjectOwner;\r\n\tpublic _renderableClass:IRenderableClass;\r\n\tpublic _stage:Stage;\r\n\r\n\tprivate _renderOrderId:number;\r\n\tprivate _invalidAnimation:boolean = true;\r\n\tprivate _invalidRenderObject:boolean = true;\r\n\tprivate _passes:Array<RenderPassBase> = new Array<RenderPassBase>();\r\n\r\n\r\n\r\n\tpublic _pRequiresBlending:boolean = false;\r\n\r\n\tprivate _onPassChangeDelegate:(event:Event) => void;\r\n\r\n\tpublic renderObjectId:number;\r\n\r\n\t/**\r\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\r\n\t */\r\n\tpublic get requiresBlending():boolean\r\n\t{\r\n\t\treturn this._pRequiresBlending;\r\n\t}\r\n\r\n\tpublic get renderOrderId():number\r\n\t{\r\n\t\tif (this._invalidAnimation)\r\n\t\t\tthis._updateAnimation();\r\n\r\n\t\treturn this._renderOrderId;\r\n\t}\r\n\r\n\tpublic get passes():Array<RenderPassBase>\r\n\t{\r\n\t\tif (this._invalidAnimation)\r\n\t\t\tthis._updateAnimation();\r\n\r\n\t\treturn this._passes;\r\n\t}\r\n\r\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tthis._pool = pool;\r\n\t\tthis.renderObjectId = renderObjectOwner.id;\r\n\t\tthis._renderObjectOwner = renderObjectOwner;\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\r\n\r\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tthis._renderableClass._iIncludeDependencies(shaderObject);\r\n\r\n\t\tshaderObject.alphaThreshold = this._renderObjectOwner.alphaThreshold;\r\n\t\tshaderObject.useMipmapping = this._renderObjectOwner.mipmap;\r\n\t\tshaderObject.useSmoothTextures = this._renderObjectOwner.smooth;\r\n\r\n\t\tif (this._renderObjectOwner.assetType = AssetType.MATERIAL) {\r\n\t\t\tvar material:MaterialBase = <MaterialBase> this._renderObjectOwner;\r\n\t\t\tshaderObject.useAlphaPremultiplied = material.alphaPremultiplied;\r\n\t\t\tshaderObject.useBothSides = material.bothSides;\r\n\t\t\tshaderObject.repeatTextures = material.repeat;\r\n\t\t\tshaderObject.usesUVTransform = material.animateUVs;\r\n\t\t\tshaderObject.texture = material.texture;\r\n\t\t\tshaderObject.color = material.color;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pClearScreenPasses();\r\n\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._passes[i].dispose();\r\n\r\n\t\tthis._passes = null;\r\n\r\n\t\tthis._pool.disposeItem(this._renderObjectOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateRenderObject()\r\n\t{\r\n\t\tthis._invalidRenderObject = true;\r\n\t\tthis._invalidAnimation = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._passes[i].invalidatePass();\r\n\r\n\t\tthis._invalidAnimation = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateAnimation()\r\n\t{\r\n\t\tthis._invalidAnimation = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderObjectOwner\r\n\t */\r\n\tprivate _updateAnimation()\r\n\t{\r\n\t\tif (this._invalidRenderObject)\r\n\t\t\tthis._pUpdateRenderObject();\r\n\r\n\t\tthis._invalidAnimation = false;\r\n\r\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\r\n\r\n\t\tvar renderOrderId = 0;\r\n\t\tvar mult:number = 1;\r\n\t\tvar shaderObject:ShaderObjectBase;\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tshaderObject = this._passes[i].shader;\r\n\r\n\t\t\tif (shaderObject.usesAnimation != enabledGPUAnimation) {\r\n\t\t\t\tshaderObject.usesAnimation = enabledGPUAnimation;\r\n\t\t\t\tshaderObject.invalidateProgram();\r\n\t\t\t}\r\n\r\n\t\t\trenderOrderId += shaderObject.programData.id*mult;\r\n\t\t\tmult *= 1000;\r\n\t\t}\r\n\r\n\t\tthis._renderOrderId = renderOrderId;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs any processing that needs to occur before any of its passes are used.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pUpdateRenderObject()\r\n\t{\r\n\t\tthis._invalidRenderObject = false;\r\n\r\n\t\t//overrride to update shader object properties\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a pass from the renderObjectOwner.\r\n\t * @param pass The pass to be removed.\r\n\t */\r\n\tpublic _pRemoveScreenPass(pass:RenderPassBase)\r\n\t{\r\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\r\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all passes from the renderObjectOwner\r\n\t */\r\n\tpublic _pClearScreenPasses()\r\n\t{\r\n\t\tvar len:number = this._passes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\r\n\r\n\t\tthis._passes.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a pass to the renderObjectOwner\r\n\t * @param pass\r\n\t */\r\n\tpublic _pAddScreenPass(pass:RenderPassBase)\r\n\t{\r\n\t\tthis._passes.push(pass);\r\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\r\n\t */\r\n\tprivate onPassChange(event:Event)\r\n\t{\r\n\t\tthis.invalidateAnimation();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * test if animation will be able to run on gpu BEFORE compiling materials\r\n\t * test if the shader objects supports animating the animation set in the vertex shader\r\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\r\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\r\n\t */\r\n\tprivate _getEnabledGPUAnimation():boolean\r\n\t{\r\n\t\tif (this._renderObjectOwner.animationSet) {\r\n\t\t\tthis._renderObjectOwner.animationSet.resetGPUCompatibility();\r\n\r\n\t\t\tvar owners:Array<IRenderableOwner> = this._renderObjectOwner.iOwners;\r\n\t\t\tvar numOwners:number = owners.length;\r\n\r\n\t\t\tvar len:number = this._passes.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\r\n\t\t\t\t\tif (owners[j].animator)\r\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\r\n\r\n\t\t\treturn !this._renderObjectOwner.animationSet.usesCPU;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = RenderObjectBase;","import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport IRenderObjectClass\t\t\t= require(\"awayjs-renderergl/lib/compilation/IRenderObjectClass\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * @class away.pool.RenderObjectPool\r\n */\r\nclass RenderObjectPool\r\n{\r\n\tprivate _renderObjectPool:Object = new Object();\r\n\tprivate _renderObjectClass:IRenderObjectClass;\r\n\tprivate _renderableClass:IRenderableClass;\r\n\tprivate _stage:Stage;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderObjectClass\r\n\t */\r\n\tconstructor(renderObjectClass:IRenderObjectClass, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tthis._renderObjectClass = renderObjectClass;\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t * @returns IRenderable\r\n\t */\r\n\tpublic getItem(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn (this._renderObjectPool[renderObjectOwner.id] || (this._renderObjectPool[renderObjectOwner.id] = renderObjectOwner._iAddRenderObject(new this._renderObjectClass(this, renderObjectOwner, this._renderableClass, this._stage))))\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t */\r\n\tpublic disposeItem(renderObjectOwner:IRenderObjectOwner)\r\n\t{\r\n\t\trenderObjectOwner._iRemoveRenderObject(this._renderObjectPool[renderObjectOwner.id]);\r\n\r\n\t\tthis._renderObjectPool[renderObjectOwner.id] = null;\r\n\t}\r\n}\r\n\r\nexport = RenderObjectPool;","import AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport IRenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderPassBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\n/**\r\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\r\n * material. Concrete subclasses are used by the default materials.\r\n *\r\n * @see away.materials.ShadingMethodBase\r\n */\r\nclass ShaderCompilerBase\r\n{\r\n\tpublic _pShaderObject:ShaderObjectBase;\r\n\tpublic _pSharedRegisters:ShaderRegisterData;\r\n\tpublic _pRegisterCache:ShaderRegisterCache;\r\n\tpublic _pRenderableClass:IRenderableClass;\r\n\tpublic _pRenderPass:IRenderPassBase;\r\n\r\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\r\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\r\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\r\n\r\n\t//The attributes that need to be animated by animators.\r\n\tpublic _pAnimatableAttributes:Array<string>;\r\n\r\n\t//The target registers for animated properties, written to by the animators.\r\n\tpublic _pAnimationTargetRegisters:Array<string>;\r\n\r\n\t//The target register to place the animated UV coordinate.\r\n\tprivate _uvTarget:string;\r\n\r\n\t//The souce register providing the UV coordinate to animate.\r\n\tprivate _uvSource:string;\r\n\r\n\t/**\r\n\t * Creates a new ShaderCompilerBase object.\r\n\t * @param profile The compatibility profile of the renderer.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, renderPass:IRenderPassBase, shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tthis._pRenderableClass = renderableClass;\r\n\t\tthis._pRenderPass = renderPass;\r\n\t\tthis._pShaderObject = shaderObject;\r\n\r\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\r\n\r\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shaderObject.profile);\r\n\t\tthis._pRegisterCache.vertexAttributesOffset = renderableClass.vertexAttributesOffset;\r\n\t\tthis._pRegisterCache.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles the code after all setup on the compiler has finished.\r\n\t */\r\n\tpublic compile()\r\n\t{\r\n\t\tthis._pShaderObject.reset();\r\n\r\n\t\tthis.pIncludeDependencies();\r\n\r\n\t\tthis.pInitRegisterIndices();\r\n\r\n\t\tthis.pCompileDependencies();\r\n\r\n\t\t//compile custom vertex & fragment codes\r\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t//assign the final output color to the output register\r\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\r\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\r\n\r\n\t\t//initialise the required shader constants\r\n\t\tthis._pShaderObject.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\r\n\t\tthis._pRenderPass._iInitConstantData(this._pShaderObject);\r\n\t}\r\n\r\n\tpublic pIncludeDependencies()\r\n\t{\r\n\t\tthis._pShaderObject._iIncludeDependencies();\r\n\r\n\t\tthis._pShaderObject.outputsNormals = this._pRenderPass._pOutputsNormals(this._pShaderObject);\r\n\t\tthis._pShaderObject.outputsTangentNormals = this._pShaderObject.outputsNormals && this._pRenderPass._pOutputsTangentNormals(this._pShaderObject);\r\n\t\tthis._pShaderObject.usesTangentSpace = this._pShaderObject.outputsTangentNormals && this._pRenderPass._pUsesTangentSpace(this._pShaderObject);\r\n\r\n\t\tif (!this._pShaderObject.usesTangentSpace && this._pShaderObject.viewDirDependencies > 0)\r\n\t\t\tthis._pShaderObject.globalPosDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * Compile the code for the methods.\r\n\t */\r\n\tpublic pCompileDependencies()\r\n\t{\r\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\r\n\r\n\t\t//compile the world-space position if required\r\n\t\tif (this._pShaderObject.globalPosDependencies > 0)\r\n\t\t\tthis.compileGlobalPositionCode();\r\n\r\n        //compile the local-space position if required\r\n        if (this._pShaderObject.localPosDependencies > 0)\r\n            this.compileLocalPositionCode();\r\n\r\n\t\t//Calculate the (possibly animated) UV coordinates.\r\n\t\tif (this._pShaderObject.uvDependencies > 0)\r\n\t\t\tthis.compileUVCode();\r\n\r\n\t\tif (this._pShaderObject.secondaryUVDependencies > 0)\r\n\t\t\tthis.compileSecondaryUVCode();\r\n\r\n\t\tif (this._pShaderObject.normalDependencies > 0)\r\n\t\t\tthis.compileNormalCode();\r\n\r\n\t\tif (this._pShaderObject.viewDirDependencies > 0)\r\n\t\t\tthis.compileViewDirCode();\r\n\r\n\t\t//collect code from material\r\n\t\tthis._pVertexCode += this._pRenderableClass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pFragmentCode += this._pRenderableClass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t//collect code from pass\r\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t}\r\n\r\n\tprivate compileGlobalPositionCode()\r\n\t{\r\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShaderObject.globalPosDependencies);\r\n\r\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\tthis._pShaderObject.sceneMatrixIndex = sceneMatrixReg.index*4;\r\n\r\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\r\n\r\n\t\tif (this._pShaderObject.usesGlobalPosFragment) {\r\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\r\n\t\t}\r\n\t}\r\n    private compileLocalPositionCode()\r\n    {\r\n        this._pSharedRegisters.localPositionVarying = this._pRegisterCache.getFreeVarying();\r\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.localPositionVarying + \", \" + this._pSharedRegisters.localPosition + \"\\n\";\r\n    }\r\n\t/**\r\n\t * Calculate the (possibly animated) UV coordinates.\r\n\t */\r\n\tprivate compileUVCode()\r\n\t{\r\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\tthis._pShaderObject.uvBufferIndex = uvAttributeReg.index;\r\n\r\n\t\tvar varying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\r\n\r\n\t\tthis._pSharedRegisters.uvVarying = varying;\r\n\r\n\t\tif (this._pShaderObject.usesUVTransform) {\r\n\t\t\t// a, b, 0, tx\r\n\t\t\t// c, d, 0, ty\r\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tthis._pShaderObject.uvTransformIndex = uvTransform1.index*4;\r\n\r\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\r\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\r\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\r\n\t\t} else {\r\n\t\t\tthis._pShaderObject.uvTransformIndex = -1;\r\n\t\t\tthis._uvTarget = varying.toString();\r\n\t\t\tthis._uvSource = uvAttributeReg.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provide the secondary UV coordinates.\r\n\t */\r\n\tprivate compileSecondaryUVCode()\r\n\t{\r\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\tthis._pShaderObject.secondaryUVBufferIndex = uvAttributeReg.index;\r\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\r\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the view direction.\r\n\t */\r\n\tpublic compileViewDirCode()\r\n\t{\r\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\r\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\r\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShaderObject.viewDirDependencies);\r\n\r\n\t\tthis._pShaderObject.cameraPositionIndex = cameraPositionReg.index*4;\r\n\r\n\t\tif (this._pShaderObject.usesTangentSpace) {\r\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\r\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\r\n\t\t} else {\r\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\r\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\r\n\t\t}\r\n\r\n\t\t//TODO is this required in all cases? (re: distancemappass)\r\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\r\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the normal.\r\n\t */\r\n\tpublic compileNormalCode()\r\n\t{\r\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShaderObject.normalDependencies);\r\n\r\n\t\t//simple normal aquisition if no tangent space is being used\r\n\t\tif (this._pShaderObject.outputsNormals && !this._pShaderObject.outputsTangentNormals) {\r\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\r\n\r\n\t\tif (!this._pShaderObject.outputsNormals || !this._pShaderObject.usesTangentSpace) {\r\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\r\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\r\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\tthis._pShaderObject.sceneNormalMatrixIndex = normalMatrix[0].index*4;\r\n\r\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t}\r\n\r\n\t\tif (this._pShaderObject.outputsNormals) {\r\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\r\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\r\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\r\n\r\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\t} else {\r\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\r\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\r\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\r\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\r\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\r\n\r\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\r\n\r\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\r\n\t\t\t\tvar t:ShaderRegisterElement;\r\n\t\t\t\tvar b:ShaderRegisterElement;\r\n\t\t\t\tvar n:ShaderRegisterElement;\r\n\r\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\r\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\r\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\r\n\r\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\r\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\r\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\r\n\r\n\t\t\t\t//compile custom fragment code for normal calcs\r\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters) +\r\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\r\n\r\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\r\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\r\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// no output, world space is enough\r\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\r\n\r\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\r\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\r\n\r\n\t\t\tif (this._pShaderObject.tangentDependencies > 0) {\r\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\r\n\r\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._pShaderObject.usesTangentSpace)\r\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\r\n\t}\r\n\r\n\t/**\r\n\t * Reset all the indices to \"unused\".\r\n\t */\r\n\tpublic pInitRegisterIndices()\r\n\t{\r\n\t\tthis._pShaderObject.pInitRegisterIndices();\r\n\r\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\r\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\r\n\t\tthis._pVertexCode = \"\";\r\n\t\tthis._pFragmentCode = \"\";\r\n\t\tthis._pPostAnimationFragmentCode = \"\";\r\n\r\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\r\n\r\n\t\t//create commonly shared constant registers\r\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\r\n\t\tthis._pShaderObject.commonsDataIndex = this._pSharedRegisters.commons.index*4;\r\n\r\n\t\t//Creates the registers to contain the tangent data.\r\n\t\t// need to be created FIRST and in this order (for when using tangent space)\r\n\t\tif (this._pShaderObject.tangentDependencies > 0 || this._pShaderObject.outputsNormals) {\r\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\t\tthis._pShaderObject.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\r\n\r\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\r\n\r\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\r\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\r\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\r\n\t\t}\r\n\r\n\t\tif (this._pShaderObject.normalDependencies > 0) {\r\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\t\tthis._pShaderObject.normalBufferIndex = this._pSharedRegisters.normalInput.index;\r\n\r\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\r\n\r\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\r\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\r\n\t\t}\r\n\r\n\t\tif (this._pShaderObject.colorDependencies > 0) {\r\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\r\n\t\t\tthis._pShaderObject.colorBufferIndex = this._pSharedRegisters.colorInput.index;\r\n\r\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all resources used by the compiler.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRegisterCache.dispose();\r\n\t\tthis._pRegisterCache = null;\r\n\t\tthis._pSharedRegisters = null;\r\n\t}\r\n\r\n\t/**\r\n\t * The generated vertex code.\r\n\t */\r\n\tpublic get vertexCode():string\r\n\t{\r\n\t\treturn this._pVertexCode;\r\n\t}\r\n\r\n\t/**\r\n\t * The generated fragment code.\r\n\t */\r\n\tpublic get fragmentCode():string\r\n\t{\r\n\t\treturn this._pFragmentCode;\r\n\t}\r\n\r\n\t/**\r\n\t * The generated fragment code.\r\n\t */\r\n\tpublic get postAnimationFragmentCode():string\r\n\t{\r\n\t\treturn this._pPostAnimationFragmentCode;\r\n\t}\r\n\r\n\t/**\r\n\t * The register name containing the final shaded colour.\r\n\t */\r\n\tpublic get shadedTarget():string\r\n\t{\r\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\r\n\t}\r\n}\r\n\r\nexport = ShaderCompilerBase;","import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\r\n\r\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\r\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport IRenderLightingPass\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\n/**\r\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\r\n * material. Concrete subclasses are used by the default materials.\r\n *\r\n * @see away.materials.ShadingMethodBase\r\n */\r\nclass ShaderLightingCompiler extends ShaderCompilerBase\r\n{\r\n\tprivate _shaderLightingObject:ShaderLightingObject;\r\n\tprivate _renderLightingPass:IRenderLightingPass;\r\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\r\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\r\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\r\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\r\n\r\n\tpublic _pNumProbeRegisters:number;\r\n\r\n\t/**\r\n\t * Creates a new ShaderCompilerBase object.\r\n\t * @param profile The compatibility profile of the renderer.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, renderLightingPass:IRenderLightingPass, shaderLightingObject:ShaderLightingObject)\r\n\t{\r\n\t\tsuper(renderableClass, renderLightingPass, shaderLightingObject);\r\n\r\n\t\tthis._shaderLightingObject = shaderLightingObject;\r\n\t\tthis._renderLightingPass = renderLightingPass;\r\n\t}\r\n\r\n\t/**\r\n\t * Compile the code for the methods.\r\n\t */\r\n\tpublic pCompileDependencies()\r\n\t{\r\n\t\tsuper.pCompileDependencies();\r\n\r\n\t\t//compile the lighting code\r\n\t\tif (this._shaderLightingObject.usesShadows)\r\n\t\t\tthis.pCompileShadowCode();\r\n\r\n\t\tif (this._shaderLightingObject.usesLights) {\r\n\t\t\tthis.initLightRegisters();\r\n\t\t\tthis.compileLightCode();\r\n\t\t}\r\n\r\n\t\tif (this._shaderLightingObject.usesProbes)\r\n\t\t\tthis.compileLightProbeCode();\r\n\r\n\t\tthis._pVertexCode += this._renderLightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t\tthis._pFragmentCode += this._renderLightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the code to provide shadow mapping.\r\n\t */\r\n\tpublic pCompileShadowCode()\r\n\t{\r\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\r\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\r\n\t\t} else {\r\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes constant registers to contain light data.\r\n\t */\r\n\tprivate initLightRegisters()\r\n\t{\r\n\t\t// init these first so we're sure they're in sequence\r\n\t\tvar i:number, len:number;\r\n\r\n\t\tif (this._dirLightVertexConstants) {\r\n\t\t\tlen = this._dirLightVertexConstants.length;\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\r\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pointLightVertexConstants) {\r\n\t\t\tlen = this._pointLightVertexConstants.length;\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\r\n\r\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\r\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlen = this._dirLightFragmentConstants.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\r\n\r\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\r\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\r\n\t\t}\r\n\r\n\t\tlen = this._pointLightFragmentConstants.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\r\n\r\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\r\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles the shading code for directional and point lights.\r\n\t */\r\n\tprivate compileLightCode()\r\n\t{\r\n\t\tvar diffuseColorReg:ShaderRegisterElement;\r\n\t\tvar specularColorReg:ShaderRegisterElement;\r\n\t\tvar lightPosReg:ShaderRegisterElement;\r\n\t\tvar lightDirReg:ShaderRegisterElement;\r\n\t\tvar vertexRegIndex:number = 0;\r\n\t\tvar fragmentRegIndex:number = 0;\r\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\r\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\r\n\r\n\t\t//compile the shading code for directional lights.\r\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\r\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\r\n\r\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\r\n\r\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\r\n\r\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\r\n\r\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\r\n\r\n\t\t\t} else {\r\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\r\n\t\t\t}\r\n\r\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\r\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\r\n\r\n\t\t\tif (addDiff)\r\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tif (addSpec)\r\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\r\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\r\n\t\t}\r\n\r\n\t\tvertexRegIndex = 0;\r\n\t\tfragmentRegIndex = 0;\r\n\r\n\t\t//compile the shading code for point lights\r\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\r\n\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\r\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\r\n\t\t\telse\r\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\r\n\r\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\r\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\r\n\r\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\r\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\r\n\r\n\t\t\tvar lightVarying:ShaderRegisterElement;\r\n\r\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\r\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\r\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\r\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\r\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\r\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\r\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tlightVarying = lightDirReg;\r\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\r\n\t\t\t\t// calculate attenuation\r\n\t\t\t\tthis._pFragmentCode += // attenuate\r\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\r\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\r\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\r\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\r\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\r\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\r\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\r\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\r\n\r\n\t\t\tif (addDiff)\r\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tif (addSpec)\r\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\r\n\r\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compiles shading code for light probes.\r\n\t */\r\n\tprivate compileLightProbeCode()\r\n\t{\r\n\t\tvar weightReg:string;\r\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\r\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\r\n\t\tvar i:number;\r\n\t\tvar texReg:ShaderRegisterElement;\r\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\r\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\r\n\r\n\t\tif (addDiff)\r\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\r\n\r\n\t\tif (addSpec)\r\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\r\n\r\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\r\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\r\n\r\n\t\t\tif (i == 0)\r\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\r\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\r\n\r\n\t\t\tif (addDiff) {\r\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\r\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\r\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\t}\r\n\r\n\t\t\tif (addSpec) {\r\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\r\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\r\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reset all the indices to \"unused\".\r\n\t */\r\n\tpublic pInitRegisterIndices()\r\n\t{\r\n\t\tsuper.pInitRegisterIndices();\r\n\r\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\r\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\r\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\r\n\r\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\r\n\r\n\t\t//init light data\r\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\r\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\r\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\r\n\t\t} else {\r\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\r\n\t\t}\r\n\r\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\r\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\r\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\r\n\t\t} else {\r\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShaderLightingCompiler;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\r\n\r\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\n\r\nimport IRenderLightingPass\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\r\nimport ShaderLightingCompiler\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingCompiler\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\n/**\r\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\r\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\r\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\r\n * each time a method has been compiled into the shader.\r\n *\r\n * @see RegisterPool.addUsage\r\n */\r\nclass ShaderLightingObject extends ShaderObjectBase\r\n{\r\n\tpublic _renderLightingPass:IRenderLightingPass;\r\n\r\n\tprivate _includeCasters:boolean = true;\r\n\r\n\t/**\r\n\t * The first index for the fragment constants containing the light data.\r\n\t */\r\n\tpublic lightFragmentConstantIndex:number;\r\n\r\n\t/**\r\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\r\n\t */\r\n\tpublic lightVertexConstantIndex:number;\r\n\r\n\t/**\r\n\t * Indices for the light probe diffuse textures.\r\n\t */\r\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\r\n\r\n\t/**\r\n\t * Indices for the light probe specular textures.\r\n\t */\r\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\r\n\r\n\t/**\r\n\t * The index of the fragment constant containing the weights for the light probes.\r\n\t */\r\n\tpublic probeWeightsIndex:number;\r\n\r\n\tpublic numLights:number;\r\n\tpublic numDirectionalLights:number;\r\n\tpublic numPointLights:number;\r\n\tpublic numLightProbes:number;\r\n\r\n\tpublic usesLightFallOff:boolean;\r\n\r\n\tpublic usesShadows:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the shader uses any lights.\r\n\t */\r\n\tpublic usesLights:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the shader uses any light probes.\r\n\t */\r\n\tpublic usesProbes:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the lights uses any specular components.\r\n\t */\r\n\tpublic usesLightsForSpecular:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the probes uses any specular components.\r\n\t */\r\n\tpublic usesProbesForSpecular:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the lights uses any diffuse components.\r\n\t */\r\n\tpublic usesLightsForDiffuse:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the probes uses any diffuse components.\r\n\t */\r\n\tpublic usesProbesForDiffuse:boolean;\r\n\r\n\t/**\r\n\t * Creates a new MethodCompilerVO object.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, renderLightingPass:IRenderLightingPass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderableClass, renderLightingPass, stage);\r\n\r\n\t\tthis._renderLightingPass = renderLightingPass;\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies()\r\n\t{\r\n\t\tthis.numPointLights = this._renderLightingPass.numPointLights;\r\n\t\tthis.numDirectionalLights = this._renderLightingPass.numDirectionalLights;\r\n\t\tthis.numLightProbes = this._renderLightingPass.numLightProbes;\r\n\r\n\t\tvar numAllLights:number = this._renderLightingPass.numPointLights + this._renderLightingPass.numDirectionalLights;\r\n\t\tvar numLightProbes:number = this._renderLightingPass.numLightProbes;\r\n\t\tvar diffuseLightSources:number = this._renderLightingPass._iUsesDiffuse(this)? this._renderLightingPass.diffuseLightSources : 0x00;\r\n\t\tvar specularLightSources:number = this._renderLightingPass._iUsesSpecular(this)? this._renderLightingPass.specularLightSources : 0x00;\r\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\r\n\r\n\t\tthis.usesLightFallOff = this._renderLightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\r\n\t\tthis.numLights = numAllLights + numLightProbes;\r\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\r\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\r\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\r\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\r\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\r\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\r\n\t\tthis.usesShadows = this._renderLightingPass._iUsesShadows(this);\r\n\r\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\r\n\t\tsuper._iIncludeDependencies();\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method to create a concrete compiler object for this object\r\n\t *\r\n\t * @param materialPassVO\r\n\t * @returns {away.materials.ShaderLightingCompiler}\r\n\t */\r\n\tpublic createCompiler(renderableClass:IRenderableClass, renderPass:IRenderLightingPass):ShaderCompilerBase\r\n\t{\r\n\t\treturn new ShaderLightingCompiler(renderableClass, renderPass, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tsuper.reset();\r\n\r\n\t\tthis.numLights = 0;\r\n\t\tthis.usesLightFallOff = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param renderable\r\n\t * @param stage\r\n\t * @param camera\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(renderable, camera, viewProjection);\r\n\r\n\t\tif (this._renderLightingPass.lightPicker)\r\n\t\t\tthis._renderLightingPass.lightPicker.collectLights(renderable);\r\n\r\n\t\tif (this.usesLights)\r\n\t\t\tthis.updateLights();\r\n\r\n\t\tif (this.usesProbes)\r\n\t\t\tthis.updateProbes();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\r\n\t */\r\n\tprivate updateLights()\r\n\t{\r\n\t\tvar dirLight:DirectionalLight;\r\n\t\tvar pointLight:PointLight;\r\n\t\tvar i:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar len:number;\r\n\t\tvar dirPos:Vector3D;\r\n\t\tvar total:number = 0;\r\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\r\n\t\tvar l:number;\r\n\t\tvar offset:number;\r\n\r\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\r\n\r\n\t\tl = this.lightVertexConstantIndex;\r\n\t\tk = this.lightFragmentConstantIndex;\r\n\r\n\t\tvar cast:number = 0;\r\n\t\tvar dirLights:Array<DirectionalLight> = this._renderLightingPass.lightPicker.directionalLights;\r\n\t\toffset = this._renderLightingPass.directionalLightsOffset;\r\n\t\tlen = this._renderLightingPass.lightPicker.directionalLights.length;\r\n\r\n\t\tif (offset > len) {\r\n\t\t\tcast = 1;\r\n\t\t\toffset -= len;\r\n\t\t}\r\n\r\n\t\tfor (; cast < numLightTypes; ++cast) {\r\n\t\t\tif (cast)\r\n\t\t\t\tdirLights = this._renderLightingPass.lightPicker.castingDirectionalLights;\r\n\r\n\t\t\tlen = dirLights.length;\r\n\r\n\t\t\tif (len > this.numDirectionalLights)\r\n\t\t\t\tlen = this.numDirectionalLights;\r\n\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tdirLight = dirLights[offset + i];\r\n\t\t\t\tdirPos = dirLight.sceneDirection;\r\n\r\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\r\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\r\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\r\n\r\n\t\t\t\tif (this.usesTangentSpace) {\r\n\t\t\t\t\tvar x:number = -dirPos.x;\r\n\t\t\t\t\tvar y:number = -dirPos.y;\r\n\t\t\t\t\tvar z:number = -dirPos.z;\r\n\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\r\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\r\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\r\n\t\t\t\tif (++total == this.numDirectionalLights) {\r\n\t\t\t\t\t// break loop\r\n\t\t\t\t\ti = len;\r\n\t\t\t\t\tcast = numLightTypes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// more directional supported than currently picked, need to clamp all to 0\r\n\t\tif (this.numDirectionalLights > total) {\r\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\r\n\r\n\t\t\twhile (k < i)\r\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\r\n\t\t}\r\n\r\n\t\ttotal = 0;\r\n\r\n\t\tvar pointLights:Array<PointLight> = this._renderLightingPass.lightPicker.pointLights;\r\n\t\toffset = this._renderLightingPass.pointLightsOffset;\r\n\t\tlen = this._renderLightingPass.lightPicker.pointLights.length;\r\n\r\n\t\tif (offset > len) {\r\n\t\t\tcast = 1;\r\n\t\t\toffset -= len;\r\n\t\t} else {\r\n\t\t\tcast = 0;\r\n\t\t}\r\n\r\n\t\tfor (; cast < numLightTypes; ++cast) {\r\n\t\t\tif (cast)\r\n\t\t\t\tpointLights = this._renderLightingPass.lightPicker.castingPointLights;\r\n\r\n\t\t\tlen = pointLights.length;\r\n\r\n\t\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t\tpointLight = pointLights[offset + i];\r\n\t\t\t\tdirPos = pointLight.scenePosition;\r\n\r\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\r\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\r\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\r\n\r\n\t\t\t\tif (this.usesTangentSpace) {\r\n\t\t\t\t\tx = dirPos.x;\r\n\t\t\t\t\ty = dirPos.y;\r\n\t\t\t\t\tz = dirPos.z;\r\n\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\r\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\r\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\r\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\r\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\r\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\r\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\r\n\r\n\t\t\t\tvar radius:number = pointLight._pRadius;\r\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\r\n\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\r\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\r\n\r\n\t\t\t\tif (++total == this.numPointLights) {\r\n\t\t\t\t\t// break loop\r\n\t\t\t\t\ti = len;\r\n\t\t\t\t\tcast = numLightTypes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// more directional supported than currently picked, need to clamp all to 0\r\n\t\tif (this.numPointLights > total) {\r\n\t\t\ti = k + (total - this.numPointLights)*12;\r\n\r\n\t\t\tfor (; k < i; ++k)\r\n\t\t\t\tthis.fragmentConstantData[k] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\r\n\t */\r\n\tprivate updateProbes()\r\n\t{\r\n\t\tvar probe:LightProbe;\r\n\t\tvar lightProbes:Array<LightProbe> = this._renderLightingPass.lightPicker.lightProbes;\r\n\t\tvar weights:Array<number> = this._renderLightingPass.lightPicker.lightProbeWeights;\r\n\t\tvar len:number = lightProbes.length - this._renderLightingPass.lightProbesOffset;\r\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\r\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\r\n\r\n\t\tif (!(addDiff || addSpec))\r\n\t\t\treturn;\r\n\r\n\t\tif (len > this.numLightProbes)\r\n\t\t\tlen = this.numLightProbes;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tprobe = lightProbes[ this._renderLightingPass.lightProbesOffset + i];\r\n\r\n\t\t\tif (addDiff)\r\n\t\t\t\tthis._stage.activateCubeTexture(this.lightProbeDiffuseIndices[i], probe.diffuseMap, this.useSmoothTextures, this.useMipmapping);\r\n\r\n\t\t\tif (addSpec)\r\n\t\t\t\tthis._stage.activateCubeTexture(this.lightProbeSpecularIndices[i], probe.specularMap, this.useSmoothTextures, this.useMipmapping);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._renderLightingPass.lightProbesOffset + i];\r\n\t}\r\n}\r\n\r\nexport = ShaderLightingObject;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\r\n\r\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderPassBase\");\r\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\n\r\n/**\r\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\r\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\r\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\r\n * each time a method has been compiled into the shader.\r\n *\r\n * @see RegisterPool.addUsage\r\n */\r\nclass ShaderObjectBase\r\n{\r\n\tprivate _renderableClass:IRenderableClass;\r\n\tprivate _renderPass:IRenderPassBase;\r\n\tpublic _stage:Stage;\r\n\tprivate _programData:ProgramData;\r\n\r\n\tprivate _invalidShader:boolean = true;\r\n\tprivate _invalidProgram:boolean = true;\r\n\tprivate _animationVertexCode:string = \"\";\r\n\tprivate _animationFragmentCode:string = \"\";\r\n\r\n\tpublic get programData():ProgramData\r\n\t{\r\n\t\tif (this._invalidProgram)\r\n\t\t\tthis._updateProgram();\r\n\r\n\t\treturn this._programData;\r\n\t}\r\n\r\n\tpublic profile:string;\r\n\r\n\tpublic usesAnimation:boolean;\r\n\r\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\r\n\r\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\r\n\r\n\tpublic animationRegisterCache:AnimationRegisterCache;\r\n\r\n\t/**\r\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\r\n\t */\r\n\tpublic numUsedVertexConstants:number;\r\n\r\n\t/**\r\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\r\n\t */\r\n\tpublic numUsedFragmentConstants:number;\r\n\r\n\t/**\r\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\r\n\t */\r\n\tpublic numUsedStreams:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic numUsedTextures:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic numUsedVaryings:number;\r\n\r\n\tpublic animatableAttributes:Array<string>;\r\n\tpublic animationTargetRegisters:Array<string>;\r\n\tpublic uvSource:string;\r\n\tpublic uvTarget:string;\r\n\r\n\tpublic useAlphaPremultiplied:boolean;\r\n\tpublic useBothSides:boolean;\r\n\tpublic useMipmapping:boolean;\r\n\tpublic useSmoothTextures:boolean;\r\n\tpublic repeatTextures:boolean;\r\n\tpublic usesUVTransform:boolean;\r\n\tpublic alphaThreshold:number;\r\n\tpublic texture:Texture2DBase;\r\n\tpublic color:number;\r\n\r\n\r\n\t//set ambient values to default\r\n\tpublic ambientR:number = 0xFF;\r\n\tpublic ambientG:number = 0xFF;\r\n\tpublic ambientB:number = 0xFF;\r\n\r\n\t/**\r\n\t * Indicates whether the pass requires any fragment animation code.\r\n\t */\r\n\tpublic usesFragmentAnimation:boolean;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the projected position.\r\n\t */\r\n\tpublic projectionDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the normal vector.\r\n\t */\r\n\tpublic normalDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the vertex color.\r\n\t */\r\n\tpublic colorDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the view direction.\r\n\t */\r\n\tpublic viewDirDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the primary UV coordinates.\r\n\t */\r\n\tpublic uvDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the secondary UV coordinates.\r\n\t */\r\n\tpublic secondaryUVDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the local position. This can be 0 while hasGlobalPosDependencies is true when\r\n\t * the global position is used as a temporary value (fe to calculate the view direction)\r\n\t */\r\n\tpublic localPosDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\r\n\t * the global position is used as a temporary value (fe to calculate the view direction)\r\n\t */\r\n\tpublic globalPosDependencies:number;\r\n\r\n\t/**\r\n\t * The amount of tangent vector dependencies (fragment shader).\r\n\t */\r\n\tpublic tangentDependencies:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic outputsNormals:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic outputsColors:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\r\n\t * dependencies exist.\r\n\t */\r\n\tpublic usesTangentSpace:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether or not normal calculations are output in tangent space.\r\n\t */\r\n\tpublic outputsTangentNormals:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether there are any dependencies on the world-space position vector.\r\n\t */\r\n\tpublic usesGlobalPosFragment:boolean = false;\r\n\r\n\tpublic vertexConstantData:Array<number> = new Array<number>();\r\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\r\n\r\n\t/**\r\n\t * The index for the common data register.\r\n\t */\r\n\tpublic commonsDataIndex:number;\r\n\r\n\t/**\r\n\t * The index for the UV vertex attribute stream.\r\n\t */\r\n\tpublic uvBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the secondary UV vertex attribute stream.\r\n\t */\r\n\tpublic secondaryUVBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the vertex normal attribute stream.\r\n\t */\r\n\tpublic normalBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the color attribute stream.\r\n\t */\r\n\tpublic colorBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index for the vertex tangent attribute stream.\r\n\t */\r\n\tpublic tangentBufferIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the view matrix.\r\n\t */\r\n\tpublic viewMatrixIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the scene matrix.\r\n\t */\r\n\tpublic sceneMatrixIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\r\n\t */\r\n\tpublic sceneNormalMatrixIndex:number;\r\n\r\n\t/**\r\n\t * The index of the vertex constant containing the camera position.\r\n\t */\r\n\tpublic cameraPositionIndex:number;\r\n\r\n\t/**\r\n\t * The index for the UV transformation matrix vertex constant.\r\n\t */\r\n\tpublic uvTransformIndex:number;\r\n\r\n\t/**\r\n\t * Creates a new MethodCompilerVO object.\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, renderPass:IRenderPassBase, stage:Stage)\r\n\t{\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._renderPass = renderPass;\r\n\t\tthis._stage = stage;\r\n\t\tthis.profile = this._stage.profile;\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies()\r\n\t{\r\n\t\tthis._renderPass._iIncludeDependencies(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method to create a concrete compiler object for this object\r\n\t *\r\n\t * @param renderableClass\r\n\t * @param renderPass\r\n\t * @param stage\r\n\t * @returns {ShaderCompilerBase}\r\n\t */\r\n\tpublic createCompiler(renderableClass:IRenderableClass, renderPass:IRenderPassBase):ShaderCompilerBase\r\n\t{\r\n\t\treturn new ShaderCompilerBase(renderableClass, renderPass, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tthis.projectionDependencies = 0;\r\n\t\tthis.normalDependencies = 0;\r\n\t\tthis.colorDependencies = 0;\r\n\t\tthis.viewDirDependencies = 0;\r\n\t\tthis.uvDependencies = 0;\r\n\t\tthis.secondaryUVDependencies = 0;\r\n\t\tthis.globalPosDependencies = 0;\r\n\t\tthis.localPosDependencies = 0;\r\n\t\tthis.tangentDependencies = 0;\r\n\t\tthis.usesGlobalPosFragment = false;\r\n\t\tthis.usesFragmentAnimation = false;\r\n\t\tthis.usesTangentSpace = false;\r\n\t\tthis.outputsNormals = false;\r\n\t\tthis.outputsTangentNormals = false;\r\n\t}\r\n\r\n\tpublic pInitRegisterIndices()\r\n\t{\r\n\t\tthis.commonsDataIndex = -1;\r\n\t\tthis.cameraPositionIndex = -1;\r\n\t\tthis.uvBufferIndex = -1;\r\n\t\tthis.uvTransformIndex = -1;\r\n\t\tthis.secondaryUVBufferIndex = -1;\r\n\t\tthis.normalBufferIndex = -1;\r\n\t\tthis.colorBufferIndex = -1;\r\n\t\tthis.tangentBufferIndex = -1;\r\n\t\tthis.sceneMatrixIndex = -1;\r\n\t\tthis.sceneNormalMatrixIndex = -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the unchanging constant data for this shader object.\r\n\t */\r\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\r\n\t{\r\n\t\t//Updates the amount of used register indices.\r\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\r\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\r\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\r\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\r\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\r\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\r\n\r\n\t\tthis.animatableAttributes = animatableAttributes;\r\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\r\n\t\tthis.uvSource = uvSource;\r\n\t\tthis.uvTarget = uvTarget;\r\n\r\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\r\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\r\n\r\n\t\t//Initializes commonly required constant values.\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\r\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\r\n\r\n\t\t//Initializes the default UV transformation matrix.\r\n\t\tif (this.uvTransformIndex >= 0) {\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\r\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\r\n\t\t}\r\n\r\n\t\tif (this.cameraPositionIndex >= 0)\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tif (this.usesAnimation)\r\n\t\t\t(<AnimationSetBase> this._renderPass.animationSet).activate(this, this._stage);\r\n\r\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\r\n\r\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\r\n\t\t\tvar pos:Vector3D = camera.scenePosition;\r\n\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iDeactivate()\r\n\t{\r\n\t\tif (this.usesAnimation)\r\n\t\t\t(<AnimationSetBase> this._renderPass.animationSet).deactivate(this, this._stage);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param renderable\r\n\t * @param stage\r\n\t * @param camera\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tif (renderable.renderableOwner.animator)\r\n\t\t\t(<AnimatorBase> renderable.renderableOwner.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\r\n\r\n\t\tif (this.uvBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\r\n\r\n\t\tif (this.secondaryUVBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\r\n\r\n\t\tif (this.normalBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\r\n\r\n\t\tif (this.tangentBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\r\n\r\n\t\tif (this.colorBufferIndex >= 0)\r\n\t\t\tthis._stage.activateBuffer(this.colorBufferIndex, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\r\n\r\n\r\n\t\tif (this.usesUVTransform) {\r\n\t\t\tvar uvTransform:Matrix = renderable.renderableOwner.uvTransform.matrix;\r\n\r\n\t\t\tif (uvTransform) {\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\r\n\t\t\t} else {\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\r\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.sceneNormalMatrixIndex >= 0)\r\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\r\n\r\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\r\n\r\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\r\n\t\t\tvar pos:Vector3D = camera.scenePosition;\r\n\t\t\tvar x:number = pos.x;\r\n\t\t\tvar y:number = pos.y;\r\n\t\t\tvar z:number = pos.z;\r\n\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\r\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic invalidateProgram()\r\n\t{\r\n\t\tthis._invalidProgram = true;\r\n\t}\r\n\r\n\tpublic invalidateShader()\r\n\t{\r\n\t\tthis._invalidShader = true;\r\n\t\tthis._invalidProgram = true;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._programData.dispose();\r\n\t\tthis._programData = null;\r\n\t}\r\n\r\n\tprivate _updateProgram()\r\n\t{\r\n\t\tthis._invalidProgram = false;\r\n\r\n\t\tvar compiler:ShaderCompilerBase;\r\n\r\n\t\tif (this._invalidShader) {\r\n\t\t\tthis._invalidShader = false;\r\n\r\n\t\t\tcompiler = this.createCompiler(this._renderableClass, this._renderPass);\r\n\t\t\tcompiler.compile();\r\n\t\t}\r\n\r\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\r\n\r\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\r\n\r\n\t\t//check program data hasn't changed, keep count of program usages\r\n\t\tif (this._programData != programData) {\r\n\t\t\tif (this._programData)\r\n\t\t\t\tthis._programData.dispose();\r\n\r\n\t\t\tthis._programData = programData;\r\n\r\n\t\t\tprogramData.usages++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calcAnimationCode(shadedTarget:string)\r\n\t{\r\n\t\t//reset code\r\n\t\tthis._animationVertexCode = \"\";\r\n\t\tthis._animationFragmentCode = \"\";\r\n\r\n\t\t//check to see if GPU animation is used\r\n\t\tif (this.usesAnimation) {\r\n\r\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._renderPass.animationSet;\r\n\r\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\r\n\r\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\r\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\r\n\r\n\t\t\tif (this.usesFragmentAnimation)\r\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\r\n\r\n\t\t\tanimationSet.doneAGALCode(this);\r\n\r\n\t\t} else {\r\n\t\t\t// simply write attributes to targets, do not animate them\r\n\t\t\t// projection will pick up on targets[0] to do the projection\r\n\t\t\tvar len:number = this.animatableAttributes.length;\r\n\t\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\r\n\r\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\r\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShaderObjectBase;","import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RegisterPool\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\n/**\r\n * ShaderRegister Cache provides the usage management system for all registers during shading compilation.\r\n */\r\nclass ShaderRegisterCache\r\n{\r\n\tprivate _fragmentTempCache:RegisterPool;\r\n\tprivate _vertexTempCache:RegisterPool;\r\n\tprivate _varyingCache:RegisterPool;\r\n\tprivate _fragmentConstantsCache:RegisterPool;\r\n\tprivate _vertexConstantsCache:RegisterPool;\r\n\tprivate _textureCache:RegisterPool;\r\n\tprivate _vertexAttributesCache:RegisterPool;\r\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\r\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\r\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\r\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\r\n\r\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\r\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\r\n\tprivate _numUsedVertexConstants:number = 0;\r\n\tprivate _numUsedFragmentConstants:number = 0;\r\n\tprivate _numUsedStreams:number = 0;\r\n\tprivate _numUsedTextures:number = 0;\r\n\tprivate _numUsedVaryings:number = 0;\r\n\tprivate _profile:string;\r\n\r\n\t/**\r\n\t * Create a new ShaderRegisterCache object.\r\n\t *\r\n\t * @param profile The compatibility profile used by the renderer.\r\n\t */\r\n\tconstructor(profile:string)\r\n\t{\r\n\t\tthis._profile = profile;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all registers.\r\n\t */\r\n\tpublic reset()\r\n\t{\r\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\r\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\r\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\r\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\r\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\r\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\r\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\r\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\r\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\r\n\t\tthis._numUsedVertexConstants = 0;\r\n\t\tthis._numUsedStreams = 0;\r\n\t\tthis._numUsedTextures = 0;\r\n\t\tthis._numUsedVaryings = 0;\r\n\t\tthis._numUsedFragmentConstants = 0;\r\n\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\r\n\t\t\tthis.getFreeVertexAttribute();\r\n\r\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\r\n\t\t\tthis.getFreeVertexConstant();\r\n\r\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\r\n\t\t\tthis.getFreeVarying();\r\n\r\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\r\n\t\t\tthis.getFreeFragmentConstant();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all resources used.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._fragmentTempCache.dispose();\r\n\t\tthis._vertexTempCache.dispose();\r\n\t\tthis._varyingCache.dispose();\r\n\t\tthis._fragmentConstantsCache.dispose();\r\n\t\tthis._vertexAttributesCache.dispose();\r\n\r\n\t\tthis._fragmentTempCache = null;\r\n\t\tthis._vertexTempCache = null;\r\n\t\tthis._varyingCache = null;\r\n\t\tthis._fragmentConstantsCache = null;\r\n\t\tthis._vertexAttributesCache = null;\r\n\t\tthis._fragmentOutputRegister = null;\r\n\t\tthis._vertexOutputRegister = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\r\n\t * has been called usageCount times again.\r\n\t * @param register The register to mark as used.\r\n\t * @param usageCount The amount of usages to add.\r\n\t */\r\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\r\n\t{\r\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\r\n\t * @param register The register for which to remove a usage.\r\n\t */\r\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\r\n\t{\r\n\t\tthis._fragmentTempCache.removeUsage(register);\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\r\n\t * until removeUsage has been called usageCount times again.\r\n\t * @param register The register to mark as used.\r\n\t * @param usageCount The amount of usages to add.\r\n\t */\r\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\r\n\t{\r\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\r\n\t * @param register The register for which to remove a usage.\r\n\t */\r\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\r\n\t{\r\n\t\tthis._vertexTempCache.removeUsage(register);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\r\n\t * has been called usageCount times again.\r\n\t */\r\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a single component from a fragment temporary register that's still available.\r\n\t */\r\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available varying register\r\n\t */\r\n\tpublic getFreeVarying():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedVaryings;\r\n\t\treturn this._varyingCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available fragment constant register\r\n\t */\r\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedFragmentConstants;\r\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available vertex constant register\r\n\t */\r\n\tpublic getFreeVertexConstant():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedVertexConstants;\r\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an entire vertex temporary register that's still available.\r\n\t */\r\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a single component from a vertex temporary register that's still available.\r\n\t */\r\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available vertex attribute register\r\n\t */\r\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedStreams;\r\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve an available texture register\r\n\t */\r\n\tpublic getFreeTextureReg():ShaderRegisterElement\r\n\t{\r\n\t\t++this._numUsedTextures;\r\n\t\treturn this._textureCache.requestFreeVectorReg();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve vertex constants.\r\n\t */\r\n\tpublic get vertexConstantOffset():number\r\n\t{\r\n\t\treturn this._vertexConstantOffset;\r\n\t}\r\n\r\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\r\n\t{\r\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve vertex attributes.\r\n\t */\r\n\tpublic get vertexAttributesOffset():number\r\n\t{\r\n\t\treturn this._vertexAttributesOffset;\r\n\t}\r\n\r\n\tpublic set vertexAttributesOffset(value:number)\r\n\t{\r\n\t\tthis._vertexAttributesOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve varying registers.\r\n\t */\r\n\tpublic get varyingsOffset():number\r\n\t{\r\n\t\treturn this._varyingsOffset;\r\n\t}\r\n\r\n\tpublic set varyingsOffset(value:number)\r\n\t{\r\n\t\tthis._varyingsOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the start index from which to retrieve fragment constants.\r\n\t */\r\n\tpublic get fragmentConstantOffset():number\r\n\t{\r\n\t\treturn this._fragmentConstantOffset;\r\n\t}\r\n\r\n\tpublic set fragmentConstantOffset(value:number)\r\n\t{\r\n\t\tthis._fragmentConstantOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The fragment output register.\r\n\t */\r\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\r\n\t{\r\n\t\treturn this._fragmentOutputRegister;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used vertex constant registers.\r\n\t */\r\n\tpublic get numUsedVertexConstants():number\r\n\t{\r\n\t\treturn this._numUsedVertexConstants;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used fragment constant registers.\r\n\t */\r\n\tpublic get numUsedFragmentConstants():number\r\n\t{\r\n\t\treturn this._numUsedFragmentConstants;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used vertex streams.\r\n\t */\r\n\tpublic get numUsedStreams():number\r\n\t{\r\n\t\treturn this._numUsedStreams;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used texture slots.\r\n\t */\r\n\tpublic get numUsedTextures():number\r\n\t{\r\n\t\treturn this._numUsedTextures;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of used varying registers.\r\n\t */\r\n\tpublic get numUsedVaryings():number\r\n\t{\r\n\t\treturn this._numUsedVaryings;\r\n\t}\r\n}\r\n\r\nexport = ShaderRegisterCache;","import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\n/**\r\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\r\n */\r\nclass ShaderRegisterData\r\n{\r\n\tpublic normalVarying:ShaderRegisterElement;\r\n\tpublic colorVarying:ShaderRegisterElement\r\n\tpublic tangentVarying:ShaderRegisterElement;\r\n\tpublic bitangentVarying:ShaderRegisterElement;\r\n\tpublic uvVarying:ShaderRegisterElement;\r\n\tpublic secondaryUVVarying:ShaderRegisterElement;\r\n\tpublic viewDirVarying:ShaderRegisterElement;\r\n\tpublic shadowTarget:ShaderRegisterElement;\r\n\tpublic shadedTarget:ShaderRegisterElement;\r\n\tpublic globalPositionVertex:ShaderRegisterElement;\r\n\tpublic globalPositionVarying:ShaderRegisterElement;\r\n    public localPositionVarying:ShaderRegisterElement;\r\n\tpublic localPosition:ShaderRegisterElement;\r\n\tpublic normalInput:ShaderRegisterElement;\r\n\tpublic colorInput:ShaderRegisterElement;\r\n\tpublic tangentInput:ShaderRegisterElement;\r\n\tpublic animatedNormal:ShaderRegisterElement;\r\n\tpublic animatedTangent:ShaderRegisterElement;\r\n\tpublic commons:ShaderRegisterElement;\r\n\tpublic projectionFragment:ShaderRegisterElement;\r\n\tpublic normalFragment:ShaderRegisterElement;\r\n\tpublic viewDirFragment:ShaderRegisterElement;\r\n\tpublic bitangent:ShaderRegisterElement;\r\n\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = ShaderRegisterData;","/**\r\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\r\n */\r\nclass ShaderRegisterElement\r\n{\r\n\tprivate _regName:string;\r\n\tprivate _index:number;\r\n\tprivate _toStr:string;\r\n\r\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\r\n\r\n\tpublic _component:number;\r\n\r\n\t/**\r\n\t * Creates a new ShaderRegisterElement object.\r\n\t *\r\n\t * @param regName The name of the register.\r\n\t * @param index The index of the register.\r\n\t * @param component The register's component, if not the entire register is represented.\r\n\t */\r\n\tconstructor(regName:string, index:number, component:number = -1)\r\n\t{\r\n\t\tthis._component = component;\r\n\t\tthis._regName = regName;\r\n\t\tthis._index = index;\r\n\r\n\t\tthis._toStr = this._regName;\r\n\r\n\t\tif (this._index >= 0)\r\n\t\t\tthis._toStr += this._index;\r\n\r\n\t\tif (component > -1)\r\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the register or the components AGAL string representation.\r\n\t */\r\n\tpublic toString():string\r\n\t{\r\n\t\treturn this._toStr;\r\n\t}\r\n\r\n\t/**\r\n\t * The register's name.\r\n\t */\r\n\tpublic get regName():string\r\n\t{\r\n\t\treturn this._regName;\r\n\t}\r\n\r\n\t/**\r\n\t * The register's index.\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\treturn this._index;\r\n\t}\r\n}\r\n\r\nexport = ShaderRegisterElement;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport SkyboxPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/SkyboxPass\");\r\n\r\n/**\r\n * SkyboxRenderObject forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass SkyboxRenderObject extends RenderObjectBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"skybox\";\r\n\r\n\tprivate _screenPass:SkyboxPass;\r\n\r\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._screenPass = new SkyboxPass(this, renderObjectOwner, renderableClass, this._stage);\r\n\r\n\t\tthis._pAddScreenPass(this._screenPass);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pUpdateRenderObject()\r\n\t{\r\n\t\tsuper._pUpdateRenderObject();\r\n\r\n\t\tthis._pRequiresBlending = (this._renderObjectOwner.blendMode != BlendMode.NORMAL);\r\n\r\n\t\tthis._screenPass.setBlendMode((this._renderObjectOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._renderObjectOwner.blendMode);\r\n\t}\r\n}\r\n\r\nexport = SkyboxRenderObject;","import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass AnimationSetError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = AnimationSetError;","import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\r\n\r\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\r\n\r\n/**\r\n * Dispatched to notify changes in an animation state's state.\r\n */\r\nclass AnimationStateEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\r\n\t */\r\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\r\n\r\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\r\n\r\n\tprivate _animator:AnimatorBase;\r\n\tprivate _animationState:IAnimationState;\r\n\tprivate _animationNode:AnimationNodeBase;\r\n\r\n\t/**\r\n\t * Create a new <code>AnimatonStateEvent</code>\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param animator The animation state object that is the subject of this event.\r\n\t * @param animationNode The animation node inside the animation state from which the event originated.\r\n\t */\r\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._animator = animator;\r\n\t\tthis._animationState = animationState;\r\n\t\tthis._animationNode = animationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * The animator object that is the subject of this event.\r\n\t */\r\n\tpublic get animator():AnimatorBase\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The animation state object that is the subject of this event.\r\n\t */\r\n\tpublic get animationState():IAnimationState\r\n\t{\r\n\t\treturn this._animationState;\r\n\t}\r\n\r\n\t/**\r\n\t * The animation node inside the animation state from which the event originated.\r\n\t */\r\n\tpublic get animationNode():AnimationNodeBase\r\n\t{\r\n\t\treturn this._animationNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\r\n\t}\r\n}\r\n\r\nexport = AnimationStateEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\r\n\r\n/**\r\n * Dispatched to notify changes in an animator's state.\r\n */\r\nclass AnimatorEvent extends Event\r\n{\r\n\t/**\r\n\t * Defines the value of the type property of a start event object.\r\n\t */\r\n\tpublic static START:string = \"start\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a stop event object.\r\n\t */\r\n\tpublic static STOP:string = \"stop\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a cycle complete event object.\r\n\t */\r\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\r\n\r\n\tprivate _animator:AnimatorBase;\r\n\r\n\t/**\r\n\t * Create a new <code>AnimatorEvent</code> object.\r\n\t *\r\n\t * @param type The event type.\r\n\t * @param animator The animator object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, animator:AnimatorBase)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._animator = animator;\r\n\t}\r\n\r\n\tpublic get animator():AnimatorBase\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current event object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new AnimatorEvent(this.type, this._animator);\r\n\t}\r\n}\r\n\r\nexport = AnimatorEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ShadingMethodEvent extends Event\r\n{\r\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\r\n\t\tsuper(type);\r\n\r\n\t}\r\n}\r\n\r\nexport = ShadingMethodEvent;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\r\n\r\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\r\n\r\nclass Filter3DBase\r\n{\r\n\tprivate _tasks:Array<Filter3DTaskBase>;\r\n\tprivate _requireDepthRender:boolean;\r\n\tprivate _textureWidth:number;\r\n\tprivate _textureHeight:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\r\n\t}\r\n\r\n\tpublic get requireDepthRender():boolean\r\n\t{\r\n\t\treturn this._requireDepthRender;\r\n\t}\r\n\r\n\tpublic pAddTask(filter:Filter3DTaskBase)\r\n\t{\r\n\t\tthis._tasks.push(filter);\r\n\r\n\t\tif (this._requireDepthRender == null)\r\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\r\n\t}\r\n\r\n\tpublic get tasks():Filter3DTaskBase[]\r\n\t{\r\n\t\treturn this._tasks;\r\n\t}\r\n\r\n\tpublic getMainInputTexture(stage:Stage):ITexture\r\n\t{\r\n\t\treturn this._tasks[0].getMainInputTexture(stage);\r\n\t}\r\n\r\n\tpublic get textureWidth():number\r\n\t{\r\n\t\treturn this._textureWidth;\r\n\t}\r\n\r\n\tpublic set textureWidth(value:number)\r\n\t{\r\n\t\tthis._textureWidth = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\r\n\t\t\tthis._tasks[i].textureWidth = value;\r\n\t}\r\n\r\n\tpublic get textureHeight():number\r\n\t{\r\n\t\treturn this._textureHeight;\r\n\t}\r\n\r\n\tpublic set textureHeight(value:number)\r\n\t{\r\n\t\tthis._textureHeight = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\r\n\t\t\tthis._tasks[i].textureHeight = value;\r\n\t}\r\n\r\n\t// link up the filters correctly with the next filter\r\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\r\n\t{\r\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\r\n\t\t\tthis._tasks[i].dispose();\r\n\t}\r\n\r\n\tpublic update(stage:Stage, camera:Camera)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Filter3DBase;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\r\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\r\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\r\n\r\nclass Filter3DTaskBase\r\n{\r\n\tprivate _mainInputTexture:ITexture;\r\n\r\n\tprivate _scaledTextureWidth:number = -1;\r\n\tprivate _scaledTextureHeight:number = -1;\r\n\tprivate _textureWidth:number = -1;\r\n\tprivate _textureHeight:number = -1;\r\n\tprivate _textureDimensionsInvalid:boolean = true;\r\n\tprivate _program3DInvalid:boolean = true;\r\n\tprivate _program3D:IProgram;\r\n\tprivate _target:ITexture;\r\n\tprivate _requireDepthRender:boolean;\r\n\tprivate _textureScale:number = 0;\r\n\r\n\tconstructor(requireDepthRender:boolean = false)\r\n\t{\r\n\r\n\t\tthis._requireDepthRender = requireDepthRender;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\r\n\t */\r\n\tpublic get textureScale():number\r\n\t{\r\n\t\treturn this._textureScale;\r\n\t}\r\n\r\n\tpublic set textureScale(value:number)\r\n\t{\r\n\t\tif (this._textureScale == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textureScale = value;\r\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\r\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\r\n\t\tthis._textureDimensionsInvalid = true;\r\n\t}\r\n\r\n\tpublic get target():ITexture\r\n\t{\r\n\t\treturn this._target;\r\n\t}\r\n\r\n\tpublic set target(value:ITexture)\r\n\t{\r\n\t\tthis._target = value;\r\n\t}\r\n\r\n\tpublic get textureWidth():number\r\n\t{\r\n\t\treturn this._textureWidth;\r\n\t}\r\n\r\n\tpublic set textureWidth(value:number)\r\n\t{\r\n\t\tif (this._textureWidth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textureWidth = value;\r\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\r\n\t\tthis._textureDimensionsInvalid = true;\r\n\t}\r\n\r\n\tpublic get textureHeight():number\r\n\t{\r\n\t\treturn this._textureHeight;\r\n\t}\r\n\r\n\tpublic set textureHeight(value:number)\r\n\t{\r\n\t\tif (this._textureHeight == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textureHeight = value;\r\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\r\n\t\tthis._textureDimensionsInvalid = true;\r\n\t}\r\n\r\n\tpublic getMainInputTexture(stage:Stage):ITexture\r\n\t{\r\n\t\tif (this._textureDimensionsInvalid)\r\n\t\t\tthis.pUpdateTextures(stage);\r\n\r\n\t\treturn this._mainInputTexture;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this._mainInputTexture)\r\n\t\t\tthis._mainInputTexture.dispose();\r\n\r\n\t\tif (this._program3D)\r\n\t\t\tthis._program3D.dispose();\r\n\t}\r\n\r\n\tpublic pInvalidateProgram()\r\n\t{\r\n\t\tthis._program3DInvalid = true;\r\n\t}\r\n\r\n\tpublic pUpdateProgram(stage:Stage)\r\n\t{\r\n\t\tif (this._program3D)\r\n\t\t\tthis._program3D.dispose();\r\n\r\n\t\tthis._program3D = stage.context.createProgram();\r\n\r\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\r\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\r\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\r\n\t\tthis._program3DInvalid = false;\r\n\t}\r\n\r\n\tpublic pGetVertexCode():string\r\n\t{\r\n\t\t// TODO: imeplement AGAL <> GLSL\r\n\r\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\r\n\t}\r\n\r\n\tpublic pGetFragmentCode():string\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic pUpdateTextures(stage:Stage)\r\n\t{\r\n\t\tif (this._mainInputTexture)\r\n\t\t\tthis._mainInputTexture.dispose();\r\n\r\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\r\n\r\n\t\tthis._textureDimensionsInvalid = false;\r\n\t}\r\n\r\n\tpublic getProgram(stage:Stage):IProgram\r\n\t{\r\n\t\tif (this._program3DInvalid)\r\n\t\t\tthis.pUpdateProgram(stage);\r\n\r\n\t\treturn this._program3D;\r\n\t}\r\n\r\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\r\n\t{\r\n\t}\r\n\r\n\tpublic deactivate(stage:Stage)\r\n\t{\r\n\t}\r\n\r\n\tpublic get requireDepthRender():boolean\r\n\t{\r\n\t\treturn this._requireDepthRender;\r\n\t}\r\n\r\n}\r\n\r\nexport = Filter3DTaskBase;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapData:BitmapData;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:BitmapTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):BasicMaterial\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapData():BitmapData\r\n\t{\r\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport TextureUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\r\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\r\n\r\nclass RTTBufferManager extends EventDispatcher\r\n{\r\n\tprivate static _instances:Array<RTTBufferManagerVO>;\r\n\r\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\r\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\r\n\r\n\tprivate _indexBuffer:IIndexBuffer;\r\n\tprivate _stage:Stage;\r\n\tprivate _viewWidth:number = -1;\r\n\tprivate _viewHeight:number = -1;\r\n\tprivate _textureWidth:number = -1;\r\n\tprivate _textureHeight:number = -1;\r\n\tprivate _renderToTextureRect:Rectangle;\r\n\tprivate _buffersInvalid:boolean = true;\r\n\r\n\tprivate _textureRatioX:number;\r\n\tprivate _textureRatioY:number;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._renderToTextureRect = new Rectangle();\r\n\r\n\t\tthis._stage = stage;\r\n\r\n\t}\r\n\r\n\tpublic static getInstance(stage:Stage):RTTBufferManager\r\n\t{\r\n\t\tif (!stage)\r\n\t\t\tthrow new Error(\"stage key cannot be null!\");\r\n\r\n\t\tif (RTTBufferManager._instances == null)\r\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\r\n\r\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\r\n\r\n\t\tif (rttBufferManager == null) {\r\n\t\t\trttBufferManager = new RTTBufferManager(stage);\r\n\r\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\r\n\r\n\t\t\tvo.stage3d = stage;\r\n\t\t\tvo.rttbfm = rttBufferManager;\r\n\r\n\t\t\tRTTBufferManager._instances.push(vo);\r\n\t\t}\r\n\r\n\t\treturn rttBufferManager;\r\n\r\n\t}\r\n\r\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\r\n\t{\r\n\r\n\t\tvar l:number = RTTBufferManager._instances.length;\r\n\t\tvar r:RTTBufferManagerVO;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tr = RTTBufferManager._instances[ c ];\r\n\r\n\t\t\tif (r.stage3d === stage)\r\n\t\t\t\treturn r.rttbfm;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate static deleteRTTBufferManager(stage:Stage):void\r\n\t{\r\n\t\tvar l:number = RTTBufferManager._instances.length;\r\n\t\tvar r:RTTBufferManagerVO;\r\n\r\n\t\tfor (var c:number = 0; c < l; c++) {\r\n\t\t\tr = RTTBufferManager._instances[ c ];\r\n\r\n\t\t\tif (r.stage3d === stage) {\r\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get textureRatioX():number\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._textureRatioX;\r\n\t}\r\n\r\n\tpublic get textureRatioY():number\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._textureRatioY;\r\n\t}\r\n\r\n\tpublic get viewWidth():number\r\n\t{\r\n\t\treturn this._viewWidth;\r\n\t}\r\n\r\n\tpublic set viewWidth(value:number)\r\n\t{\r\n\t\tif (value == this._viewWidth)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewWidth = value;\r\n\r\n\t\tthis._buffersInvalid = true;\r\n\r\n\t\tthis._textureWidth = TextureUtils.getBestPowerOf2(this._viewWidth);\r\n\r\n\t\tif (this._textureWidth > this._viewWidth) {\r\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\r\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\r\n\t\t} else {\r\n\t\t\tthis._renderToTextureRect.x = 0;\r\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\r\n\t}\r\n\r\n\tpublic get viewHeight():number\r\n\t{\r\n\t\treturn this._viewHeight;\r\n\t}\r\n\r\n\tpublic set viewHeight(value:number)\r\n\t{\r\n\t\tif (value == this._viewHeight)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewHeight = value;\r\n\r\n\t\tthis._buffersInvalid = true;\r\n\r\n\t\tthis._textureHeight = TextureUtils.getBestPowerOf2(this._viewHeight);\r\n\r\n\t\tif (this._textureHeight > this._viewHeight) {\r\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\r\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\r\n\t\t} else {\r\n\t\t\tthis._renderToTextureRect.y = 0;\r\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\r\n\t}\r\n\r\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._renderToTextureVertexBuffer;\r\n\t}\r\n\r\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._renderToScreenVertexBuffer;\r\n\r\n\t}\r\n\r\n\tpublic get indexBuffer():IIndexBuffer\r\n\t{\r\n\t\treturn this._indexBuffer;\r\n\t}\r\n\r\n\tpublic get renderToTextureRect():Rectangle\r\n\t{\r\n\t\tif (this._buffersInvalid)\r\n\t\t\tthis.updateRTTBuffers();\r\n\r\n\t\treturn this._renderToTextureRect;\r\n\t}\r\n\r\n\tpublic get textureWidth():number\r\n\t{\r\n\t\treturn this._textureWidth;\r\n\t}\r\n\r\n\tpublic get textureHeight():number\r\n\t{\r\n\t\treturn this._textureHeight;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\r\n\r\n\t\tif (this._indexBuffer) {\r\n\t\t\tthis._indexBuffer.dispose();\r\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\r\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\r\n\t\t\tthis._renderToScreenVertexBuffer = null;\r\n\t\t\tthis._renderToTextureVertexBuffer = null;\r\n\t\t\tthis._indexBuffer = null;\r\n\t\t}\r\n\t}\r\n\r\n\t// todo: place all this in a separate model, since it's used all over the place\r\n\t// maybe it even has a place in the core (together with screenRect etc)?\r\n\t// needs to be stored per view of course\r\n\tprivate updateRTTBuffers()\r\n\t{\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tvar textureVerts:number[];\r\n\t\tvar screenVerts:number[];\r\n\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\r\n\t\tif (this._renderToTextureVertexBuffer == null)\r\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\r\n\r\n\t\tif (this._renderToScreenVertexBuffer == null)\r\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\r\n\r\n\t\tif (!this._indexBuffer) {\r\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\r\n\r\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\r\n\t\t}\r\n\r\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\r\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\r\n\r\n\t\tvar u1:number = (1 - x)*.5;\r\n\t\tvar u2:number = (x + 1)*.5;\r\n\t\tvar v1:number = (y + 1)*.5;\r\n\t\tvar v2:number = (1 - y)*.5;\r\n\r\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\r\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\r\n\r\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\r\n\r\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\r\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\r\n\r\n\t\tthis._buffersInvalid = false;\r\n\t}\r\n}\r\n\r\nexport = RTTBufferManager;\r\n\r\nclass RTTBufferManagerVO\r\n{\r\n\tpublic stage3d:Stage;\r\n\r\n\tpublic rttbfm:RTTBufferManager;\r\n}","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n\r\n/**\r\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterialPass extends RenderPassBase\r\n{\r\n\tprivate _diffuseR:number = 1;\r\n\tprivate _diffuseG:number = 1;\r\n\tprivate _diffuseB:number = 1;\r\n\tprivate _diffuseA:number = 1;\r\n\r\n\tprivate _fragmentConstantsIndex:number;\r\n\tprivate _texturesIndex:number;\r\n\r\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shaderObject);\r\n\r\n\t\tif (shaderObject.texture != null)\r\n\t\t\tshaderObject.uvDependencies++;\r\n\r\n    }\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n        var alphaReg:ShaderRegisterElement;\r\n\r\n        if (this.preserveAlpha) {\r\n            alphaReg = regCache.getFreeFragmentSingleTemp();\r\n            regCache.addFragmentTempUsages(alphaReg, 1);\r\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\r\n        }\r\n\r\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\r\n\t\tvar diffuseInputReg:ShaderRegisterElement;\r\n\r\n\t\tif (shaderObject.texture != null) {\r\n\t\t\tdiffuseInputReg = regCache.getFreeTextureReg();\r\n\r\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\r\n\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedReg, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\r\n\r\n\t\t\tif (shaderObject.alphaThreshold > 0) {\r\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\r\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\r\n\r\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\r\n\t\t\t}\r\n\t\t} else if (shaderObject.colorBufferIndex != -1) {\r\n\r\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\r\n\t\t} else {\r\n\t\t\tdiffuseInputReg = regCache.getFreeFragmentConstant();\r\n\r\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\r\n\r\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\r\n\t\t}\r\n\r\n        if (this.preserveAlpha) {\r\n            code += \"mov \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\r\n            regCache.removeFragmentTempUsage(alphaReg);\r\n        }\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tif (this._shader.texture != null) {\r\n\t\t\tthis._stage.activateTexture(this._texturesIndex, this._shader.texture, this._shader.repeatTextures, this._shader.useSmoothTextures, this._shader.useMipmapping);\r\n\r\n\t\t\tif (this._shader.alphaThreshold > 0)\r\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\r\n\t\t} else if (this._shader.colorBufferIndex == -1) {\r\n\t\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\t\tvar data:Array<number> = this._shader.fragmentConstantData;\r\n\t\t\tdata[index] = this._diffuseR;\r\n\t\t\tdata[index + 1] = this._diffuseG;\r\n\t\t\tdata[index + 2] = this._diffuseB;\r\n\t\t\tdata[index + 3] = this._diffuseA;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = BasicMaterialPass;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * DepthRenderObject forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass DepthPass extends RenderPassBase\r\n{\r\n\r\n\tprivate _fragmentConstantsIndex:number;\r\n\tprivate _texturesIndex:number;\r\n\r\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shaderObject);\r\n\r\n\t\tshaderObject.projectionDependencies++;\r\n\r\n\t\tif (shaderObject.alphaThreshold > 0)\r\n\t\t\tshaderObject.uvDependencies++;\r\n\t}\r\n\r\n\r\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tsuper._iInitConstantData(shaderObject);\r\n\r\n\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index] = 1.0;\r\n\t\tdata[index + 1] = 255.0;\r\n\t\tdata[index + 2] = 65025.0;\r\n\t\tdata[index + 3] = 16581375.0;\r\n\t\tdata[index + 4] = 1.0/255.0;\r\n\t\tdata[index + 5] = 1.0/255.0;\r\n\t\tdata[index + 6] = 1.0/255.0;\r\n\t\tdata[index + 7] = 0.0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\r\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\r\n\r\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\r\n\r\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\r\n\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\r\n\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\r\n\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\r\n\r\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\r\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\r\n\r\n\t\tif (shaderObject.texture && shaderObject.alphaThreshold > 0) {\r\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\r\n\r\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\r\n\r\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\r\n\r\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\r\n\t\t\t\"kil \" + albedo + \".w\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\r\n\t\tregisterCache.removeFragmentTempUsage(temp1);\r\n\t\tregisterCache.removeFragmentTempUsage(temp2);\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\r\n\t\tif (this._shader.texture && this._shader.alphaThreshold > 0) {\r\n\t\t\tthis._stage.activateTexture(this._texturesIndex, this._shader.texture, this._shader.repeatTextures, this._shader.useSmoothTextures, this._shader.useMipmapping);\r\n\r\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = DepthPass;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * DistancePass is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\r\n * This is used to render omnidirectional shadow maps.\r\n */\r\nclass DistancePass extends RenderPassBase\r\n{\r\n\tprivate _fragmentConstantsIndex:number;\r\n\tprivate _texturesIndex:number;\r\n\r\n\t/**\r\n\t * Creates a new DistancePass object.\r\n\t *\r\n\t * @param material The material to which this pass belongs.\r\n\t */\r\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the unchanging constant data for this material.\r\n\t */\r\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tsuper._iInitConstantData(shaderObject);\r\n\r\n\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\r\n\t\tdata[index + 4] = 1.0/255.0;\r\n\t\tdata[index + 5] = 1.0/255.0;\r\n\t\tdata[index + 6] = 1.0/255.0;\r\n\t\tdata[index + 7] = 0.0;\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tsuper._iIncludeDependencies(shaderObject);\r\n\r\n\t\tshaderObject.projectionDependencies++;\r\n\t\tshaderObject.viewDirDependencies++;\r\n\r\n\t\tif (shaderObject.alphaThreshold > 0)\r\n\t\t\tshaderObject.uvDependencies++;\r\n\r\n\t\tif (shaderObject.viewDirDependencies > 0)\r\n\t\t\tshaderObject.globalPosDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string;\r\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\r\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant()\r\n\r\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\r\n\r\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\r\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\r\n\r\n\t\t// squared distance to view\r\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\r\n\t\t\t   \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\r\n\t\t\t   \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\r\n\t\t\t   \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\r\n\r\n\t\tif (shaderObject.alphaThreshold > 0) {\r\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\r\n\r\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\r\n\r\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\r\n\r\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\r\n\r\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\r\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\r\n\t\t}\r\n\r\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\r\n\t\tvar f:number = camera.projection.far;\r\n\r\n\t\tf = 1/(2*f*f);\r\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\r\n\t\tvar index:number = this._fragmentConstantsIndex;\r\n\t\tvar data:Array<number> = this._shader.fragmentConstantData;\r\n\t\tdata[index] = 1.0*f;\r\n\t\tdata[index + 1] = 255.0*f;\r\n\t\tdata[index + 2] = 65025.0*f;\r\n\t\tdata[index + 3] = 16581375.0*f;\r\n\r\n\t\tif (this._shader.alphaThreshold > 0) {\r\n\t\t\tthis._stage.activateTexture(this._texturesIndex, this._shader.texture, this._shader.repeatTextures, this._shader.useSmoothTextures, this._shader.useMipmapping);\r\n\r\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = DistancePass;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\r\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\n\r\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport IRenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderPassBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\n\r\n/**\r\n * RenderPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\r\n * a render call per required renderable.\r\n */\r\nclass RenderPassBase extends EventDispatcher implements IRenderPassBase\r\n{\r\n\tprivate _renderObject:RenderObjectBase;\r\n\tpublic _renderObjectOwner:IRenderObjectOwner;\r\n\tpublic _renderableClass:IRenderableClass;\r\n\tpublic _stage:Stage;\r\n\t\r\n\tpublic _shader:ShaderObjectBase;\r\n\r\n\tprivate _preserveAlpha:boolean = true;\r\n\tprivate _forceSeparateMVP:boolean = false;\r\n\r\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\r\n\r\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\r\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\r\n\r\n\tpublic _pEnableBlending:boolean = false;\r\n\r\n\tprivate _writeDepth:boolean = true;\r\n\r\n\tpublic get shader():ShaderObjectBase\r\n\t{\r\n\t\treturn this._shader;\r\n\t}\r\n\r\n\tpublic get animationSet():AnimationSetBase\r\n\t{\r\n\t\treturn <AnimationSetBase> this._renderObjectOwner.animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\r\n\t */\r\n\tpublic get preserveAlpha():boolean\r\n\t{\r\n\t\treturn this._preserveAlpha;\r\n\t}\r\n\r\n\tpublic set preserveAlpha(value:boolean)\r\n\t{\r\n\t\tif (this._preserveAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._preserveAlpha = value;\r\n\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\r\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\r\n\t * projection code.\r\n\t */\r\n\tpublic get forceSeparateMVP():boolean\r\n\t{\r\n\t\treturn this._forceSeparateMVP;\r\n\t}\r\n\r\n\tpublic set forceSeparateMVP(value:boolean)\r\n\t{\r\n\t\tif (this._forceSeparateMVP == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._forceSeparateMVP = value;\r\n\r\n\t\tthis.invalidatePass();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RenderPassBase object.\r\n\t */\r\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._renderObject = renderObject;\r\n\t\tthis._renderObjectOwner = renderObjectOwner;\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Indicate whether this pass should write to the depth buffer or not. Ignored when blending is enabled.\r\n\t */\r\n\tpublic get writeDepth():boolean\r\n\t{\r\n\t\treturn this._writeDepth;\r\n\t}\r\n\r\n\tpublic set writeDepth(value:boolean)\r\n\t{\r\n\t\tthis._writeDepth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The depth compare mode used to render the renderables using this material.\r\n\t *\r\n\t * @see away.stagegl.ContextGLCompareMode\r\n\t */\r\n\tpublic get depthCompareMode():string\r\n\t{\r\n\t\treturn this._depthCompareMode;\r\n\t}\r\n\r\n\tpublic set depthCompareMode(value:string)\r\n\t{\r\n\t\tthis._depthCompareMode = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up any resources used by the current object.\r\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._shader.dispose();\r\n\r\n\t\tthis._shader = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current pass. Before calling renderPass, activatePass needs to be called with the same index.\r\n\t * @param pass The pass used to render the renderable.\r\n\t * @param renderable The IRenderable object to draw.\r\n\t * @param stage The Stage object used for rendering.\r\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\r\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\r\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\r\n\t}\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic setBlendMode(value:string)\r\n\t{\r\n\t\tswitch (value) {\r\n\t\t\tcase BlendMode.NORMAL:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\r\n\t\t\t\tthis._pEnableBlending = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.LAYER:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\r\n\t\t\t\tthis._pEnableBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.MULTIPLY:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\r\n\t\t\t\tthis._pEnableBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.ADD:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\r\n\t\t\t\tthis._pEnableBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase BlendMode.ALPHA:\r\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\r\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\r\n\t\t\t\tthis._pEnableBlending = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\r\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\r\n\t * @param stage The Stage object which is currently used for rendering.\r\n\t * @param camera The camera from which the scene is viewed.\r\n\t * @private\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tthis._stage.context.setDepthTest(( this._writeDepth && !this._pEnableBlending ), this._depthCompareMode);\r\n\r\n\t\tif (this._pEnableBlending)\r\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\r\n\r\n\t\tthis._shader._iActivate(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\r\n\t * @param stage The Stage used for rendering\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iDeactivate()\r\n\t{\r\n\t\tthis._shader._iDeactivate();\r\n\r\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\r\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\r\n\t *\r\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\r\n\t */\r\n\tpublic invalidatePass()\r\n\t{\r\n\t\tthis._shader.invalidateShader();\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tthis._renderObject._iIncludeDependencies(shaderObject);\r\n\t\t\r\n\t\tif (this._forceSeparateMVP)\r\n\t\t\tshaderObject.globalPosDependencies++;\r\n\t}\r\n\r\n\r\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are calculated at all.\r\n\t */\r\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n        //TODO - set back to false\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are calculated in tangent space.\r\n\t */\r\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\r\n\t * dependencies exist.\r\n\t */\r\n\tpublic _pUsesTangentSpace(shaderObject:ShaderObjectBase):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = RenderPassBase;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\n\r\n/**\r\n * SkyboxPass forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass SkyboxPass extends RenderPassBase\r\n{\r\n\tpublic _skybox:Skybox;\r\n\r\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\r\n\r\n\t\tthis._skybox = <Skybox> renderObjectOwner;\r\n\r\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* @inheritDoc\r\n\t*/\r\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\t//var cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\r\n\r\n\t\t//this._texturesIndex = cubeMapReg.index;\r\n\r\n\t\t//ShaderCompilerHelper.getTexCubeSampleCode(sharedRegisters.shadedTarget, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\r\n\r\n\t\tvar mip:string = \",mipnone\";\r\n\r\n\t\tif (shaderObject.useMipmapping)\r\n\t\t\tmip = \",miplinear\";\r\n\r\n\t\treturn \"tex ft0, v0, fs0 <cube,\" + ShaderCompilerHelper.getFormatStringForTexture(this._skybox.cubeMap) + \"linear,clamp\" + mip + \">\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(camera);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\r\n\t\tthis._stage.activateCubeTexture(0, this._skybox.cubeMap, this._shader.useSmoothTextures, this._shader.useMipmapping);\r\n\t}\r\n}\r\n\r\nexport = SkyboxPass;","import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport PickingColliderBase\t\t\t\t= require(\"awayjs-renderergl/lib/pick/PickingColliderBase\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider extends PickingColliderBase implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(stage:Stage, findClosestCollision:boolean = false)\r\n\t{\r\n\t\tsuper(stage);\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indexData:Array<number> = renderable.getIndexData().data;\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = (<MaterialBase> renderable.renderObjectOwner).bothSides;\r\n\r\n\t\tvar positionData:Array<number> = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\r\n\t\tvar positionStride:number = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\r\n\t\tvar positionOffset:number = renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar uvData:Array<number> = renderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\r\n\t\tvar uvStride:number = renderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\r\n\t\tvar uvOffset:number = renderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\r\n\t\tvar numIndices:number = indexData.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = positionOffset + indexData[ index ]*positionStride;\r\n\t\t\ti1 = positionOffset + indexData[ (index + 1) ]*positionStride;\r\n\t\t\ti2 = positionOffset + indexData[ (index + 2) ]*positionStride;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positionData[ i0 ];\r\n\t\t\tp0y = positionData[ (i0 + 1) ];\r\n\t\t\tp0z = positionData[ (i0 + 2) ];\r\n\t\t\tp1x = positionData[ i1 ];\r\n\t\t\tp1y = positionData[ (i1 + 1) ];\r\n\t\t\tp1z = positionData[ (i1 + 2) ];\r\n\t\t\tp2x = positionData[ i2 ];\r\n\t\t\tp2y = positionData[ (i2 + 1) ];\r\n\t\t\tp2z = positionData[ (i2 + 2) ];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*this.rayDirection.x + ny* +this.rayDirection.y + nz*this.rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*this.rayPosition.x + ny*this.rayPosition.y + nz*this.rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = this.rayPosition.x + t*this.rayDirection.x;\r\n\t\t\t\tcy = this.rayPosition.y + t*this.rayDirection.y;\r\n\t\t\t\tcz = this.rayPosition.z + t*this.rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/( Q1Q1*Q2Q2 - Q1Q2*Q1Q2 );\r\n\t\t\t\tv = coeff*( Q2Q2*RQ1 - Q1Q2*RQ2 );\r\n\t\t\t\tw = coeff*( -Q1Q2*RQ1 + Q1Q1*RQ2 );\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._pGetCollisionUV(indexData, uvData, index, v, w, u, uvOffset, uvStride);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;","import Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport BillboardRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\nimport RenderablePoolBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\n\r\n/**\r\n * An abstract base class for all picking collider classes. It should not be instantiated directly.\r\n *\r\n * @class away.pick.PickingColliderBase\r\n */\r\nclass PickingColliderBase\r\n{\r\n\tprivate _billboardRenderablePool:RenderablePoolBase;\r\n\tprivate _subMeshRenderablePool:RenderablePoolBase;\r\n\r\n\tpublic rayPosition:Vector3D;\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\tconstructor(stage:Stage)\r\n\t{\r\n\t\t//TODO\r\n\t\tthis._billboardRenderablePool = RenderablePoolBase.getPool(BillboardRenderable, stage);\r\n\t\tthis._subMeshRenderablePool = RenderablePoolBase.getPool(TriangleSubMeshRenderable, stage);\r\n\t}\r\n\r\n\tpublic _pPetCollisionNormal(indexData:Array<number> /*uint*/, vertexData:Array<number>, triangleIndex:number):Vector3D // PROTECTED\r\n\t{\r\n\t\tvar normal:Vector3D = new Vector3D();\r\n\t\tvar i0:number = indexData[ triangleIndex ]*3;\r\n\t\tvar i1:number = indexData[ triangleIndex + 1 ]*3;\r\n\t\tvar i2:number = indexData[ triangleIndex + 2 ]*3;\r\n\t\tvar p0:Vector3D = new Vector3D(vertexData[ i0 ], vertexData[ i0 + 1 ], vertexData[ i0 + 2 ]);\r\n\t\tvar p1:Vector3D = new Vector3D(vertexData[ i1 ], vertexData[ i1 + 1 ], vertexData[ i1 + 2 ]);\r\n\t\tvar p2:Vector3D = new Vector3D(vertexData[ i2 ], vertexData[ i2 + 1 ], vertexData[ i2 + 2 ]);\r\n\t\tvar side0:Vector3D = p1.subtract(p0);\r\n\t\tvar side1:Vector3D = p2.subtract(p0);\r\n\t\tnormal = side0.crossProduct(side1);\r\n\t\tnormal.normalize();\r\n\t\treturn normal;\r\n\t}\r\n\r\n\tpublic _pGetCollisionUV(indexData:Array<number> /*uint*/, uvData:Array<number>, triangleIndex:number, v:number, w:number, u:number, uvOffset:number, uvStride:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indexData[ triangleIndex ]*uvStride + uvOffset;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\r\n\t\tuIndex = indexData[ triangleIndex + 1 ]*uvStride + uvOffset;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\r\n\t\tuIndex = indexData[ triangleIndex + 2 ]*uvStride + uvOffset;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic setLocalRay(localPosition:Vector3D, localDirection:Vector3D)\r\n\t{\r\n\t\tthis.rayPosition = localPosition;\r\n\t\tthis.rayDirection = localDirection;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tif (this._pTestRenderableCollision(<RenderableBase> this._billboardRenderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\tpickingCollisionVO.renderableOwner = billboard;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param mesh The mesh instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testMeshCollision(mesh:Mesh, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = mesh.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = mesh.subMeshes[i];\r\n\r\n\t\t\tif (this._pTestRenderableCollision(<RenderableBase> this._subMeshRenderablePool.getItem(subMesh), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tpickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pickingCollisionVO.renderableOwner != null;\r\n\t}\r\n}\r\n\r\nexport = PickingColliderBase;","import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\r\nimport BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\r\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\r\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\r\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\r\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\r\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\r\n\r\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\r\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\r\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\r\n * on an entity that has its shaderPickingDetails property set to true.\r\n *\r\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\r\n *\r\n * @see away.entities.Entity#shaderPickingDetails\r\n *\r\n * @class away.pick.ShaderPicker\r\n */\r\nclass ShaderPicker implements IPicker\r\n{\r\n\tprivate _opaqueRenderableHead:RenderableBase;\r\n\tprivate _blendedRenderableHead:RenderableBase;\r\n\r\n\tprivate _stage:Stage;\r\n\tprivate _context:IContextGL;\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _objectProgram:IProgram;\r\n\tprivate _triangleProgram:IProgram;\r\n\tprivate _bitmapData:BitmapData;\r\n\tprivate _viewportData:Array<number>;\r\n\tprivate _boundOffsetScale:Array<number>;\r\n\tprivate _id:Array<number>;\r\n\r\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\r\n\tprivate _interactiveId:number;\r\n\tprivate _hitColor:number;\r\n\tprivate _projX:number;\r\n\tprivate _projY:number;\r\n\r\n\tprivate _hitRenderable:RenderableBase;\r\n\tprivate _hitEntity:IEntity;\r\n\tprivate _localHitPosition:Vector3D = new Vector3D();\r\n\tprivate _hitUV:Point = new Point();\r\n\tprivate _faceIndex:number;\r\n\tprivate _subGeometryIndex:number;\r\n\r\n\tprivate _localHitNormal:Vector3D = new Vector3D();\r\n\r\n\tprivate _rayPos:Vector3D = new Vector3D();\r\n\tprivate _rayDir:Vector3D = new Vector3D();\r\n\tprivate _potentialFound:boolean;\r\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>ShaderPicker</code> object.\r\n\t *\r\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\r\n\t * properties such as uv and normal coordinates.\r\n\t */\r\n\tconstructor(shaderPickingDetails:boolean = false)\r\n\t{\r\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\r\n\r\n\t\tthis._id = new Array<number>(4);\r\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\r\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\r\n\t\tthis._boundOffsetScale[3] = 0;\r\n\t\tthis._boundOffsetScale[7] = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\r\n\r\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\r\n\r\n\t\tif (!this._stage)\r\n\t\t\treturn null;\r\n\r\n\t\tthis._context = <IContextGL> this._stage.context;\r\n\r\n\t\tthis._viewportData[0] = view.width;\r\n\t\tthis._viewportData[1] = view.height;\r\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\r\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\r\n\r\n\t\t// _potentialFound will be set to true if any object is actually rendered\r\n\t\tthis._potentialFound = false;\r\n\r\n\t\t//reset head values\r\n\t\tthis._blendedRenderableHead = null;\r\n\t\tthis._opaqueRenderableHead = null;\r\n\r\n\t\tthis.pDraw(collector, null);\r\n\r\n\t\t// clear buffers\r\n\t\tthis._context.setVertexBufferAt(0, null);\r\n\r\n\t\tif (!this._context || !this._potentialFound)\r\n\t\t\treturn null;\r\n\r\n\t\tif (!this._bitmapData)\r\n\t\t\tthis._bitmapData = new BitmapData(1, 1, false, 0);\r\n\r\n\t\tthis._context.drawToBitmapData(this._bitmapData);\r\n\t\tthis._hitColor = this._bitmapData.getPixel(0, 0);\r\n\r\n\t\tif (!this._hitColor) {\r\n\t\t\tthis._context.present();\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\r\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\r\n\r\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\r\n\t\t\treturn null;\r\n\r\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\r\n\t\tif (this._shaderPickingDetails) {\r\n\t\t\tthis.getHitDetails(view.camera);\r\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\r\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\r\n\t\t\t_collisionVO.uv = this._hitUV;\r\n\t\t\t_collisionVO.index = this._faceIndex;\r\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\r\n\r\n\t\t} else {\r\n\t\t\t_collisionVO.localPosition = null;\r\n\t\t\t_collisionVO.localNormal = null;\r\n\t\t\t_collisionVO.uv = null;\r\n\t\t\t_collisionVO.index = 0;\r\n\t\t\t//_collisionVO.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\treturn _collisionVO;\r\n\t}\r\n\r\n\t//*/\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\r\n\t{\r\n\r\n\t\tvar camera:Camera = entityCollector.camera;\r\n\r\n\t\tthis._context.clear(0, 0, 0, 1);\r\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\r\n\r\n\t\tthis._interactives.length = this._interactiveId = 0;\r\n\r\n\t\tif (!this._objectProgram)\r\n\t\t\tthis.initObjectProgram();\r\n\r\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\r\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\r\n\t\tthis._context.setProgram(this._objectProgram);\r\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\r\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\r\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\r\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t * @param renderables The renderables to draw.\r\n\t * @param camera The camera for which to render.\r\n\t */\r\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\r\n\r\n\t\twhile (renderable) {\r\n\t\t\t// it's possible that the renderable was already removed from the scene\r\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\r\n\t\t\t\trenderable = renderable.next;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis._potentialFound = true;\r\n\r\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.renderObjectOwner).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\r\n\r\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\r\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\r\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\r\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\r\n\r\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix.append(viewProjection);\r\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\r\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\r\n\t\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\r\n\r\n\t\t\trenderable = renderable.next;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate updateRay(camera:Camera)\r\n\t{\r\n\t\tthis._rayPos = camera.scenePosition;\r\n\r\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\r\n\t\tthis._rayDir.normalize();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Program that color-codes objects.\r\n\t */\r\n\tprivate initObjectProgram()\r\n\t{\r\n\t\tvar vertexCode:string;\r\n\t\tvar fragmentCode:string;\r\n\r\n\t\tthis._objectProgram = this._context.createProgram();\r\n\r\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\r\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\r\n\r\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\r\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Program that renders positions.\r\n\t */\r\n\r\n\tprivate initTriangleProgram()\r\n\t{\r\n\t\tvar vertexCode:string;\r\n\t\tvar fragmentCode:string;\r\n\r\n\t\tthis._triangleProgram = this._context.createProgram();\r\n\r\n\t\t// todo: add animation code\r\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\r\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\r\n\r\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\r\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\r\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets more detailed information about the hir position, if required.\r\n\t * @param camera The camera used to view the hit object.\r\n\t */\r\n\tprivate getHitDetails(camera:Camera)\r\n\t{\r\n\t\tthis.getApproximatePosition(camera);\r\n\t\tthis.getPreciseDetails(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a first-guess approximate position about the hit position.\r\n\t *\r\n\t * @param camera The camera used to view the hit object.\r\n\t */\r\n\tprivate getApproximatePosition(camera:Camera)\r\n\t{\r\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\r\n\t\tvar col:number;\r\n\t\tvar scX:number, scY:number, scZ:number;\r\n\t\tvar offsX:number, offsY:number, offsZ:number;\r\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\r\n\t\tlocalViewProjection.append(camera.viewProjection);\r\n\t\tif (!this._triangleProgram) {\r\n\t\t\tthis.initTriangleProgram();\r\n\t\t}\r\n\r\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\r\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\r\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\r\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\r\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\r\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\r\n\r\n\t\tthis._context.setProgram(this._triangleProgram);\r\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\r\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\r\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\r\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\r\n\r\n\t\tthis._stage.activateBuffer(0, this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA), this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(this._hitRenderable.getIndexData()), 0, this._hitRenderable.numTriangles);\r\n\r\n\t\tthis._context.drawToBitmapData(this._bitmapData);\r\n\r\n\t\tcol = this._bitmapData.getPixel(0, 0);\r\n\r\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\r\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\r\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\r\n\t}\r\n\r\n\t/**\r\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\r\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\r\n\t * @param camera The camera used to view the hit object.\r\n\t */\r\n\tprivate getPreciseDetails(camera:Camera)\r\n\t{\r\n\t\tvar len:number = indices.length;\r\n\t\tvar x1:number, y1:number, z1:number;\r\n\t\tvar x2:number, y2:number, z2:number;\r\n\t\tvar x3:number, y3:number, z3:number;\r\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\r\n\t\tvar t1:number, t2:number, t3:number;\r\n\t\tvar v0x:number, v0y:number, v0z:number;\r\n\t\tvar v1x:number, v1y:number, v1z:number;\r\n\t\tvar v2x:number, v2y:number, v2z:number;\r\n\t\tvar ni1:number, ni2:number, ni3:number;\r\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\r\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\r\n\t\tvar s:number, t:number, invDenom:number;\r\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\r\n\t\tvar u:number, v:number;\r\n\t\tvar ui1:number, ui2:number, ui3:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number;\r\n\t\tvar indices:Array<number> = this._hitRenderable.getIndexData().data;\r\n\r\n\t\tvar positions:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\r\n\t\tvar positionStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\r\n\t\tvar positionOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tvar uvs:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\r\n\t\tvar uvStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\r\n\t\tvar uvOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\r\n\r\n\t\tvar normals:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).data;\r\n\t\tvar normalStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).dataPerVertex;\r\n\t\tvar normalOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\tthis.updateRay(camera);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tt1 = positionOffset + indices[i]*positionStride;\r\n\t\t\tt2 = positionOffset + indices[j]*positionStride;\r\n\t\t\tt3 = positionOffset + indices[k]*positionStride;\r\n\t\t\tx1 = positions[t1];\r\n\t\t\ty1 = positions[t1 + 1];\r\n\t\t\tz1 = positions[t1 + 2];\r\n\t\t\tx2 = positions[t2];\r\n\t\t\ty2 = positions[t2 + 1];\r\n\t\t\tz2 = positions[t2 + 2];\r\n\t\t\tx3 = positions[t3];\r\n\t\t\ty3 = positions[t3 + 1];\r\n\t\t\tz3 = positions[t3 + 2];\r\n\r\n\t\t\t// if within bounds\r\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\r\n\r\n\t\t\t\t// calculate barycentric coords for approximated position\r\n\t\t\t\tv0x = x3 - x1;\r\n\t\t\t\tv0y = y3 - y1;\r\n\t\t\t\tv0z = z3 - z1;\r\n\t\t\t\tv1x = x2 - x1;\r\n\t\t\t\tv1y = y2 - y1;\r\n\t\t\t\tv1z = z2 - z1;\r\n\t\t\t\tv2x = x - x1;\r\n\t\t\t\tv2y = y - y1;\r\n\t\t\t\tv2z = z - z1;\r\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\r\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\r\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\r\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\r\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\r\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\r\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\r\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\r\n\r\n\t\t\t\t// if inside the current triangle, fetch details hit information\r\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\r\n\r\n\t\t\t\t\tni1 = normalOffset + indices[i]*normalStride;\r\n\t\t\t\t\tni2 = normalOffset + indices[j]*normalStride;\r\n\t\t\t\t\tni3 = normalOffset + indices[k]*normalStride;\r\n\r\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\r\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\r\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\r\n\r\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\r\n\r\n\t\t\t\t\tn1 /= nLength;\r\n\t\t\t\t\tn2 /= nLength;\r\n\t\t\t\t\tn3 /= nLength;\r\n\r\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\r\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\r\n\r\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\r\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\r\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\r\n\r\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\r\n\t\t\t\t\ts0y = y2 - y1;\r\n\t\t\t\t\ts0z = z2 - z1;\r\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\r\n\t\t\t\t\ts1y = y3 - y1;\r\n\t\t\t\t\ts1z = z3 - z1;\r\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\r\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\r\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\r\n\t\t\t\t\tthis._localHitNormal.x *= nl;\r\n\t\t\t\t\tthis._localHitNormal.y *= nl;\r\n\t\t\t\t\tthis._localHitNormal.z *= nl;\r\n\r\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\r\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\r\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\r\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\r\n\r\n\t\t\t\t\tui1 = uvOffset + indices[i]*uvStride\r\n\t\t\t\t\tui2 = uvOffset + indices[j]*uvStride\r\n\t\t\t\t\tui3 = uvOffset + indices[k]*uvStride\r\n\r\n\t\t\t\t\tu = uvs[ui1];\r\n\t\t\t\t\tv = uvs[ui1 + 1];\r\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\r\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\r\n\r\n\t\t\t\t\tthis._faceIndex = i;\r\n\t\t\t\t\t//TODO add back subGeometryIndex value\r\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti += 3;\r\n\t\t\tj += 3;\r\n\t\t\tk += 3;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\r\n\t * calculating the intersection point.\r\n\t * @param camera The camera used to render the object.\r\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\r\n\t * @param nx The x-coordinate of the face's plane normal.\r\n\t * @param ny The y-coordinate of the face plane normal.\r\n\t * @param nz The z-coordinate of the face plane normal.\r\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\r\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\r\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\r\n\t */\r\n\r\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\r\n\t{\r\n\t\t// calculate screen ray and find exact intersection position with triangle\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar ox:number, oy:number, oz:number;\r\n\t\tvar t:number;\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\r\n\r\n\t\t// unprojected projection point, gives ray dir in cam space\r\n\t\tox = this._rayDir.x;\r\n\t\toy = this._rayDir.y;\r\n\t\toz = this._rayDir.z;\r\n\r\n\t\t// transform ray dir and origin (cam pos) to object space\r\n\t\t//invSceneTransform.copyRawDataTo( raw  );\r\n\t\tinvSceneTransform.copyRawDataTo(raw);\r\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\r\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\r\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\r\n\r\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\r\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\r\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\r\n\r\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\r\n\r\n\t\tthis._localHitPosition.x = ox + rx*t;\r\n\t\tthis._localHitPosition.y = oy + ry*t;\r\n\t\tthis._localHitPosition.z = oz + rz*t;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._bitmapData.dispose();\r\n\t\tif (this._triangleProgram)\r\n\t\t\tthis._triangleProgram.dispose();\r\n\r\n\t\tif (this._objectProgram)\r\n\t\t\tthis._objectProgram.dispose();\r\n\r\n\t\tthis._triangleProgram = null;\r\n\t\tthis._objectProgram = null;\r\n\t\tthis._bitmapData = null;\r\n\t\tthis._hitRenderable = null;\r\n\t\tthis._hitEntity = null;\r\n\t}\r\n}\r\n\r\nexport = ShaderPicker;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass BillboardRenderable extends RenderableBase\r\n{\r\n\tprivate static _materialGeometry:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"billboard\";\r\n\r\n\tpublic static vertexAttributesOffset:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _billboard:Billboard;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param billboard\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, billboard:Billboard, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, billboard, billboard, billboard.material, stage);\r\n\r\n\t\tthis._billboard = billboard;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {away.base.TriangleSubGeometry}\r\n\t */\r\n\tpublic _pGetSubGeometry():SubGeometryBase\r\n\t{\r\n\t\tvar material:MaterialBase = this._billboard.material;\r\n\r\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\r\n\r\n\t\tif (!geometry) {\r\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\r\n\t\t\tgeometry.autoDeriveNormals = false;\r\n\t\t\tgeometry.autoDeriveTangents = false;\r\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\r\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\r\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\r\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\r\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\r\n\t\t} else {\r\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\r\n\t\t}\r\n\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\r\n\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t//get the projection coordinates\r\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\r\n\r\n\t\t//reserving vertex constants for projection matrix\r\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\r\n\r\n\t\tif (shaderObject.projectionDependencies > 0) {\r\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\r\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\r\n\t\t\t\"mov op, \" + temp + \"\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(pass, camera);\r\n\r\n\t\t//buffer the same for all materials, so can set here\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar shader:ShaderObjectBase = pass.shader;\r\n\r\n\t\tif (shader.sceneMatrixIndex >= 0) {\r\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\r\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t} else {\r\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix3D.append(viewProjection);\r\n\r\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t}\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\r\n\r\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n}\r\n\r\nexport = BillboardRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport CurveSubMesh\t\t\t\t    = require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport CurveSubGeometry\t\t    \t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class away.pool.TriangleSubMeshRenderable\r\n */\r\nclass CurveSubMeshRenderable extends RenderableBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"curvesubmesh\";\r\n\r\n\tpublic static vertexAttributesOffset:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic subMesh:CurveSubMesh;\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, subMesh:CurveSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\r\n\r\n\t\tthis.subMesh = subMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {SubGeometryBase}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():CurveSubGeometry\r\n\t{\r\n\t\tvar subGeometry:CurveSubGeometry;\r\n\r\n\t\tif (this.subMesh.animator)\r\n\t\t\tsubGeometry = <CurveSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\r\n\t\telse\r\n\t\t\tsubGeometry = this.subMesh.subGeometry;\r\n\r\n\t\tthis._pVertexDataDirty[CurveSubGeometry.POSITION_DATA] = true;\r\n\r\n\t\tif (subGeometry.curves)\r\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.CURVE_DATA] = true;\r\n\r\n\t\tif (subGeometry.uvs)\r\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.UV_DATA] = true;\r\n\r\n\t\treturn subGeometry;\r\n\t}\r\n\r\n\r\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n        shaderObject.localPosDependencies++;\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t//get the projection coordinates\r\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\r\n\r\n\t\t//reserving vertex constants for projection matrix\r\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\r\n\r\n\r\n\t\tif (shaderObject.projectionDependencies > 0) {\r\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \".xyw, \" + viewMatrixReg + \"\\n\" +\r\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\r\n\t\t\t\"mov op, \" + temp + \"\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"mov v2 va1 \\n\";\r\n\t\t\tcode += \"m44 op, \" + position + \".xyw, \" + viewMatrixReg + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public static _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n    {\r\n        var curve:String = \"v2\";//sharedRegisters.uvVarying //shaderObject.uvTarget;\r\n        var pos:ShaderRegisterElement = sharedRegisters.localPositionVarying;\r\n        var out:ShaderRegisterElement = sharedRegisters.shadedTarget;//registerCache.fragmentOutputRegister.toString();\r\n\r\n        var free:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\r\n        var d:String = free + \".x\";//registerCache.getFreeFragmentConstant().toString();\r\n        var less:String = free + \".y\";//registerCache.getFreeFragmentSingleTemp().toString();\r\n        var half:String = free + \".z\";//registerCache.getFreeFragmentSingleTemp().toString();\r\n\r\n        var code:string = \"\";\r\n        code += \"mov \" + d + \" \" + curve + \".x\\n\";\r\n        code += \"mul \" + d + \" \" + d + \" \" + d+\"\\n\";\r\n        code += \"sub \" + d + \" \" + d + \" \" + curve+\".y\\n\";\r\n\r\n             // code += \"mov \"+ out + \" \" + sharedRegisters.uvVarying+\"\\n\";\r\n\r\n       // code += \"mul \"+ d + \" \" + d + \" \" + less + \"\\n\";\r\n        //code += \"sub \"+ d + \" \" + d + \" \" + pos + \".z \" + \"\\n\";\r\n        code += \"mul \"+ d + \" \" + d + \" \" + pos + \".z \" + \"\\n\";\r\n        code += \"mov \"+ half + \" fc7.x\\n\";\r\n        code += \"slt \"+ less + \" \" + d + \" \" + half + \"\\n\";\r\n        code += \"mul \"+ d + \" \" + d + \" \" + less + \"\\n\";\r\n        code += \"abs \"+ d + \" \" + d + \"\\n\";\r\n       // code += \"kil \" + less + \"\\n\";\r\n      //  code += \"sub \"+ less + \" \" + less + \" \" + pos + \".z \" + \"\\n\";\r\n\r\n        code += \"mov \" + out + \".w \" + less + \"\\n\";\r\n        console.log(code);\r\n        return code;\r\n    }\r\n    private _constants:Array<number> = new Array<number>(0, 0, 0, 0);\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public _iActivate(pass:RenderPassBase, camera:Camera)\r\n    {\r\n        super._iActivate(pass, camera);\r\n\r\n        var context:IContextGL = this._stage.context;\r\n\r\n        context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 7, this._constants, 1);\r\n\r\n    }\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar shader:ShaderObjectBase = pass.shader;\r\n\r\n\t\tif (shader.sceneMatrixIndex >= 0) {\r\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\r\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t} else {\r\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix3D.append(viewProjection);\r\n\r\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t}\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(CurveSubGeometry.POSITION_DATA), this.getVertexOffset(CurveSubGeometry.POSITION_DATA), CurveSubGeometry.POSITION_FORMAT);\r\n        this._stage.activateBuffer(1, this.getVertexData(CurveSubGeometry.CURVE_DATA), this.getVertexOffset(CurveSubGeometry.CURVE_DATA), CurveSubGeometry.CURVE_FORMAT);\r\n\r\n        this._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.TriangleSubMeshRenderable}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new CurveSubMeshRenderable(this._pool, <CurveSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = CurveSubMeshRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class away.pool.LineSubMeshRenderable\r\n */\r\nclass LineSegmentRenderable extends RenderableBase\r\n{\r\n\tprivate static _lineGeometry:Object = new Object();\r\n\r\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\r\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\r\n\r\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\r\n\tprivate _calcMatrix:Matrix3D;\r\n\tprivate _thickness:number = 1.25;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"linesegment\";\r\n\r\n\tpublic static vertexAttributesOffset:number = 3;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _lineSegment:LineSegment;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param dataOffset\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, lineSegment:LineSegment, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, lineSegment, lineSegment, lineSegment.material, stage, level, indexOffset);\r\n\r\n\t\tthis._lineSegment = lineSegment;\r\n\r\n\t\tthis._calcMatrix = new Matrix3D();\r\n\r\n\t\tthis._constants[1] = 1/255;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {base.LineSubGeometry}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():LineSubGeometry\r\n\t{\r\n\t\tvar geometry:LineSubGeometry = LineSegmentRenderable._lineGeometry[this._lineSegment.id] || (LineSegmentRenderable._lineGeometry[this._lineSegment.id] = new LineSubGeometry());\r\n\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\r\n\r\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\r\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\r\n\r\n\t\tvar startPositions:Array<number>;\r\n\t\tvar endPositions:Array<number>;\r\n\t\tvar thickness:Array<number>;\r\n\r\n\t\tif (geometry.indices != null) {\r\n\t\t\tstartPositions = geometry.startPositions;\r\n\t\t\tendPositions = geometry.endPositions;\r\n\t\t\tthickness = geometry.thickness;\r\n\t\t} else {\r\n\t\t\tstartPositions = new Array<number>(3);\r\n\t\t\tendPositions = new Array<number>(3);\r\n\t\t\tthickness = new Array<number>(1);\r\n\t\t}\r\n\r\n\t\tstartPositions[0] = start.x;\r\n\t\tstartPositions[1] = start.y;\r\n\t\tstartPositions[2] = start.z;\r\n\t\tendPositions[0] = end.x;\r\n\t\tendPositions[1] = end.y;\r\n\t\tendPositions[2] = end.z;\r\n\t\tthickness[0] = this._lineSegment.thickness;\r\n\r\n\t\tgeometry.updatePositions(startPositions, endPositions);\r\n\t\tgeometry.updateThickness(thickness);\r\n\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tshaderObject.colorDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic static _iGetVertexCode(shader:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\r\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\r\n\t\t\t\t// test if behind camera near plane\r\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\r\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\r\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\r\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\r\n\r\n\t\t\t\t// p = point on the plane (0,0,-near)\r\n\t\t\t\t// n = plane normal (0,0,-1)\r\n\t\t\t\t// D = Q1 - Q0\r\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\r\n\r\n\t\t\t\t// solve for t where line crosses Camera.near\r\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\r\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\r\n\r\n\t\t\t\t// fix divide by zero for horizontal lines\r\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\r\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\r\n\r\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\r\n\r\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\r\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\r\n\r\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\r\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\r\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\r\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\r\n\r\n\t\t\t\t// calculate side vector for line\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\r\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\r\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\r\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\r\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\r\n\r\n\t\t\t\t// face the side vector properly for the given point\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\r\n\r\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\r\n\t\t\t\t// scale the side vector by that amount\r\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\r\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\r\n\r\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\r\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\r\n\r\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(pass, camera);\r\n\r\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\r\n\r\n\t\t// value to convert distance from camera to model length per pixel width\r\n\t\tthis._constants[2] = camera.projection.near;\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSegmentRenderable.pONE_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSegmentRenderable.pFRONT_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\r\n\r\n\t\t// projection matrix\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\r\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\r\n\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\r\n\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.LineSubMeshRenderable}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new LineSegmentRenderable(this._pool, <LineSegment> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = LineSegmentRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class away.pool.LineSubMeshRenderable\r\n */\r\nclass LineSubMeshRenderable extends RenderableBase\r\n{\r\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\r\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\r\n\r\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\r\n\tprivate _calcMatrix:Matrix3D;\r\n\tprivate _thickness:number = 1.25;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"linesubmesh\";\r\n\r\n\tpublic static vertexAttributesOffset:number = 3;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic subMesh:LineSubMesh;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param dataOffset\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, subMesh:LineSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\r\n\r\n\t\tthis.subMesh = subMesh;\r\n\r\n\t\tthis._calcMatrix = new Matrix3D();\r\n\r\n\t\tthis._constants[1] = 1/255;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {base.LineSubGeometry}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():LineSubGeometry\r\n\t{\r\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\r\n\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\r\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\r\n\r\n\t\tif (subGeometry.thickness)\r\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\r\n\r\n\t\tif (subGeometry.startColors)\r\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\r\n\r\n\t\treturn subGeometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\t\tshaderObject.colorDependencies++;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic static _iGetVertexCode(shader:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\r\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\r\n\t\t\t\t// test if behind camera near plane\r\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\r\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\r\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\r\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\r\n\r\n\t\t\t\t// p = point on the plane (0,0,-near)\r\n\t\t\t\t// n = plane normal (0,0,-1)\r\n\t\t\t\t// D = Q1 - Q0\r\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\r\n\r\n\t\t\t\t// solve for t where line crosses Camera.near\r\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\r\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\r\n\r\n\t\t\t\t// fix divide by zero for horizontal lines\r\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\r\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\r\n\r\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\r\n\r\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\r\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\r\n\r\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\r\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\r\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\r\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\r\n\r\n\t\t\t\t// calculate side vector for line\r\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\r\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\r\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\r\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\r\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\r\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\r\n\r\n\t\t\t\t// face the side vector properly for the given point\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\r\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\r\n\r\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\r\n\t\t\t\t// scale the side vector by that amount\r\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\r\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\r\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\r\n\r\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\r\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\r\n\r\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\r\n\t{\r\n\t\tsuper._iActivate(pass, camera);\r\n\r\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\r\n\r\n\t\t// value to convert distance from camera to model length per pixel width\r\n\t\tthis._constants[2] = camera.projection.near;\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSubMeshRenderable.pONE_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSubMeshRenderable.pFRONT_VECTOR, 1);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\r\n\r\n\t\t// projection matrix\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\r\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\r\n\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\r\n\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.LineSubMeshRenderable}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new LineSubMeshRenderable(this._pool, <LineSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = LineSubMeshRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\r\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\r\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\r\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class RenderableListItem\r\n */\r\nclass RenderableBase implements IRenderable\r\n{\r\n\r\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\r\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\r\n\tprivate _onRenderObjectOwnerUpdatedDelegate:(event:RenderableOwnerEvent) => void;\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryDirty:boolean = true;\r\n\tprivate _indexData:IndexData;\r\n\tprivate _indexDataDirty:boolean = true;\r\n\tprivate _vertexData:Object = new Object();\r\n\tpublic _pVertexDataDirty:Object = new Object();\r\n\tprivate _vertexOffset:Object = new Object();\r\n\r\n\tpublic _level:number;\r\n\tprivate _indexOffset:number;\r\n\tprivate _overflow:RenderableBase;\r\n\tprivate _numTriangles:number;\r\n\tprivate _concatenateArrays:boolean;\r\n\r\n\tpublic JOINT_INDEX_FORMAT:string;\r\n\tpublic JOINT_WEIGHT_FORMAT:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _pool:RenderablePoolBase;\r\n\r\n\tpublic _stage:Stage;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get overflow():RenderableBase\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\treturn this._overflow;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:RenderableBase;\r\n\r\n\tpublic id:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObjectId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOrderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic cascaded:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderSceneTransform:Matrix3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic sourceEntity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObjectOwner:IRenderObjectOwner;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObject:RenderObjectBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getIndexData():IndexData\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\treturn this._indexData;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getVertexData(dataType:string):VertexData\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\tif (this._pVertexDataDirty[dataType])\r\n\t\t\tthis._updateVertexData(dataType);\r\n\r\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getVertexOffset(dataType:string):number\r\n\t{\r\n\t\tif (this._indexDataDirty)\r\n\t\t\tthis._updateIndexData();\r\n\r\n\t\tif (this._pVertexDataDirty[dataType])\r\n\t\t\tthis._updateVertexData(dataType);\r\n\r\n\t\treturn this._vertexOffset[dataType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param sourceEntity\r\n\t * @param renderableOwner\r\n\t * @param subGeometry\r\n\t * @param animationSubGeometry\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, sourceEntity:IEntity, renderableOwner:IRenderableOwner, renderObjectOwner:IRenderObjectOwner, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\r\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\r\n\t\tthis._onRenderObjectOwnerUpdatedDelegate = (event:RenderableOwnerEvent) => this._onRenderObjectOwnerUpdated(event);\r\n\r\n\t\t//store a reference to the pool for later disposal\r\n\t\tthis._pool = pool;\r\n\t\tthis._stage = stage;\r\n\r\n\t\t//reference to level of overflow\r\n\t\tthis._level = level;\r\n\r\n\t\t//reference to the offset on indices (if this is an overflow renderable)\r\n\t\tthis._indexOffset = indexOffset;\r\n\r\n\t\tthis.sourceEntity = sourceEntity;\r\n\r\n\t\tthis.renderableOwner = renderableOwner;\r\n\r\n\t\tthis.renderableOwner.addEventListener(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this._onRenderObjectOwnerUpdatedDelegate)\r\n\r\n\t\tthis.renderObjectOwner = renderObjectOwner;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this.renderableOwner);\r\n\r\n\t\tthis._indexData.dispose();\r\n\t\tthis._indexData = null;\r\n\r\n\t\tfor (var dataType in this._vertexData) {\r\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\r\n\t\t\tthis._vertexData[dataType] = null;\r\n\t\t}\r\n\r\n\t\tif (this._overflow) {\r\n\t\t\tthis._overflow.dispose();\r\n\t\t\tthis._overflow = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic invalidateGeometry()\r\n\t{\r\n\t\tthis._geometryDirty = true;\r\n\r\n\t\t//invalidate indices\r\n\t\tif (this._level == 0)\r\n\t\t\tthis._indexDataDirty = true;\r\n\r\n\t\tif (this._overflow)\r\n\t\t\tthis._overflow.invalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateIndexData()\r\n\t{\r\n\t\tthis._indexDataDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param dataType\r\n\t */\r\n\tpublic invalidateVertexData(dataType:string)\r\n\t{\r\n\t\tthis._pVertexDataDirty[dataType] = true;\r\n\t}\r\n\r\n\tpublic _pGetSubGeometry():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic static _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @param offset\r\n\t * @internal\r\n\t */\r\n\tpublic _iFillIndexData(indexOffset:number)\r\n\t{\r\n\t\tif (this._geometryDirty)\r\n\t\t\tthis._updateGeometry();\r\n\r\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\r\n\r\n\t\tthis._numTriangles = this._indexData.data.length/3;\r\n\r\n\t\tindexOffset = this._indexData.offset;\r\n\r\n\t\t//check if there is more to split\r\n\t\tif (indexOffset < this._subGeometry.indices.length) {\r\n\t\t\tif (!this._overflow)\r\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(indexOffset);\r\n\r\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\r\n\t\t} else if (this._overflow) {\r\n\t\t\tthis._overflow.dispose();\r\n\t\t\tthis._overflow = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\r\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\r\n\t * @param stage The Stage object which is currently used for rendering.\r\n\t * @param camera The camera from which the scene is viewed.\r\n\t * @private\r\n\t */\r\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\r\n\t{\r\n\t\tpass._iActivate(camera);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders an object to the current render target.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tpass._iRender(this, camera, viewProjection);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\r\n\t * @param stage The Stage used for rendering\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iDeactivate(pass:RenderPassBase)\r\n\t{\r\n\t\tpass._iDeactivate();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _updateGeometry()\r\n\t{\r\n\t\tif (this._subGeometry) {\r\n\t\t\tif (this._level == 0)\r\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\r\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._subGeometry = this._pGetSubGeometry();\r\n\r\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\r\n\r\n\t\tif (this._subGeometry) {\r\n\t\t\tif (this._level == 0)\r\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\r\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\t//dispose\r\n//\t\t\tif (this._indexData) {\r\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\r\n//\t\t\t\tthis._indexData = null;\r\n//\t\t\t}\r\n\r\n//\t\t\tfor (var dataType in this._vertexData) {\r\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\r\n//\t\t\t\tthis._vertexData[dataType] = null;\r\n//\t\t\t}\r\n\r\n\t\tthis._geometryDirty = false;\r\n\r\n\t\t//specific vertex data types have to be invalidated in the specific renderable\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _updateIndexData()\r\n\t{\r\n\t\tthis._iFillIndexData(this._indexOffset);\r\n\r\n\t\tthis._indexDataDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param dataType\r\n\t * @private\r\n\t */\r\n\tprivate _updateVertexData(dataType:string)\r\n\t{\r\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\r\n\r\n\t\tif (this._subGeometry.concatenateArrays)\r\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\r\n\r\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\r\n\r\n\t\tthis._pVertexDataDirty[dataType] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\r\n\t{\r\n\t\tthis.invalidateIndexData();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\r\n\t{\r\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\r\n\r\n\t\tthis.invalidateVertexData(event.dataType);\r\n\t}\r\n\r\n\tprivate _onRenderObjectOwnerUpdated(event:RenderableOwnerEvent)\r\n\t{\r\n\t\t//TODO flag unused renderObjects for deletion\r\n\t\tthis.renderObjectOwner = event.renderObjectOwner;\r\n\t}\r\n}\r\n\r\nexport = RenderableBase;","import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\r\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\r\nimport RenderBasicMaterialObject\t= require(\"awayjs-renderergl/lib/compilation/RenderBasicMaterialObject\");\r\nimport SkyboxRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/SkyboxRenderObject\");\r\nimport DepthRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DepthRenderObject\");\r\nimport DistanceRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DistanceRenderObject\");\r\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\r\n\r\n/**\r\n * @class away.pool.RenderablePoolBase\r\n */\r\nclass RenderablePoolBase implements IRenderablePool\r\n{\r\n\tpublic static _pools:Object = new Object();\r\n\r\n\tpublic _stage:Stage;\r\n\tpublic _renderablePool:Object = new Object();\r\n\tpublic _renderableClass:IRenderableClass;\r\n\r\n\tprivate _materialRenderObjectPool:RenderObjectPool;\r\n\tprivate _skyboxRenderObjectPool:RenderObjectPool;\r\n\tprivate _depthRenderObjectPool:RenderObjectPool;\r\n\tprivate _distanceRenderObjectPool:RenderObjectPool;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t */\r\n\tconstructor(renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tthis._renderableClass = renderableClass;\r\n\t\tthis._stage = stage;\r\n\r\n\t\tthis._materialRenderObjectPool = new RenderObjectPool(RenderBasicMaterialObject, this._renderableClass, this._stage);\r\n\t\tthis._skyboxRenderObjectPool = new RenderObjectPool(SkyboxRenderObject, this._renderableClass, this._stage);\r\n\t\tthis._depthRenderObjectPool = new RenderObjectPool(DepthRenderObject, this._renderableClass, this._stage);\r\n\t\tthis._distanceRenderObjectPool = new RenderObjectPool(DistanceRenderObject, this._renderableClass, this._stage);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t * @returns IRenderable\r\n\t */\r\n\tpublic getItem(renderableOwner:IRenderableOwner):RenderableBase\r\n\t{\r\n\t\treturn (this._renderablePool[renderableOwner.id] || (this._renderablePool[renderableOwner.id] = renderableOwner._iAddRenderable(new this._renderableClass(this, renderableOwner, this._stage))))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param material\r\n\t * @param renderable\r\n\t */\r\n\tpublic getMaterialRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn this._materialRenderObjectPool.getItem(renderObjectOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param material\r\n\t * @param renderable\r\n\t */\r\n\tpublic getSkyboxRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn this._skyboxRenderObjectPool.getItem(renderObjectOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param material\r\n\t * @param renderable\r\n\t */\r\n\tpublic getDepthRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn this._depthRenderObjectPool.getItem(renderObjectOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param material\r\n\t * @param renderable\r\n\t */\r\n\tpublic getDistanceRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\r\n\t{\r\n\t\treturn this._distanceRenderObjectPool.getItem(renderObjectOwner);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableOwner\r\n\t */\r\n\tpublic disposeItem(renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\trenderableOwner._iRemoveRenderable(this._renderablePool[renderableOwner.id]);\r\n\r\n\t\tthis._renderablePool[renderableOwner.id] = null;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tfor (var id in this._renderablePool)\r\n\t\t\tthis._renderablePool[id].dispose();\r\n\r\n\t\tRenderablePoolBase.disposePool(this._renderableClass, this._stage);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t * @returns RenderablePoolBase\r\n\t */\r\n\tpublic static getPool(renderableClass:IRenderableClass, stage:Stage):RenderablePoolBase\r\n\t{\r\n\t\tvar pools:Object = (RenderablePoolBase._pools[stage.stageIndex] || (RenderablePoolBase._pools[stage.stageIndex] = new Object()));\r\n\r\n\t\treturn (pools[renderableClass.id] || (pools[renderableClass.id] = new RenderablePoolBase(renderableClass, stage)));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param renderableClass\r\n\t */\r\n\tpublic static disposePool(renderableClass:IRenderableClass, stage:Stage)\r\n\t{\r\n\t\tvar pools:Object = RenderablePoolBase._pools[stage.stageIndex];\r\n\r\n\t\tif (pools == undefined)\r\n\t\t\treturn;\r\n\r\n\t\tif (pools[renderableClass.id])\r\n\t\t\tpools[renderableClass.id] = undefined;\r\n\t}\r\n}\r\n\r\nexport = RenderablePoolBase;","\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\r\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSegmentRenderable\");\r\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\r\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\r\nimport CurveSubMeshRenderable\t    = require(\"awayjs-renderergl/lib/pool/CurveSubMeshRenderable\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\r\n\r\n/**\r\n * RendererPoolBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererPoolBase\r\n */\r\nclass RendererPoolBase implements IRendererPool\r\n{\r\n\tpublic _billboardRenderablePool:RenderablePoolBase;\r\n\tpublic _lineSegmentRenderablePool:RenderablePoolBase;\r\n\tpublic _triangleSubMeshRenderablePool:RenderablePoolBase;\r\n\tpublic _lineSubMeshRenderablePool:RenderablePoolBase;\r\n    public _curveSubMeshRenderablePool:RenderablePoolBase;\r\n\r\n\tpublic _pStage:Stage;\r\n\r\n\r\n\tprivate _renderer:RendererBase;\r\n\t\r\n\t/**\r\n\t * Creates a new RendererPoolBase object.\r\n\t */\r\n\tconstructor(renderer:RendererBase)\r\n\t{\r\n\t\tthis._renderer = renderer;\r\n\t}\r\n\r\n\t/**\r\n\t * The Stage that will provide the ContextGL used for rendering.\r\n\t */\r\n\tpublic get stage():Stage\r\n\t{\r\n\t\treturn this._pStage;\r\n\t}\r\n\r\n\tpublic set stage(value:Stage)\r\n\t{\r\n\t\tif (this._pStage == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pStage)\r\n\t\t\tthis.dispose();\r\n\r\n\t\tthis._pStage = value;\r\n\r\n\t\tif (this._pStage)\r\n\t\t\tthis._pUpdatePool();\r\n\t}\r\n\r\n\tpublic _pUpdatePool()\r\n\t{\r\n\t\tthis._billboardRenderablePool = RenderablePoolBase.getPool(BillboardRenderable, this._pStage);\r\n\t\tthis._lineSegmentRenderablePool = RenderablePoolBase.getPool(LineSegmentRenderable, this._pStage);\r\n\t\tthis._triangleSubMeshRenderablePool = RenderablePoolBase.getPool(TriangleSubMeshRenderable, this._pStage);\r\n\t\tthis._lineSubMeshRenderablePool = RenderablePoolBase.getPool(LineSubMeshRenderable, this._pStage);\r\n        this._curveSubMeshRenderablePool = RenderablePoolBase.getPool(CurveSubMeshRenderable, this._pStage);\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererPoolBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._billboardRenderablePool.dispose();\r\n\t\tthis._billboardRenderablePool = null;\r\n\r\n\t\tthis._lineSegmentRenderablePool.dispose();\r\n\t\tthis._lineSegmentRenderablePool = null;\r\n\r\n\t\tthis._triangleSubMeshRenderablePool.dispose();\r\n\t\tthis._triangleSubMeshRenderablePool = null;\r\n\r\n\t\tthis._lineSubMeshRenderablePool.dispose();\r\n\t\tthis._lineSubMeshRenderablePool = null;\r\n\r\n        this._curveSubMeshRenderablePool.dispose();\r\n        this._curveSubMeshRenderablePool = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param billboard\r\n\t * @protected\r\n\t */\r\n\tpublic applyBillboard(billboard:Billboard)\r\n\t{\r\n\t\tthis._renderer.applyRenderable(this._billboardRenderablePool.getItem(billboard));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param lineSubMesh\r\n\t */\r\n\tpublic applyLineSegment(lineSegment:LineSegment)\r\n\t{\r\n\t\tthis._renderer.applyRenderable(this._lineSegmentRenderablePool.getItem(lineSegment));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param triangleSubMesh\r\n\t */\r\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\r\n\t{\r\n\t\tthis._renderer.applyRenderable(this._triangleSubMeshRenderablePool.getItem(triangleSubMesh));\r\n\t}\r\n    /**\r\n     *\r\n     * @param curveSubMesh\r\n     */\r\n    public applyCurveSubMesh(curveSubMesh:CurveSubMesh)\r\n    {\r\n        this._renderer.applyRenderable(this._curveSubMeshRenderablePool.getItem(curveSubMesh));\r\n    }\r\n\t/**\r\n\t *\r\n\t * @param lineSubMesh\r\n\t */\r\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\r\n\t{\r\n\t\tthis._renderer.applyRenderable(this._lineSubMeshRenderablePool.getItem(lineSubMesh));\r\n\t}\r\n}\r\n\r\nexport = RendererPoolBase;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\r\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\r\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class away.pool.SkyboxRenderable\r\n */\r\nclass SkyboxRenderable extends RenderableBase\r\n{\r\n\tprivate _vertexArray:Array<number>;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"skybox\";\r\n\r\n\tpublic static vertexAttributesOffset:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate static _geometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param skybox\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, skybox:Skybox, stage:Stage)\r\n\t{\r\n\t\tsuper(pool, skybox, skybox, skybox, stage);\r\n\r\n\t\tthis._vertexArray = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @returns {away.base.TriangleSubGeometry}\r\n\t * @private\r\n\t */\r\n\tpublic _pGetSubGeometry():TriangleSubGeometry\r\n\t{\r\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\r\n\r\n\t\tif (!geometry) {\r\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\r\n\t\t\tgeometry.autoDeriveNormals = false;\r\n\t\t\tgeometry.autoDeriveTangents = false;\r\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\r\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\r\n\t\t}\r\n\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\r\n\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\treturn \"mul vt0, va0, vc5\\n\" +\r\n\t\t\t\"add vt0, vt0, vc4\\n\" +\r\n\t\t\t\"m44 op, vt0, vc0\\n\" +\r\n\t\t\t\"mov v0, va0\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tvar pos:Vector3D = camera.scenePosition;\r\n\t\tthis._vertexArray[0] = pos.x;\r\n\t\tthis._vertexArray[1] = pos.y;\r\n\t\tthis._vertexArray[2] = pos.z;\r\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\r\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n}\r\n\r\nexport = SkyboxRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\r\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\r\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\r\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\r\n\r\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\r\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\r\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\r\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\r\n\r\n/**\r\n * @class away.pool.TriangleSubMeshRenderable\r\n */\r\nclass TriangleSubMeshRenderable extends RenderableBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static id:string = \"trianglesubmesh\";\r\n\r\n\tpublic static vertexAttributesOffset:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic subMesh:TriangleSubMesh;\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param subMesh\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t */\r\n\tconstructor(pool:RenderablePoolBase, subMesh:TriangleSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\r\n\t{\r\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\r\n\r\n\t\tthis.subMesh = subMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {SubGeometryBase}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetSubGeometry():TriangleSubGeometry\r\n\t{\r\n\t\tvar subGeometry:TriangleSubGeometry;\r\n\r\n\t\tif (this.subMesh.animator)\r\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\r\n\t\telse\r\n\t\t\tsubGeometry = this.subMesh.subGeometry;\r\n\r\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\r\n\r\n\t\tif (subGeometry.vertexNormals)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\r\n\r\n\t\tif (subGeometry.vertexTangents)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\r\n\r\n\t\tif (subGeometry.uvs)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\r\n\r\n\t\tif (subGeometry.secondaryUVs)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\r\n\r\n\t\tif (subGeometry.jointIndices)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\r\n\r\n\t\tif (subGeometry.jointWeights)\r\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\r\n\r\n\t\tswitch(subGeometry.jointsPerVertex) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\treturn subGeometry;\r\n\t}\r\n\r\n\r\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\r\n\t{\r\n\t\tvar code:string = \"\";\r\n\r\n\t\t//get the projection coordinates\r\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\r\n\r\n\t\t//reserving vertex constants for projection matrix\r\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tregisterCache.getFreeVertexConstant();\r\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\r\n\r\n\t\tif (shaderObject.projectionDependencies > 0) {\r\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\r\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\r\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\r\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\r\n\t\t\t\"mov op, \" + temp + \"\\n\";\r\n\t\t} else {\r\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\r\n\t{\r\n\t\tsuper._iRender(pass, camera, viewProjection);\r\n\r\n\t\tvar shader:ShaderObjectBase = pass.shader;\r\n\r\n\t\tif (shader.sceneMatrixIndex >= 0) {\r\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\r\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t} else {\r\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\r\n\r\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\r\n\t\t\tmatrix3D.append(viewProjection);\r\n\r\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\r\n\t\t}\r\n\r\n\t\tvar context:IContextGL = this._stage.context;\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\r\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\r\n\r\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\r\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param pool\r\n\t * @param renderableOwner\r\n\t * @param level\r\n\t * @param indexOffset\r\n\t * @returns {away.pool.TriangleSubMeshRenderable}\r\n\t * @protected\r\n\t */\r\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\r\n\t{\r\n\t\treturn new TriangleSubMeshRenderable(this._pool, <TriangleSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMeshRenderable;","import Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\n\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\r\n */\r\nclass Merge\r\n{\r\n\r\n\t//private const LIMIT:uint = 196605;\r\n\tprivate _objectSpace:boolean;\r\n\tprivate _keepMaterial:boolean;\r\n\tprivate _disposeSources:boolean;\r\n\tprivate _geomVOs:Array<GeometryVO>;\r\n\tprivate _toDispose:Array<Mesh>;\r\n\r\n\t/**\r\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\r\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\r\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\r\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\r\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\r\n\t */\r\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\r\n\t{\r\n\t\tthis._keepMaterial = keepMaterial;\r\n\t\tthis._disposeSources = disposeSources;\r\n\t\tthis._objectSpace = objectSpace;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\r\n\t */\r\n\tpublic set disposeSources(b:boolean)\r\n\t{\r\n\t\tthis._disposeSources = b;\r\n\t}\r\n\r\n\tpublic get disposeSources():boolean\r\n\t{\r\n\t\treturn this._disposeSources;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\r\n\t */\r\n\tpublic set keepMaterial(b:boolean)\r\n\t{\r\n\t\tthis._keepMaterial = b;\r\n\t}\r\n\r\n\tpublic get keepMaterial():boolean\r\n\t{\r\n\t\treturn this._keepMaterial;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\r\n\t */\r\n\tpublic set objectSpace(b:boolean)\r\n\t{\r\n\t\tthis._objectSpace = b;\r\n\t}\r\n\r\n\tpublic get objectSpace():boolean\r\n\t{\r\n\t\treturn this._objectSpace;\r\n\t}\r\n\r\n\t/**\r\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\r\n\t *\r\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\r\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\r\n\t *\r\n\t * @return The merged Mesh instance.\r\n\t */\r\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\t//collect container meshes\r\n\t\tthis.parseContainer(receiver, objectContainer);\r\n\r\n\t\t//collect receiver\r\n\t\tthis.collect(receiver, false);\r\n\r\n\t\t//merge to receiver\r\n\t\tthis.merge(receiver, this._disposeSources);\r\n\t}\r\n\r\n\t/**\r\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\r\n\t *\r\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\r\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\r\n\t */\r\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\tif (!meshes.length)\r\n\t\t\treturn;\r\n\r\n\t\t//collect meshes in vector\r\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\r\n\t\t\tif (meshes[i] != receiver)\r\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\r\n\r\n\t\t//collect receiver\r\n\t\tthis.collect(receiver, false);\r\n\r\n\t\t//merge to receiver\r\n\t\tthis.merge(receiver, this._disposeSources);\r\n\t}\r\n\r\n\t/**\r\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\r\n\t *\r\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\r\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\r\n\t */\r\n\tpublic apply(receiver:Mesh, mesh:Mesh)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\t//collect mesh\r\n\t\tthis.collect(mesh, this._disposeSources);\r\n\r\n\t\t//collect receiver\r\n\t\tthis.collect(receiver, false);\r\n\r\n\t\t//merge to receiver\r\n\t\tthis.merge(receiver, this._disposeSources);\r\n\t}\r\n\r\n\tprivate reset()\r\n\t{\r\n\t\tthis._toDispose  = new Array<Mesh>();\r\n\t\tthis._geomVOs = new Array<GeometryVO>();\r\n\t}\r\n\r\n\tprivate merge(destMesh:Mesh, dispose:boolean)\r\n\t{\r\n\t\tvar i:number /*uint*/;\r\n\t\tvar subIdx:number /*uint*/;\r\n\t\tvar oldGeom:Geometry;\r\n\t\tvar destGeom:Geometry;\r\n\t\tvar useSubMaterials:boolean;\r\n\r\n\t\toldGeom = destMesh.geometry;\r\n\t\tdestGeom = destMesh.geometry = new Geometry();\r\n\t\tsubIdx = destMesh.subMeshes.length;\r\n\r\n\t\t// Only apply materials directly to sub-meshes if necessary,\r\n\t\t// i.e. if there is more than one material available.\r\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\r\n\r\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\r\n\t\t\tvar s:number /*uint*/;\r\n\t\t\tvar data:GeometryVO;\r\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\tsub.autoDeriveNormals = false;\r\n\t\t\tsub.autoDeriveTangents = false;\r\n\r\n\t\t\tdata = this._geomVOs[i];\r\n\t\t\tsub.updateIndices(data.indices);\r\n\t\t\tsub.updatePositions(data.vertices);\r\n\t\t\tsub.updateVertexNormals(data.normals);\r\n\t\t\tsub.updateVertexTangents(data.tangents);\r\n\t\t\tsub.updateUVs(data.uvs);\r\n\r\n\t\t\tdestGeom.addSubGeometry(sub);\r\n\r\n\t\t\tif (this._keepMaterial && useSubMaterials)\r\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\r\n\t\t}\r\n\r\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\r\n\t\t\tdestMesh.material = this._geomVOs[0].material;\r\n\r\n\t\tif (dispose) {\r\n\t\t\tvar m:Mesh;\r\n\t\t\tvar len:number = this._toDispose.length;\r\n\t\t\tfor (var i:number; i < len; i++) {\r\n\t\t\t\tm = this._toDispose[i];\r\n\t\t\t\tm.geometry.dispose();\r\n\t\t\t\tm.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t//dispose of the original receiver geometry\r\n\t\t\toldGeom.dispose();\r\n\t\t}\r\n\r\n\t\tthis._toDispose = null;\r\n\t}\r\n\r\n\tprivate collect(mesh:Mesh, dispose:boolean)\r\n\t{\r\n\t\tif (mesh.geometry) {\r\n\t\t\tvar subIdx:number /*uint*/;\r\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\r\n\t\t\tvar calc:number /*uint*/;\r\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\r\n\t\t\t\tvar i:number /*uint*/;\r\n\t\t\t\tvar len:number /*uint*/;\r\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\r\n\t\t\t\tvar indexOffset:number /*uint*/;\r\n\t\t\t\tvar subGeom:TriangleSubGeometry;\r\n\t\t\t\tvar vo:GeometryVO;\r\n\t\t\t\tvar vertices:Array<number>;\r\n\t\t\t\tvar normals:Array<number>;\r\n\t\t\t\tvar tangents:Array<number>;\r\n\t\t\t\tvar pd:Array<number>, nd:Array<number>, td:Array<number>, ud:Array<number>;\r\n\r\n\t\t\t\tsubGeom = subGeometries[subIdx];\r\n\t\t\t\tpd = subGeom.positions;\r\n\t\t\t\tnd = subGeom.vertexNormals;\r\n\t\t\t\ttd = subGeom.vertexTangents;\r\n\t\t\t\tud = subGeom.uvs;\r\n\r\n\t\t\t\t// Get (or create) a VO for this material\r\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\r\n\r\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\r\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\r\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\r\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\r\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\r\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\r\n\r\n\t\t\t\t// Copy over vertex attributes\r\n\t\t\t\tvIdx = vertices.length;\r\n\t\t\t\tnIdx = normals.length;\r\n\t\t\t\ttIdx = tangents.length;\r\n\t\t\t\tuIdx = vo.uvs.length;\r\n\t\t\t\tlen = subGeom.numVertices;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcalc = i*3;\r\n\r\n\t\t\t\t\t// Position\r\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\r\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\r\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\r\n\r\n\t\t\t\t\t// Normal\r\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\r\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\r\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\r\n\r\n\t\t\t\t\t// Tangent\r\n\t\t\t\t\ttangents[tIdx++] = td[calc];\r\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\r\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\r\n\r\n\t\t\t\t\t// UV\r\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\r\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy over triangle indices\r\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\r\n\t\t\t\tiIdx = vo.indices.length;\r\n\t\t\t\tlen = subGeom.numTriangles;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcalc = i*3;\r\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc] + indexOffset;\r\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 1] + indexOffset;\r\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 2] + indexOffset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._objectSpace) {\r\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\r\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\r\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\r\n\r\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\r\n\t\t\t\t\tvIdx = vo.vertices.length;\r\n\t\t\t\t\tnIdx = vo.normals.length;\r\n\t\t\t\t\ttIdx = vo.tangents.length;\r\n\t\t\t\t\tlen = vertices.length;\r\n\t\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\r\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\r\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (dispose)\r\n\t\t\t\tthis._toDispose.push(mesh);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\r\n\t{\r\n\t\tvar data:GeometryVO;\r\n\r\n\t\tif (this._keepMaterial) {\r\n\t\t\tvar i:number /*uint*/;\r\n\t\t\tvar len:number /*uint*/;\r\n\r\n\t\t\tlen = this._geomVOs.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tif (this._geomVOs[i].material == material) {\r\n\t\t\t\t\tdata = this._geomVOs[i];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (this._geomVOs.length) {\r\n\t\t\t// If materials are not to be kept, all data can be\r\n\t\t\t// put into a single VO, so return that one.\r\n\t\t\tdata = this._geomVOs[0];\r\n\t\t}\r\n\r\n\t\t// No data (for this material) found, create new.\r\n\t\tif (!data) {\r\n\t\t\tdata = new GeometryVO();\r\n\t\t\tdata.vertices = new Array<number>();\r\n\t\t\tdata.normals = new Array<number>();\r\n\t\t\tdata.tangents = new Array<number>();\r\n\t\t\tdata.uvs = new Array<number>();\r\n\t\t\tdata.indices = new Array<number /*uint*/>();\r\n\t\t\tdata.material = material;\r\n\r\n\t\t\tthis._geomVOs.push(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\r\n\t{\r\n\t\tvar child:DisplayObjectContainer;\r\n\t\tvar i:number /*uint*/;\r\n\r\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\r\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\r\n\r\n\t\tfor (i = 0; i < object.numChildren; ++i) {\r\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\r\n\t\t\tthis.parseContainer(receiver, child);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Merge;\r\n\r\nclass GeometryVO\r\n{\r\n\tpublic uvs:Array<number>;\r\n\tpublic vertices:Array<number>;\r\n\tpublic normals:Array<number>;\r\n\tpublic tangents:Array<number>;\r\n\tpublic indices:Array<number /*uint*/>;\r\n\tpublic material:MaterialBase;\r\n}\r\n","import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleGeometryTransform\r\n{\r\n\tprivate _defaultVertexTransform:Matrix3D;\r\n\tprivate _defaultInvVertexTransform:Matrix3D;\r\n\tprivate _defaultUVTransform:Matrix;\r\n\r\n\tpublic set vertexTransform(value:Matrix3D)\r\n\t{\r\n\t\tthis._defaultVertexTransform = value;\r\n\t\tthis._defaultInvVertexTransform = value.clone();\r\n\t\tthis._defaultInvVertexTransform.invert();\r\n\t\tthis._defaultInvVertexTransform.transpose();\r\n\t}\r\n\r\n\tpublic set UVTransform(value:Matrix)\r\n\t{\r\n\t\tthis._defaultUVTransform = value;\r\n\t}\r\n\r\n\tpublic get UVTransform():Matrix\r\n\t{\r\n\t\treturn this._defaultUVTransform;\r\n\t}\r\n\r\n\tpublic get vertexTransform():Matrix3D\r\n\t{\r\n\t\treturn this._defaultVertexTransform;\r\n\t}\r\n\r\n\tpublic get invVertexTransform():Matrix3D\r\n\t{\r\n\t\treturn this._defaultInvVertexTransform;\r\n\t}\r\n}\r\n\r\nexport = ParticleGeometryTransform;","import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\r\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\r\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\r\n\r\n/**\r\n * ...\r\n */\r\nclass ParticleGeometryHelper\r\n{\r\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\r\n\r\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\r\n\t{\r\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\r\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\r\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\r\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\r\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\r\n\t\tvar numParticles:number /*uint*/ = geometries.length;\r\n\r\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\r\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\r\n\t\tvar numSubGeometries:number /*uint*/;\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar vertexCounter:number /*uint*/;\r\n\t\tvar subGeometry:TriangleSubGeometry;\r\n\t\tvar i:number /*int*/;\r\n\t\tvar j:number /*int*/;\r\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\r\n\r\n\t\tvar tempVertex:Vector3D = new Vector3D;\r\n\t\tvar tempNormal:Vector3D = new Vector3D;\r\n\t\tvar tempTangents:Vector3D = new Vector3D;\r\n\t\tvar tempUV:Point = new Point;\r\n\r\n\t\tfor (i = 0; i < numParticles; i++) {\r\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\r\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\r\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\r\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\r\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\r\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\r\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\r\n\t\t\t\t\tpositionsVector.push(new Array<number>());\r\n\t\t\t\t\tnormalsVector.push(new Array<number>());\r\n\t\t\t\t\ttangentsVector.push(new Array<number>());\r\n\t\t\t\t\tuvsVector.push(new Array<number>());\r\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\r\n\t\t\t\t\tvertexCounters.push(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\r\n\r\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\r\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\r\n\t\t\t\t\t//update submap and add new subgeom vectors\r\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\r\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\r\n\t\t\t\t\tpositionsVector.push(new Array<number>());\r\n\t\t\t\t\tnormalsVector.push(new Array<number>());\r\n\t\t\t\t\ttangentsVector.push(new Array<number>());\r\n\t\t\t\t\tuvsVector.push(new Array<number>());\r\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\r\n\t\t\t\t\tvertexCounters.push(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tj = sub2SubMap[srcIndex];\r\n\r\n\t\t\t\t//select the correct vector\r\n\t\t\t\tindices = indicesVector[j];\r\n\t\t\t\tpositions = positionsVector[j];\r\n\t\t\t\tnormals = normalsVector[j];\r\n\t\t\t\ttangents = tangentsVector[j];\r\n\t\t\t\tuvs = uvsVector[j];\r\n\t\t\t\tvertexCounter = vertexCounters[j];\r\n\t\t\t\tsubGeometry = subGeometries[j];\r\n\r\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\r\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\r\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\r\n\t\t\t\tparticleData.particleIndex = i;\r\n\t\t\t\tparticleData.subGeometry = subGeometry;\r\n\t\t\t\tparticles.push(particleData);\r\n\r\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\r\n\r\n\t\t\t\tvar k:number /*int*/;\r\n\t\t\t\tvar tempLen:number /*int*/;\r\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\r\n\t\t\t\tvar product:number /*uint*/;\r\n\t\t\t\tvar sourcePositions:Array<number>;\r\n\t\t\t\tvar sourceNormals:Array<number>;\r\n\t\t\t\tvar sourceTangents:Array<number>;\r\n\t\t\t\tvar sourceUVs:Array<number>;\r\n\r\n\t\t\t\tif (compact) {\r\n\t\t\t\t\ttempLen = compact.numVertices;\r\n\t\t\t\t\tcompact.numTriangles;\r\n\t\t\t\t\tsourcePositions = compact.positions;\r\n\t\t\t\t\tsourceNormals = compact.vertexNormals;\r\n\t\t\t\t\tsourceTangents = compact.vertexTangents;\r\n\t\t\t\t\tsourceUVs = compact.uvs;\r\n\r\n\t\t\t\t\tif (transforms) {\r\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\r\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\r\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\r\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\r\n\r\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\r\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\r\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\r\n\t\t\t\t\t\t\t * 9 - 10: U V\r\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\r\n\t\t\t\t\t\t\tproduct = k*3;\r\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\r\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\r\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\r\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\r\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\r\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\r\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\r\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\r\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\r\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\r\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\r\n\t\t\t\t\t\t\tif (vertexTransform) {\r\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\r\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\r\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (UVTransform)\r\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\r\n\t\t\t\t\t\t\t//this is faster than that only push one data\r\n\t\t\t\t\t\t\tsourcePositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\r\n\t\t\t\t\t\t\tsourceNormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\r\n\t\t\t\t\t\t\tsourceTangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\r\n\t\t\t\t\t\t\tsourceUVs.push(tempUV.x, tempUV.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\r\n\t\t\t\t\t\t\tproduct = k*3;\r\n\t\t\t\t\t\t\t//this is faster than that only push one data\r\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\r\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\r\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\r\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Todo\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sourceIndices:Array<number> /*uint*/ = sourceSubGeometry.indices;\r\n\t\t\t\ttempLen = sourceSubGeometry.numTriangles;\r\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\r\n\t\t\t\t\tproduct = k*3;\r\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\r\n\t\tparticleGeometry.particles = particles;\r\n\t\tparticleGeometry.numParticles = numParticles;\r\n\r\n\t\tnumParticles = subGeometries.length;\r\n\t\tfor (i = 0; i < numParticles; i++) {\r\n\t\t\tsubGeometry = subGeometries[i];\r\n\t\t\tsubGeometry.autoDeriveNormals = false;\r\n\t\t\tsubGeometry.autoDeriveTangents = false;\r\n\t\t\tsubGeometry.updateIndices(indicesVector[i]);\r\n\t\t\tsubGeometry.updatePositions(positionsVector[i]);\r\n\t\t\tsubGeometry.updateVertexNormals(normalsVector[i]);\r\n\t\t\tsubGeometry.updateVertexTangents(tangentsVector[i]);\r\n\t\t\tsubGeometry.updateUVs(uvsVector[i]);\r\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\r\n\t\t}\r\n\r\n\t\treturn particleGeometry;\r\n\t}\r\n}\r\n\r\nexport = ParticleGeometryHelper;","import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\n/**\r\n *\r\n */\r\nclass PerspectiveMatrix3D extends Matrix3D\r\n{\r\n\tconstructor(v:Array<number> = null)\r\n\t{\r\n\t\tsuper(v);\r\n\t}\r\n\r\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\r\n\t{\r\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\r\n\t\tvar xScale:number = yScale/aspectRatio;\r\n\r\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\r\n\t}\r\n}\r\n\r\nexport = PerspectiveMatrix3D;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\r\n\r\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\r\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\r\n\r\nclass ShaderCompilerHelper\r\n{\r\n\t/**\r\n\t * A helper method that generates standard code for sampling from a texture using the normal uv coordinates.\r\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param sharedReg The shared register object for the shader.\r\n\t * @param inputReg The texture stream register.\r\n\t * @param texture The texture which will be assigned to the given slot.\r\n\t * @param uvReg An optional uv register if coordinates different from the primary uv coordinates are to be used.\r\n\t * @param forceWrap If true, texture wrapping is enabled regardless of the material setting.\r\n\t * @return The fragment code that performs the sampling.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic static getTex2DSampleCode(targetReg:ShaderRegisterElement, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, repeat:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement = null, forceWrap:string = null):string\r\n\t{\r\n\t\tvar wrap:string = forceWrap || (repeat? \"wrap\":\"clamp\");\r\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\r\n\t\tvar filter:string = (smooth)? (mipmaps? \"linear,miplinear\" : \"linear\") : (mipmaps? \"nearest,mipnearest\" : \"nearest\");\r\n\r\n\t\tif (uvReg == null)\r\n\t\t\tuvReg = sharedReg.uvVarying;\r\n\r\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A helper method that generates standard code for sampling from a cube texture.\r\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\r\n\t * @param targetReg The register in which to store the sampled colour.\r\n\t * @param inputReg The texture stream register.\r\n\t * @param texture The cube map which will be assigned to the given slot.\r\n\t * @param uvReg The direction vector with which to sample the cube map.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic static getTexCubeSampleCode(targetReg:ShaderRegisterElement, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement):string\r\n\t{\r\n\t\tvar filter:string;\r\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\r\n\t\tvar filter:string = (smooth)? (mipmaps? \"linear,miplinear\" : \"linear\") : (mipmaps? \"nearest,mipnearest\" : \"nearest\");\r\n\r\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <cube,\" + format + filter + \">\\n\";\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a texture format string for the sample instruction.\r\n\t * @param texture The texture for which to get the format string.\r\n\t * @return\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic static getFormatStringForTexture(texture:TextureProxyBase):string\r\n\t{\r\n\t\tswitch (texture.format) {\r\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\r\n\t\t\t\treturn \"dxt1,\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\r\n\t\t\t\treturn \"dxt5,\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShaderCompilerHelper;"],"sourceRoot":"./"}